var t,o={};function n(t){return null==t}o.d=(t,n)=>{for(var e in n)o.o(n,e)&&!o.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:n[e]})},o.o=(t,o)=>Object.prototype.hasOwnProperty.call(t,o),function(t){t.CustomButton="CustomButton",t.StoreCustomButton="StoreCustomButton",t.CustomDropdownItem="CustomDropdownItem",t.GlobalContextMenu="GlobalContextMenu",t.ViewTabContextMenu="ViewTabContextMenu",t.PageTabContextMenu="PageTabContextMenu",t.SaveButtonContextMenu="SaveButtonContextMenu",t.API="API"}(t||(t={}));const e={actions:new class{async initialize(t,o,n){this._logger=o("IncludeInSnapshotActionsProvider"),this._helpers=n}async get(o){const e={};return e["include-in-snapshot"]=async e=>{if(e.callerType===t.CustomButton){this._logger?.info("Including in snapshot",e.windowIdentity);const t=o.Browser.wrapSync(e.windowIdentity),s=await t.openfinWindow.getOptions();if("platform"!==s.workspacePlatform.windowType){const o=s.workspacePlatform.toolbarOptions;if(await t.openfinWindow.updateOptions({includeInSnapshots:!0}),!n(o)&&this._helpers?.updateToolbarButtons){const n=await this._helpers.updateToolbarButtons(o.buttons,e.customData.sourceId,e.customData.replacementId);await t.replaceToolbarOptions({buttons:n})}}}},e["remove-from-snapshot"]=async e=>{if(e.callerType===t.CustomButton){this._logger?.info("Removing from snapshot",e.windowIdentity);const t=o.Browser.wrapSync(e.windowIdentity),s=await t.openfinWindow.getOptions();if("platform"!==s.workspacePlatform.windowType){const o=s.workspacePlatform.toolbarOptions;if(await t.openfinWindow.updateOptions({includeInSnapshots:!1}),!n(o)&&this._helpers?.updateToolbarButtons){const n=await this._helpers.updateToolbarButtons(o.buttons,e.customData.sourceId,e.customData.replacementId);await t.replaceToolbarOptions({buttons:n})}}}},e}},conditions:new class{async initialize(t,o,n){this._logger=o("IncludeInSnapshotConditionsProvider")}async get(){const t={};return t["included-in-snapshot"]=async(t,o)=>{if("browser"===o?.callerType&&!n(o?.customData)){const t=o.customData.includeInSnapshots??!0;return this._logger?.info("Included in snapshot",t),t}return!0},t["removed-from-snapshot"]=async(t,o)=>{if("browser"===o?.callerType&&!n(o?.customData)){const t=o.customData.includeInSnapshots??!0;return this._logger?.info("Removed from snapshot",!t),!t}return!1},t}}};export{e as entryPoints};
//# sourceMappingURL=include-in-snapshot.bundle.js.map