var t,e={};function n(t){return null==t}e.d=(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},e.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),function(t){t.CustomButton="CustomButton",t.StoreCustomButton="StoreCustomButton",t.CustomDropdownItem="CustomDropdownItem",t.GlobalContextMenu="GlobalContextMenu",t.ViewTabContextMenu="ViewTabContextMenu",t.PageTabContextMenu="PageTabContextMenu",t.SaveButtonContextMenu="SaveButtonContextMenu",t.API="API"}(t||(t={}));const o={actions:new class{async initialize(t,e,n){this._logger=e("WindowPlatformActionsProvider"),this._helpers=n,this._logger.info("Initializing")}async get(e){const n={};return n["pin-window"]=async t=>{await this.pinUnpin(e,t,!0)},n["unpin-window"]=async t=>{await this.pinUnpin(e,t,!1)},n["move-view-to-new-window"]=async n=>{if(n.callerType===t.ViewTabContextMenu){const t=await e.createView({name:n.selectedViews[0].name});if(n.selectedViews.length>1){const o=await this.getViewWindowIdentity(t);for(let i=1;i<n.selectedViews.length;i++)await e.createView({name:n.selectedViews[i].name},o,t.identity)}}},n["move-page-to-new-window"]=async n=>{if(n.callerType===t.PageTabContextMenu){const t=e.Browser.wrapSync(n.windowIdentity),o=await t.getPage(n.pageId);await e.createWindow({workspacePlatform:{pages:[o]}}),await t.removePage(o.pageId)}},n}async pinUnpin(e,o,i){if(!n(this._helpers)&&(o.callerType===t.CustomButton||o.callerType===t.ViewTabContextMenu)){const t=e.Browser.wrapSync(o.windowIdentity),a=await t.openfinWindow.getOptions();if("platform"!==a.workspacePlatform.windowType){const e=a.workspacePlatform.toolbarOptions;if(await t.openfinWindow.updateOptions({alwaysOnTop:i}),!n(e)){const n=await this._helpers.updateToolbarButtons(e.buttons,o.customData.sourceId,o.customData.replacementId);await t.replaceToolbarOptions({buttons:n})}}}}async getViewWindowIdentity(t){const e=await t.getCurrentWindow();return n(e.identity.name)||e.identity.name===e.identity.uuid?new Promise((e,n)=>{t.on("target-changed",async function n(){const o=await t.getCurrentWindow();o.identity.name!==o.identity.uuid&&(await t.removeListener("target-changed",n),e(o.identity))}).catch(()=>{})}):e.identity}}};export{o as entryPoints};
//# sourceMappingURL=window-platform.bundle.js.map