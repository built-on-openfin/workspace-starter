{"version":3,"file":"favorite-local-storage.bundle.js","mappings":"AACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,KCK3E,SAASI,EAAQC,GAEvB,OAAOA,OACR,C,iBCFO,MAAMC,EAAgE,CAC5EC,SAAU,ICUJ,MAgBN,WAAAC,GACCC,KAAKC,cAAgB,GAAGC,IAAIC,GAAGC,SAASC,gBACzC,CASO,gBAAMC,CACZvB,EACAwB,EACAC,GAEAR,KAAKS,QAAUF,EAAc,gCAC7BP,KAAKS,QAAQC,KAAK,eACnB,CAMO,eAAMC,GACZX,KAAKS,SAASC,KAAK,YACpB,CAQO,YAAME,CACZC,EACAC,GAEA,GAAgC,WAA5BD,EAAmBE,OAAsBpB,EAAQmB,GACpD,MAAI,YAAaA,EACTd,KAAKgB,2BAA2BF,GAEjCd,KAAKiB,8BAA8BH,GAE3C,MAAM,IAAII,MACT,+HACCL,EAAmBE,6BACKpB,EAAQmB,KAEnC,CAQO,qBAAMK,CACZN,EACAC,GAEA,GAAgC,WAA5BD,EAAmBE,OAAsBpB,EAAQmB,GACpD,MAAI,OAAQA,EACJd,KAAKoB,2BAA2BN,GAEjCd,KAAKqB,yBAAyBP,GAEtC,MAAM,IAAII,MACT,+HACCL,EAAmBE,6BACKpB,EAAQmB,KAEnC,CAOQ,8BAAMO,CACbP,GAEA,MAAMQ,EAAYtB,KAAKuB,eACvB,OAAI5B,EAAQmB,EAAQU,cAEZ,CAAEC,QADeH,EAAUI,QAAQC,GAAUA,EAAMC,QAAQb,OAASD,EAAQU,gBAG7E,CAAEC,QAASH,EACnB,CAOQ,gCAAMF,CACbN,GAEA,MAAMQ,EAAYtB,KAAKuB,eACvB,IAAK5B,EAAQmB,EAAQe,IAEpB,OADqBP,EAAUQ,MAAMH,GAAUA,EAAMC,QAAQC,KAAOf,EAAQe,IAI9E,CAOQ,gCAAMb,CAA2BF,GACxC,MAAMQ,EAAYtB,KAAKuB,eACvB,IAAK5B,EAAQmB,EAAQe,IAAK,CACzB,MAAME,EAAqBT,EAAUU,WAAWL,GAAUA,EAAMC,QAAQC,KAAOf,EAAQe,KACjFI,EAAc,CAAEC,SAAUpB,EAAQoB,SAAUN,QAASd,EAAQc,SAOnE,OAN4B,IAAxBG,EACHT,EAAUa,KAAKF,GAEfX,EAAUS,GAAsBE,EAEjCjC,KAAKoC,cAAcd,IACZ,CACR,CACA,OAAO,CACR,CAOQ,mCAAML,CAA8BH,GAC3C,MAAMQ,EAAYtB,KAAKuB,eACvB,IAAK5B,EAAQmB,EAAQe,IAAK,CACzB,MAAME,EAAqBT,EAAUU,WAAWL,GAAUA,EAAMC,QAAQC,KAAOf,EAAQe,KACvF,OAA4B,IAAxBE,IAGJT,EAAUe,OAAON,EAAoB,GACrC/B,KAAKoC,cAAcd,IACZ,EACR,CACA,OAAO,CACR,CAMQ,YAAAC,GACP,MAAMD,EAAYgB,aAAaC,QAAQvC,KAAKC,eAE5C,OAAIN,EAAQ2B,GACJ,GAGyCkB,KAAKC,MAAMnB,EAE7D,CAMQ,aAAAc,CAAcd,GACrBgB,aAAaI,QAAQ1C,KAAKC,cAAeuC,KAAKG,UAAUrB,GACzD,I","sources":["webpack://openfin-workspace--workspace-platform-starter/webpack/bootstrap","webpack://openfin-workspace--workspace-platform-starter/webpack/runtime/define property getters","webpack://openfin-workspace--workspace-platform-starter/webpack/runtime/hasOwnProperty shorthand","webpack://openfin-workspace--workspace-platform-starter/./client/src/framework/utils.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/endpoint/favorite-local-storage/index.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/endpoint/favorite-local-storage/endpoint.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Test if a value is a undefined or null.\n * @param value The value to test.\n * @returns True if the value is null or undefined.\n */\nexport function isEmpty(value: unknown): value is null | undefined {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value === undefined || value === null;\n}\n\n/**\n * Test if a value is an object.\n * @param value The value to test.\n * @returns True if the value is an object.\n */\nexport function isObject(value: unknown): value is object {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n/**\n * Test if a value is a string.\n * @param value The value to test.\n * @returns True if the value is a string.\n */\nexport function isString(value: unknown): value is string {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"string\";\n}\n\n/**\n * Test if a value is a string that is not empty.\n * @param value The value to test.\n * @returns True if the value is a string that is not empty.\n */\nexport function isStringValue(value: unknown): value is string {\n\treturn isString(value) && value.trim().length > 0;\n}\n\n/**\n * Test if a value is a number.\n * @param value The value to test.\n * @returns True if the value is a number.\n */\nexport function isNumber(value: unknown): value is number {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"number\";\n}\n\n/**\n * Test if a value is a number with a real value i.e. not NaN or Infinite.\n * @param value The value to test.\n * @returns True if the value is a number.\n */\nexport function isNumberValue(value: unknown): value is number {\n\treturn isNumber(value) && !Number.isNaN(value) && Number.isFinite(value);\n}\n\n/**\n * Test if a value is a boolean.\n * @param value The value to test.\n * @returns True if the value is a boolean.\n */\nexport function isBoolean(value: unknown): value is boolean {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"boolean\";\n}\n\n/**\n * Test if a value is an integer.\n * @param value The value to test.\n * @returns True if the value is an integer.\n */\nexport function isInteger(value: unknown): value is number {\n\treturn isNumber(value) && Number.isInteger(value);\n}\n\n/**\n * Deep clone an object.\n * @param obj The object to clone.\n * @returns The clone of the object.\n */\nexport function objectClone<T>(obj: T): T {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn obj === undefined ? (undefined as T) : JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Do a deep comparison of the objects.\n * @param obj1 The first object to compare.\n * @param obj2 The second object to compare.\n * @param matchPropertyOrder If true the properties must be in the same order.\n * @returns True if the objects are the same.\n */\nexport function deepEqual(obj1: unknown, obj2: unknown, matchPropertyOrder: boolean = true): boolean {\n\tif (isObject(obj1) && isObject(obj2)) {\n\t\tconst objKeys1 = Object.keys(obj1);\n\t\tconst objKeys2 = Object.keys(obj2);\n\n\t\tif (objKeys1.length !== objKeys2.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (matchPropertyOrder && JSON.stringify(objKeys1) !== JSON.stringify(objKeys2)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const key of objKeys1) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst value1 = (obj1 as any)[key];\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst value2 = (obj2 as any)[key];\n\n\t\t\tif (!deepEqual(value1, value2, matchPropertyOrder)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else if (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\tif (obj1.length !== obj2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < obj1.length; i++) {\n\t\t\tif (!deepEqual(obj1[i], obj2[i], matchPropertyOrder)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn JSON.stringify(obj1) === JSON.stringify(obj2);\n}\n\n/**\n * Deep merge two objects.\n * @param target The object to be merged into.\n * @param sources The objects to merge into the target.\n * @returns The merged object.\n */\nexport function deepMerge<T = unknown>(target: T, ...sources: T[]): T {\n\tif (!Array.isArray(sources) || sources.length === 0) {\n\t\treturn target;\n\t}\n\n\tconst targetAsMap = target as { [id: string]: unknown };\n\tconst source = sources.shift();\n\n\tlet keys;\n\tif (isObject(targetAsMap) && isObject(source)) {\n\t\tkeys = Object.keys(source);\n\t} else if (Array.isArray(source)) {\n\t\tif (!Array.isArray(target)) {\n\t\t\treturn source;\n\t\t}\n\t\tkeys = Object.keys(source).map((k) => Number.parseInt(k, 10));\n\t}\n\n\tif (keys) {\n\t\tconst sourceAsMap = source as { [id: string]: unknown };\n\t\tfor (const key of keys) {\n\t\t\tconst value = sourceAsMap[key];\n\t\t\tif (isObject(value)) {\n\t\t\t\tif (isEmpty(targetAsMap[key])) {\n\t\t\t\t\ttargetAsMap[key] = {};\n\t\t\t\t}\n\t\t\t\tdeepMerge(targetAsMap[key], value);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tif (isEmpty(targetAsMap[key])) {\n\t\t\t\t\ttargetAsMap[key] = [];\n\t\t\t\t}\n\t\t\t\tdeepMerge(targetAsMap[key], value);\n\t\t\t} else {\n\t\t\t\ttargetAsMap[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn deepMerge(target, ...sources);\n}\n\n/**\n * Polyfills randomUUID if running in a non-secure context.\n * @returns The random UUID.\n */\nexport function randomUUID(): string {\n\tif (\"randomUUID\" in globalThis.crypto) {\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\treturn globalThis.crypto.randomUUID();\n\t}\n\t// Polyfill the window.crypto.randomUUID if we are running in a non secure context that doesn't have it\n\t// we are still using window.crypto.getRandomValues which is always available\n\t// https://stackoverflow.com/a/2117523/2800218\n\t/**\n\t * Get random hex value.\n\t * @param c The number to base the random value on.\n\t * @returns The random value.\n\t */\n\tfunction getRandomHex(c: string): string {\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst rnd = globalThis.crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (Number(c) / 4));\n\t\treturn (\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t(Number(c) ^ rnd).toString(16)\n\t\t);\n\t}\n\treturn \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, getRandomHex);\n}\n\n/**\n * Format an error to a readable string.\n * @param err The error to format.\n * @returns The formatted error.\n */\nexport function formatError(err: unknown): string {\n\tif (isEmpty(err)) {\n\t\treturn \"\";\n\t} else if (err instanceof Error) {\n\t\treturn err.message;\n\t} else if (isStringValue(err)) {\n\t\treturn err;\n\t} else if (isObject(err) && \"message\" in err && isString(err.message)) {\n\t\treturn err.message;\n\t}\n\treturn JSON.stringify(err);\n}\n\n/**\n * A basic string sanitize function that removes angle brackets <> from a string.\n * @param content the content to sanitize\n * @returns a string without angle brackets <>\n */\nexport function sanitizeString(content: unknown): string {\n\tif (isStringValue(content)) {\n\t\treturn content\n\t\t\t.replace(/<[^>]*>?/gm, \"\")\n\t\t\t.replace(/&gt;/g, \">\")\n\t\t\t.replace(/&lt;/g, \"<\")\n\t\t\t.replace(/&amp;/g, \"&\")\n\t\t\t.replace(/&nbsp;/g, \" \")\n\t\t\t.replace(/\\n\\s*\\n/g, \"\\n\");\n\t}\n\treturn \"\";\n}\n\n/**\n * Get the command line arguments from a command line string.\n * Examples of command line strings: arg1 key1=value1 key2=\"value with spaces\" key3='value3' key4='value with more spaces'`.\n * @param commandLine The command line string.\n * @returns The command line arguments or an empty array if none\n */\nexport function getCommandLineArgs(commandLine: string): string[] {\n\tif (!isStringValue(commandLine)) {\n\t\treturn [];\n\t}\n\tconst matches = commandLine.match(/(\\w+=)?(\"[^\"]*\"|'[^']*'|[^ ]+)/g);\n\tif (isEmpty(matches)) {\n\t\treturn [];\n\t}\n\treturn matches;\n}\n","import type { ModuleImplementation, ModuleTypes } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { FavoriteLocalStorageProvider } from \"./endpoint\";\n\n/**\n * Define the entry points for the module.\n */\nexport const entryPoints: { [type in ModuleTypes]?: ModuleImplementation } = {\n\tendpoint: new FavoriteLocalStorageProvider()\n};\n","import type { Endpoint, EndpointDefinition } from \"workspace-platform-starter/shapes/endpoint-shapes\";\nimport type {\n\tEndpointFavoriteEntry,\n\tEndpointFavoriteGetRequest,\n\tEndpointFavoriteGetResponse,\n\tEndpointFavoriteListRequest,\n\tEndpointFavoriteListResponse,\n\tEndpointFavoriteRemoveRequest,\n\tEndpointFavoriteSetRequest\n} from \"workspace-platform-starter/shapes/favorite-shapes\";\nimport type { Logger, LoggerCreator } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type { ModuleDefinition, ModuleHelpers } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { isEmpty } from \"workspace-platform-starter/utils\";\n\n/**\n * Implementation for the favorite local storage endpoint provider.\n */\nexport class FavoriteLocalStorageProvider implements Endpoint {\n\t/**\n\t * The logger for displaying information from the module.\n\t * @internal\n\t */\n\tprivate _logger?: Logger;\n\n\t/**\n\t * The id to use for storing the favorites.\n\t * @internal\n\t */\n\tprivate readonly _favoritesKey: string;\n\n\t/**\n\t * Sets up the favorite endpoint.\n\t */\n\tconstructor() {\n\t\tthis._favoritesKey = `${fin.me.identity.uuid}-favorites`;\n\t}\n\n\t/**\n\t * Initialize the module.\n\t * @param definition The definition of the module from configuration include custom options.\n\t * @param loggerCreator For logging entries.\n\t * @param helpers Helper methods for the module to interact with the application core.\n\t * @returns Nothing.\n\t */\n\tpublic async initialize(\n\t\tdefinition: ModuleDefinition<unknown>,\n\t\tloggerCreator: LoggerCreator,\n\t\thelpers: ModuleHelpers\n\t): Promise<void> {\n\t\tthis._logger = loggerCreator(\"FavoriteLocalStorageProvider\");\n\t\tthis._logger.info(\"Initializing\");\n\t}\n\n\t/**\n\t * Close down any resources being used by the module.\n\t * @returns Nothing.\n\t */\n\tpublic async closedown(): Promise<void> {\n\t\tthis._logger?.info(\"Closedown\");\n\t}\n\n\t/**\n\t * Handle an action sent to the endpoint.\n\t * @param endpointDefinition The definition of the endpoint.\n\t * @param request The request to process.\n\t * @returns True if processed.\n\t */\n\tpublic async action(\n\t\tendpointDefinition: EndpointDefinition,\n\t\trequest?: EndpointFavoriteSetRequest | EndpointFavoriteRemoveRequest\n\t): Promise<boolean> {\n\t\tif (endpointDefinition.type === \"module\" && !isEmpty(request)) {\n\t\t\tif (\"payload\" in request) {\n\t\t\t\treturn this.requestResponseSetFavorite(request);\n\t\t\t}\n\t\t\treturn this.requestResponseRemoveFavorite(request);\n\t\t}\n\t\tthrow new Error(\n\t\t\t`This endpoint module only supports the type 'module' and being passed a request. The following endpoint type was specified: ${\n\t\t\t\tendpointDefinition.type\n\t\t\t} and request passed: ${!isEmpty(request)}`\n\t\t);\n\t}\n\n\t/**\n\t * Handles requests for getting all favorites, a list of favorites of a specific type or a single favorite by id.\n\t * @param endpointDefinition The definition of the endpoint.\n\t * @param request The request to process.\n\t * @returns The response to the request, or null of not handled.\n\t */\n\tpublic async requestResponse(\n\t\tendpointDefinition: EndpointDefinition,\n\t\trequest?: EndpointFavoriteListRequest | EndpointFavoriteGetRequest\n\t): Promise<EndpointFavoriteListResponse | EndpointFavoriteGetResponse | undefined> {\n\t\tif (endpointDefinition.type === \"module\" && !isEmpty(request)) {\n\t\t\tif (\"id\" in request) {\n\t\t\t\treturn this.requestResponseGetFavorite(request);\n\t\t\t}\n\t\t\treturn this.requestResponseFavorites(request);\n\t\t}\n\t\tthrow new Error(\n\t\t\t`This endpoint module only supports the type 'module' and being passed a request. The following endpoint type was specified: ${\n\t\t\t\tendpointDefinition.type\n\t\t\t} and request passed: ${!isEmpty(request)}`\n\t\t);\n\t}\n\n\t/**\n\t * Handles the request for list request.\n\t * @param request the request for favorites\n\t * @returns the list of favorites\n\t */\n\tprivate async requestResponseFavorites(\n\t\trequest: EndpointFavoriteListRequest\n\t): Promise<EndpointFavoriteListResponse> {\n\t\tconst favorites = this.getFavorites();\n\t\tif (isEmpty(request.favoriteType)) {\n\t\t\tconst filteredEntries = favorites.filter((entry) => entry.payload.type === request.favoriteType);\n\t\t\treturn { entries: filteredEntries };\n\t\t}\n\t\treturn { entries: favorites };\n\t}\n\n\t/**\n\t * Handles the request for a favorite.\n\t * @param request the request for a favorite\n\t * @returns the favorite\n\t */\n\tprivate async requestResponseGetFavorite(\n\t\trequest: EndpointFavoriteGetRequest\n\t): Promise<EndpointFavoriteGetResponse | undefined> {\n\t\tconst favorites = this.getFavorites();\n\t\tif (!isEmpty(request.id)) {\n\t\t\tconst matchedEntry = favorites.find((entry) => entry.payload.id === request.id);\n\t\t\treturn matchedEntry;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Handles the request for a favorite.\n\t * @param request the request for a favorite\n\t * @returns the favorite\n\t */\n\tprivate async requestResponseSetFavorite(request: EndpointFavoriteSetRequest): Promise<boolean> {\n\t\tconst favorites = this.getFavorites();\n\t\tif (!isEmpty(request.id)) {\n\t\t\tconst existingEntryIndex = favorites.findIndex((entry) => entry.payload.id === request.id);\n\t\t\tconst entryToSave = { metaData: request.metaData, payload: request.payload };\n\t\t\tif (existingEntryIndex === -1) {\n\t\t\t\tfavorites.push(entryToSave);\n\t\t\t} else {\n\t\t\t\tfavorites[existingEntryIndex] = entryToSave;\n\t\t\t}\n\t\t\tthis.saveFavorites(favorites);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handles the request for the deletion of a favorite.\n\t * @param request the request for a favorite to be deleted\n\t * @returns whether or not the request was successful\n\t */\n\tprivate async requestResponseRemoveFavorite(request: EndpointFavoriteRemoveRequest): Promise<boolean> {\n\t\tconst favorites = this.getFavorites();\n\t\tif (!isEmpty(request.id)) {\n\t\t\tconst existingEntryIndex = favorites.findIndex((entry) => entry.payload.id === request.id);\n\t\t\tif (existingEntryIndex === -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfavorites.splice(existingEntryIndex, 1);\n\t\t\tthis.saveFavorites(favorites);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Return a list of saved favorites.\n\t * @returns The saved list of favorites\n\t */\n\tprivate getFavorites(): EndpointFavoriteEntry[] {\n\t\tconst favorites = localStorage.getItem(this._favoritesKey);\n\n\t\tif (isEmpty(favorites)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst favoriteEntries: EndpointFavoriteEntry[] = JSON.parse(favorites);\n\t\treturn favoriteEntries;\n\t}\n\n\t/**\n\t * Save the favorites.\n\t * @param favorites to save\n\t */\n\tprivate saveFavorites(favorites: EndpointFavoriteEntry[]): void {\n\t\tlocalStorage.setItem(this._favoritesKey, JSON.stringify(favorites));\n\t}\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","isEmpty","value","entryPoints","endpoint","constructor","this","_favoritesKey","fin","me","identity","uuid","initialize","loggerCreator","helpers","_logger","info","closedown","action","endpointDefinition","request","type","requestResponseSetFavorite","requestResponseRemoveFavorite","Error","requestResponse","requestResponseGetFavorite","requestResponseFavorites","favorites","getFavorites","favoriteType","entries","filter","entry","payload","id","find","existingEntryIndex","findIndex","entryToSave","metaData","push","saveFavorites","splice","localStorage","getItem","JSON","parse","setItem","stringify"],"sourceRoot":""}