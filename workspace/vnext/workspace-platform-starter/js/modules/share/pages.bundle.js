var e={d:(t,a)=>{for(var i in a)e.o(a,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:a[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};function a(e){return null==e}function i(e){return function(e){return null!=e&&"string"==typeof e}(e)&&e.trim().length>0}e.d(t,{k:()=>n});const n={share:new class{async initialize(e,t,a){this._definition=e,this._logger=t("PagesShareProvider"),this._helpers=a,this._logger.info("Initializing")}async closedown(){this._logger?.info("Closedown")}async getShareTypes(){return["page"]}async getEntries(e){const t=await(this._helpers?.getPlatform?.());if(t){const a=t.Browser.wrapSync(e),i=await a.getPages();let n;for(const e of i)if(e.isActive){n=e.pageId;break}if(n)return[{label:"Share Page",type:"page",payload:{windowIdentity:e,pageId:n}}]}}async share(e,t){if("page"===e){const n=await(this._helpers?.getPlatform?.());if(n&&!a(t)){let s=t?.page;if(a(t?.page)&&i(t.pageId)){let e=!0;try{if(!a(t.windowIdentity)){const i=n.Browser.wrapSync(t.windowIdentity);s=await i.getPage(t.pageId),a(s?.customData)&&(s.customData={}),s.customData.windowBounds=await i.openfinWindow.getBounds(),e=!1}}catch{}if(a(s)&&a(t.windowIdentity)){const i=await n.Browser.getAllAttachedPages();for(const r of i)if(r.pageId===t.pageId){if(s={...r},!a(r.parentIdentity)){const e=n.Browser.wrapSync(r.parentIdentity);a(s.customData)&&(s.customData={}),s.customData.windowBounds=await e.openfinWindow.getBounds()}e=!1;break}}e&&(s=await n.Storage.getPage(t.pageId))}if(!a(s)){const r=await async function(e,t,n,s,r,o){if(a(n))t?.warn("Endpoint client is not available.");else if(a(n.requestResponse))t?.warn("Endpoint client requestResponse is not available.");else{if(!a(s)){try{const l=24,d=await n.requestResponse(s,{type:r,data:o});if(d){let n=d.id;if(a(n)){const e=d.url.lastIndexOf("/");-1!==e&&(n=d.url.slice(e+1))}if(!a(n)){const a=await e.Application.getInfo();let s;if(a.manifestUrl.startsWith("http")?s=`${a.manifestUrl.replace("http","fin")}?$$shareType=${r}&$$payload=${btoa(JSON.stringify({id:n}))}`:t?.error("We do not support file based manifest launches. The manifest has to be served over http/https:",a.manifestUrl),i(s))return await fin.Clipboard.writeText({data:s}),{title:"Share Request Raised",message:`The share request you raised has been copied to the **clipboard** and will be valid for ${l} hours. \n Share Url: \n * **${s}**`,status:"shared"}}}}catch(e){t?.error("Error saving share request:",e)}return{title:"Share Request Failed",message:"The share request you raised could not be generated.",status:"error"}}t?.warn("Endpoint id is not available.")}}(n,this._logger,await(this._helpers?.getEndpointClient?.()),this._definition?.data?.setEndpointId,e,s);await this.showConfirmation(r,t.windowIdentity)}}}}async handle(e,t){if("page"===e){const i=await async function(e,t,i,n,s){if(a(t))e?.warn("Endpoint client is not available.");else if(a(t.requestResponse))e?.warn("Endpoint client requestResponse is not available.");else{if(!a(i)){try{const i=await t.requestResponse("share-get",{id:s});return a(i)?{confirmation:{title:"Share Load Expired",message:"The share request has expired and is no longer available.",status:"error"}}:n!==i.type?(e?.warn(`Share entry of mismatched type specified: ${i.type} it should be ${n}`),{confirmation:{title:"Share Load Failed",message:"The specified share link does not contain the correct data for the share type.",status:"error"}}):{payload:i.data,confirmation:{title:"Share Request Applied",message:"The share request has been fetched and applied.",status:"loaded"}}}catch(t){e?.error("There has been an error trying to load and apply the share link.",t)}return{confirmation:{title:"Share Load Failed",message:"The specified share link cannot be loaded.",status:"error"}}}e?.warn("Endpoint id is not available.")}}(this._logger,await(this._helpers?.getEndpointClient?.()),this._definition?.data?.getEndpointId,e,t.id),n=await(this._helpers?.getPlatform?.());if(n){const e=i?.payload;!a(e)&&this._helpers?.launchPage&&(await n.Storage.savePage(e),await this._helpers.launchPage(e.pageId,void 0,this._logger))}await this.showConfirmation(i?.confirmation)}}async showConfirmation(e,t){if(!a(e)&&this._helpers?.getShareClient){this._logger?.info(e);const i=await this._helpers.getShareClient();if(i){const n="error"===e.status?"error":"success";if(e.iconUrl=this._definition?.data?.images[n],this._helpers?.getThemeClient&&!a(e.iconUrl)){const t=await this._helpers.getThemeClient();e.iconUrl=await t.themeUrl(e.iconUrl)}await i.confirmation(e,this._definition?.data?.confirmationMode,t)}}}}};var s=t.k;export{s as entryPoints};
//# sourceMappingURL=pages.bundle.js.map