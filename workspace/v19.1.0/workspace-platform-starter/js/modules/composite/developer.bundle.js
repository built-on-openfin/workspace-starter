var e,t={d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},n={};function i(e){return null==e}t.d(n,{k:()=>s}),function(e){e.CustomButton="CustomButton",e.StoreCustomButton="StoreCustomButton",e.CustomDropdownItem="CustomDropdownItem",e.GlobalContextMenu="GlobalContextMenu",e.ViewTabContextMenu="ViewTabContextMenu",e.PageTabContextMenu="PageTabContextMenu",e.SaveButtonContextMenu="SaveButtonContextMenu",e.API="API"}(e||(e={}));const o="view",a="inline-view",s={actions:new class{async initialize(e,t,n){this._logger=t("DeveloperActions"),this._helpers=n}async get(t){const n={"developer-inspect":async t=>{if(t.callerType===e.ViewTabContextMenu)for(let e=0;e<t.selectedViews.length;e++){const n=t.selectedViews[e],i=fin.View.wrapSync(n);await i.showDeveloperTools()}else if(t.callerType===e.PageTabContextMenu){const e=t.windowIdentity,n=fin.Window.wrapSync(e);await n.showDeveloperTools()}else if(t.callerType===e.GlobalContextMenu){const e="window"==("platform"===t?.customData?.target?"platform":"window")?t.windowIdentity:{uuid:t.windowIdentity.uuid,name:t.windowIdentity.uuid},n=fin.Window.wrapSync(e);await n.showDeveloperTools()}}};return n["raise-create-app-definition-intent"]=async t=>{if(t.callerType===e.ViewTabContextMenu){const e=fin.Interop.connectSync(fin.me.identity.uuid,{});for(let i=0;i<t.selectedViews.length;i++){const s=t.selectedViews[i],r="CreateAppDefinition";try{const t=fin.View.wrapSync(s),i=await t.getOptions(),l=await t.getInfo(),c=i.name,p=function(e){return null!=e&&"string"==typeof e}(n=i.fdc3InteropApi)&&n.trim().length>0?i.fdc3InteropApi:"2.0",d=Array.isArray(i.preloadScripts)&&i.preloadScripts.length>0?i.preloadScripts:void 0,u={url:l.url,fdc3InteropApi:p,interop:i.interop,customData:i.customData,preloadScripts:d},y=[],f=l.favicons||[];for(let e=0;e<f.length;e++)y.push({src:f[e]});const h={name:r,context:{type:"openfin.app",app:{appId:c,name:c,title:l.title,description:l.title,manifestType:a,manifest:u,tags:[o],icons:y,images:[],publisher:"",contactEmail:"",supportEmail:"",intents:[]}}};await e.fireIntent(h)}catch(e){this._logger?.error(`Error while trying to raise intent ${r} for view ${s.name}`,e)}}}var n},n["copy-url"]=async t=>{if(t.callerType===e.ViewTabContextMenu){const e=[];for(let n=0;n<t.selectedViews.length;n++){const i=t.selectedViews[n];try{const t=fin.View.wrapSync(i),n=await t.getInfo();e.push(n.url)}catch(e){this._logger?.error(`Error while trying to capture view url for view ${i.name}`,e)}}if(e.length>0){const t=e.join("\n");await fin.Clipboard.writeText({data:t})}}},n}},analytics:new class{constructor(){this._cachedAnalyticEvents=[]}async initialize(e,t,n){this._logger=t("DeveloperAnalyticsModule"),this._logger.info("Initialized"),this._logger.info("Session Id: ",n.sessionId),this._helpers=n,this._contextType=e.data?.contextType??"fin.dev.platform.analytics";const o=e.data?.sessionContextGroupName??"dev/platform/analytics";if(this._logger.info(`Using channel name: ${o} and contextType: ${this._contextType}. These can be customized by passing data settings: sessionContextGroupName and contextType in the module settings.`),i(n.subscribeLifecycleEvent))this._logger.warn("This analytics module requires a session context group name, a context type, the ability to create an interop client and the ability to listen for lifecycle events. Unfortunately this criteria has not been met.");else{this._logger.info("Subscribing to the after bootstrap event.");const e=n.subscribeLifecycleEvent("after-bootstrap",(async t=>{i(n.getInteropClient)||(this._logger?.info("After bootstrap lifecycle event received. Getting interop client."),this._interopClient=await n.getInteropClient(),this._interopClient&&(this._channel=await this._interopClient.joinSessionContextGroup(o),i(this._helpers?.unsubscribeLifecycleEvent)||this._helpers?.unsubscribeLifecycleEvent(e,"after-bootstrap")))}))}}async handleAnalytics(e){if(Array.isArray(e))if(i(this._channel))this._cachedAnalyticEvents.push(...e);else{let t=[];this._cachedAnalyticEvents.length>0&&(this._logger?.info(`Adding ${this._cachedAnalyticEvents.length} analytic events.`),t.push(...this._cachedAnalyticEvents),this._cachedAnalyticEvents=[]),t.push(...e);const n=t.length;t=t.filter((e=>!("interop"===e.type.toLowerCase()&&"browser"!==e.source.toLowerCase())));const i=t.length;n!==i&&this._logger?.info(`Filtered out ${n-i} events as they were of type interop and not from the browser and we send events out over interop`);const o={type:this._contextType,name:"Analytic Events",events:t};await this._channel.setContext(o)}else this._logger?.warn("We were not passed an array of analytical events.")}async closedown(){this._logger?.info("closing down")}},menus:new class{async initialize(e,t,n){this._logger=t("DeveloperMenus")}async get(e,t){return"global"===e?[{include:!0,label:"Inspect Window",data:{type:"Custom",action:{id:"developer-inspect"}},position:{operation:"after",type:"Custom",customId:"notification-toggle"},separator:"before"},{include:!0,label:"Inspect Platform",data:{type:"Custom",action:{id:"developer-inspect",customData:{target:"platform"}}},position:{operation:"after",type:"Custom",customId:"developer-inspect"}}]:"page"===e?[{include:!0,label:"Inspect Window",data:{type:"Custom",action:{id:"developer-inspect"}},position:{operation:"before",type:"Close"},separator:"after"}]:"view"===e?[{include:!0,label:"Inspect View",data:{type:"Custom",action:{id:"developer-inspect"}},position:{operation:"before",type:"CloseTab"},separator:"before"},{include:!0,label:"Create App Definition",data:{type:"Custom",action:{id:"raise-create-app-definition-intent"}},position:{operation:"after",type:"Custom",customId:"developer-inspect"}},{include:!0,label:"Copy Url",data:{type:"Custom",action:{id:"copy-url"}},position:{operation:"after",type:"Custom",customId:"raise-create-app-definition-intent"},separator:"after"}]:void 0}}};var r=n.k;export{r as entryPoints};
//# sourceMappingURL=developer.bundle.js.map