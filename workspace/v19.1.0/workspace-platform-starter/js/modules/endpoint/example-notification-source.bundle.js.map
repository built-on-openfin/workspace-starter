{"version":3,"file":"example-notification-source.bundle.js","mappings":"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","sources":["webpack://openfin-workspace--workspace-platform-starter/webpack/bootstrap","webpack://openfin-workspace--workspace-platform-starter/webpack/runtime/define property getters","webpack://openfin-workspace--workspace-platform-starter/webpack/runtime/hasOwnProperty shorthand","webpack://openfin-workspace--workspace-platform-starter/./client/src/framework/utils.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/endpoint/example-notification-source/lifecycle-event-source.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/endpoint/example-notification-source/index.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/endpoint/example-notification-source/endpoint.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Test if a value is a undefined or null.\n * @param value The value to test.\n * @returns True if the value is null or undefined.\n */\nexport function isEmpty(value: unknown): value is null | undefined {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value === undefined || value === null;\n}\n\n/**\n * Test if a value is an object.\n * @param value The value to test.\n * @returns True if the value is an object.\n */\nexport function isObject(value: unknown): value is object {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n/**\n * Test if a value is a string.\n * @param value The value to test.\n * @returns True if the value is a string.\n */\nexport function isString(value: unknown): value is string {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"string\";\n}\n\n/**\n * Test if a value is a string that is not empty.\n * @param value The value to test.\n * @returns True if the value is a string that is not empty.\n */\nexport function isStringValue(value: unknown): value is string {\n\treturn isString(value) && value.trim().length > 0;\n}\n\n/**\n * Test if a value is a number.\n * @param value The value to test.\n * @returns True if the value is a number.\n */\nexport function isNumber(value: unknown): value is number {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"number\";\n}\n\n/**\n * Test if a value is a number with a real value i.e. not NaN or Infinite.\n * @param value The value to test.\n * @returns True if the value is a number.\n */\nexport function isNumberValue(value: unknown): value is number {\n\treturn isNumber(value) && !Number.isNaN(value) && Number.isFinite(value);\n}\n\n/**\n * Test if a value is a boolean.\n * @param value The value to test.\n * @returns True if the value is a boolean.\n */\nexport function isBoolean(value: unknown): value is boolean {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"boolean\";\n}\n\n/**\n * Test if a value is an integer.\n * @param value The value to test.\n * @returns True if the value is an integer.\n */\nexport function isInteger(value: unknown): value is number {\n\treturn isNumber(value) && Number.isInteger(value);\n}\n\n/**\n * Deep clone an object.\n * @param obj The object to clone.\n * @returns The clone of the object.\n */\nexport function objectClone<T>(obj: T): T {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn obj === undefined ? undefined : JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Do a deep comparison of the objects.\n * @param obj1 The first object to compare.\n * @param obj2 The second object to compare.\n * @param matchPropertyOrder If true the properties must be in the same order.\n * @returns True if the objects are the same.\n */\nexport function deepEqual(obj1: unknown, obj2: unknown, matchPropertyOrder: boolean = true): boolean {\n\tif (isObject(obj1) && isObject(obj2)) {\n\t\tconst objKeys1 = Object.keys(obj1);\n\t\tconst objKeys2 = Object.keys(obj2);\n\n\t\tif (objKeys1.length !== objKeys2.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (matchPropertyOrder && JSON.stringify(objKeys1) !== JSON.stringify(objKeys2)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const key of objKeys1) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst value1 = (obj1 as any)[key];\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst value2 = (obj2 as any)[key];\n\n\t\t\tif (!deepEqual(value1, value2, matchPropertyOrder)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else if (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\tif (obj1.length !== obj2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < obj1.length; i++) {\n\t\t\tif (!deepEqual(obj1[i], obj2[i], matchPropertyOrder)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn JSON.stringify(obj1) === JSON.stringify(obj2);\n}\n\n/**\n * Deep merge two objects.\n * @param target The object to be merged into.\n * @param sources The objects to merge into the target.\n * @returns The merged object.\n */\nexport function deepMerge<T = unknown>(target: T, ...sources: T[]): T {\n\tif (!Array.isArray(sources) || sources.length === 0) {\n\t\treturn target;\n\t}\n\n\tconst targetAsMap = target as { [id: string]: unknown };\n\tconst source = sources.shift();\n\n\tlet keys;\n\tif (isObject(targetAsMap) && isObject(source)) {\n\t\tkeys = Object.keys(source);\n\t} else if (Array.isArray(source)) {\n\t\tif (!Array.isArray(target)) {\n\t\t\treturn source;\n\t\t}\n\t\tkeys = Object.keys(source).map((k) => Number.parseInt(k, 10));\n\t}\n\n\tif (keys) {\n\t\tconst sourceAsMap = source as { [id: string]: unknown };\n\t\tfor (const key of keys) {\n\t\t\tconst value = sourceAsMap[key];\n\t\t\tif (isObject(value)) {\n\t\t\t\tif (isEmpty(targetAsMap[key])) {\n\t\t\t\t\ttargetAsMap[key] = {};\n\t\t\t\t}\n\t\t\t\tdeepMerge(targetAsMap[key], value);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tif (isEmpty(targetAsMap[key])) {\n\t\t\t\t\ttargetAsMap[key] = [];\n\t\t\t\t}\n\t\t\t\tdeepMerge(targetAsMap[key], value);\n\t\t\t} else {\n\t\t\t\ttargetAsMap[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn deepMerge(target, ...sources);\n}\n\n/**\n * Polyfills randomUUID if running in a non-secure context.\n * @returns The random UUID.\n */\nexport function randomUUID(): string {\n\tif (\"randomUUID\" in globalThis.crypto) {\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\treturn globalThis.crypto.randomUUID();\n\t}\n\t// Polyfill the window.crypto.randomUUID if we are running in a non secure context that doesn't have it\n\t// we are still using window.crypto.getRandomValues which is always available\n\t// https://stackoverflow.com/a/2117523/2800218\n\t/**\n\t * Get random hex value.\n\t * @param c The number to base the random value on.\n\t * @returns The random value.\n\t */\n\tfunction getRandomHex(c: string): string {\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst rnd = globalThis.crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (Number(c) / 4));\n\t\treturn (\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t(Number(c) ^ rnd).toString(16)\n\t\t);\n\t}\n\treturn \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, getRandomHex);\n}\n\n/**\n * Format an error to a readable string.\n * @param err The error to format.\n * @returns The formatted error.\n */\nexport function formatError(err: unknown): string {\n\tif (isEmpty(err)) {\n\t\treturn \"\";\n\t} else if (err instanceof Error) {\n\t\treturn err.message;\n\t} else if (isStringValue(err)) {\n\t\treturn err;\n\t} else if (isObject(err) && \"message\" in err && isString(err.message)) {\n\t\treturn err.message;\n\t}\n\treturn JSON.stringify(err);\n}\n\n/**\n * A basic string sanitize function that removes angle brackets <> from a string.\n * @param content the content to sanitize\n * @returns a string without angle brackets <>\n */\nexport function sanitizeString(content: unknown): string {\n\tif (isStringValue(content)) {\n\t\treturn content\n\t\t\t.replace(/<[^>]*>?/gm, \"\")\n\t\t\t.replace(/&gt;/g, \">\")\n\t\t\t.replace(/&lt;/g, \"<\")\n\t\t\t.replace(/&amp;/g, \"&\")\n\t\t\t.replace(/&nbsp;/g, \" \")\n\t\t\t.replace(/\\n\\s*\\n/g, \"\\n\");\n\t}\n\treturn \"\";\n}\n\n/**\n * Get the command line arguments from a command line string.\n * Examples of command line strings: arg1 key1=value1 key2=\"value with spaces\" key3='value3' key4='value with more spaces'`.\n * @param commandLine The command line string.\n * @returns The command line arguments or an empty array if none\n */\nexport function getCommandLineArgs(commandLine: string): string[] {\n\tif (!isStringValue(commandLine)) {\n\t\treturn [];\n\t}\n\tconst matches = commandLine.match(/(\\w+=)?(\"[^\"]*\"|'[^']*'|[^ ]+)/g);\n\tif (isEmpty(matches)) {\n\t\treturn [];\n\t}\n\treturn matches;\n}\n","import type { NotificationOptions } from \"@openfin/workspace/notifications\";\nimport type { LifecycleEvents } from \"workspace-platform-starter/shapes/lifecycle-shapes\";\nimport type { Logger, LoggerCreator } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type { ModuleDefinition, ModuleHelpers } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { randomUUID } from \"workspace-platform-starter/utils\";\nimport type { ExampleNotificationSourceProviderOptions } from \"./shapes\";\n\n/**\n * Implementation for the example notification service event source.\n */\nexport class NotificationLifecycleEventSource {\n\t/**\n\t * The module definition including settings.\n\t * @internal\n\t */\n\tprivate _definition: ModuleDefinition<ExampleNotificationSourceProviderOptions> | undefined;\n\n\t/**\n\t * The logger for displaying information from the module.\n\t * @internal\n\t */\n\tprivate _logger?: Logger;\n\n\t/**\n\t * Helper methods for the module.\n\t * @internal\n\t */\n\tprivate _helpers: ModuleHelpers | undefined;\n\n\t/**\n\t * An object containing current subscriptions.\n\t * @internal\n\t */\n\tprivate _lifeCycleSubscriptions: { [key: string]: LifecycleEvents } | undefined;\n\n\t/**\n\t * A way of raising a notification request as part of a source of notifications.\n\t * @internal\n\t */\n\tprivate _raiseNotificationRequest: ((notification: NotificationOptions) => Promise<void>) | undefined;\n\n\t/**\n\t * Initialize the class.\n\t * @param definition The definition of the module from configuration include custom options.\n\t * @param loggerCreator For logging entries.\n\t * @param helpers Helper methods for the module to interact with the application core.\n\t * @param raiseNotificationRequest A function to passed create a notification.\n\t * @returns Nothing.\n\t */\n\tpublic async initialize(\n\t\tdefinition: ModuleDefinition<ExampleNotificationSourceProviderOptions>,\n\t\tloggerCreator: LoggerCreator,\n\t\thelpers: ModuleHelpers,\n\t\traiseNotificationRequest: (notification: NotificationOptions) => Promise<void>\n\t): Promise<void> {\n\t\tthis._definition = definition;\n\t\tthis._logger = loggerCreator(`LifeCycleDrivenNotificationSource(${this._definition?.id}):`);\n\t\tthis._helpers = helpers;\n\t\tthis._raiseNotificationRequest = raiseNotificationRequest;\n\t\tthis._lifeCycleSubscriptions = {};\n\t\tthis._logger.info(\"Initializing\");\n\t\tif (helpers?.subscribeLifecycleEvent) {\n\t\t\tconst afterBootstrap = helpers.subscribeLifecycleEvent(\"after-bootstrap\", async () => {\n\t\t\t\tawait this.startNotificationLifecycleSource();\n\t\t\t});\n\t\t\tthis._lifeCycleSubscriptions[afterBootstrap] = \"after-bootstrap\";\n\t\t}\n\t}\n\n\t/**\n\t * Close down any resources being used by the module.\n\t * @returns Nothing.\n\t */\n\tpublic async closedown(): Promise<void> {\n\t\tthis._logger?.info(\"Closedown\");\n\t\t// disconnect from the lifecycle events.\n\t\tawait this.stopNotificationLifecycleSource();\n\t}\n\n\t/**\n\t * Starts the notification service.\n\t */\n\tprivate async startNotificationLifecycleSource(): Promise<void> {\n\t\tif (this._helpers?.subscribeLifecycleEvent && this._raiseNotificationRequest) {\n\t\t\t// we have been passed the ability to subscribe to lifecycle events.\n\t\t\tif (!this._lifeCycleSubscriptions) {\n\t\t\t\tthis._lifeCycleSubscriptions = {};\n\t\t\t}\n\t\t\tconst raiseNotificationRequest = this._raiseNotificationRequest;\n\n\t\t\tif (this._definition?.data?.notifyOn?.appsChanged !== false) {\n\t\t\t\tconst appsChangedSubscription = this._helpers?.subscribeLifecycleEvent(\"apps-changed\", async () => {\n\t\t\t\t\tconst notification: NotificationOptions = {\n\t\t\t\t\t\tid: randomUUID(),\n\t\t\t\t\t\ttitle: \"Apps Changed Notification\",\n\t\t\t\t\t\tbody: `The list of apps on this platform has changed.This was generated by the example notification service (moduleId: ${this._definition?.id}).`\n\t\t\t\t\t};\n\t\t\t\t\tawait raiseNotificationRequest(notification);\n\t\t\t\t});\n\t\t\t\tthis._lifeCycleSubscriptions[appsChangedSubscription] = \"apps-changed\";\n\t\t\t}\n\n\t\t\tif (this._definition?.data?.notifyOn?.favoriteChanged !== false) {\n\t\t\t\tconst favoriteChangedSubscription = this._helpers?.subscribeLifecycleEvent(\n\t\t\t\t\t\"favorite-changed\",\n\t\t\t\t\tasync () => {\n\t\t\t\t\t\tconst notification: NotificationOptions = {\n\t\t\t\t\t\t\tid: randomUUID(),\n\t\t\t\t\t\t\ttitle: \"Favorite Changed Notification\",\n\t\t\t\t\t\t\tbody: `You have changed a favorite on this platform.This was generated by the example notification service (moduleId: ${this._definition?.id}).`,\n\t\t\t\t\t\t\ttoast: \"transient\",\n\t\t\t\t\t\t\tcategory: \"default\",\n\t\t\t\t\t\t\ttemplate: \"markdown\"\n\t\t\t\t\t\t};\n\t\t\t\t\t\tawait raiseNotificationRequest(notification);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis._lifeCycleSubscriptions[favoriteChangedSubscription] = \"favorite-changed\";\n\t\t\t}\n\n\t\t\tif (this._definition?.data?.notifyOn?.pageChanged !== false) {\n\t\t\t\tconst pageChangedSubscription = this._helpers?.subscribeLifecycleEvent(\"page-changed\", async () => {\n\t\t\t\t\tconst notification: NotificationOptions = {\n\t\t\t\t\t\tid: randomUUID(),\n\t\t\t\t\t\ttitle: \"Page Changed Notification\",\n\t\t\t\t\t\tbody: `You have changed the page on this platform.This was generated by the example notification service (moduleId: ${this._definition?.id}).`,\n\t\t\t\t\t\ttoast: \"transient\",\n\t\t\t\t\t\tcategory: \"default\",\n\t\t\t\t\t\ttemplate: \"markdown\"\n\t\t\t\t\t};\n\t\t\t\t\tawait raiseNotificationRequest(notification);\n\t\t\t\t});\n\t\t\t\tthis._lifeCycleSubscriptions[pageChangedSubscription] = \"page-changed\";\n\t\t\t}\n\n\t\t\tif (this._definition?.data?.notifyOn?.themeChanged !== false) {\n\t\t\t\tconst themeChangedSubscription = this._helpers?.subscribeLifecycleEvent(\"theme-changed\", async () => {\n\t\t\t\t\tconst notification: NotificationOptions = {\n\t\t\t\t\t\tid: randomUUID(),\n\t\t\t\t\t\ttitle: \"Theme Changed\",\n\t\t\t\t\t\tbody: `You have changed the theme for this platform. This was generated by the example notification service (moduleId: ${this._definition?.id}).`,\n\t\t\t\t\t\tform: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\t\tkey: \"intendedThemeChange\",\n\t\t\t\t\t\t\t\tlabel: \"Did you intend to change the theme?\",\n\t\t\t\t\t\t\t\twidget: {\n\t\t\t\t\t\t\t\t\ttype: \"Toggle\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t],\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tonClick: {\n\t\t\t\t\t\t\t\t\ttask: \"broadcast\",\n\t\t\t\t\t\t\t\t\tcustomData: {\n\t\t\t\t\t\t\t\t\t\tid: \"green\",\n\t\t\t\t\t\t\t\t\t\ttask: \"broadcast\",\n\t\t\t\t\t\t\t\t\t\tcontext: {\n\t\t\t\t\t\t\t\t\t\t\ttype: \"custom.context\",\n\t\t\t\t\t\t\t\t\t\t\tname: \"Form Submitted\"\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tbroadcastOptions: {\n\t\t\t\t\t\t\t\t\t\t\tisUserChannel: true\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcta: true,\n\t\t\t\t\t\t\t\tsubmit: true,\n\t\t\t\t\t\t\t\ttitle: \"Broadcast Form on Green\",\n\t\t\t\t\t\t\t\ttype: \"button\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t};\n\t\t\t\t\tawait raiseNotificationRequest(notification);\n\t\t\t\t});\n\t\t\t\tthis._lifeCycleSubscriptions[themeChangedSubscription] = \"theme-changed\";\n\t\t\t}\n\n\t\t\tif (this._definition?.data?.notifyOn?.workspaceChanged !== false) {\n\t\t\t\tconst workspaceChangedSubscription = this._helpers?.subscribeLifecycleEvent(\n\t\t\t\t\t\"workspace-changed\",\n\t\t\t\t\tasync () => {\n\t\t\t\t\t\tconst notification: NotificationOptions = {\n\t\t\t\t\t\t\ttitle: \"Workspace Changed\",\n\t\t\t\t\t\t\tbody: `You have changed your workspace. This was generated by the example notification service (moduleId: ${this._definition?.id}).`,\n\t\t\t\t\t\t\ttoast: \"transient\",\n\t\t\t\t\t\t\tcategory: \"default\",\n\t\t\t\t\t\t\ttemplate: \"markdown\",\n\t\t\t\t\t\t\tbuttons: []\n\t\t\t\t\t\t};\n\t\t\t\t\t\tawait raiseNotificationRequest(notification);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis._lifeCycleSubscriptions[workspaceChangedSubscription] = \"workspace-changed\";\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stops the notification service.\n\t */\n\tprivate async stopNotificationLifecycleSource(): Promise<void> {\n\t\tthis._logger?.info(\"Stopping notification service (Not Really...this is an example.)\");\n\t\tif (this._helpers?.unsubscribeLifecycleEvent && this._lifeCycleSubscriptions) {\n\t\t\tfor (const [key, value] of Object.entries(this._lifeCycleSubscriptions)) {\n\t\t\t\tthis._helpers.unsubscribeLifecycleEvent(key, value);\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { ModuleImplementation, ModuleTypes } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { ExampleNotificationSourceProvider } from \"./endpoint\";\n\n/**\n * Define the entry points for the module.\n */\nexport const entryPoints: { [type in ModuleTypes]?: ModuleImplementation } = {\n\tendpoint: new ExampleNotificationSourceProvider()\n};\n","import type { NotificationOptions } from \"@openfin/workspace/notifications\";\nimport type { Endpoint, EndpointDefinition } from \"workspace-platform-starter/shapes/endpoint-shapes\";\nimport type { Logger, LoggerCreator } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type { ModuleDefinition, ModuleHelpers } from \"workspace-platform-starter/shapes/module-shapes\";\nimport type { NotificationSourceEvents } from \"workspace-platform-starter/shapes/notification-shapes\";\nimport { isEmpty, isStringValue } from \"workspace-platform-starter/utils\";\nimport { NotificationLifecycleEventSource } from \"./lifecycle-event-source\";\nimport type { ExampleNotificationSourceProviderOptions } from \"./shapes\";\n\n/**\n * Implementation for the example notification source endpoint provider.\n */\nexport class ExampleNotificationSourceProvider implements Endpoint<ExampleNotificationSourceProviderOptions> {\n\t/**\n\t * The module definition including settings.\n\t * @internal\n\t */\n\tprivate _definition: ModuleDefinition<ExampleNotificationSourceProviderOptions> | undefined;\n\n\t/**\n\t * The logger for displaying information from the module.\n\t * @internal\n\t */\n\tprivate _logger?: Logger;\n\n\t/**\n\t * Helper methods for the module.\n\t * @internal\n\t */\n\tprivate _helpers: ModuleHelpers | undefined;\n\n\tprivate _queuedNotifications: NotificationSourceEvents[] | undefined;\n\n\tprivate _readableStream: ReadableStream<NotificationSourceEvents> | undefined;\n\n\tprivate _notificationLifecycleEventSource: NotificationLifecycleEventSource | undefined;\n\n\tprivate _cleanupWS: (() => Promise<void>) | undefined;\n\n\tprivate _cleanupLP: (() => Promise<void>) | undefined;\n\n\t/**\n\t * Initialize the module.\n\t * @param definition The definition of the module from configuration include custom options.\n\t * @param loggerCreator For logging entries.\n\t * @param helpers Helper methods for the module to interact with the application core.\n\t * @returns Nothing.\n\t */\n\tpublic async initialize(\n\t\tdefinition: ModuleDefinition<ExampleNotificationSourceProviderOptions>,\n\t\tloggerCreator: LoggerCreator,\n\t\thelpers: ModuleHelpers\n\t): Promise<void> {\n\t\tthis._definition = definition;\n\t\tthis._logger = loggerCreator(\"ExampleNotificationSourceProvider\");\n\t\tthis._helpers = helpers;\n\n\t\tthis._logger.info(\"Initializing\");\n\n\t\t// initialize the queue\n\t\tthis._queuedNotifications = [];\n\n\t\tthis._notificationLifecycleEventSource = new NotificationLifecycleEventSource();\n\t\tawait this._notificationLifecycleEventSource.initialize(\n\t\t\tdefinition,\n\t\t\tloggerCreator,\n\t\t\thelpers,\n\t\t\tasync (notificationOptions: NotificationOptions) => {\n\t\t\t\tthis._queuedNotifications?.push({ eventId: \"create\", payload: notificationOptions });\n\t\t\t}\n\t\t);\n\t\tif (\n\t\t\tisStringValue(this._definition?.data?.websocket?.url) &&\n\t\t\t(this._definition.data.websocket?.url.startsWith(\"ws://\") ||\n\t\t\t\tthis._definition.data.websocket?.url.startsWith(\"wss://\")) &&\n\t\t\thelpers?.subscribeLifecycleEvent\n\t\t) {\n\t\t\tconst wsUrl = this._definition.data.websocket.url;\n\t\t\tlet ws: WebSocket;\n\t\t\tconst afterBootstrap = helpers.subscribeLifecycleEvent(\"after-bootstrap\", async () => {\n\t\t\t\ttry {\n\t\t\t\t\tws = new WebSocket(wsUrl);\n\t\t\t\t\tws.addEventListener(\"open\", () => {\n\t\t\t\t\t\tthis._logger?.info(\"Websocket connection opened.\");\n\t\t\t\t\t});\n\t\t\t\t\tws.addEventListener(\"message\", (event) => {\n\t\t\t\t\t\tthis._logger?.info(\"Websocket message received:\", event.data);\n\t\t\t\t\t\tthis._queuedNotifications?.push(JSON.parse(event.data));\n\t\t\t\t\t});\n\t\t\t\t} catch (wsError) {\n\t\t\t\t\tthis._logger?.error(`Error creating websocket connection to url ${wsUrl}.`, wsError);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\t\t\tthis._cleanupWS = async () => {\n\t\t\t\tif (ws) {\n\t\t\t\t\tthis._logger?.info(\"Closing websocket connection.\");\n\t\t\t\t\tws.close();\n\t\t\t\t}\n\t\t\t\tif (this._helpers?.unsubscribeLifecycleEvent) {\n\t\t\t\t\tthis._helpers.unsubscribeLifecycleEvent(afterBootstrap, \"after-bootstrap\");\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tisStringValue(this._definition?.data?.longpoll?.url) &&\n\t\t\t(this._definition.data.longpoll.url.startsWith(\"http://\") ||\n\t\t\t\tthis._definition.data.longpoll.url.startsWith(\"https://\")) &&\n\t\t\thelpers?.subscribeLifecycleEvent\n\t\t) {\n\t\t\tconst longpollUrl = this._definition.data.longpoll.url;\n\t\t\tlet longPollScheduler: number;\n\t\t\tconst afterBootstrapLP = helpers.subscribeLifecycleEvent(\"after-bootstrap\", async () => {\n\t\t\t\ttry {\n\t\t\t\t\t// try url before scheduling\n\t\t\t\t\tconst initialResponse = await fetch(longpollUrl);\n\t\t\t\t\tconst initialData = await initialResponse.json();\n\t\t\t\t\tif (Array.isArray(initialData) && initialData.length > 0) {\n\t\t\t\t\t\tthis._logger?.info(`Longpoll data received: ${initialData.length} messages`);\n\t\t\t\t\t\tthis._queuedNotifications?.push(...initialData);\n\t\t\t\t\t}\n\t\t\t\t\tconst longPollInSeconds = this._definition?.data?.longpoll?.intervalInSeconds ?? 5;\n\t\t\t\t\tlongPollScheduler = setInterval(async () => {\n\t\t\t\t\t\tconst response = await fetch(longpollUrl);\n\t\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\t\tif (Array.isArray(data) && data.length > 0) {\n\t\t\t\t\t\t\tthis._logger?.info(`Longpoll data received: ${data.length} messages`);\n\t\t\t\t\t\t\tthis._queuedNotifications?.push(...data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, longPollInSeconds * 1000) as unknown as number;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis._logger?.error(\n\t\t\t\t\t\t`Error fetching long polling data for url ${longpollUrl}. Polling will not continue.`,\n\t\t\t\t\t\terror\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\t\t\tthis._cleanupLP = async () => {\n\t\t\t\tif (longPollScheduler) {\n\t\t\t\t\tthis._logger?.info(\"Stopping Long Polling.\");\n\t\t\t\t\tclearInterval(longPollScheduler);\n\t\t\t\t}\n\t\t\t\tif (this._helpers?.unsubscribeLifecycleEvent) {\n\t\t\t\t\tthis._helpers.unsubscribeLifecycleEvent(afterBootstrapLP, \"after-bootstrap\");\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Close down any resources being used by the module.\n\t * @returns Nothing.\n\t */\n\tpublic async closedown(): Promise<void> {\n\t\tthis._logger?.info(\"Closedown\");\n\n\t\tif (!isEmpty(this._readableStream)) {\n\t\t\tawait this._readableStream.cancel();\n\t\t}\n\t\tif (!isEmpty(this._notificationLifecycleEventSource)) {\n\t\t\tawait this._notificationLifecycleEventSource.closedown();\n\t\t}\n\t\tif (!isEmpty(this._cleanupWS)) {\n\t\t\tawait this._cleanupWS();\n\t\t}\n\t\tif (!isEmpty(this._cleanupLP)) {\n\t\t\tawait this._cleanupLP();\n\t\t}\n\t}\n\n\t/**\n\t * Handle an action sent to the endpoint.\n\t * @param endpointDefinition The definition of the endpoint.\n\t * @param request The request to process.\n\t * @returns True if processed.\n\t */\n\tpublic async action(\n\t\tendpointDefinition: EndpointDefinition,\n\t\trequest?: NotificationSourceEvents\n\t): Promise<boolean> {\n\t\t// this could post to a backend service so that the notification is picked up server side and then distributed to all connected clients (e.g. browser, OpenFin etc)\n\t\t// for now we are simulating it by putting anything posted into a queue so that it will be picked up by the stream\n\t\tif (!isEmpty(request)) {\n\t\t\tthis._logger?.info(`Received notification: ${JSON.stringify(request)}`);\n\t\t\tthis._queuedNotifications?.push(request);\n\t\t\treturn true;\n\t\t}\n\t\tthis._logger?.warn(\"Action called with an empty notification.\");\n\t\treturn false;\n\t}\n\n\t/**\n\t * Handle a requestStream request on an endpoint.\n\t * @param endpointDefinition The definition of the endpoint.\n\t * @param request The request to process if needed.\n\t * @returns The readable stream response to the request, or undefined if not handled.\n\t */\n\tpublic async requestStream(\n\t\tendpointDefinition: EndpointDefinition,\n\t\trequest?: unknown\n\t): Promise<ReadableStream<unknown> | undefined> {\n\t\tif (isEmpty(this._readableStream)) {\n\t\t\tthis._logger?.info(\"Creating new stream\");\n\t\t\tthis._readableStream = this.createReadableStream();\n\t\t}\n\t\tthis._logger?.info(\"Returning requested stream\");\n\t\treturn this._readableStream;\n\t}\n\n\t/**\n\t * This function is called when the stream is requested.\n\t * @returns The readable stream of notifications.\n\t */\n\tprivate createReadableStream(): ReadableStream<NotificationSourceEvents> {\n\t\tlet intervalId: number | undefined;\n\t\tconst intervalTimeInSeconds = this._definition?.data?.intervalInSeconds ?? 1;\n\t\tconst intervalTime = (intervalTimeInSeconds < 1 ? 1 : intervalTimeInSeconds) * 1000;\n\t\t/**\n\t\t * Get the pending notification from the queue.\n\t\t * @returns The pending notification.\n\t\t */\n\t\tconst getPendingNotification = (): NotificationSourceEvents[] => {\n\t\t\tconst queuedNotifications = [...(this._queuedNotifications ?? [])];\n\t\t\tthis._queuedNotifications = [];\n\t\t\treturn queuedNotifications;\n\t\t};\n\t\tconst stream = new ReadableStream<NotificationSourceEvents>({\n\t\t\t/**\n\t\t\t * Starts the stream and sends a message every second.\n\t\t\t * @param controller The controller to push values to the stream.\n\t\t\t */\n\t\t\tstart(controller): void {\n\t\t\t\tintervalId = setInterval(() => {\n\t\t\t\t\t// the notification can be fetched from a websocket but here we are just popping off the queue\n\t\t\t\t\tconst queue = getPendingNotification();\n\t\t\t\t\tfor (const notification of queue) {\n\t\t\t\t\t\tcontroller.enqueue(notification);\n\t\t\t\t\t}\n\t\t\t\t}, intervalTime) as unknown as number;\n\t\t\t},\n\t\t\t/**\n\t\t\t * When the stream is cancelled this function is called.\n\t\t\t */\n\t\t\tcancel(): void {\n\t\t\t\tclearInterval(intervalId);\n\t\t\t}\n\t\t});\n\t\treturn stream;\n\t}\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","isEmpty","value","isStringValue","isString","trim","length","randomUUID","globalThis","crypto","replace","c","rnd","getRandomValues","Uint8Array","Number","toString","NotificationLifecycleEventSource","initialize","loggerCreator","helpers","raiseNotificationRequest","this","_definition","_logger","id","_helpers","_raiseNotificationRequest","_lifeCycleSubscriptions","info","subscribeLifecycleEvent","afterBootstrap","async","startNotificationLifecycleSource","closedown","stopNotificationLifecycleSource","data","notifyOn","appsChanged","appsChangedSubscription","notification","title","body","favoriteChanged","favoriteChangedSubscription","toast","category","template","pageChanged","pageChangedSubscription","themeChanged","themeChangedSubscription","form","type","label","widget","buttons","onClick","task","customData","context","name","broadcastOptions","isUserChannel","cta","submit","workspaceChanged","workspaceChangedSubscription","unsubscribeLifecycleEvent","entries","entryPoints","endpoint","_queuedNotifications","_notificationLifecycleEventSource","notificationOptions","push","eventId","payload","websocket","url","startsWith","wsUrl","ws","WebSocket","addEventListener","event","JSON","parse","wsError","error","_cleanupWS","close","longpoll","longpollUrl","longPollScheduler","afterBootstrapLP","initialResponse","fetch","initialData","json","Array","isArray","longPollInSeconds","intervalInSeconds","setInterval","response","_cleanupLP","clearInterval","_readableStream","cancel","action","endpointDefinition","request","warn","stringify","requestStream","createReadableStream","intervalId","intervalTimeInSeconds","intervalTime","getPendingNotification","queuedNotifications","ReadableStream","start","controller","queue","enqueue"],"sourceRoot":""}