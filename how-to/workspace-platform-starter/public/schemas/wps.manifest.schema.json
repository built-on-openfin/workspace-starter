{
	"$ref": "#/definitions/WPSManifest",
	"$schema": "http://json-schema.org/draft-07/schema#",
	"definitions": {
		"ActionConnection": {
			"additionalProperties": false,
			"description": "Specific type for an action connection.",
			"properties": {
				"supportedActions": {
					"description": "If you want to provide a different set of available actions to a specific connection then you can do so here.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"type": {
					"const": "actions",
					"description": "The actions connection type allows connections to execute a list of actions that the platform will carry out e.g.\nshow-home",
					"type": "string"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"ActionsProviderOptions": {
			"$ref": "#/definitions/ModuleList_2",
			"description": "List of modules."
		},
		"AnalyticsProviderOptions": {
			"additionalProperties": false,
			"description": "A list of modules that will be loaded and then called when analytical events come in from the platform or workspace\ncomponents.",
			"properties": {
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				},
				"sendToOpenFin": {
					"description": "Send analytics to OpenFin.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"Api": {
			"$ref": "#/definitions/__type_3"
		},
		"ApiSettings": {
			"$ref": "#/definitions/__type_3"
		},
		"AppAssetInfo": {
			"$ref": "#/definitions/__type_57"
		},
		"AppEndpointOptions": {
			"anyOf": [
				{
					"additionalProperties": false,
					"properties": {
						"inputId": {
							"type": "string"
						},
						"outputId": {
							"type": "string"
						}
					},
					"required": ["inputId"],
					"type": "object"
				},
				{
					"type": "string"
				}
			],
			"description": "Application endpoint which can be a string, or a mapping."
		},
		"AppIntent": {
			"additionalProperties": false,
			"properties": {
				"contexts": {
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"displayName": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"required": ["contexts", "displayName", "name"],
			"type": "object"
		},
		"AppIntents": {
			"additionalProperties": false,
			"description": "Application intents.",
			"properties": {
				"contexts": {
					"description": "Required. A comma separated list of the types of contexts the intent offered by the application can process,\nwhere the first part of the context type is the namespace e.g.\"fdc3.contact, org.companyname.contact\"",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"customConfig": {
					"additionalProperties": {},
					"description": "Custom configuration for the intent that may be required for a particular desktop agent.",
					"type": "object"
				},
				"displayName": {
					"description": "An optional display name for the intent that may be used in UI instead of the name.",
					"type": "string"
				},
				"resultType": {
					"description": "An optional type for output returned by the application, if any, when resolving this intent. May indicate a\ncontext type by type name (e.g. \"fdc3.instrument\"), a channel (e.g. \"channel\") or a combination that indicates a\nchannel that returns a particular context type (e.g. \"channel<fdc3.instrument>\").",
					"type": "string"
				}
			},
			"required": ["contexts"],
			"type": "object"
		},
		"AppInterop": {
			"additionalProperties": false,
			"description": "Application interop.",
			"properties": {
				"appChannels": {
					"description": "Describes the application's use of App Channels.",
					"items": {
						"additionalProperties": false,
						"properties": {
							"broadcasts": {
								"description": "Context type names that are broadcast by the application on the channel.",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"description": {
								"description": "A description of how the channel is used.",
								"type": "string"
							},
							"listensFor": {
								"description": "Context type names that the application listens for on the channel.",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"name": {
								"description": "The name of the App Channel.",
								"type": "string"
							}
						},
						"required": ["name"],
						"type": "object"
					},
					"type": "array"
				},
				"intents": {
					"additionalProperties": false,
					"description": "Describes the app's interactions with intents.",
					"properties": {
						"listensFor": {
							"additionalProperties": {
								"$ref": "#/definitions/AppIntents"
							},
							"description": "A mapping of Intents names that an app listens for via fdc3.addIntentListener() or\nfin.me.interop.registerIntentHandler. Used to support intent resolution by the interop broker. Replaces the\nintents array used previously.",
							"type": "object"
						},
						"raises": {
							"additionalProperties": {
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"description": "A mapping of Intent names that an app raises (via fdc3.raiseIntent) to an array of context type names that it\nmay be raised with. Use the intent name \"any\" to represent use of the fdc3.raiseIntentForContext and\nfdc3.findIntentForContext functions, which allow the user to select from intents available for a specified\ncontext type.",
							"type": "object"
						}
					},
					"type": "object"
				},
				"userChannels": {
					"additionalProperties": false,
					"description": "Describes the application's use of context types on User Channels.",
					"properties": {
						"broadcasts": {
							"description": "Context type names that are broadcast by the application.",
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						"listensFor": {
							"description": "Context type names that the application listens for.",
							"items": {
								"type": "string"
							},
							"type": "array"
						}
					},
					"type": "object"
				}
			},
			"type": "object"
		},
		"AppProviderOptions": {
			"additionalProperties": false,
			"description": "App Provider settings to configure where apps are fetched from.",
			"properties": {
				"appsSourceUrl": {
					"anyOf": [
						{
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						{
							"type": "string"
						}
					],
					"description": "Legacy - Where should we fetch the apps from. It is a url or an array of urls from which to get apps data from.\nIf present it will be used instead of endpointIds."
				},
				"cacheDurationInMinutes": {
					"description": "Once all apps are fetched and processed from the one or more sources specified, how long should the result be\ncached for in minutes (can be used with the seconds setting).",
					"type": "number"
				},
				"cacheDurationInSeconds": {
					"description": "Once all apps are fetched and processed from the one or more sources specified, how long should the result be\ncached for in seconds (can be used on it's own or in addition to the minutes setting).",
					"type": "number"
				},
				"cacheRetrievalStrategy": {
					"description": "The cache strategy determines when the cache should be checked for expiry.\non-demand means that the cache expiry is checked every time apps are requested in code, this strategy\nreduces the overhead of app requests, but may take longer for app lists to update from dynamic endpoints\ninterval means that the cache expiry is checked by an interval timer, this mode will increase the amount\napp requested performed, but the app lists will be updated more quickly\nThe default is on-demand",
					"enum": ["interval", "on-demand"],
					"type": "string"
				},
				"endpointIds": {
					"description": "An array of endpoints that should be used to request a list of apps. The array entry can be a string\n(representing the array id) or an object with an inputId that maps to an endpoint id and gets passed to the\nendpoint specified using the outputId (this is useful for mapping apps from one format to another)",
					"items": {
						"$ref": "#/definitions/AppEndpointOptions"
					},
					"type": "array"
				},
				"includeCredentialOnSourceRequest": {
					"description": "Legacy - Used when appsSourceUrl is used. This is specified as part of the options of the fetch request.",
					"enum": ["include", "omit", "same-origin"],
					"type": "string"
				},
				"manifestTypes": {
					"description": "The specified app sources may include apps of many different manifest types. Which manifest types do you want\nyour platform to support (only the ones listed will be included in the end result).",
					"items": {
						"$ref": "#/definitions/ManifestTypeId"
					},
					"type": "array"
				},
				"updatableLaunchPreference": {
					"description": "Do you wish to allow specific launchPreferences to be specified when launching an app by default?",
					"items": {
						"$ref": "#/definitions/UpdatableLaunchPreferenceDefinition"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"AppSourceConnection": {
			"additionalProperties": false,
			"description": "Specific type for an app source connection.",
			"properties": {
				"manifestTypes": {
					"description": "If a connection is allowed to provide apps do you wish to limit the manifest types they can provide you with. The\nconnection type must be supported if it is an app entry where the selection should go back to the connection.",
					"items": {
						"$ref": "#/definitions/ManifestTypeId"
					},
					"type": "array"
				},
				"type": {
					"const": "appSource",
					"description": "The appSource connection type allows connections to provide a list of apps that can show up in home and the\nstore. Apps with manifest type id connection will be send back to the connection on selection (e.g. a child view)",
					"type": "string"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"Array": {
			"items": {
				"anyOf": [
					{
						"$ref": "#/definitions/LayoutItemConfig",
						"description": "Represents the arrangement of Views within a Platform window's Layout. We do not recommend trying\nto build Layouts or LayoutItems by hand and instead use calls such as {@link Platform#getSnapshot getSnapshot}."
					},
					{
						"$ref": "#/definitions/LayoutRow"
					},
					{
						"$ref": "#/definitions/LayoutColumn"
					},
					{
						"$ref": "#/definitions/LayoutComponent"
					}
				]
			},
			"type": "array"
		},
		"Array_1": {
			"items": {
				"$ref": "#/definitions/PrebuiltContextMenuItem"
			},
			"type": "array"
		},
		"Array_2": {
			"description": "List of extended custom themes.",
			"items": {
				"$ref": "#/definitions/PlatformCustomTheme"
			},
			"type": "array"
		},
		"AuthProviderOptions": {
			"additionalProperties": false,
			"description": "Auth Provider Options. Specify a single auth module if your application requires authentication before allowing the\nuser to use the platform.",
			"properties": {
				"includeLoggedInUserInfo": {
					"description": "Include the user information when the logged in event is called",
					"type": "boolean"
				},
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"AutoResizeOptions": {
			"$ref": "#/definitions/__type_29"
		},
		"AutoplayPolicyOptions": {
			"description": "Autoplay policy to apply to content in the window, can be\n`no-user-gesture-required`, `user-gesture-required`,\n`document-user-activation-required`. Defaults to `no-user-gesture-required`.",
			"enum": ["document-user-activation-required", "no-user-gesture-required", "user-gesture-required"],
			"type": "string"
		},
		"BlockedContentCreationRule": {
			"additionalProperties": false,
			"description": "A rule prescribing content creation that should be blocked.",
			"properties": {
				"behavior": {
					"const": "block",
					"description": "Behavior to use when opening matched content.",
					"type": "string"
				},
				"data": {
					"description": "custom property"
				},
				"match": {
					"description": "List of [match patterns](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) that indicate the specified\nbehavior should be used",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			"required": ["behavior", "match"],
			"type": "object"
		},
		"BootstrapComponents": {
			"description": "The components that can be bootstrapped.",
			"enum": ["dock", "home", "none", "store"],
			"type": "string"
		},
		"BootstrapOptions": {
			"additionalProperties": false,
			"description": "Bootstrap provider options.",
			"properties": {
				"autoShow": {
					"description": "Which components should auto show after the bootstrapping process. As home vanishes on blur we suggest adding\nhome last if you wish it to show.",
					"items": {
						"$ref": "#/definitions/BootstrapComponents"
					},
					"type": "array"
				},
				"autostartApps": {
					"description": "Should the platform launch one or more apps at the end of the bootstrapping process if they have declared\nautostart as true in their metadata? Default behavior is true.",
					"type": "boolean"
				},
				"dock": {
					"description": "Should the platform register against the dock component?",
					"type": "boolean"
				},
				"home": {
					"description": "Should the platform register against the home component?",
					"type": "boolean"
				},
				"notifications": {
					"description": "Should the platform register itself against the notification center and have a platform specific tab show up?",
					"type": "boolean"
				},
				"store": {
					"description": "Should the platform register against the store component?",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"Bounds": {
			"$ref": "#/definitions/__type_28"
		},
		"BrokerConnection": {
			"additionalProperties": false,
			"description": "Specific type for a broker connection.",
			"properties": {
				"type": {
					"const": "broker",
					"description": "The broker connection type allows connections to connect to our broker in order to react to context sharing.",
					"type": "string"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"BrowserButtonType.Custom": {
			"const": "Custom",
			"type": "string"
		},
		"BrowserButtonType.LockUnlockPage": {
			"const": "LockUnlockPage",
			"type": "string"
		},
		"BrowserButtonType.ShowHideTabs": {
			"const": "ShowHideTabs",
			"type": "string"
		},
		"BrowserContentCreationRule": {
			"additionalProperties": false,
			"description": "A rule prescribing content creation in the browser.",
			"properties": {
				"behavior": {
					"const": "browser",
					"description": "Behavior to use when opening matched content.",
					"type": "string"
				},
				"data": {
					"description": "custom property"
				},
				"match": {
					"description": "List of [match patterns](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) that indicate the specified\nbehavior should be used",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			"required": ["behavior", "match"],
			"type": "object"
		},
		"BrowserProviderOptions": {
			"additionalProperties": false,
			"description": "Browser Provider Options includes the default window/page and view options.",
			"properties": {
				"defaultPageOptions": {
					"$ref": "#/definitions/Pick",
					"description": "Default options when creating a new page. If `iconUrl`, `unsavedIconUrl`, `panels` or `closeButton` are not defined when creating a page, setting will default to `defaultPageOptions`."
				},
				"defaultViewOptions": {
					"$ref": "#/definitions/Partial_10",
					"description": "The default options when creating a new browser window. Any option not included in WorkspacePlatform.getCurrentSync().Browser.createView(options) call will default to the value provided in this field."
				},
				"defaultWindowOptions": {
					"$ref": "#/definitions/Partial",
					"description": "Default options for creating a new Browser window. These options are not applied on any non-Browser windows that get created.  These default options will take precedence over\ndefaultWindowOptions included in the manifest.  Any option not included in WorkspacePlatform.getCurrentSync().Browser.createWindow(options) call will default to the value provided in this field."
				},
				"disableWindowPositioningStrategy": {
					"description": "By default we implement a Window Positioning Strategy that will try and position launched windows with an\noffset. The way the windows are offset can be configured by specifying windowPositioningStrategy.\nIf you want to turn this off (e.g. automation tests that do not care about the layout of windows) then you\ncan set this value to true.",
					"type": "boolean"
				},
				"globalMenu": {
					"description": "This setting lets you customize the default workspace browser main menu and specify your own.",
					"items": {
						"$ref": "#/definitions/MenuEntry<GlobalContextMenuOptionType>"
					},
					"type": "array"
				},
				"menuOptions": {
					"additionalProperties": false,
					"description": "This setting lets you configure options related to the menus shown in the browser.",
					"properties": {
						"includeDefaults": {
							"additionalProperties": false,
							"description": "Should the workspace default options be included or do you want to be specific about what should show in the\nmenu.",
							"properties": {
								"globalMenu": {
									"description": "Should we include all the default options for the global menu? Default is true.",
									"type": "boolean"
								},
								"pageMenu": {
									"description": "Should we include all the default options for the page menu? Default is true.",
									"type": "boolean"
								},
								"viewMenu": {
									"description": "Should we include all the default options for the view menu? Default is true.",
									"type": "boolean"
								}
							},
							"type": "object"
						},
						"styles": {
							"additionalProperties": false,
							"description": "Style the menus, if no options are provided it will use the build in version.",
							"properties": {
								"globalMenu": {
									"$ref": "#/definitions/PopupMenuStyles",
									"description": "Override the style for the global menu (top left icon)"
								},
								"pageMenu": {
									"$ref": "#/definitions/PopupMenuStyles",
									"description": "Override the style for the page menu (right click on page tab)"
								},
								"viewMenu": {
									"$ref": "#/definitions/PopupMenuStyles",
									"description": "Override the style for the view menu (right click on view tab)"
								}
							},
							"type": "object"
						}
					},
					"type": "object"
				},
				"pageMenu": {
					"description": "This setting lets you customize the page right click context menu and add your own entries.",
					"items": {
						"$ref": "#/definitions/MenuEntry<PageTabContextMenuOptionType>"
					},
					"type": "array"
				},
				"title": {
					"description": "The platform title. UI friendly title for the platform in browser.",
					"type": "string"
				},
				"toolbarButtons": {
					"description": "This setting lets you override the default workspace browser buttons and specify your own.",
					"items": {
						"$ref": "#/definitions/WorkspacePlatformToolbarButton"
					},
					"type": "array"
				},
				"unsavedPagePromptStrategy": {
					"$ref": "#/definitions/UnsavedPagePromptStrategy",
					"description": "Some options for whether or not a closing page will prompt the user to save unsaved changes."
				},
				"viewMenu": {
					"description": "This setting lets you customize the view right click context menu and add your own entries.",
					"items": {
						"$ref": "#/definitions/MenuEntry<ViewTabMenuOptionType>"
					},
					"type": "array"
				},
				"windowPositioningStrategy": {
					"$ref": "#/definitions/CascadingWindowOffsetStrategy",
					"description": "The strategy for window positioning."
				}
			},
			"type": "object"
		},
		"BrowserWorkspacePlatformWindowOptions": {
			"additionalProperties": false,
			"properties": {
				"disableMultiplePages": {
					"description": "Remove the Page UI and only allow a single page in the browser window.\nMust be set to true for this behavior.  If this is not set to false,\nthen an empty `pages` option will be populated with a single page.",
					"type": "boolean"
				},
				"favicon": {
					"description": "The favicon to display on the top left of the created browser window.",
					"type": "string"
				},
				"isLocked": {
					"description": "When true, disables the ability to close pages, drag pages within the window,\nand drag pages into/out of the window. False by default.",
					"type": "boolean"
				},
				"navigationButtons": {
					"anyOf": [
						{
							"additionalProperties": false,
							"properties": {
								"enabled": {
									"const": false,
									"type": "boolean"
								}
							},
							"required": ["enabled"],
							"type": "object"
						},
						{
							"additionalProperties": false,
							"properties": {
								"enabled": {
									"const": true,
									"type": "boolean"
								},
								"hotkeysDisabled": {
									"type": "boolean"
								}
							},
							"required": ["enabled"],
							"type": "object"
						}
					],
					"description": "Use when you want to display navigation buttons in Browser toolbar. Disabled by default."
				},
				"newPageUrl": {
					"description": "Landing page that shows up when you add a new page from the plus button that exists in the window frame where the page selector is shown.\nIf you do not provide a newPageUrl, then the new Page plus button will not be shown and you cannot create a new empty Page or Window.",
					"type": "string"
				},
				"newTabUrl": {
					"description": "Landing page that shows up when you add a new tab from the plus button that exists in the tabstrip.\nIf you do not provide a newTabUrl, then the plus button in the tabstrip will not be shown and users cannot create a new empty tab.",
					"type": "string"
				},
				"pages": {
					"description": "The initial set of pages to add to the created browser window.",
					"items": {
						"$ref": "#/definitions/Page"
					},
					"type": "array"
				},
				"preventPageClose": {
					"description": "When true, disables the ability to close pages in the window. False by default.",
					"type": "boolean"
				},
				"preventPageDrag": {
					"description": "When true, page tabs in the window will not be draggable.\nThis includes reordering pages and dragging them out of the window.\nFalse by default.",
					"type": "boolean"
				},
				"preventPageDragIn": {
					"description": "When true, disables the ability to drag pages into the window. False by default.",
					"type": "boolean"
				},
				"preventPageDragOut": {
					"description": "When true, disables the ability to drag pages out of a window. False by default.",
					"type": "boolean"
				},
				"title": {
					"anyOf": [
						{
							"additionalProperties": false,
							"properties": {
								"type": {
									"const": "custom",
									"type": "string"
								},
								"value": {
									"type": "string"
								}
							},
							"required": ["type", "value"],
							"type": "object"
						},
						{
							"additionalProperties": false,
							"properties": {
								"type": {
									"const": "page-title",
									"type": "string"
								}
							},
							"required": ["type"],
							"type": "object"
						},
						{
							"additionalProperties": false,
							"properties": {
								"type": {
									"const": "view-title",
									"type": "string"
								}
							},
							"required": ["type"],
							"type": "object"
						},
						{
							"type": "string"
						}
					],
					"description": "A UI friendly title for the created browser window.\nType string for window title is deprecated, please use WindowTitle type instead."
				},
				"toolbarOptions": {
					"$ref": "#/definitions/ToolbarOptions"
				},
				"windowStateButtonOptions": {
					"$ref": "#/definitions/WindowStateButtonOptions"
				},
				"windowType": {
					"$ref": "#/definitions/WindowType",
					"description": "For internal usage.  Defaults to 'browser' when Browser is enabled when the WorkspacePlatform is initialized.  In order to use\nnon-Browser layout windows ('platform' windows) in a Browser-enabled workspace platform, set windowType to `platform`. In that instance, the other properties\nin the workspacePlatform object are not relevant."
				}
			},
			"required": ["pages"],
			"type": "object"
		},
		"CascadingWindowOffsetStrategy": {
			"additionalProperties": false,
			"description": "The cascading window strategy for positioning new windows.",
			"properties": {
				"maxIncrements": {
					"description": "The maximum number increment, before resetting to start, defaults to 8.",
					"type": "number"
				},
				"x": {
					"description": "The x offset to increment by for each new window, defaults to 30.",
					"type": "number"
				},
				"y": {
					"description": "The y offset to increment by for each new window, defaults to 30.",
					"type": "number"
				}
			},
			"type": "object"
		},
		"CertificationInfo": {
			"$ref": "#/definitions/__type_50"
		},
		"ConditionsProviderOptions": {
			"$ref": "#/definitions/ModuleList_3",
			"description": "List of modules."
		},
		"Connection": {
			"additionalProperties": false,
			"description": "The connection details.",
			"properties": {
				"connectionTypes": {
					"description": "An array of the connection types this connection will be permitted to use.",
					"items": {
						"$ref": "#/definitions/ConnectionTypes"
					},
					"type": "array"
				},
				"identity": {
					"$ref": "#/definitions/Identity_5",
					"description": "The identity uuid of the incoming connection or * as a wildcard. We currently do not restrict down to the name\nlevel so it can be blank or omitted."
				},
				"validatePayload": {
					"description": "Should we check the payload be validated for this connection when it connects.",
					"type": "boolean"
				}
			},
			"required": ["connectionTypes", "identity"],
			"type": "object"
		},
		"ConnectionProviderOptions": {
			"additionalProperties": false,
			"description": "Options for the connection provider.",
			"properties": {
				"connectionId": {
					"description": "The channel id that external apps will use to connect to this platform (it will be prefixed with your platform's\nuuid e.g. your-uuid-connection-id)",
					"type": "string"
				},
				"connectionValidationEndpoint": {
					"description": "If you want to validate the payload passed by connecting apps you can specify the endpoint id that should receive\nthe payload and return whether or not it is valid.",
					"type": "string"
				},
				"connections": {
					"description": "An array of connections that this platform allows being connected from. By specifying * as the uuid you can allow\nany connection and give it certain capabilities. You can then specify specific uuids with more capabilities.",
					"items": {
						"$ref": "#/definitions/Connection"
					},
					"type": "array"
				},
				"supportedActions": {
					"description": "The connection provider can have actions registered against it from the platform. This provides a default list of\nactions that connections should be able to use if actions are enabled for that connection.",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			"required": ["connectionId", "connections", "supportedActions"],
			"type": "object"
		},
		"ConnectionTypes": {
			"anyOf": [
				{
					"$ref": "#/definitions/AppSourceConnection"
				},
				{
					"$ref": "#/definitions/SnapshotSourceConnection"
				},
				{
					"$ref": "#/definitions/ActionConnection"
				},
				{
					"$ref": "#/definitions/BrokerConnection"
				}
			],
			"description": "All the types of connections."
		},
		"ContentCreationOptions": {
			"$ref": "#/definitions/__type_5"
		},
		"ContentCreationProviderOptions": {
			"$ref": "#/definitions/ModuleList_5",
			"description": "List of modules."
		},
		"ContentCreationRule<ContentCreationBehavior>": {
			"anyOf": [
				{
					"$ref": "#/definitions/WindowContentCreationRule",
					"description": "A rule prescribing content creation in a {@link OpenFin.Window}."
				},
				{
					"$ref": "#/definitions/ViewContentCreationRule",
					"description": "A rule prescribing content creation in a {@link OpenFin.View}."
				},
				{
					"$ref": "#/definitions/BrowserContentCreationRule",
					"description": "A rule prescribing content creation in the browser."
				},
				{
					"$ref": "#/definitions/BlockedContentCreationRule",
					"description": "A rule prescribing content creation that should be blocked."
				}
			],
			"description": "A rule for creating content in OpenFin; maps a content type to the way in which\nnewly-opened content of that type will be handled."
		},
		"ContentNavigation": {
			"$ref": "#/definitions/__type_15"
		},
		"ContentPermission": {
			"description": "Whether a content url is allowed or blocked for navigation or redirection.\n\n* 'allow': The content url is allowed.\n* 'block': The content url is blocked.",
			"enum": ["allow", "block"],
			"type": "string"
		},
		"ContentRedirect": {
			"$ref": "#/definitions/__type_15"
		},
		"ContextGroupStates": {
			"$ref": "#/definitions/__type_47"
		},
		"ContextMenuOptions": {
			"$ref": "#/definitions/__type_9"
		},
		"ContextMenuSettings": {
			"$ref": "#/definitions/__type_8"
		},
		"ContextOptions": {
			"additionalProperties": false,
			"description": "Option for the Context Handling.",
			"properties": {
				"includeOriginator": {
					"description": "Should the broker send context messages back to the sender? Default is true.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"CustomActionSpecifier": {
			"additionalProperties": false,
			"description": "Configures a custom action when the control is invoked",
			"properties": {
				"customData": {
					"description": "Any data necessary for the functioning of specified custom action"
				},
				"id": {
					"description": "Identifier of a custom action defined at platform initialization",
					"type": "string"
				}
			},
			"required": ["id"],
			"type": "object"
		},
		"CustomActionSpecifier_1": {
			"additionalProperties": false,
			"description": "Configures a custom action when the control is invoked",
			"properties": {
				"customData": {
					"description": "Any data necessary for the functioning of specified custom action"
				},
				"id": {
					"description": "Identifier of a custom action defined at platform initialization",
					"type": "string"
				}
			},
			"required": ["id"],
			"type": "object"
		},
		"CustomBrowserButtonConfig": {
			"additionalProperties": false,
			"description": "Custom browser buttons",
			"properties": {
				"action": {
					"$ref": "#/definitions/CustomActionSpecifier",
					"description": "Custom action once the button is clicked"
				},
				"disabled": {
					"description": "Disable custom button true or false",
					"type": "boolean"
				},
				"iconUrl": {
					"description": "icon URL for icon image",
					"type": "string"
				},
				"parentHover": {
					"type": "boolean"
				},
				"tooltip": {
					"description": "Button name text when hovered over",
					"type": "string"
				},
				"type": {
					"$ref": "#/definitions/BrowserButtonType.Custom",
					"description": "Type of custom browser button"
				}
			},
			"required": ["action", "tooltip", "type"],
			"type": "object"
		},
		"CustomPaletteSet": {
			"additionalProperties": false,
			"properties": {
				"background1": {
					"type": "string"
				},
				"background2": {
					"type": "string"
				},
				"background3": {
					"type": "string"
				},
				"background4": {
					"type": "string"
				},
				"background5": {
					"type": "string"
				},
				"background6": {
					"type": "string"
				},
				"backgroundPrimary": {
					"type": "string"
				},
				"brandPrimary": {
					"type": "string"
				},
				"brandSecondary": {
					"type": "string"
				},
				"contentBackground1": {
					"type": "string"
				},
				"contentBackground2": {
					"type": "string"
				},
				"contentBackground3": {
					"type": "string"
				},
				"contentBackground4": {
					"type": "string"
				},
				"contentBackground5": {
					"type": "string"
				},
				"functional1": {
					"type": "string"
				},
				"functional10": {
					"type": "string"
				},
				"functional2": {
					"type": "string"
				},
				"functional3": {
					"type": "string"
				},
				"functional4": {
					"type": "string"
				},
				"functional5": {
					"type": "string"
				},
				"functional6": {
					"type": "string"
				},
				"functional7": {
					"type": "string"
				},
				"functional8": {
					"type": "string"
				},
				"functional9": {
					"type": "string"
				},
				"inputBackground": {
					"type": "string"
				},
				"inputBorder": {
					"type": "string"
				},
				"inputColor": {
					"type": "string"
				},
				"inputDisabled": {
					"type": "string"
				},
				"inputFocused": {
					"type": "string"
				},
				"inputPlaceholder": {
					"type": "string"
				},
				"linkDefault": {
					"type": "string"
				},
				"linkHover": {
					"type": "string"
				},
				"statusActive": {
					"type": "string"
				},
				"statusCritical": {
					"type": "string"
				},
				"statusSuccess": {
					"type": "string"
				},
				"statusWarning": {
					"type": "string"
				},
				"textDefault": {
					"type": "string"
				},
				"textHelp": {
					"type": "string"
				},
				"textInactive": {
					"type": "string"
				}
			},
			"required": ["backgroundPrimary", "brandPrimary", "brandSecondary"],
			"type": "object"
		},
		"CustomSettings": {
			"additionalProperties": false,
			"description": "The custom settings section defined in the manifest.",
			"properties": {
				"$schema": {
					"description": "The schema for the settings.",
					"type": "string"
				},
				"actionsProvider": {
					"$ref": "#/definitions/ActionsProviderOptions",
					"description": "The actions provider options."
				},
				"analyticsProvider": {
					"$ref": "#/definitions/AnalyticsProviderOptions",
					"description": "The analytics provider options."
				},
				"appProvider": {
					"$ref": "#/definitions/AppProviderOptions",
					"description": "The app provider options."
				},
				"authProvider": {
					"$ref": "#/definitions/AuthProviderOptions",
					"description": "The auth provider options."
				},
				"bootstrap": {
					"$ref": "#/definitions/BootstrapOptions",
					"description": "The bootstrap options."
				},
				"browserProvider": {
					"$ref": "#/definitions/BrowserProviderOptions",
					"description": "The browser provider options."
				},
				"conditionsProvider": {
					"$ref": "#/definitions/ConditionsProviderOptions",
					"description": "The conditions provider options."
				},
				"connectionProvider": {
					"$ref": "#/definitions/ConnectionProviderOptions",
					"description": "The connection provider options."
				},
				"contentCreationProvider": {
					"$ref": "#/definitions/ContentCreationProviderOptions",
					"description": "The settings required to enable the content creation features."
				},
				"dialogProvider": {
					"$ref": "#/definitions/DialogProviderOptions",
					"description": "The settings required to configure the dialog features."
				},
				"dockProvider": {
					"$ref": "#/definitions/DockProviderOptions",
					"description": "The dock provider options."
				},
				"endpointProvider": {
					"$ref": "#/definitions/EndpointProviderOptions",
					"description": "The endpoint provider options."
				},
				"favoriteProvider": {
					"$ref": "#/definitions/FavoriteProviderOptions",
					"description": "The settings you need to set if you want to indicate this platform supports favorites"
				},
				"homeProvider": {
					"$ref": "#/definitions/HomeProviderOptions",
					"description": "The home provider options."
				},
				"initOptionsProvider": {
					"$ref": "#/definitions/InitOptionsProviderOptions",
					"description": "The init options provider options."
				},
				"integrationProvider": {
					"$ref": "#/definitions/IntegrationProviderOptions",
					"description": "The integration provider options."
				},
				"lifecycleProvider": {
					"$ref": "#/definitions/LifecycleProviderOptions",
					"description": "The lifecycle provider options."
				},
				"loggerProvider": {
					"$ref": "#/definitions/LoggerProviderOptions",
					"description": "The logger provider options."
				},
				"lowCodeIntegrationProvider": {
					"$ref": "#/definitions/LowCodeIntegrationProviderOptions",
					"description": "The low code integration provider options."
				},
				"menusProvider": {
					"$ref": "#/definitions/MenusProviderOptions",
					"description": "The menus provider options."
				},
				"notificationProvider": {
					"$ref": "#/definitions/NotificationProviderOptions",
					"description": "The notification provider options."
				},
				"platformProvider": {
					"$ref": "#/definitions/PlatformProviderOptions",
					"description": "The platform provider options."
				},
				"shareProvider": {
					"$ref": "#/definitions/ShareProviderOptions",
					"description": "The settings required to enable the share features."
				},
				"snapProvider": {
					"$ref": "#/definitions/SnapProviderOptions",
					"description": "The settings required to enable the Snap features."
				},
				"splashScreenProvider": {
					"$ref": "#/definitions/SplashScreenProviderOptions",
					"description": "The splash screen provider options."
				},
				"storefrontProvider": {
					"$ref": "#/definitions/StorefrontProviderOptions",
					"description": "The storefront provider options."
				},
				"themeProvider": {
					"$ref": "#/definitions/ThemeProviderOptions",
					"description": "The theme provider options."
				},
				"trayProvider": {
					"$ref": "#/definitions/TrayProviderOptions",
					"description": "The settings you need to set if you want to include a tray icon with menu"
				},
				"versionProvider": {
					"$ref": "#/definitions/VersionProviderOptions",
					"description": "The version provider options."
				}
			},
			"type": "object"
		},
		"Data": {},
		"DeepPartial": {
			"$ref": "#/definitions/__type_38"
		},
		"DefaultDomainSettings": {
			"$ref": "#/definitions/__type_63"
		},
		"DelayStrategy": {
			"additionalProperties": false,
			"description": "A window launch discovery strategy that waits for the given time period, checks if a process has\na window and if so, captures that window and registers it with the Snap Server",
			"properties": {
				"delayMs": {
					"description": "How to wait in milliseconds after process launch before looking for a window",
					"type": "number"
				},
				"type": {
					"const": "delay",
					"type": "string"
				}
			},
			"required": ["delayMs", "type"],
			"type": "object"
		},
		"DialogProviderOptions": {
			"additionalProperties": false,
			"description": "The options for the dialog provider.",
			"properties": {
				"defaultHeight": {
					"description": "Default height for the dialogs, defaults to 250.",
					"type": "number"
				},
				"defaultWidth": {
					"description": "Default width for the dialogs, defaults to 500.",
					"type": "number"
				},
				"dialogHtml": {
					"description": "The location of the HTML to use for dialog page.\ndefaults to http://localhost:8080/common/popups/dialog/index.html",
					"type": "string"
				}
			},
			"type": "object"
		},
		"DipRect": {
			"additionalProperties": false,
			"properties": {
				"dipRect": {
					"$ref": "#/definitions/RectangleByEdgePositions"
				},
				"scaledRect": {
					"$ref": "#/definitions/RectangleByEdgePositions"
				}
			},
			"required": ["dipRect", "scaledRect"],
			"type": "object"
		},
		"DipScaleRects": {
			"$ref": "#/definitions/__type_44"
		},
		"DisplayMetadata": {
			"$ref": "#/definitions/__type_61"
		},
		"DockButtonAction": {
			"additionalProperties": false,
			"description": "A button which launches an app by it's custom action.",
			"properties": {
				"action": {
					"additionalProperties": false,
					"description": "Launch an action.",
					"properties": {
						"customData": {
							"description": "data that should be passed to the action"
						},
						"id": {
							"description": "The id of the action to fire",
							"type": "string"
						}
					},
					"required": ["id"],
					"type": "object"
				},
				"conditions": {
					"description": "Condition to determine if the item should be shown.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"iconUrl": {
					"description": "The icon to use to distinguish this entry from others",
					"type": "string"
				},
				"id": {
					"description": "The id for the dock entry.",
					"type": "string"
				},
				"tooltip": {
					"description": "The tooltip to be shown for this button/entry",
					"type": "string"
				},
				"visible": {
					"description": "Is the dock entry visible.",
					"type": "boolean"
				}
			},
			"required": ["action", "id"],
			"type": "object"
		},
		"DockButtonApp": {
			"additionalProperties": false,
			"description": "A button which launches an app by it's id.",
			"properties": {
				"appId": {
					"description": "Launch an app by it's id.",
					"type": "string"
				},
				"conditions": {
					"description": "Condition to determine if the item should be shown.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"iconUrl": {
					"description": "The icon to use to distinguish this entry from others",
					"type": "string"
				},
				"id": {
					"description": "The id for the dock entry.",
					"type": "string"
				},
				"tooltip": {
					"description": "The tooltip to be shown for this button/entry",
					"type": "string"
				},
				"visible": {
					"description": "Is the dock entry visible.",
					"type": "boolean"
				}
			},
			"required": ["appId", "id"],
			"type": "object"
		},
		"DockButtonAppsByTag": {
			"additionalProperties": false,
			"description": "A single app or a list of apps that are defined by the tags in the app definitions.",
			"properties": {
				"conditions": {
					"description": "Condition to determine if the item should be shown.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"display": {
					"description": "Should this entry show a single app or a group of apps.",
					"enum": ["group", "individual"],
					"type": "string"
				},
				"iconUrl": {
					"description": "The icon to use to distinguish this entry from others",
					"type": "string"
				},
				"id": {
					"description": "The id for the dock entry.",
					"type": "string"
				},
				"noEntries": {
					"description": "Text to display if there are no entries because there are no tagged apps.",
					"type": "string"
				},
				"tags": {
					"description": "The tags to use to find the single app or a collection of apps that need to be listed. This will be compared\nagainst the tags associated with apps returned from the app data sources.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"tooltip": {
					"description": "The tooltip to be shown for this button/entry",
					"type": "string"
				},
				"visible": {
					"description": "Is the dock entry visible.",
					"type": "boolean"
				}
			},
			"required": ["display", "id"],
			"type": "object"
		},
		"DockButtonDropdown": {
			"additionalProperties": false,
			"description": "Button type which shows a drop down.",
			"properties": {
				"conditions": {
					"description": "Condition to determine if the item should be shown.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"iconUrl": {
					"description": "The icon to use to distinguish this entry from others",
					"type": "string"
				},
				"id": {
					"description": "The id for the dock entry.",
					"type": "string"
				},
				"noEntries": {
					"description": "Text to display if there are no entries because conditions have excluded options.",
					"type": "string"
				},
				"options": {
					"description": "List of button options",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/Omit_1"
							},
							{
								"$ref": "#/definitions/Omit_2"
							},
							{
								"$ref": "#/definitions/Omit_3"
							},
							{
								"$ref": "#/definitions/Omit_4"
							}
						]
					},
					"type": "array"
				},
				"tooltip": {
					"description": "The tooltip to be shown for this button/entry",
					"type": "string"
				},
				"visible": {
					"description": "Is the dock entry visible.",
					"type": "boolean"
				}
			},
			"required": ["id", "options"],
			"type": "object"
		},
		"DockButtonTypes": {
			"anyOf": [
				{
					"$ref": "#/definitions/DockButtonAppsByTag"
				},
				{
					"$ref": "#/definitions/DockButtonApp"
				},
				{
					"$ref": "#/definitions/DockButtonAction"
				},
				{
					"$ref": "#/definitions/DockButtonDropdown"
				}
			],
			"description": "All of the button types for the dock."
		},
		"DockProviderOptions": {
			"additionalProperties": false,
			"description": "Options for the dock provider.",
			"properties": {
				"disableUserRearrangement": {
					"description": "Disallow rearrangement of dock icons by setting this flag.",
					"type": "boolean"
				},
				"entries": {
					"description": "What apps, actions or drop downs should be made available via the dock.",
					"items": {
						"$ref": "#/definitions/DockButtonTypes"
					},
					"type": "array"
				},
				"icon": {
					"description": "The icon to show in the dock component",
					"type": "string"
				},
				"id": {
					"description": "The id to use when registering against the dock component",
					"type": "string"
				},
				"popupMenuStyle": {
					"$ref": "#/definitions/PopupMenuStyles",
					"description": "Configured a default for the popup menu style, defaults to platform."
				},
				"title": {
					"description": "The title for your dock registration",
					"type": "string"
				},
				"workspaceComponents": {
					"additionalProperties": false,
					"description": "Which workspace related icons should be hidden from the dock",
					"properties": {
						"hideHomeButton": {
							"type": "boolean"
						},
						"hideNotificationsButton": {
							"type": "boolean"
						},
						"hideStorefrontButton": {
							"type": "boolean"
						},
						"hideWorkspacesButton": {
							"type": "boolean"
						}
					},
					"type": "object"
				}
			},
			"required": ["icon", "id", "title"],
			"type": "object"
		},
		"DomainApiSettings": {
			"$ref": "#/definitions/__type_66"
		},
		"DomainSettings": {
			"$ref": "#/definitions/__type_63"
		},
		"DownloadShelfOptions": {
			"$ref": "#/definitions/__type_18"
		},
		"EndpointClientDefaultOptions": {
			"additionalProperties": false,
			"description": "A set of default options that will apply against all endpoint clients unless they\nhave a setting of their own.",
			"properties": {
				"endpointIds": {
					"description": "The list of specific endpoint Ids that clients should be able to access. * = access to all endpoints. We would recommend being restrictive and only provide * if needed to specific modules.",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"EndpointClientOptions": {
			"additionalProperties": false,
			"description": "Options that allow you to influence the behavior of the notification client.",
			"properties": {
				"enabled": {
					"description": "Should this module have a endpoint client. Default is true.",
					"type": "boolean"
				},
				"endpointIds": {
					"description": "The list of specific endpoint Ids that clients should be able to access. * = access to all endpoints. We would recommend being restrictive and only provide * if needed to specific modules.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"id": {
					"description": "The id that acts as the reference to a module id",
					"type": "string"
				}
			},
			"required": ["id"],
			"type": "object"
		},
		"EndpointClients": {
			"additionalProperties": false,
			"description": "A collection of rules and settings for endpoint clients that fall under this platform.",
			"properties": {
				"clientOptions": {
					"description": "If restricted to listed is true (the default) then an entry needs to exist for each module id\nthat should be provided with a endpoint client. Otherwise all modules\nwill be provided with a endpoint client using the default rules if provided.\nIf restrictToListed is false the clients list can still be used to disable\nspecific modules by specifying their id and enabled: false. It also allows you\nto specify overrides for specific modules regardless of the restrictToListed setting.",
					"items": {
						"$ref": "#/definitions/EndpointClientOptions"
					},
					"type": "array"
				},
				"defaults": {
					"$ref": "#/definitions/EndpointClientDefaultOptions",
					"description": "What default options should be applied against this platform"
				},
				"restrictToListed": {
					"description": "Should the notification client be passed only to those\nlisted or should all modules receive it but the list acts\nas an override. Default is true.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"EndpointDefinition<unknown>": {
			"anyOf": [
				{
					"$ref": "#/definitions/FetchEndpointDefinition",
					"description": "Specific endpoint type for fetching."
				},
				{
					"$ref": "#/definitions/ModuleEndpointDefinition",
					"description": "Specific endpoint type for modules."
				}
			],
			"description": "All the types for endpoints."
		},
		"EndpointProviderOptions": {
			"additionalProperties": false,
			"description": "Endpoint provider options",
			"properties": {
				"endpointClients": {
					"$ref": "#/definitions/EndpointClients",
					"description": "A collection of rules and settings for endpoint clients that fall under this platform."
				},
				"endpoints": {
					"description": "An array of endpoint definitions that can either use the built in fetch support or load modules that provide\ndifferent implementations for executing actions or performing request/response actions",
					"items": {
						"$ref": "#/definitions/EndpointDefinition<unknown>"
					},
					"type": "array"
				},
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"Exclude": {
			"enum": ["Close", "ColorLinking", "Maximise", "Minimise", "PresetLayouts", "SaveMenu", "SavePage"],
			"type": "string"
		},
		"FavoriteProviderOptions": {
			"additionalProperties": false,
			"description": "Options for the favorite provider.",
			"properties": {
				"enabled": {
					"description": "Is the provider enabled, defaults to true.",
					"type": "boolean"
				},
				"favoriteCommand": {
					"description": "What commands should integrations check for if they intent to support the display of favorites",
					"type": "string"
				},
				"favoriteIcon": {
					"description": "The icon that should be used if you want to indicate this is a favorite action",
					"type": "string"
				},
				"supportedFavoriteTypes": {
					"description": "The connection provider can have actions registered against it from the platform. This provides a default list of\nactions that connections should be able to use if actions are enabled for that connection.",
					"items": {
						"$ref": "#/definitions/FavoriteTypeNames"
					},
					"type": "array"
				},
				"unfavoriteIcon": {
					"description": "The icon to use to indicate that this favorite can be unset",
					"type": "string"
				}
			},
			"required": ["favoriteIcon", "unfavoriteIcon"],
			"type": "object"
		},
		"FavoriteTypeNames": {
			"description": "Names for all the favorite types.",
			"enum": ["app", "page", "query", "workspace"],
			"type": "string"
		},
		"FetchEndpointDefinition": {
			"additionalProperties": false,
			"description": "Specific endpoint type for fetching.",
			"properties": {
				"id": {
					"description": "A unique id for this endpoint. This ID will be called by the platform. In the future you may change what the\nimplementation for this endpoint is but you can keep the same endpoint id and request/response objects in order\nto not require changes from the platform.",
					"type": "string"
				},
				"options": {
					"$ref": "#/definitions/FetchOptions",
					"description": "The data to be passed to this endpoint when it is called so that it knows how to act"
				},
				"type": {
					"const": "fetch",
					"description": "This uses the built in support for fetch and the options will be the fetch options",
					"type": "string"
				}
			},
			"required": ["id", "options", "type"],
			"type": "object"
		},
		"FetchOptions": {
			"additionalProperties": false,
			"description": "Options for fetching",
			"properties": {
				"body": {
					"description": "The body to send with the fetch.",
					"type": "string"
				},
				"cache": {
					"description": "Caching for the connection.",
					"enum": ["default", "force-cache", "no-cache", "only-if-cached", "reload"],
					"type": "string"
				},
				"credentials": {
					"description": "Credentials to send with the fetch.",
					"enum": ["include", "omit", "same-origin"],
					"type": "string"
				},
				"headers": {
					"additionalProperties": {
						"type": "string"
					},
					"description": "Additional headers to send with the fetch.",
					"type": "object"
				},
				"method": {
					"description": "The HTTP methods for fetch.",
					"enum": ["DELETE", "GET", "PATCH", "POST", "PUT"],
					"type": "string"
				},
				"mode": {
					"description": "Cors mode for requests.",
					"enum": ["cors", "no-cors", "same-origin"],
					"type": "string"
				},
				"redirect": {
					"description": "How to handle redirects.",
					"enum": ["error", "follow", "manual"],
					"type": "string"
				},
				"referrerPolicy": {
					"description": "The referrer policy to use.",
					"enum": [
						"no-referrer",
						"no-referrer-when-downgrade",
						"origin",
						"origin-when-cross-origin",
						"same-origin",
						"strict-origin",
						"strict-origin-when-cross-origin",
						"unsafe-url"
					],
					"type": "string"
				},
				"url": {
					"description": "The url to fetch from.",
					"type": "string"
				}
			},
			"type": "object"
		},
		"FileDownloadBehavior": {
			"description": "Whether file downloads raise a user prompt.",
			"enum": ["no-prompt", "prompt"],
			"type": "string"
		},
		"FileDownloadSettings": {
			"$ref": "#/definitions/__type_65"
		},
		"GlobalContextMenuOptionType": {
			"description": "Types of global context menu options, including pre-defined ones.\nUser-defined context menu items should use the value `Custom`",
			"enum": [
				"NewWindow",
				"NewPage",
				"SavePage",
				"SavePageAs",
				"Print",
				"PrintAll",
				"PrintScreen",
				"CloseWindow",
				"RestoreChanges",
				"SaveWorkspace",
				"SaveWorkspaceAs",
				"RenameWorkspace",
				"SwitchWorkspace",
				"DeleteWorkspace",
				"Downloads",
				"OpenStorefront",
				"Appearance",
				"Quit",
				"Custom"
			],
			"type": "string"
		},
		"HomeProviderOptions": {
			"additionalProperties": false,
			"description": "HomeProvider Options",
			"properties": {
				"commandCode": {
					"description": "A keycode that can be used to interact with this Search Provider.",
					"type": "string"
				},
				"description": {
					"description": "A short description of the Search Provider.",
					"type": "string"
				},
				"hidden": {
					"description": "A flag to indicate this provider will not be displayed as a command.",
					"type": "boolean"
				},
				"icon": {
					"description": "An icon that a UI can display for the Search Provider.",
					"type": "string"
				},
				"id": {
					"description": "A unique ID used to identify the search provider.",
					"type": "string"
				},
				"inputPlaceholder": {
					"description": "The placeholder string to be displayed in a UI when targeting this specific Search Provider.",
					"type": "string"
				},
				"listTitle": {
					"description": "A title to display above the result list in a UI when targeting this specific Search Provider.",
					"type": "string"
				},
				"logoUrl": {
					"description": "Logo to show render when targeting this specific Search Provider.",
					"type": "string"
				},
				"queryAgainst": {
					"description": "What do you wish to run the query against when filtering apps. An array of entries. If not specified it will\ndefault to [\"title\"]. Since we store the app definition inside of a cli search result's data field you can add\ndata.tags to the array so that it will see if the query matches the start of a tag e.g. [\"title\",\"data.tags\"]",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"queryMinLength": {
					"description": "How many characters need to be entered before filtering the available apps",
					"type": "number"
				},
				"scoreOrder": {
					"$ref": "#/definitions/ScoreOrder",
					"description": "The order to sort the score in. The default is `ascending`."
				},
				"sourceFilter": {
					"additionalProperties": false,
					"description": "Options for the source filters displayed in home.",
					"properties": {
						"disabled": {
							"description": "Should we disable the source filters, defaults to false.",
							"type": "boolean"
						},
						"label": {
							"description": "The label to display in home, defaults to Source.",
							"type": "string"
						}
					},
					"type": "object"
				},
				"title": {
					"description": "A UI friendly title for the search provider.",
					"type": "string"
				}
			},
			"required": ["icon", "id", "title"],
			"type": "object"
		},
		"HostLaunchOptions": {
			"additionalProperties": false,
			"description": "Additional options that apply to the host of the content",
			"properties": {
				"disableMultiplePages": {
					"description": "Should the host support multi layouts (e.g. pages). Assumes the default for each host will be used.",
					"type": "boolean"
				},
				"disableToolbarOptions": {
					"description": "Should the toolbar options of a window be hidden if they are available?",
					"type": "boolean"
				},
				"hasHeaders": {
					"description": "Should the header for the content be hidden",
					"type": "boolean"
				},
				"icon": {
					"description": "The Icon you would prefer the window shows.",
					"type": "string"
				},
				"pageIcon": {
					"description": "If this host supports multiple layouts what should the icon be for the layout (e.g. page) be?",
					"type": "string"
				},
				"pageTitle": {
					"description": "If this host supports multiple layouts what should the layout (e.g page) title be?",
					"type": "string"
				},
				"title": {
					"description": "If specified it indicates a preference to be used by this type of host.",
					"type": "string"
				},
				"url": {
					"description": "If specified it indicates you do not want to use a browser window for this view but a platform window.",
					"type": "string"
				}
			},
			"type": "object"
		},
		"Identity_5": {
			"$ref": "#/definitions/__type_4"
		},
		"Identity_5_1": {
			"$ref": "#/definitions/__type_39"
		},
		"Image": {
			"additionalProperties": false,
			"description": "Detailed metadata describing an image.",
			"properties": {
				"purpose": {
					"type": "string"
				},
				"size": {
					"type": "string"
				},
				"src": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			},
			"required": ["src"],
			"type": "object"
		},
		"InitOptionsProviderOptions": {
			"$ref": "#/definitions/ModuleList",
			"description": "List of modules."
		},
		"InjectionType": {
			"description": "Injection setting for the `fin` API.\n\n* 'none': The `fin` API will be not available.\n* 'global': The entire `fin` API will be available.",
			"enum": ["global", "none"],
			"type": "string"
		},
		"IntegrationModuleDefinition<unknown>": {
			"additionalProperties": false,
			"description": "Integration definition.",
			"properties": {
				"autoStart": {
					"description": "Does the integration start automatically if enabled (default is true).",
					"type": "boolean"
				},
				"baseScore": {
					"description": "A number which is used as the base score when sorting module results.",
					"type": "number"
				},
				"data": {
					"$ref": "#/definitions/ModuleDefinition.O",
					"description": "Custom data for the module."
				},
				"description": {
					"description": "The description of the module.",
					"type": "string"
				},
				"enabled": {
					"description": "Is the module enabled.",
					"type": "boolean"
				},
				"excludeFromSourceFilter": {
					"description": "If this property is set then the module will not show in the source filter\nand its results will always be included.",
					"type": "boolean"
				},
				"icon": {
					"description": "The icon for the module.",
					"type": "string"
				},
				"id": {
					"description": "The id of the module.",
					"type": "string"
				},
				"info": {
					"description": "Url to more information.",
					"type": "string"
				},
				"moduleUrl": {
					"description": "This is the old property, it will be remapped to url.",
					"type": "string"
				},
				"title": {
					"description": "The title of the module.",
					"type": "string"
				},
				"url": {
					"description": "The url to load the module from.",
					"type": "string"
				}
			},
			"required": ["id", "title", "url"],
			"type": "object"
		},
		"IntegrationProviderOptions": {
			"additionalProperties": false,
			"description": "Integration provider settings.",
			"properties": {
				"command": {
					"description": "What command should we look for in order to return the list of integrations",
					"type": "string"
				},
				"commandDescription": {
					"description": "What description should accompany the command",
					"type": "string"
				},
				"icon": {
					"description": "An icon representing the top level integration provider",
					"type": "string"
				},
				"integrations": {
					"description": "This is the old module list name, remove in future.",
					"items": {
						"$ref": "#/definitions/IntegrationModuleDefinition<unknown>"
					},
					"type": "array"
				},
				"isManagementEnabled": {
					"description": "Do you wish to expose an option of turning on/off integrations.",
					"type": "boolean"
				},
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/IntegrationModuleDefinition<unknown>"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"IntentOptions": {
			"additionalProperties": false,
			"description": "Option for the intent.",
			"properties": {
				"intentTimeout": {
					"description": "How long should the broker wait after launching a view/window for it to register an intent handler. The default\nis 15000 (15 seconds)",
					"type": "number"
				}
			},
			"type": "object"
		},
		"IntentResolverOptions": {
			"additionalProperties": false,
			"description": "Intent resolver options.",
			"properties": {
				"fdc3InteropApi": {
					"description": "the fdc3 api version this picker will support (default is v2)",
					"type": "string"
				},
				"height": {
					"description": "the height you wish the window to be",
					"type": "number"
				},
				"title": {
					"description": "A suggested title for the intent picker/resolver ui",
					"type": "string"
				},
				"url": {
					"description": "The url of the html page that has the intent picker",
					"type": "string"
				},
				"width": {
					"description": "the width you wish the window to be",
					"type": "number"
				}
			},
			"required": ["url"],
			"type": "object"
		},
		"InteropBrokerOptions": {
			"$ref": "#/definitions/__type_60"
		},
		"InteropConfig": {
			"$ref": "#/definitions/__type_12"
		},
		"InteropLoggingOptions": {
			"$ref": "#/definitions/__type_62"
		},
		"LaunchExternalProcessListener": {
			"$ref": "#/definitions/__type_49"
		},
		"LaunchPreference": {
			"additionalProperties": false,
			"description": "Are there any preferences you would like to apply when launching this application?",
			"properties": {
				"bounds": {
					"$ref": "#/definitions/Partial_14",
					"description": "Do you wish to specify a custom height/width and/or x/y position that should be used when this application is launched?"
				},
				"defaultCentered": {
					"description": "Should the launched UI be positioned in the center of the screen?",
					"type": "boolean"
				},
				"options": {
					"anyOf": [
						{
							"$ref": "#/definitions/ViewLaunchOptions"
						},
						{
							"$ref": "#/definitions/WindowLaunchOptions"
						},
						{
							"$ref": "#/definitions/NativeLaunchOptions"
						}
					],
					"description": "Are there any app type specific options you would like to apply?"
				}
			},
			"type": "object"
		},
		"LaunchStrategy": {
			"anyOf": [
				{
					"$ref": "#/definitions/DelayStrategy"
				},
				{
					"$ref": "#/definitions/WaitForWindowNameStrategy"
				},
				{
					"$ref": "#/definitions/WaitForWindowClassStrategy"
				}
			]
		},
		"LayoutColumn": {
			"additionalProperties": false,
			"properties": {
				"type": {
					"const": "column",
					"type": "string"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"LayoutComponent": {
			"additionalProperties": false,
			"properties": {
				"componentName": {
					"const": "view",
					"description": "Only a component type will have this property and it should be set to view.",
					"type": "string"
				},
				"componentState": {
					"$ref": "#/definitions/Partial_1",
					"description": "Only a component type will have this property and it represents the view options of a given component."
				}
			},
			"required": ["componentName"],
			"type": "object"
		},
		"LayoutContent": {
			"$ref": "#/definitions/Array"
		},
		"LayoutItemConfig": {
			"$ref": "#/definitions/__type_1"
		},
		"LayoutRow": {
			"additionalProperties": false,
			"properties": {
				"type": {
					"const": "row",
					"type": "string"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"LayoutSnapshot": {
			"$ref": "#/definitions/__type_19"
		},
		"LifecycleProviderOptions": {
			"$ref": "#/definitions/ModuleList_4",
			"description": "List of modules."
		},
		"LockUnlockPageConfig": {
			"$ref": "#/definitions/__type_32"
		},
		"LoggerProviderOptions": {
			"$ref": "#/definitions/ModuleList_1",
			"description": "List of modules."
		},
		"LowCodeIntegrationDefinition": {
			"additionalProperties": false,
			"description": "A definition consisting of common settings across Low Code integrations (similar to modules) to help describe the entry and a type and data that helps\nidentify the type of Low Code integration the entry is about.",
			"properties": {
				"data": {
					"$ref": "#/definitions/ModuleDefinition.O_1",
					"description": "Custom data for the module."
				},
				"description": {
					"description": "The description of the module.",
					"type": "string"
				},
				"enabled": {
					"description": "Is the module enabled.",
					"type": "boolean"
				},
				"icon": {
					"description": "The icon for the module.",
					"type": "string"
				},
				"id": {
					"description": "The id of the module.",
					"type": "string"
				},
				"info": {
					"description": "Url to more information.",
					"type": "string"
				},
				"title": {
					"description": "The title of the module.",
					"type": "string"
				},
				"type": {
					"const": "ms365",
					"description": "The types of supported Low Code Integration",
					"type": "string"
				}
			},
			"required": ["id", "title", "type"],
			"type": "object"
		},
		"LowCodeIntegrationProviderOptions": {
			"additionalProperties": false,
			"description": "The options available when utilizing Low Code Integrations.",
			"properties": {
				"modules": {
					"description": "An array of low code integration definitions to use.",
					"items": {
						"$ref": "#/definitions/LowCodeIntegrationDefinition"
					},
					"type": "array"
				}
			},
			"required": ["modules"],
			"type": "object"
		},
		"ManifestTypeId": {
			"description": "Manifest types used in manifest files.",
			"enum": [
				"appasset",
				"connection",
				"desktop-browser",
				"endpoint",
				"external",
				"inline-appasset",
				"inline-external",
				"inline-snapshot",
				"inline-view",
				"inline-window",
				"manifest",
				"snapshot",
				"unregistered-app",
				"view",
				"window"
			],
			"type": "string"
		},
		"MaximumVersion": {
			"$ref": "#/definitions/VersionInfo",
			"description": "Information about the version of the platform and it's dependencies"
		},
		"MenuEntry.T": {
			"$ref": "#/definitions/GlobalContextMenuOptionType",
			"description": "Types of global context menu options, including pre-defined ones.\nUser-defined context menu items should use the value `Custom`"
		},
		"MenuEntry.T_1": {
			"$ref": "#/definitions/PageTabContextMenuOptionType",
			"description": "Types of page tab context menu options, including pre-defined ones.\nUser-defined context menu items should use the value `Custom`"
		},
		"MenuEntry.T_2": {
			"$ref": "#/definitions/ViewTabMenuOptionType",
			"description": "View tab context menu types for {@link WorkspacePlatformProvider.openViewTabContextMenu} override."
		},
		"MenuEntry.T_3": {
			"$ref": "#/definitions/TrayMenuOptionType.Custom",
			"description": "Custom tray menu entry item."
		},
		"MenuEntry<GlobalContextMenuOptionType>": {
			"additionalProperties": false,
			"description": "How to position a menu.",
			"properties": {
				"checked": {
					"description": "Should only be specified for `checkbox` type menu items.",
					"type": "boolean"
				},
				"conditions": {
					"description": "If the menu entry is included are there additional conditions that determine whether or not it should be shown (e.g. only show the logout menu entry if the authenticated condition is true)",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"data": {
					"additionalProperties": false,
					"description": "Data related to the menu option",
					"properties": {
						"action": {
							"$ref": "#/definitions/CustomActionSpecifier"
						},
						"type": {
							"$ref": "#/definitions/MenuEntry.T"
						}
					},
					"required": ["type"],
					"type": "object"
				},
				"enabled": {
					"description": "If false, the menu item will be greyed out and unclickable.",
					"type": "boolean"
				},
				"icon": {
					"description": "Image Data URI with image dimensions inferred from the encoded string",
					"type": "string"
				},
				"include": {
					"description": "Should this menu entry definition be included in the list of menu entries",
					"type": "boolean"
				},
				"label": {
					"description": "The text to show on the menu item. Should be left undefined for type: 'separator'",
					"type": "string"
				},
				"position": {
					"$ref": "#/definitions/MenuPosition",
					"description": "Where should this menu item be positioned in relation to existing entries"
				},
				"separator": {
					"$ref": "#/definitions/MenuSeparatorPosition",
					"description": "Should a menu separator be added"
				},
				"submenu": {
					"description": "Should be specified for `submenu` type menu items. If `submenu` is specified,\nthe `type: 'submenu'` can be omitted.",
					"items": {
						"$ref": "#/definitions/MenuItemTemplate<unknown>"
					},
					"type": "array"
				},
				"type": {
					"description": "Can be `normal`, `separator`, `submenu`, or `checkbox`.\nDefaults to 'normal' unless a 'submenu' key exists",
					"enum": ["checkbox", "normal", "separator", "submenu"],
					"type": "string"
				},
				"visible": {
					"description": "If false, the menu item will be entirely hidden.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"MenuEntry<PageTabContextMenuOptionType>": {
			"additionalProperties": false,
			"description": "How to position a menu.",
			"properties": {
				"checked": {
					"description": "Should only be specified for `checkbox` type menu items.",
					"type": "boolean"
				},
				"conditions": {
					"description": "If the menu entry is included are there additional conditions that determine whether or not it should be shown (e.g. only show the logout menu entry if the authenticated condition is true)",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"data": {
					"additionalProperties": false,
					"description": "Data related to the menu option",
					"properties": {
						"action": {
							"$ref": "#/definitions/CustomActionSpecifier"
						},
						"type": {
							"$ref": "#/definitions/MenuEntry.T_1"
						}
					},
					"required": ["type"],
					"type": "object"
				},
				"enabled": {
					"description": "If false, the menu item will be greyed out and unclickable.",
					"type": "boolean"
				},
				"icon": {
					"description": "Image Data URI with image dimensions inferred from the encoded string",
					"type": "string"
				},
				"include": {
					"description": "Should this menu entry definition be included in the list of menu entries",
					"type": "boolean"
				},
				"label": {
					"description": "The text to show on the menu item. Should be left undefined for type: 'separator'",
					"type": "string"
				},
				"position": {
					"$ref": "#/definitions/MenuPosition_1",
					"description": "Where should this menu item be positioned in relation to existing entries"
				},
				"separator": {
					"$ref": "#/definitions/MenuSeparatorPosition",
					"description": "Should a menu separator be added"
				},
				"submenu": {
					"description": "Should be specified for `submenu` type menu items. If `submenu` is specified,\nthe `type: 'submenu'` can be omitted.",
					"items": {
						"$ref": "#/definitions/MenuItemTemplate<unknown>"
					},
					"type": "array"
				},
				"type": {
					"description": "Can be `normal`, `separator`, `submenu`, or `checkbox`.\nDefaults to 'normal' unless a 'submenu' key exists",
					"enum": ["checkbox", "normal", "separator", "submenu"],
					"type": "string"
				},
				"visible": {
					"description": "If false, the menu item will be entirely hidden.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"MenuEntry<TrayMenuOptionType>": {
			"additionalProperties": false,
			"description": "How to position a menu.",
			"properties": {
				"checked": {
					"description": "Should only be specified for `checkbox` type menu items.",
					"type": "boolean"
				},
				"conditions": {
					"description": "If the menu entry is included are there additional conditions that determine whether or not it should be shown (e.g. only show the logout menu entry if the authenticated condition is true)",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"data": {
					"additionalProperties": false,
					"description": "Data related to the menu option",
					"properties": {
						"action": {
							"$ref": "#/definitions/CustomActionSpecifier"
						},
						"type": {
							"$ref": "#/definitions/MenuEntry.T_3"
						}
					},
					"required": ["type"],
					"type": "object"
				},
				"enabled": {
					"description": "If false, the menu item will be greyed out and unclickable.",
					"type": "boolean"
				},
				"icon": {
					"description": "Image Data URI with image dimensions inferred from the encoded string",
					"type": "string"
				},
				"include": {
					"description": "Should this menu entry definition be included in the list of menu entries",
					"type": "boolean"
				},
				"label": {
					"description": "The text to show on the menu item. Should be left undefined for type: 'separator'",
					"type": "string"
				},
				"position": {
					"$ref": "#/definitions/MenuPosition_3",
					"description": "Where should this menu item be positioned in relation to existing entries"
				},
				"separator": {
					"$ref": "#/definitions/MenuSeparatorPosition",
					"description": "Should a menu separator be added"
				},
				"submenu": {
					"description": "Should be specified for `submenu` type menu items. If `submenu` is specified,\nthe `type: 'submenu'` can be omitted.",
					"items": {
						"$ref": "#/definitions/MenuItemTemplate<unknown>"
					},
					"type": "array"
				},
				"type": {
					"description": "Can be `normal`, `separator`, `submenu`, or `checkbox`.\nDefaults to 'normal' unless a 'submenu' key exists",
					"enum": ["checkbox", "normal", "separator", "submenu"],
					"type": "string"
				},
				"visible": {
					"description": "If false, the menu item will be entirely hidden.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"MenuEntry<ViewTabMenuOptionType>": {
			"additionalProperties": false,
			"description": "How to position a menu.",
			"properties": {
				"checked": {
					"description": "Should only be specified for `checkbox` type menu items.",
					"type": "boolean"
				},
				"conditions": {
					"description": "If the menu entry is included are there additional conditions that determine whether or not it should be shown (e.g. only show the logout menu entry if the authenticated condition is true)",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"data": {
					"additionalProperties": false,
					"description": "Data related to the menu option",
					"properties": {
						"action": {
							"$ref": "#/definitions/CustomActionSpecifier"
						},
						"type": {
							"$ref": "#/definitions/MenuEntry.T_2"
						}
					},
					"required": ["type"],
					"type": "object"
				},
				"enabled": {
					"description": "If false, the menu item will be greyed out and unclickable.",
					"type": "boolean"
				},
				"icon": {
					"description": "Image Data URI with image dimensions inferred from the encoded string",
					"type": "string"
				},
				"include": {
					"description": "Should this menu entry definition be included in the list of menu entries",
					"type": "boolean"
				},
				"label": {
					"description": "The text to show on the menu item. Should be left undefined for type: 'separator'",
					"type": "string"
				},
				"position": {
					"$ref": "#/definitions/MenuPosition_2",
					"description": "Where should this menu item be positioned in relation to existing entries"
				},
				"separator": {
					"$ref": "#/definitions/MenuSeparatorPosition",
					"description": "Should a menu separator be added"
				},
				"submenu": {
					"description": "Should be specified for `submenu` type menu items. If `submenu` is specified,\nthe `type: 'submenu'` can be omitted.",
					"items": {
						"$ref": "#/definitions/MenuItemTemplate<unknown>"
					},
					"type": "array"
				},
				"type": {
					"description": "Can be `normal`, `separator`, `submenu`, or `checkbox`.\nDefaults to 'normal' unless a 'submenu' key exists",
					"enum": ["checkbox", "normal", "separator", "submenu"],
					"type": "string"
				},
				"visible": {
					"description": "If false, the menu item will be entirely hidden.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"MenuItemTemplate<unknown>": {
			"additionalProperties": false,
			"properties": {
				"checked": {
					"description": "Should only be specified for `checkbox` type menu items.",
					"type": "boolean"
				},
				"data": {
					"$ref": "#/definitions/Data",
					"description": "Data to be returned if the user selects the element. Must be serializable"
				},
				"enabled": {
					"description": "If false, the menu item will be greyed out and unclickable.",
					"type": "boolean"
				},
				"icon": {
					"description": "Image Data URI with image dimensions inferred from the encoded string",
					"type": "string"
				},
				"label": {
					"description": "The text to show on the menu item. Should be left undefined for type: 'separator'",
					"type": "string"
				},
				"role": {
					"enum": ["copy", "cut", "paste", "reload", "toggleDevTools"],
					"type": "string"
				},
				"submenu": {
					"description": "Should be specified for `submenu` type menu items. If `submenu` is specified,\nthe `type: 'submenu'` can be omitted.",
					"items": {
						"$ref": "#/definitions/MenuItemTemplate<unknown>"
					},
					"type": "array"
				},
				"type": {
					"description": "Can be `normal`, `separator`, `submenu`, or `checkbox`.\nDefaults to 'normal' unless a 'submenu' key exists",
					"enum": ["checkbox", "normal", "separator", "submenu"],
					"type": "string"
				},
				"visible": {
					"description": "If false, the menu item will be entirely hidden.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"MenuPosition": {
			"additionalProperties": false,
			"description": "The position for a menu entry.",
			"properties": {
				"customId": {
					"description": "If position type is Custom then a customId is required in order to do lookups of this entry in the list of entries",
					"type": "string"
				},
				"operation": {
					"$ref": "#/definitions/MenuPositionOperation",
					"description": "What should we do with this menu option"
				},
				"type": {
					"$ref": "#/definitions/MenuPosition.T",
					"description": "The type of Menu entry this is"
				}
			},
			"required": ["operation"],
			"type": "object"
		},
		"MenuPosition.T": {
			"$ref": "#/definitions/GlobalContextMenuOptionType",
			"description": "Types of global context menu options, including pre-defined ones.\nUser-defined context menu items should use the value `Custom`"
		},
		"MenuPosition.T_1": {
			"$ref": "#/definitions/PageTabContextMenuOptionType",
			"description": "Types of page tab context menu options, including pre-defined ones.\nUser-defined context menu items should use the value `Custom`"
		},
		"MenuPosition.T_2": {
			"$ref": "#/definitions/ViewTabMenuOptionType",
			"description": "View tab context menu types for {@link WorkspacePlatformProvider.openViewTabContextMenu} override."
		},
		"MenuPosition.T_3": {
			"$ref": "#/definitions/TrayMenuOptionType.Custom",
			"description": "Custom tray menu entry item."
		},
		"MenuPositionOperation": {
			"description": "Operations that can be performed on menus when they are being updated.",
			"enum": ["after", "before", "delete", "end", "replaceLabel", "start"],
			"type": "string"
		},
		"MenuPosition_1": {
			"additionalProperties": false,
			"description": "The position for a menu entry.",
			"properties": {
				"customId": {
					"description": "If position type is Custom then a customId is required in order to do lookups of this entry in the list of entries",
					"type": "string"
				},
				"operation": {
					"$ref": "#/definitions/MenuPositionOperation",
					"description": "What should we do with this menu option"
				},
				"type": {
					"$ref": "#/definitions/MenuPosition.T_1",
					"description": "The type of Menu entry this is"
				}
			},
			"required": ["operation"],
			"type": "object"
		},
		"MenuPosition_2": {
			"additionalProperties": false,
			"description": "The position for a menu entry.",
			"properties": {
				"customId": {
					"description": "If position type is Custom then a customId is required in order to do lookups of this entry in the list of entries",
					"type": "string"
				},
				"operation": {
					"$ref": "#/definitions/MenuPositionOperation",
					"description": "What should we do with this menu option"
				},
				"type": {
					"$ref": "#/definitions/MenuPosition.T_2",
					"description": "The type of Menu entry this is"
				}
			},
			"required": ["operation"],
			"type": "object"
		},
		"MenuPosition_3": {
			"additionalProperties": false,
			"description": "The position for a menu entry.",
			"properties": {
				"customId": {
					"description": "If position type is Custom then a customId is required in order to do lookups of this entry in the list of entries",
					"type": "string"
				},
				"operation": {
					"$ref": "#/definitions/MenuPositionOperation",
					"description": "What should we do with this menu option"
				},
				"type": {
					"$ref": "#/definitions/MenuPosition.T_3",
					"description": "The type of Menu entry this is"
				}
			},
			"required": ["operation"],
			"type": "object"
		},
		"MenuSeparatorPosition": {
			"description": "Position for adding separators during update operations.",
			"enum": ["after", "before"],
			"type": "string"
		},
		"MenusProviderOptions": {
			"additionalProperties": false,
			"description": "A list of modules that provide menu for different locations.",
			"properties": {
				"menuFontSize": {
					"description": "The font size used in the custom popup menu.\ndefaults to 12",
					"type": "number"
				},
				"menuItemHeight": {
					"description": "The height of an item in the custom popup menu.\ndefaults to 32.",
					"type": "number"
				},
				"menuItemSeparatorHeight": {
					"description": "The height of a separator in the custom popup menu.\ndefaults to 16.",
					"type": "number"
				},
				"menuWidth": {
					"description": "The width to display the custom popup menu.\ndefaults to 200",
					"type": "number"
				},
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				},
				"popupHtml": {
					"description": "The location of the HTML to use for custom popup page.\ndefaults to http://localhost:8080/common/popups/menu/index.html",
					"type": "string"
				},
				"popupMenuStyle": {
					"$ref": "#/definitions/PopupMenuStyles",
					"description": "Configured a global default for the popup menu style."
				}
			},
			"type": "object"
		},
		"Microsoft365ConnectionConfig": {
			"additionalProperties": false,
			"properties": {
				"clientId": {
					"description": "The client ID of the Microsoft 365 application.",
					"type": "string"
				},
				"redirectUri": {
					"description": "The redirect URI of the Microsoft 365 application.",
					"type": "string"
				},
				"tenantId": {
					"description": "The tenant ID of the Microsoft 365 application.",
					"type": "string"
				}
			},
			"required": ["clientId", "redirectUri", "tenantId"],
			"type": "object"
		},
		"Microsoft365IntegrationConfig": {
			"additionalProperties": false,
			"description": "Configuration object for the Microsoft 365 workflow integration.",
			"properties": {
				"connect": {
					"$ref": "#/definitions/Microsoft365ConnectionConfig"
				},
				"workflows": {
					"$ref": "#/definitions/Microsoft365Workflows"
				}
			},
			"required": ["connect"],
			"type": "object"
		},
		"Microsoft365Workflows": {
			"additionalProperties": false,
			"properties": {
				"search": {
					"$ref": "#/definitions/MicrosoftSearchWorkflowConfig",
					"description": "The Search workflow for the Microsoft 365 integration.\n\nThis workflow is used to search for Microsoft 365 entities.\n\nTo disable the Search workflow, set the disabled property in the workflow config to `false`.\n\nSee {@link MicrosoftSearchWorkflowConfig} for configuration options."
				}
			},
			"type": "object"
		},
		"MicrosoftEntityTypeConfig": {
			"additionalProperties": false,
			"description": "Configuration object for the Microsoft 365 workflow integration.\n\nUsed for choosing which Microsoft 365 entities to include in the search results.",
			"properties": {
				"chatMessage": {
					"default": true,
					"description": "Whether or not to include messages (Teams Messages) in the search results.\n\n`'Chat.Read' OR 'Chat.ReadWrite' AND 'ChannelMessage.Read.All'` OAuth scopes are required to access this data.\nIf these scopes are not provided, user Authentication will fail.\n\nFuthermore, the `openUrlWithBrowser` permission must be enabled in the application manifest. This should support the `msteams` protocols. This is used for opening the Teams client when action-ing a Teams message.\nSee the [Developer Guide](https://developers.openfin.co/of-docs/docs/api-security) for more information.",
					"type": "boolean"
				},
				"contact": {
					"default": true,
					"description": "Whether or not to include contacts (Outlook Contacts) in the search results.\n\n`'Contacts.Read.Shared'` OAuth scopes are required to access this data.\nIf these scopes are not provided, user Authentication will fail.",
					"type": "boolean"
				},
				"drive": {
					"default": true,
					"description": "Whether or not to include files (OneDrive Files) in the search results.",
					"type": "boolean"
				},
				"event": {
					"default": true,
					"description": "Whether or not to include events (Outlook Calendar Events) in the search results.\n\n`'Calendars.Read' OR 'Calendars.ReadWrite'` OAuth scopes are required to access this data.\nIf these scopes are not provided, user Authentication will fail.",
					"type": "boolean"
				},
				"list": {
					"default": true,
					"description": "Whether or not to include lists (SharePoint Lists) in the search results.\n\n`'Sites.Read.All' OR 'Sites.ReadWrite.All' AND 'Mail.ReadWrite.Shared'` OAuth scope is required to access this data.",
					"type": "boolean"
				},
				"message": {
					"default": true,
					"description": "Whether or not to include messages (Outlook Emails) in the search results.\n\n`'Mail.ReadWrite.Shared'` OAuth scopes are required to access this data.\nIf these scopes are not provided, user Authentication will fail.",
					"type": "boolean"
				},
				"user": {
					"default": true,
					"description": "Whether or not to include users (People) in the search results.\n\n`'User.Read.All' AND 'Presence.Read.All'` OAuth scopes are required to access this data.\nIf these scopes are not provided, user Authentication will fail.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"MicrosoftSearchWorkflowConfig": {
			"additionalProperties": false,
			"description": "Configuration object for the Microsoft 365 Search workflow integration.\n\nAll properties are optional. If they are omitted, the default values will be used.",
			"properties": {
				"disableAutoInitialize": {
					"default": false,
					"description": "If false, will automatically initialize the workflow when the Workspace Platform is initialized.\nElse, will need to be initialized by calling initializeWorkflow.",
					"type": "boolean"
				},
				"disabled": {
					"default": false,
					"description": "If true, will disable this workflow.",
					"type": "boolean"
				},
				"homeProvider": {
					"$ref": "#/definitions/DeepPartial",
					"description": "Configuration object for the HomeProvider.\n\nUse this to configure the HomeProvider for example, adding a custom logo or name.\n\nSee {@link HomeProvider} for configuration options."
				},
				"microsoftEntityTypeConfig": {
					"$ref": "#/definitions/MicrosoftEntityTypeConfig",
					"description": "Configuration object for the Microsoft 365 entity types to include in the search results.\n\nUse this to enable/disable the different Microsoft 365 entity types.\n\nSee {@link MicrosoftEntityTypeConfig} for configuration options."
				},
				"useTeamsDeepLink": {
					"default": true,
					"description": "The `msteams://` deep link can be used to open a Microsoft Teams chat in the Microsoft Teams desktop application.\n\nThis _requires_ that the user has the Microsoft Teams desktop application installed. Else the call will silently fail.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"MinimumVersion": {
			"$ref": "#/definitions/VersionInfo",
			"description": "Information about the version of the platform and it's dependencies"
		},
		"ModuleDefinition.O": {},
		"ModuleDefinition.O_1": {
			"$ref": "#/definitions/Microsoft365IntegrationConfig",
			"description": "Configuration object for the Microsoft 365 workflow integration."
		},
		"ModuleDefinition<unknown>": {
			"additionalProperties": false,
			"description": "The definition of a module with generic data for options.",
			"properties": {
				"data": {
					"$ref": "#/definitions/ModuleDefinition.O",
					"description": "Custom data for the module."
				},
				"description": {
					"description": "The description of the module.",
					"type": "string"
				},
				"enabled": {
					"description": "Is the module enabled.",
					"type": "boolean"
				},
				"icon": {
					"description": "The icon for the module.",
					"type": "string"
				},
				"id": {
					"description": "The id of the module.",
					"type": "string"
				},
				"info": {
					"description": "Url to more information.",
					"type": "string"
				},
				"title": {
					"description": "The title of the module.",
					"type": "string"
				},
				"url": {
					"description": "The url to load the module from.",
					"type": "string"
				}
			},
			"required": ["id", "title", "url"],
			"type": "object"
		},
		"ModuleEndpointDefinition": {
			"additionalProperties": false,
			"description": "Specific endpoint type for modules.",
			"properties": {
				"id": {
					"description": "A unique id for this endpoint. This ID will be called by the platform. In the future you may change what the\nimplementation for this endpoint is but you can keep the same endpoint id and request/response objects in order\nto not require changes from the platform.",
					"type": "string"
				},
				"options": {
					"$ref": "#/definitions/O",
					"description": "The data to be passed to this endpoint when it is called so that it knows how to act"
				},
				"type": {
					"const": "module",
					"description": "This indicates that this endpoint depends on a module that needs to be loaded in order for it to work",
					"type": "string"
				},
				"typeId": {
					"description": "The id of the module that should be loaded.",
					"type": "string"
				}
			},
			"required": ["id", "type", "typeId"],
			"type": "object"
		},
		"ModuleList": {
			"additionalProperties": false,
			"description": "InitOptions Provider Options. This is a list of modules that will be loaded and used to handle init params (similar\nto query strings). The module data setting needs to specify \"supportedActions\" and this should be an array of strings\nof the actions this module supports. The init params used must specify action (which would map onto the action\nsupported) by your module and optionally payload if your module supports being passed a payload (this should be a\nbase64 encoded object when passed via init params).",
			"properties": {
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"ModuleList_1": {
			"additionalProperties": false,
			"description": "Logger Provider Options - A list of modules that will act as loggers that can receive logging information sent by the\nplatform",
			"properties": {
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"ModuleList_2": {
			"additionalProperties": false,
			"description": "A list of modules that provide actions that can be used by the platform.",
			"properties": {
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"ModuleList_3": {
			"additionalProperties": false,
			"description": "A list of modules that provide a set of conditions. The function for this condition will return true or false to\nindicate if the condition is met. Conditions are used in a number of places (for example menu options)",
			"properties": {
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"ModuleList_4": {
			"additionalProperties": false,
			"description": "This is a list of modules that allow you to hook into the lifecycle events exposed by the platform. A good example\nmight be you wish to register a module that is called when an authenticated session is expired",
			"properties": {
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"ModuleList_5": {
			"additionalProperties": false,
			"description": "A list of modules that provide content creation rules.",
			"properties": {
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"MonitorDetails": {
			"$ref": "#/definitions/__type_46"
		},
		"MonitorInfo": {
			"$ref": "#/definitions/__type_42"
		},
		"NativeLaunchOptions": {
			"additionalProperties": false,
			"description": "Additional options that apply to a native app",
			"properties": {
				"native": {
					"additionalProperties": false,
					"description": "Launch Preferences related to native apps",
					"properties": {
						"arguments": {
							"description": "Arguments are set as an array for compatibility with appAssets, launchExternalProcess and Snap.",
							"items": {
								"type": "string"
							},
							"type": "array"
						}
					},
					"type": "object"
				},
				"snap": {
					"$ref": "#/definitions/SnapLaunchOptions",
					"description": "If specified it indicates the native app should be included when snapping."
				},
				"type": {
					"const": "native",
					"description": "Native options type",
					"type": "string"
				},
				"updatable": {
					"description": "What can be specified when launching a native app. This is an array of named types to reflect the properties you are happy to be specified.\nBy default nothing can be set outside of the app definition when launching the app.",
					"items": {
						"$ref": "#/definitions/NativePreference<never>_1"
					},
					"type": "array"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"NativePreference<never>": {
			"additionalProperties": false,
			"description": "Which Launch Options are updatable and are there any constraints",
			"properties": {
				"name": {
					"$ref": "#/definitions/NativePreferenceName",
					"description": "What setting is updatable?"
				}
			},
			"required": ["name"],
			"type": "object"
		},
		"NativePreference<never>_1": {
			"additionalProperties": false,
			"description": "Which Launch Options are updatable and are there any constraints",
			"properties": {
				"name": {
					"$ref": "#/definitions/NativePreferenceName",
					"description": "What setting is updatable?"
				}
			},
			"required": ["name"],
			"type": "object"
		},
		"NativePreferenceName": {
			"const": "arguments",
			"description": "A list of native related settings that can be updated.",
			"type": "string"
		},
		"NotificationClientDefaultOptions": {
			"additionalProperties": false,
			"description": "A set of default options that will apply against all notification clients unless they\nhave a setting of their own.",
			"properties": {
				"enforceIcon": {
					"description": "Should the icon if provided be used regardless of the icon sent by the client",
					"type": "boolean"
				},
				"includeInPlatform": {
					"description": "Should this notification client be defaulted into the platform tab. Default is true\nunless a custom platform id is specified. If false then the current platform's id\nwill not be allowed if passed",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"NotificationClientOptions": {
			"additionalProperties": false,
			"description": "Options that allow you to influence the behavior of the notification client.",
			"properties": {
				"enabled": {
					"description": "Should this module have a notification client. Default is true.",
					"type": "boolean"
				},
				"enforceIcon": {
					"description": "Should the icon if provided be used regardless of the icon sent by the client",
					"type": "boolean"
				},
				"icon": {
					"description": "An icon to enforce at the top of all of the notifications from this client",
					"type": "string"
				},
				"id": {
					"description": "The id that acts as the reference to a module id",
					"type": "string"
				},
				"idPrefix": {
					"description": "The prefix to assign to all notification ids for this client. It means you can\nhave an id shared across different module ids as they may come from the same team.\nId is used by default if no prefix is provided.",
					"type": "string"
				},
				"includeInPlatform": {
					"description": "Should this notification client be defaulted into the platform tab. Default is true\nunless a custom platform id is specified. If false then the current platform's id\nwill not be allowed if passed",
					"type": "boolean"
				},
				"restricted": {
					"description": "Should this module's notification client be scoped to it's id or prefix and it's settings controlled (e.g. icon)?\nDefault is true.\nThis means it will only be able to clear and read notifications scoped to that id.\nIf false then it will be get the standard notifications implementation that is not restricted.",
					"type": "boolean"
				}
			},
			"required": ["id"],
			"type": "object"
		},
		"NotificationClients": {
			"additionalProperties": false,
			"description": "A collection of rules and settings for notification clients that fall under this platform.",
			"properties": {
				"clientOptions": {
					"description": "If restricted to listed is true then an entry needs to exist for each module id\nthat should be provided with a notification client. Otherwise all modules\nwill be provided with a notification client using the default rules if provided.\nIf restrictToListed is false the clients list can still be used to disable\nspecific modules by specifying their id and enabled: false. It also allows you\nto specify overrides for specific modules regardless of the restrictToListed setting.",
					"items": {
						"$ref": "#/definitions/NotificationClientOptions"
					},
					"type": "array"
				},
				"defaults": {
					"$ref": "#/definitions/NotificationClientDefaultOptions",
					"description": "What default options should be applied against this platform"
				},
				"restrictToListed": {
					"description": "Should the notification client be passed only to those\nlisted or should all modules receive it but the list acts\nas an override. Default is false.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"NotificationIndicatorColorsWithScheme": {
			"$ref": "#/definitions/__type_56"
		},
		"NotificationProviderOptions": {
			"additionalProperties": false,
			"description": "Notification Provider Options. Providing settings in order to register your platform against the notification center.",
			"properties": {
				"icon": {
					"description": "URL of the icon to be displayed for this platform.",
					"type": "string"
				},
				"id": {
					"description": "Unique identifier of the platform.",
					"type": "string"
				},
				"notificationClients": {
					"$ref": "#/definitions/NotificationClients",
					"description": "A collection of rules and settings for notification clients that fall under this platform."
				},
				"notificationsCustomManifest": {
					"$ref": "#/definitions/NotificationsCustomManifestOptions",
					"description": "If you have licensed support for a custom notification manifest then you can provide the settings here."
				},
				"title": {
					"description": "Stream title.\n\nProviding a different displayName for an existing stream id will update the\ndisplayName of the stream stored in Notification Center.",
					"type": "string"
				}
			},
			"required": ["icon", "id", "title"],
			"type": "object"
		},
		"NotificationsCustomManifestOptions": {
			"$ref": "#/definitions/__type_40"
		},
		"O": {},
		"Omit": {
			"$ref": "#/definitions/__type_30"
		},
		"Omit_1": {
			"$ref": "#/definitions/__type_34"
		},
		"Omit_2": {
			"$ref": "#/definitions/__type_35"
		},
		"Omit_3": {
			"$ref": "#/definitions/__type_36"
		},
		"Omit_4": {
			"$ref": "#/definitions/__type_37"
		},
		"OpenExternalPermission": {
			"additionalProperties": false,
			"properties": {
				"api": {
					"type": "string"
				},
				"enabled": {
					"type": "boolean"
				},
				"protocols": {
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			"required": ["api", "enabled", "protocols"],
			"type": "object"
		},
		"OpenOptions": {
			"additionalProperties": false,
			"description": "Options related to the fdc3 open api",
			"properties": {
				"connectionTimeout": {
					"description": "How long should the broker wait after launching a view/window for it to connect to the broker. The default\nis 15000 (15 seconds).",
					"type": "number"
				},
				"contextTimeout": {
					"description": "How long should the broker wait after launching a view/window for it to register a context handler. The default\nis 15000 (15 seconds)",
					"type": "number"
				},
				"openStrategy": {
					"description": "When fdc3.open is raised will it only apply to applications that support the intent \"OpenApp\" (context if passed is sent to the intent handler for OpenApp)\nor will it follow the fdc3 approach where all apps can be opened and the defaultContextListener will receive the context if passed.\nThe default is fdc3. The previous behavior was \"intent\" and you can set this setting in order to have fdc3 open only apply to apps that say they support the\nintent \"OpenApp\". This setting is here to let you keep the previous behavior.",
					"enum": ["fdc3", "intent"],
					"type": "string"
				}
			},
			"type": "object"
		},
		"Page": {
			"additionalProperties": false,
			"description": "Provides configuration options for a set of Workspace Views. An array of Page objects is a required option of the {@link workspacePlatform}\nproperty of the {@link BrowserCreateWindowRequest} interface.\n```ts\n const page: Page = {\n     title: 'myPageTitle',\n     pageId: 'myPageID',\n     layout: {\n         content: [\n             {\n                 type: 'stack',\n                 content: [\n                     {\n                         type: 'component',\n                         componentName: 'view',\n                         componentState: {\n                             name: 'myViewName',\n                             url: 'http://google.com'\n                         }\n                     }\n                 ]\n             }\n         ]\n     }\n};\n```",
			"properties": {
				"closeButton": {
					"additionalProperties": false,
					"description": "Used to manipulate behaviour of a close button on a page tab. If `undefined`, then close button is visible and actionable.\nIf either property true, this page tab's context menu will disable its 'Close Page' option.",
					"properties": {
						"disabled": {
							"type": "boolean"
						},
						"hidden": {
							"type": "boolean"
						}
					},
					"type": "object"
				},
				"customData": {
					"description": "Optional property to attach custom metadata to the page object, such as version or timestamp. Must be serializable."
				},
				"description": {
					"description": "An optional UI friendly description of the page.",
					"type": "string"
				},
				"iconUrl": {
					"description": "Icon that appears on a page tab if there are no unsaved changes. If 'undefined', default icon will appear.",
					"type": "string"
				},
				"isLocked": {
					"description": "True if the page is locked.",
					"type": "boolean"
				},
				"isReadOnly": {
					"description": "True if the page is read only. In this state, the page is locked and cannot be unlocked.",
					"type": "boolean"
				},
				"layout": {
					"$ref": "#/definitions/PageLayout",
					"description": "The layout of the page."
				},
				"pageId": {
					"description": "The unique ID of the page.",
					"type": "string"
				},
				"panels": {
					"description": "Used to configure fixed views on the edges of the browser window. Only one panel per side is supported.",
					"items": {
						"$ref": "#/definitions/PanelConfig"
					},
					"type": "array"
				},
				"title": {
					"description": "A UI friendly title for the page.",
					"type": "string"
				},
				"tooltip": {
					"description": "A optional UI friendly tooltip for the page.",
					"type": "string"
				},
				"unsavedIconUrl": {
					"description": "Icon that appears on a page tab if there are unsaved changes (dirty state). If 'undefined', default icon will appear.",
					"type": "string"
				}
			},
			"required": ["layout", "pageId", "title"],
			"type": "object"
		},
		"PageLayout": {
			"additionalProperties": false,
			"properties": {
				"content": {
					"$ref": "#/definitions/LayoutContent",
					"description": "Content of the layout. There can only be one top-level LayoutItem in the content array.\nWe do not recommend trying to build Layouts or LayoutItems by hand and instead use calls such as {@link Platform#getSnapshot getSnapshot}."
				},
				"dimensions": {
					"additionalProperties": false,
					"properties": {
						"borderWidth": {
							"type": "number"
						},
						"headerHeight": {
							"type": "number"
						},
						"minItemHeight": {
							"type": "number"
						},
						"minItemWidth": {
							"type": "number"
						}
					},
					"type": "object"
				},
				"layoutDetails": {
					"$ref": "#/definitions/PageLayoutDetails"
				},
				"settings": {
					"additionalProperties": false,
					"description": "Represents a potential ways to customize behavior of your Layout",
					"properties": {
						"constrainDragToContainer": {
							"type": "boolean"
						},
						"constrainDragToHeaders": {
							"type": "boolean"
						},
						"hasHeaders": {
							"type": "boolean"
						},
						"popoutWholeStack": {
							"type": "boolean"
						},
						"preventDragIn": {
							"type": "boolean"
						},
						"preventDragOut": {
							"type": "boolean"
						},
						"preventSplitterResize": {
							"type": "boolean"
						},
						"reorderEnabled": {
							"type": "boolean"
						},
						"showCloseIcon": {
							"type": "boolean"
						},
						"showMaximiseIcon": {
							"type": "boolean"
						},
						"showPopoutIcon": {
							"type": "boolean"
						}
					},
					"type": "object"
				}
			},
			"type": "object"
		},
		"PageLayoutDetails": {
			"additionalProperties": false,
			"properties": {
				"machineId": {
					"description": "The id of the machine that created the page.",
					"type": "string"
				},
				"machineName": {
					"description": "The name of the machine that created the page.",
					"type": "string"
				}
			},
			"required": ["machineId"],
			"type": "object"
		},
		"PageTabContextMenuOptionType": {
			"description": "Types of page tab context menu options, including pre-defined ones.\nUser-defined context menu items should use the value `Custom`",
			"enum": [
				"Close",
				"Duplicate",
				"Rename",
				"Save",
				"Save As",
				"Delete Page",
				"SaveWorkspaceAs",
				"Refresh",
				"Close others",
				"Delete",
				"Custom"
			],
			"type": "string"
		},
		"PanelConfig": {
			"anyOf": [
				{
					"additionalProperties": false,
					"properties": {
						"height": {
							"description": "Size of the top/bottom panel, formatted as CSS property value with units. E.g. \"0px\", \"10%\", \"3rem\".",
							"type": "string"
						},
						"position": {
							"description": "Position of the panel in the page.",
							"enum": ["Bottom", "Top"],
							"type": "string"
						},
						"viewOptions": {
							"$ref": "#/definitions/Omit",
							"description": "The options with which to initialize the panel view."
						}
					},
					"required": ["height", "position", "viewOptions"],
					"type": "object"
				},
				{
					"additionalProperties": false,
					"properties": {
						"extendToBottom": {
							"description": "When true, the left/right panel extends all the way to the bottom of the window,\nthus taking priority over the bottom panel.",
							"type": "boolean"
						},
						"extendToTop": {
							"description": "When true, the left/right panel extends all the way to the top of the window,\nthus taking priority over the top panel.",
							"type": "boolean"
						},
						"position": {
							"description": "Position of the panel in the page.",
							"enum": ["Left", "Right"],
							"type": "string"
						},
						"viewOptions": {
							"$ref": "#/definitions/Omit",
							"description": "The options with which to initialize the panel view."
						},
						"width": {
							"description": "Size of the left/right panel, formatted as CSS property value with units. E.g. \"0px\", \"10%\", \"3rem\".",
							"type": "string"
						}
					},
					"required": ["position", "viewOptions", "width"],
					"type": "object"
				}
			],
			"description": "Configuration of an individual fixed view panel\n\nExample:\n```ts\n{\n   position: PanelPosition.Left,\n   width: '140px',\n   viewOptions: { url: 'https://example.com'}\n}\n```"
		},
		"Partial": {
			"$ref": "#/definitions/__type"
		},
		"Partial_1": {
			"$ref": "#/definitions/__type_2"
		},
		"Partial_10": {
			"$ref": "#/definitions/__type_27"
		},
		"Partial_11": {
			"$ref": "#/definitions/__type_41"
		},
		"Partial_12": {
			"$ref": "#/definitions/__type_48"
		},
		"Partial_13": {
			"$ref": "#/definitions/__type_51"
		},
		"Partial_14": {
			"$ref": "#/definitions/__type_52"
		},
		"Partial_15": {
			"$ref": "#/definitions/__type_53"
		},
		"Partial_16": {
			"$ref": "#/definitions/__type_54"
		},
		"Partial_17": {
			"$ref": "#/definitions/__type_59"
		},
		"Partial_2": {
			"$ref": "#/definitions/__type_6"
		},
		"Partial_3": {
			"$ref": "#/definitions/__type_10"
		},
		"Partial_4": {
			"$ref": "#/definitions/__type_14"
		},
		"Partial_5": {
			"$ref": "#/definitions/__type_17"
		},
		"Partial_6": {
			"$ref": "#/definitions/__type_21"
		},
		"Partial_7": {
			"$ref": "#/definitions/__type_22"
		},
		"Partial_8": {
			"$ref": "#/definitions/__type_23"
		},
		"Partial_9": {
			"$ref": "#/definitions/__type_26"
		},
		"PerDomainSettings": {
			"$ref": "#/definitions/__type_64"
		},
		"Permissions_2": {
			"$ref": "#/definitions/__type_67"
		},
		"Pick": {
			"$ref": "#/definitions/__type_33"
		},
		"PlatformApp": {
			"additionalProperties": false,
			"description": "Definition for application with extended properties.",
			"properties": {
				"appId": {
					"description": "Unique identifier for an application.",
					"type": "string"
				},
				"autostart": {
					"description": "Does the application wish to be automatically started when the platform\nis initialized. Default behavior is false",
					"type": "boolean"
				},
				"contactEmail": {
					"type": "string"
				},
				"customConfig": {
					"additionalProperties": {},
					"description": "An optional set of name value pairs that can be used to deliver custom\ndata from an App Directory to a launcher.",
					"type": "object"
				},
				"description": {
					"description": "UI friendly description for an application.",
					"type": "string"
				},
				"icons": {
					"description": "A list of icons that can be rendered in UI for this application.",
					"items": {
						"$ref": "#/definitions/Image"
					},
					"type": "array"
				},
				"images": {
					"description": "A list of optional images that highlight application functionality.",
					"items": {
						"$ref": "#/definitions/Image"
					},
					"type": "array"
				},
				"instanceMode": {
					"description": "This only applies to web views/windows. Default is multi instance. Should\nwe aim to only launch one instance of this application and only show the\napp even if the intent resolver ui supports instances of apps. If multi\nshould we support multiple instances and let the user decide whether to\nlaunch a new instance or pick an existing one from the intent picker? If\nnew it means the intent picker will not show the option to pick an\ninstance because the app owner wants a new instance every time. And if an\nintent is raised and just the id of the app is specified it will always\nlaunch a new instance",
					"enum": ["multi", "new", "single"],
					"type": "string"
				},
				"intents": {
					"items": {
						"$ref": "#/definitions/AppIntent"
					},
					"type": "array"
				},
				"interop": {
					"$ref": "#/definitions/PlatformAppInterop",
					"description": "Metadata that describes how the application uses FDC3/Interop APIs. This\nmetadata serves multiple purposes:\n- It supports intent resolution by an OpenFin Platform/ interop agent, by\ndeclaring what intents an app listens for.\n- It may be used, for example in an app catalog UI, to find apps that\n'interoperate with' other apps.\n- It provides a standard location to document how the app interacts with\nuser channels, app channels, and intents, for use by other app\ndevelopers and desktop assemblers."
				},
				"launchPreference": {
					"$ref": "#/definitions/LaunchPreference",
					"description": "When launching this defined application are there additional preferences the platform\nshould consider?"
				},
				"manifest": {
					"anyOf": [
						{
							"$ref": "#/definitions/Partial_10"
						},
						{
							"$ref": "#/definitions/Partial_2"
						},
						{
							"$ref": "#/definitions/Partial_11"
						},
						{
							"$ref": "#/definitions/Partial_12"
						},
						{
							"$ref": "#/definitions/Partial_13"
						},
						{
							"type": "string"
						}
					],
					"description": "The different types of content that can be contained in the manifest."
				},
				"manifestType": {
					"description": "Describes the type of manifest resolved by the `manifest` field.\nLaunch mechanics are determined by the manifest type.",
					"type": "string"
				},
				"moreInfo": {
					"description": "Optional URL that provides more information about the application",
					"type": "string"
				},
				"name": {
					"description": "Name is provided for support for fdc3 mappings if not provided then appId\nis used as name. Internally we use appId",
					"type": "string"
				},
				"primaryButton": {
					"$ref": "#/definitions/StoreButtonConfig",
					"description": "Primary button configuration."
				},
				"private": {
					"description": "This indicates that an entry in the directory is something that shouldn't\nbe displayed in a UI (e.g. store, dock, home) but can be launched via an\nAPI (from an fdc3, interop api, function or intent picker (as this UI was\ndriven by an API))",
					"type": "boolean"
				},
				"publisher": {
					"type": "string"
				},
				"secondaryButtons": {
					"description": "Array of secondary button configurations.",
					"items": {
						"$ref": "#/definitions/StoreButtonConfig"
					},
					"type": "array"
				},
				"supportEmail": {
					"type": "string"
				},
				"tags": {
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"title": {
					"description": "A UI friendly title for the application.",
					"type": "string"
				},
				"tooltip": {
					"description": "Optional tooltip description e.g. for a launcher or dock component",
					"type": "string"
				},
				"version": {
					"type": "string"
				}
			},
			"required": ["appId", "icons", "manifest", "publisher", "title"],
			"type": "object"
		},
		"PlatformAppInterop": {
			"$ref": "#/definitions/AppInterop",
			"description": "Application interop."
		},
		"PlatformCustomTheme": {
			"anyOf": [
				{
					"$ref": "#/definitions/PlatformCustomThemeOptions",
					"description": "Platform custom theme with options using extended types."
				},
				{
					"$ref": "#/definitions/PlatformCustomThemeOptionsWithScheme",
					"description": "Platform custom theme with options and scheme using extended types."
				}
			],
			"description": "Platform custom theme either with or without options."
		},
		"PlatformCustomThemeOptions": {
			"additionalProperties": false,
			"description": "Platform custom theme with options using extended types.",
			"properties": {
				"default": {
					"description": "If you are specifying a single palette in your theme and it is a light palette then you can indicate that by\nspecifying the default of light (otherwise we will assume it is dark) If you specify palettes and have a light\nand a dark palette then this setting specifies a default preference (it defaults to picking the dark palette if a\ndefault is not specified)",
					"enum": ["dark", "light"],
					"type": "string"
				},
				"iconFolder": {
					"description": "If there is a shared folder across themes that have light and dark icons you can specify a folder name to use\ninstead of the theme id (or label if there is no id)",
					"type": "string"
				},
				"id": {
					"description": "An id to help identify this theme as labels can change over time and are used for display",
					"type": "string"
				},
				"label": {
					"type": "string"
				},
				"logoUrl": {
					"type": "string"
				},
				"notificationIndicatorColors": {
					"$ref": "#/definitions/Record_1",
					"description": "NOTE: Only used in Notifications\n\nUsed for providing color overrides of notification indicators or defining custom colors that clients could target."
				},
				"palette": {
					"$ref": "#/definitions/CustomPaletteSet"
				}
			},
			"required": ["id", "label", "palette"],
			"type": "object"
		},
		"PlatformCustomThemeOptionsWithScheme": {
			"additionalProperties": false,
			"description": "Platform custom theme with options and scheme using extended types.",
			"properties": {
				"default": {
					"description": "If you are specifying a single palette in your theme and it is a light palette then you can indicate that by\nspecifying the default of light (otherwise we will assume it is dark) If you specify palettes and have a light\nand a dark palette then this setting specifies a default preference (it defaults to picking the dark palette if a\ndefault is not specified)",
					"enum": ["dark", "light"],
					"type": "string"
				},
				"iconFolder": {
					"description": "If there is a shared folder across themes that have light and dark icons you can specify a folder name to use\ninstead of the theme id (or label if there is no id)",
					"type": "string"
				},
				"id": {
					"description": "An id to help identify this theme as labels can change over time and are used for display",
					"type": "string"
				},
				"label": {
					"type": "string"
				},
				"logoUrl": {
					"type": "string"
				},
				"notificationIndicatorColors": {
					"$ref": "#/definitions/NotificationIndicatorColorsWithScheme",
					"description": "NOTE: Only used in Notifications\n\nUsed for providing color overrides of notification indicators or defining custom colors that clients could target."
				},
				"palettes": {
					"additionalProperties": false,
					"description": "The palette for this theme.\n\nWhen a user selects a color scheme, the palette will be updated to match the selected scheme.\n\nIf `system` is selected, the palette will be updated to match the user's system color scheme.",
					"properties": {
						"dark": {
							"$ref": "#/definitions/CustomPaletteSet"
						},
						"light": {
							"$ref": "#/definitions/CustomPaletteSet"
						}
					},
					"required": ["dark", "light"],
					"type": "object"
				}
			},
			"required": ["id", "label", "palettes"],
			"type": "object"
		},
		"PlatformCustomThemes": {
			"$ref": "#/definitions/Array_2"
		},
		"PlatformInteropBrokerOptions": {
			"additionalProperties": false,
			"description": "Options for the platform interop broker.",
			"properties": {
				"contextOptions": {
					"$ref": "#/definitions/ContextOptions",
					"description": "Options for when fdc3.broadcast or fin.me.interop.setContext is called."
				},
				"intentOptions": {
					"$ref": "#/definitions/IntentOptions",
					"description": "Options related to the way this platform supports intents"
				},
				"intentResolver": {
					"$ref": "#/definitions/IntentResolverOptions",
					"description": "Intent Resolver configuration if you wish to support intents. It needs to support the functions required by the\nplatform"
				},
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				},
				"openOptions": {
					"$ref": "#/definitions/OpenOptions",
					"description": "When fdc3.open is used what settings should be applied?"
				},
				"unregisteredApp": {
					"$ref": "#/definitions/PlatformApp",
					"description": "If an unregistered app is included here then it indicates you wish to support selecting views/windows that are\nnot linked to an app from an intent picker that supports instances. The intents and contexts in this app specify\nwhich you support for unregistered instances. Do not specify a manifest or manifestType for this entry (we don't\nlaunch unregistered apps so there is no need for a manifest as it is existing instances and we specify a custom\nmanifestType for consideration when we are bringing an unregistered web app instance into focus)."
				}
			},
			"type": "object"
		},
		"PlatformOptions": {
			"additionalProperties": false,
			"description": "The options object required by {@link Platform.PlatformModule#start Platform.start}\nAny {@link ApplicationOptionsApplication option} is also a valid platform option",
			"properties": {
				"_internalWorkspaceData": {},
				"accelerator": {
					"$ref": "#/definitions/Partial_4",
					"description": "Enable keyboard shortcuts for devtools, zoom, reload, and reload ignoring cache."
				},
				"allowLaunchIntoPlatform": {
					"type": "boolean"
				},
				"alwaysOnTop": {
					"type": "boolean"
				},
				"api": {
					"$ref": "#/definitions/Api",
					"description": "Configurations for API injection."
				},
				"apiDiagnostics": {
					"type": "boolean"
				},
				"appLogsTimezone": {
					"$ref": "#/definitions/TimeZones",
					"description": "Set the timezone for the app logs. When setting this value the timestamp will be in ISO 8601 format. By default, if no value is set, it will show the local time in this format: 'y-MM-dd HH:mm:ss.SSS'"
				},
				"aspectRatio": {
					"type": "number"
				},
				"autoShow": {
					"description": "Automatically show the window when it is created.",
					"type": "boolean"
				},
				"autoplayPolicy": {
					"$ref": "#/definitions/AutoplayPolicyOptions",
					"description": "Autoplay policy to apply to content in the window, can be\n`no-user-gesture-required`, `user-gesture-required`,\n`document-user-activation-required`. Defaults to `no-user-gesture-required`."
				},
				"backgroundColor": {
					"description": "The window’s _backfill_ color as a hexadecimal value. Not to be confused with the content background color\n(`document.body.style.backgroundColor`),\nthis color briefly fills a window’s (a) content area before its content is loaded as well as (b) newly exposed\nareas when growing a window. Setting\nthis value to the anticipated content background color can help improve user experience.\nDefault is white.",
					"type": "string"
				},
				"commands": {
					"description": "Configuration for keyboard commands.\nFor details and usage, see {@link https://developers.openfin.co/docs/platform-api#section-5-3-using-keyboard-commands Using Keyboard Commands}.",
					"items": {
						"$ref": "#/definitions/ShortcutOverride"
					},
					"type": "array"
				},
				"contentNavigation": {
					"$ref": "#/definitions/ContentNavigation",
					"description": "Restrict navigation to URLs that match an allowed pattern.\nIn the lack of an allowlist, navigation to URLs that match a denied pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contextMenu": {
					"type": "boolean"
				},
				"cornerRounding": {
					"$ref": "#/definitions/Partial_3",
					"description": "Defines and applies rounded corners for a frameless window. **NOTE:** On macOS corner is not ellipse but circle rounded by the\n average of _height_ and _width_."
				},
				"customData": {
					"description": "A field that the user can attach serializable data to be ferried around with the window options.\n_When omitted, _inherits_ from the parent application._"
				},
				"customRequestHeaders": {
					"description": "Custom headers for requests sent by the window.",
					"items": {
						"additionalProperties": false,
						"description": "Custom headers for requests sent by the window.",
						"properties": {
							"headers": {
								"description": "Headers for requests sent by window; {key: value} results\nin a header of `key=value`.",
								"items": {
									"additionalProperties": {
										"type": "string"
									},
									"description": "Object representing headers and their values, where the\nobject key is the name of header and value key is the value of the header",
									"type": "object"
								},
								"type": "array"
							},
							"urlPatterns": {
								"description": "The URL patterns for which the headers will be applied.",
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": ["headers", "urlPatterns"],
						"type": "object"
					},
					"type": "array"
				},
				"defaultCentered": {
					"description": "Centers the window in the primary monitor. This option overrides `defaultLeft` and `defaultTop`. When `saveWindowState` is `true`,\nthis value will be ignored for subsequent launches in favor of the cached value.\n\n**NOTE:** On macOS _defaultCenter_ is somewhat above center vertically.",
					"type": "boolean"
				},
				"defaultDomainSettings": {
					"$ref": "#/definitions/DefaultDomainSettings"
				},
				"defaultHeight": {
					"type": "number"
				},
				"defaultLeft": {
					"type": "number"
				},
				"defaultTop": {
					"type": "number"
				},
				"defaultViewOptions": {
					"$ref": "#/definitions/Partial_10",
					"description": "**Platforms Only.** Default view options apply to all platform views."
				},
				"defaultWidth": {
					"type": "number"
				},
				"defaultWindowOptions": {
					"$ref": "#/definitions/Partial_17",
					"description": "**Platforms Only.** Default window options apply to all platform windows."
				},
				"disableDefaultCommands": {
					"type": "boolean"
				},
				"disableIabSecureLogging": {
					"type": "boolean"
				},
				"domainSettings": {
					"$ref": "#/definitions/DomainSettings",
					"description": "Define the {@link https://developers.openfin.co/of-docs/docs/file-download#manifest-properties-for-file-downloads file download rules} and domain-based api injection rules."
				},
				"enableBeforeUnload": {
					"type": "boolean"
				},
				"enableJumpList": {
					"type": "boolean"
				},
				"frame": {
					"type": "boolean"
				},
				"hideOnClose": {
					"type": "boolean"
				},
				"icon": {
					"description": "A URL for the icon to be shown in the window title bar and the taskbar.\nWhen omitted, inherits from the parent application.\n\nNote: Window OS caches taskbar icons, therefore an icon change might only be visible after the cache is removed or the uuid is changed.",
					"type": "string"
				},
				"ignoreSavedWindowState": {
					"description": "Ignores the cached state of the window.\nDefaults the opposite value of `saveWindowState` to maintain backwards compatibility.",
					"type": "boolean"
				},
				"interopBrokerConfiguration": {
					"$ref": "#/definitions/InteropBrokerOptions",
					"description": "Configuration for interop broker."
				},
				"isPlatformController": {
					"type": "boolean"
				},
				"loadErrorMessage": {
					"type": "string"
				},
				"mainWindowOptions": {
					"$ref": "#/definitions/WindowCreationOptions",
					"description": "The options of the main window of the application."
				},
				"maxHeight": {
					"type": "number"
				},
				"maxViewPoolSize": {
					"type": "number"
				},
				"maxWidth": {
					"type": "number"
				},
				"maximizable": {
					"type": "boolean"
				},
				"minHeight": {
					"type": "number"
				},
				"minWidth": {
					"type": "number"
				},
				"minimizable": {
					"type": "boolean"
				},
				"name": {
					"type": "string"
				},
				"nonPersistent": {
					"type": "boolean"
				},
				"opacity": {
					"type": "number"
				},
				"permissions": {
					"$ref": "#/definitions/Partial_6",
					"description": "The permissions for secured APIs."
				},
				"plugins": {
					"type": "boolean"
				},
				"preloadScripts": {
					"description": "Scripts that run before page load.  When omitted, inherits from the parent application.",
					"items": {
						"additionalProperties": false,
						"description": "A script that is run before page load.",
						"properties": {
							"mandatory": {
								"type": "boolean"
							},
							"state": {
								"description": "Preload script execution state.",
								"enum": ["failed", "load-failed", "load-started", "load-succeeded", "succeeded"],
								"type": "string"
							},
							"url": {
								"description": "The URL from which the script was loaded.",
								"type": "string"
							}
						},
						"required": ["url"],
						"type": "object"
					},
					"type": "array"
				},
				"preventQuitOnLastWindowClosed": {
					"type": "boolean"
				},
				"providerUrl": {
					"description": "The provider url.",
					"type": "string"
				},
				"resizable": {
					"type": "boolean"
				},
				"resizeRegion": {
					"$ref": "#/definitions/ResizeRegion",
					"description": "Defines a region in pixels that will respond to user mouse interaction for resizing a frameless window."
				},
				"saveWindowState": {
					"type": "boolean"
				},
				"shadow": {
					"type": "boolean"
				},
				"showTaskbarIcon": {
					"type": "boolean"
				},
				"smallWindow": {
					"type": "boolean"
				},
				"snapshot": {
					"$ref": "#/definitions/Snapshot",
					"description": "**Platforms Only.** The snapshot to be applied."
				},
				"spellCheck": {
					"type": "boolean"
				},
				"state": {
					"$ref": "#/definitions/WindowState"
				},
				"taskbarIconGroup": {
					"description": "Specify a taskbar group for the window.\n_If omitted, defaults to app's uuid (`fin.Application.getCurrentSync().identity.uuid`)._",
					"type": "string"
				},
				"url": {
					"type": "string"
				},
				"uuid": {
					"type": "string"
				},
				"viewProcessAffinityStrategy": {
					"$ref": "#/definitions/ProcessAffinityStrategy",
					"description": "Strategy to assign views to process affinity by domain.\n* `same` - The views in the same domain will have same renderer processes.\n* `different` - The views in the same domain will have their own renderer processes."
				},
				"waitForPageLoad": {
					"type": "boolean"
				},
				"webSecurity": {
					"type": "boolean"
				}
			},
			"required": ["name", "uuid"],
			"type": "object"
		},
		"PlatformProviderOptions": {
			"additionalProperties": false,
			"description": "Platform provider options.",
			"properties": {
				"disableStorageMapping": {
					"description": "When storing page/workspace data using endpoints disable the mapping which reduces the payload size.",
					"type": "boolean"
				},
				"initUrl": {
					"description": "This is optional and only needed if you are using shell mode where you wish to load a small module with just auth\nlogic first followed by a module with the rest of the platform core. Specify the entry point here. We do generate\nthe provider bundle and provide an example in our docs.",
					"type": "string"
				},
				"intentPicker": {
					"$ref": "#/definitions/IntentResolverOptions",
					"description": "Intent Picker is being removed in a future version. Please use interop.intentResolver for the resolver/picker\nsettings"
				},
				"interop": {
					"$ref": "#/definitions/PlatformInteropBrokerOptions",
					"description": "interop settings related to this platform"
				},
				"language": {
					"additionalProperties": false,
					"description": "The language settings for the platform",
					"properties": {
						"initialLanguage": {
							"description": "The initial language to use. Built in browser support for en-US (default), ja-JP, zh-CN, zh-Hant, ko-KR, ru-RU, de-DE"
						}
					},
					"required": ["initialLanguage"],
					"type": "object"
				},
				"rootUrl": {
					"description": "What is the root url of you platform e.g. https://mydomain.com",
					"type": "string"
				}
			},
			"required": ["rootUrl"],
			"type": "object"
		},
		"Point": {
			"$ref": "#/definitions/__type_43"
		},
		"PopupMenuStyles": {
			"description": "The styles that can be used to display the popup menus.",
			"enum": ["custom", "native", "platform"],
			"type": "string"
		},
		"PreDefinedButtonConfig": {
			"additionalProperties": false,
			"description": "Default Browser Button types",
			"properties": {
				"disabled": {
					"type": "boolean"
				},
				"iconProps": {
					"$ref": "#/definitions/unknown"
				},
				"iconUrl": {
					"description": "icon URL for icon image",
					"type": "string"
				},
				"parentHover": {
					"type": "boolean"
				},
				"tooltip": {
					"description": "Button name text when hovered over",
					"type": "string"
				},
				"type": {
					"$ref": "#/definitions/Exclude",
					"description": "Type of default browser button"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"PrebuiltContextMenuItem": {
			"description": "Context menu item with an implementation provided by OpenFin.",
			"enum": [
				"copy",
				"copyImage",
				"cut",
				"inspect",
				"navigateBack",
				"navigateForward",
				"paste",
				"print",
				"redo",
				"reload",
				"selectAll",
				"separator",
				"spellCheck",
				"undo"
			],
			"type": "string"
		},
		"Preference.T": {
			"description": "A list of Web related constraints",
			"enum": ["url-any", "url-domain", "url-none", "url-page"],
			"type": "string"
		},
		"ProcessAffinityStrategy": {
			"description": "Strategy to assign views to process affinity by domain.\n\n`same`: views in the same domain will have the same process affinity.<br>\n`different`: views in the same domain will have different process affinities.",
			"enum": ["different", "same"],
			"type": "string"
		},
		"RGB": {
			"$ref": "#/definitions/__type_7"
		},
		"Record": {
			"$ref": "#/definitions/__type_20"
		},
		"Record_1": {
			"$ref": "#/definitions/__type_55"
		},
		"RectangleByEdgePositions": {
			"$ref": "#/definitions/__type_45"
		},
		"ResizeRegion": {
			"$ref": "#/definitions/__type_11"
		},
		"RuleMatchOptions": {
			"$ref": "#/definitions/__type_16"
		},
		"ScoreOrder": {
			"description": "The order to sort scored search results in.",
			"enum": ["ascending", "descending"],
			"type": "string"
		},
		"ScoreOrder_1": {
			"description": "The order to sort scored search results in.",
			"enum": ["ascending", "descending"],
			"type": "string"
		},
		"ShareConfirmationType": {
			"description": "Type of share confirmation.",
			"enum": ["modal", "none", "notification"],
			"type": "string"
		},
		"ShareProviderOptions": {
			"additionalProperties": false,
			"description": "A list of modules that provide sharing.",
			"properties": {
				"confirmationMode": {
					"$ref": "#/definitions/ShareConfirmationType",
					"description": "The display mode to use when displaying a confirmation."
				},
				"enabled": {
					"description": "Is sharing enabled, defaults to true.",
					"type": "boolean"
				},
				"modules": {
					"description": "The list of modules.",
					"items": {
						"$ref": "#/definitions/ModuleDefinition<unknown>"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"ShortcutOverride": {
			"additionalProperties": false,
			"properties": {
				"command": {
					"type": "string"
				},
				"keys": {
					"description": "The key combination of the hotkey, i.e. \"Ctrl+T\".",
					"type": "string"
				},
				"preventDefault": {
					"type": "boolean"
				}
			},
			"required": ["command", "keys"],
			"type": "object"
		},
		"ShowHideTabsConfig": {
			"$ref": "#/definitions/__type_31"
		},
		"ShowViewOnWindowResizeOptions": {
			"additionalProperties": false,
			"description": "_Platform Windows Only_. Enables views to be shown when a Platform Window is being resized by the user.",
			"properties": {
				"enabled": {
					"type": "boolean"
				},
				"paintIntervalMs": {
					"type": "number"
				}
			},
			"type": "object"
		},
		"SnapLaunchOptions": {
			"additionalProperties": false,
			"description": "Additional options that apply to the app when used in a snap context",
			"properties": {
				"strategy": {
					"$ref": "#/definitions/LaunchStrategy",
					"description": "The strategy for launching and locating the application."
				}
			},
			"type": "object"
		},
		"SnapProviderOptions": {
			"additionalProperties": false,
			"description": "The options for the snap provider.",
			"properties": {
				"enabled": {
					"description": "Is snap enabled, defaults to false.",
					"type": "boolean"
				},
				"id": {
					"description": "The id to use for launching the server.",
					"type": "string"
				},
				"serverAssetInfo": {
					"$ref": "#/definitions/AppAssetInfo",
					"description": "The asset for the Snap server."
				},
				"showDebugWindow": {
					"description": "Show the snap debug window.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"Snapshot": {
			"$ref": "#/definitions/__type_58"
		},
		"SnapshotSourceConnection": {
			"additionalProperties": false,
			"description": "Specific type for a snapshot source connection.",
			"properties": {
				"type": {
					"const": "snapshotSource",
					"description": "The snapshotSource connection type allows connections to be accepted as a snapshot source",
					"type": "string"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"SplashScreenProviderOptions": {
			"additionalProperties": false,
			"description": "The manifest settings for splash screen.",
			"properties": {
				"backgroundColor": {
					"description": "The background color, defaults to theme background.",
					"type": "string"
				},
				"borderColor": {
					"description": "The border color, defaults to theme border.",
					"type": "string"
				},
				"disabled": {
					"description": "If the disabled flag is set the splash screen will not be shown.",
					"type": "boolean"
				},
				"height": {
					"description": "The height for the splash screen, defaults to 130.",
					"type": "number"
				},
				"icon": {
					"description": "This defaults to manifest.platform.icon if not provided.",
					"type": "string"
				},
				"taskbarIcon": {
					"description": "The taskbar icon. Falls back to icon if not provided.",
					"type": "string"
				},
				"textColor": {
					"description": "The text color, defaults to theme text.",
					"type": "string"
				},
				"title": {
					"description": "This defaults to manifest.shortcut.name if not provided.",
					"type": "string"
				},
				"url": {
					"description": "This url to provide a custom html file to load.",
					"type": "string"
				},
				"width": {
					"description": "The width for the splash screen, defaults to 400.",
					"type": "number"
				}
			},
			"type": "object"
		},
		"StoreButtonConfig": {
			"additionalProperties": false,
			"description": "Store custom button configuration",
			"properties": {
				"action": {
					"$ref": "#/definitions/CustomActionSpecifier_1",
					"description": "Custom action once the button is clicked"
				},
				"disabled": {
					"description": "Disable custom button true or false",
					"type": "boolean"
				},
				"parentHover": {
					"type": "boolean"
				},
				"title": {
					"type": "string"
				}
			},
			"required": ["action", "title"],
			"type": "object"
		},
		"StorefrontFooter": {
			"additionalProperties": false,
			"properties": {
				"links": {
					"description": "A set of links to display on Storefront's footer.",
					"items": [
						{
							"$ref": "#/definitions/StorefrontLink"
						},
						{
							"$ref": "#/definitions/StorefrontLink"
						},
						{
							"$ref": "#/definitions/StorefrontLink"
						}
					],
					"maxItems": 3,
					"minItems": 0,
					"type": "array"
				},
				"logo": {
					"$ref": "#/definitions/Image",
					"description": "A logo to be displayed on the Storefront's footer."
				},
				"text": {
					"type": "string"
				}
			},
			"required": ["links", "logo", "text"],
			"type": "object"
		},
		"StorefrontLink": {
			"additionalProperties": false,
			"description": "Represents a link to be rendered inside Storefront.",
			"properties": {
				"title": {
					"description": "A UI friendly title to render the link as.",
					"type": "string"
				},
				"url": {
					"description": "When the rendered `title` text is clicked, the user will be navigated to this URL.",
					"type": "string"
				}
			},
			"required": ["title", "url"],
			"type": "object"
		},
		"StorefrontProviderOptions": {
			"additionalProperties": false,
			"description": "Store Provider Options",
			"properties": {
				"favoritesEnabled": {
					"description": "Enable favorites, defaults to true.",
					"type": "boolean"
				},
				"footer": {
					"$ref": "#/definitions/StorefrontFooter",
					"description": "The configuration of the footer for the store"
				},
				"icon": {
					"description": "The icon to be displayed in the store drop down",
					"type": "string"
				},
				"id": {
					"description": "The id you wish to use when you register the store component",
					"type": "string"
				},
				"landingPage": {
					"additionalProperties": false,
					"description": "Configuration for the landing page",
					"properties": {
						"bottomRow": {
							"$ref": "#/definitions/StorefrontSettingsLandingPageRow",
							"description": "The bottom row of the landing page"
						},
						"hero": {
							"additionalProperties": false,
							"description": "Configuration for the hero section of the store if you wish one.",
							"properties": {
								"cta": {
									"$ref": "#/definitions/StorefrontSettingsNavigationItem",
									"description": "Configuration for the Call To Action button of the hero section"
								},
								"description": {
									"description": "The body description of the hero section",
									"type": "string"
								},
								"image": {
									"$ref": "#/definitions/Image",
									"description": "The image to display"
								},
								"title": {
									"description": "The title of the Hero section",
									"type": "string"
								}
							},
							"required": ["cta", "description", "image", "title"],
							"type": "object"
						},
						"middleRow": {
							"additionalProperties": false,
							"description": "The middle row of the landing page",
							"properties": {
								"tags": {
									"description": "The tags to use as a source of apps. The store will take the first x number of apps until the row is full.",
									"items": {
										"type": "string"
									},
									"type": "array"
								},
								"title": {
									"description": "The title for the middle row",
									"type": "string"
								}
							},
							"required": ["tags", "title"],
							"type": "object"
						},
						"topRow": {
							"$ref": "#/definitions/StorefrontSettingsLandingPageRow",
							"description": "Configuration for the top row of the landing page (just below the hero section if it is configured)"
						}
					},
					"required": ["bottomRow", "middleRow", "topRow"],
					"type": "object"
				},
				"navigation": {
					"description": "Navigation entries.",
					"items": {
						"additionalProperties": false,
						"properties": {
							"id": {
								"description": "This should be an idempotent and unique ID (think GUID) that doesn't change for this navigation section\nregardless of how many times it is regenerated (e.g. e.g. more items can be added or the title changed but\nthe ID stays the same). As you navigate around the store this ID is used as a route. So if a user clicks on a\nlink, navigates to a new page and the re-requested navigation section has a different ID then the store will\nnot be able to find a match and it won't be able to render the navigation items.",
								"type": "string"
							},
							"items": {
								"description": "The items to list when the user navigates to that section of the store",
								"items": {
									"$ref": "#/definitions/StorefrontSettingsNavigationItem"
								},
								"type": "array"
							},
							"title": {
								"description": "The title to show in the navigation",
								"type": "string"
							}
						},
						"required": ["id", "items", "title"],
						"type": "object"
					},
					"type": "array"
				},
				"primaryButton": {
					"$ref": "#/definitions/StoreButtonConfig",
					"description": "The action triggered when the primary button is clicked, defaults to launching the app."
				},
				"secondaryButtons": {
					"description": "Secondary buttons added to all store entries.",
					"items": {
						"$ref": "#/definitions/StoreButtonConfig"
					},
					"type": "array"
				},
				"title": {
					"description": "The title for the store which will show up in the store dropdown",
					"type": "string"
				}
			},
			"required": ["footer", "icon", "id", "landingPage", "navigation", "title"],
			"type": "object"
		},
		"StorefrontSettingsLandingPageRow": {
			"additionalProperties": false,
			"description": "Landing page row containing title and items.",
			"properties": {
				"items": {
					"description": "The items in the row.",
					"items": {
						"$ref": "#/definitions/StorefrontSettingsRowNavigationItem"
					},
					"type": "array"
				},
				"title": {
					"description": "The title for the row.",
					"type": "string"
				}
			},
			"required": ["items", "title"],
			"type": "object"
		},
		"StorefrontSettingsNavigationItem": {
			"additionalProperties": false,
			"description": "A navigation item.",
			"properties": {
				"id": {
					"description": "This should be an idempotent and unique ID (think GUID) that doesn't change for this navigation item regardless\nof how many times it is regenerated (e.g. e.g. more items can be added or the title changed but the ID stays the\nsame). As you navigate around the store this ID is used as a route. So if a user clicks on a link, navigates to a\nnew page and the re-requested navigation item has a different ID then the store will not be able to find a match\nand it won't be able to render the navigation item.",
					"type": "string"
				},
				"tags": {
					"description": "The Storefront API has a collection of apps for a navigation item. Tags is an approach for how you can determine\nwhat apps should be included in a navigation item. i.e we filter the apps list by one or more tags and assign\nthose apps to the navigation item.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"title": {
					"description": "The title for the navigation item",
					"type": "string"
				}
			},
			"required": ["tags", "title"],
			"type": "object"
		},
		"StorefrontSettingsRowNavigationItem": {
			"additionalProperties": false,
			"description": "Extends the row navigation item.",
			"properties": {
				"buttonTitle": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"id": {
					"description": "This should be an idempotent and unique ID (think GUID) that doesn't change for this navigation item regardless\nof how many times it is regenerated (e.g. e.g. more items can be added or the title changed but the ID stays the\nsame). As you navigate around the store this ID is used as a route. So if a user clicks on a link, navigates to a\nnew page and the re-requested navigation item has a different ID then the store will not be able to find a match\nand it won't be able to render the navigation item.",
					"type": "string"
				},
				"image": {
					"$ref": "#/definitions/Image"
				},
				"tags": {
					"description": "The Storefront API has a collection of apps for a navigation item. Tags is an approach for how you can determine\nwhat apps should be included in a navigation item. i.e we filter the apps list by one or more tags and assign\nthose apps to the navigation item.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"title": {
					"description": "The title for the navigation item",
					"type": "string"
				},
				"tooltip": {
					"type": "string"
				}
			},
			"required": ["description", "image", "tags", "title"],
			"type": "object"
		},
		"TaskBar": {
			"additionalProperties": false,
			"properties": {
				"edge": {
					"description": "Which edge of a monitor the taskbar is on",
					"type": "string"
				},
				"rect": {
					"$ref": "#/definitions/RectangleByEdgePositions",
					"description": "The taskbar coordinates."
				}
			},
			"required": ["edge", "rect"],
			"type": "object"
		},
		"ThemeProviderOptions": {
			"additionalProperties": false,
			"description": "Platform theme configuration",
			"properties": {
				"cssVarPrefix": {
					"description": "If providing the palette through css variables would you like a specific custom prefix?",
					"type": "string"
				},
				"schemaNames": {
					"additionalProperties": false,
					"description": "If providing a class at the root document for content providers to indicate light/dark would you like to provide\nsomething other than the default.",
					"properties": {
						"dark": {
							"type": "string"
						},
						"light": {
							"type": "string"
						}
					},
					"type": "object"
				},
				"themes": {
					"$ref": "#/definitions/PlatformCustomThemes",
					"description": "The Themes you wish your platform to support"
				}
			},
			"required": ["themes"],
			"type": "object"
		},
		"TimeZones": {
			"enum": ["local", "utc"],
			"type": "string"
		},
		"ToolbarButton": {
			"anyOf": [
				{
					"$ref": "#/definitions/ShowHideTabsConfig",
					"description": "Configuration Object for the show/hide tabs button within the browser toolbar"
				},
				{
					"$ref": "#/definitions/LockUnlockPageConfig",
					"description": "Configuration Object for the page lock/unlock button within the browser toolbar"
				},
				{
					"$ref": "#/definitions/CustomBrowserButtonConfig"
				},
				{
					"$ref": "#/definitions/PreDefinedButtonConfig"
				}
			],
			"description": "Buttons on the left of WindowStateButtonOptions"
		},
		"ToolbarOptions": {
			"additionalProperties": false,
			"properties": {
				"buttons": {
					"items": {
						"$ref": "#/definitions/ToolbarButton"
					},
					"type": "array"
				}
			},
			"required": ["buttons"],
			"type": "object"
		},
		"TrayMenuOptionType.Custom": {
			"const": "Custom",
			"description": "Custom tray menu entry item.",
			"type": "string"
		},
		"TrayProviderOptions": {
			"additionalProperties": false,
			"description": "Tray Provider Options to provide settings for the tray provider",
			"properties": {
				"activateButton": {
					"description": "Should the menu activate on a left click, right click or any, default to any.",
					"enum": ["any", "left", "right"],
					"type": "string"
				},
				"defaultAction": {
					"$ref": "#/definitions/CustomActionSpecifier_1",
					"description": "Default action if no menu entries provided."
				},
				"enabled": {
					"description": "Is the tray option enabled.",
					"type": "boolean"
				},
				"icon": {
					"description": "The icon to display in the tray, if not supplied default to platform icon.",
					"type": "string"
				},
				"menuEntries": {
					"description": "The menu entries to display.",
					"items": {
						"$ref": "#/definitions/MenuEntry<TrayMenuOptionType>"
					},
					"type": "array"
				},
				"popupMenuStyle": {
					"$ref": "#/definitions/PopupMenuStyles",
					"description": "Configured a default for the popup menu style, defaults to platform."
				}
			},
			"type": "object"
		},
		"UnsavedPagePromptStrategy": {
			"description": "The behavior you wish to have when a page is closed and there are unsaved changes.\n- default: Show a modal asking the user if they want to save changes.\n- skip-untitled: Skip the modal if the page is untitled.\n- never: Never show the modal.",
			"enum": ["default", "never", "skip-untitled"],
			"type": "string"
		},
		"UpdatableLaunchPreferenceDefinition": {
			"anyOf": [
				{
					"$ref": "#/definitions/WindowPreference<never>"
				},
				{
					"$ref": "#/definitions/WindowPreferenceUrl"
				},
				{
					"$ref": "#/definitions/ViewPreference<never>"
				},
				{
					"$ref": "#/definitions/ViewPreferenceUrl"
				},
				{
					"$ref": "#/definitions/NativePreference<never>"
				}
			],
			"description": "A type that contains the available updatable launch preferences"
		},
		"VersionInfo": {
			"additionalProperties": false,
			"description": "Information about the version of the platform and it's dependencies",
			"properties": {
				"app": {
					"description": "The version of the the instance of this platform if provided",
					"type": "string"
				},
				"notificationCenter": {
					"description": "The version of the notification center that this platform instance has connected to",
					"type": "string"
				},
				"platformClient": {
					"description": "The version of the code of this platform",
					"type": "string"
				},
				"runtime": {
					"description": "The version of the runtime this platform instance is running against",
					"type": "string"
				},
				"rvm": {
					"description": "The version of the rvm that was used to launch this platform",
					"type": "string"
				},
				"workspace": {
					"description": "The version of the workspace components this platform is currently connected to",
					"type": "string"
				},
				"workspaceClient": {
					"description": "The version of the workspace client code",
					"type": "string"
				},
				"workspacePlatformClient": {
					"description": "The version of the workspace platform client code",
					"type": "string"
				}
			},
			"type": "object"
		},
		"VersionProviderOptions": {
			"additionalProperties": false,
			"description": "Settings related to the configuration of the version provider.",
			"properties": {
				"appVersion": {
					"description": "The version of the the instance of this platform",
					"type": "string"
				},
				"endpointId": {
					"description": "If you specify an endpoint then you are telling the platform to send information to this endpoint. The\ninformation sent will be the VersionRequest object. If you provide minimumVersion and maximumVersion information\nin the settings then the platform will use those to calculate what has failed validation (minimum and/or maximum)\nand pass those onto the endpoint.\n\nThe endpoint then returns an object with status (this returns the version info you sent, the min/max rules and\nwhat has failed. The failures indicate the state of the platform.). If the status indicates that things need to\nbe managed and should not proceed they will have a windowOptions property. This should be launched and that\nwindow will be built to support what should happen next.\n- Should the window tell the user that the setup isn't compatible and offer to shut down the platform?\n- Should it try to close the platform and launch a compatible manifest?\n- Should it notify the user that a newer version of the app is available and that they should restart? On the\ninitial request while the platform is running an invalid status will result in the bootstrapping stopping.",
					"type": "string"
				},
				"maxVersion": {
					"$ref": "#/definitions/MaximumVersion",
					"description": "You can specify if the platform should stop initializing if the version is more than any of the specified maximum\nversions"
				},
				"minVersion": {
					"$ref": "#/definitions/MinimumVersion",
					"description": "You can specify if the platform should stop initializing if the version is less than any of the specified minimum\nversions"
				},
				"versionCheckIntervalInSeconds": {
					"description": "If an endpoint is specified and an interval is specified then you want the platform to call this endpoint on an\ninterval to see if an update of your application is available.",
					"type": "number"
				},
				"versionWindow": {
					"$ref": "#/definitions/Partial_2",
					"description": "This window will be shown if an endpointId is not specified and min and max criteria has been specified and has\nnot been met. This window will be shown to the user and the bootstrapping process will be stopped."
				}
			},
			"type": "object"
		},
		"ViewContentCreationRule": {
			"additionalProperties": false,
			"description": "A rule prescribing content creation in a {@link OpenFin.View}.",
			"properties": {
				"behavior": {
					"const": "view",
					"description": "Behavior to use when opening matched content.",
					"type": "string"
				},
				"data": {
					"description": "custom property"
				},
				"match": {
					"description": "List of [match patterns](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) that indicate the specified\nbehavior should be used",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"options": {
					"$ref": "#/definitions/Partial_10",
					"description": "Options for newly-created view."
				}
			},
			"required": ["behavior", "match"],
			"type": "object"
		},
		"ViewLaunchOptions": {
			"additionalProperties": false,
			"description": "Additional options that apply to a view",
			"properties": {
				"host": {
					"$ref": "#/definitions/HostLaunchOptions",
					"description": "If specified it indicates wish to specify specific host settings for this content."
				},
				"type": {
					"const": "view",
					"description": "View options type",
					"type": "string"
				},
				"updatable": {
					"description": "What can be specified when launching a view. This is an array of named types to reflect the properties you are happy to be specified.\nBy default nothing can be set outside of the app definition when launching the app.",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/ViewPreferenceUrl"
							},
							{
								"$ref": "#/definitions/ViewPreference<never>_1"
							}
						]
					},
					"type": "array"
				},
				"view": {
					"$ref": "#/definitions/Partial_15",
					"description": "The option to override a few settings that are specific to views."
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"ViewPreference<never>": {
			"additionalProperties": false,
			"description": "Which Launch Options are updatable and are there any constraints",
			"properties": {
				"name": {
					"$ref": "#/definitions/ViewPreferenceName",
					"description": "What setting is updatable?"
				}
			},
			"required": ["name"],
			"type": "object"
		},
		"ViewPreference<never>_1": {
			"additionalProperties": false,
			"description": "Which Launch Options are updatable and are there any constraints",
			"properties": {
				"name": {
					"$ref": "#/definitions/ViewPreferenceName",
					"description": "What setting is updatable?"
				}
			},
			"required": ["name"],
			"type": "object"
		},
		"ViewPreferenceName": {
			"description": "The different type of settings that might apply to a view",
			"enum": ["bounds", "centered", "custom-data", "host-options", "interop", "url"],
			"type": "string"
		},
		"ViewPreferenceUrl": {
			"additionalProperties": false,
			"description": "Which Launch Options are updatable and are there any constraints",
			"properties": {
				"constraint": {
					"$ref": "#/definitions/Preference.T",
					"description": "Is there a constraint that the platform can apply?"
				},
				"name": {
					"description": "Is the url updatable?",
					"enum": ["host-options", "url"],
					"type": "string"
				}
			},
			"required": ["name"],
			"type": "object"
		},
		"ViewTabMenuOptionType": {
			"description": "View tab context menu types for {@link WorkspacePlatformProvider.openViewTabContextMenu} override.",
			"enum": [
				"NewView",
				"DuplicateView",
				"OpenWithDefaultBrowser",
				"ReloadTab",
				"CloseTab",
				"AddToChannel",
				"RemoveFromChannel",
				"Back",
				"Forward",
				"Print",
				"PrintAll",
				"PrintScreen",
				"Custom"
			],
			"type": "string"
		},
		"ViewThrottling": {
			"description": "View throttling state.\n\n* `enabled`: Both background throttling and scheduler throttling are true. It's fully throttled.\n* `scheduler-disabled`: background throttling is true, but scheduler throttling is disabled.",
			"enum": ["enabled", "scheduler-disabled"],
			"type": "string"
		},
		"ViewVisibilityOption": {
			"$ref": "#/definitions/__type_25"
		},
		"ViewVisibilityOptions": {
			"$ref": "#/definitions/__type_24"
		},
		"WPSManifest": {
			"additionalProperties": false,
			"description": "A wrapper around the OpenFin manifest that adds custom settings.",
			"properties": {
				"appAssets": {
					"items": {
						"additionalProperties": false,
						"properties": {
							"alias": {
								"type": "string"
							},
							"args": {
								"type": "string"
							},
							"src": {
								"type": "string"
							},
							"target": {
								"type": "string"
							},
							"version": {
								"type": "string"
							}
						},
						"required": ["alias", "src", "version"],
						"type": "object"
					},
					"type": "array"
				},
				"customSettings": {
					"$ref": "#/definitions/CustomSettings",
					"description": "Custom settings for the workspace platform."
				},
				"devtools_port": {
					"type": "number"
				},
				"dialogSettings": {
					"additionalProperties": false,
					"properties": {
						"bgColor": {
							"type": "number"
						},
						"logo": {
							"type": "string"
						},
						"progressBarBgColor": {
							"type": "number"
						},
						"progressBarBorderColor": {
							"type": "number"
						},
						"progressBarFillColor": {
							"type": "number"
						},
						"textColor": {
							"type": "number"
						}
					},
					"type": "object"
				},
				"interopBrokerConfiguration": {
					"$ref": "#/definitions/InteropBrokerOptions"
				},
				"licenseKey": {
					"type": "string"
				},
				"offlineAccess": {
					"type": "boolean"
				},
				"platform": {
					"$ref": "#/definitions/PlatformOptions"
				},
				"proxy": {
					"additionalProperties": false,
					"properties": {
						"proxyAddress": {
							"type": "string"
						},
						"proxyPort": {
							"type": "number"
						},
						"type": {
							"type": "string"
						}
					},
					"required": ["proxyAddress", "proxyPort", "type"],
					"type": "object"
				},
				"runtime": {
					"additionalProperties": false,
					"properties": {
						"arguments": {
							"type": "string"
						},
						"fallbackVersion": {
							"type": "string"
						},
						"forceLatest": {
							"type": "boolean"
						},
						"futureVersion": {
							"type": "string"
						},
						"version": {
							"type": "string"
						}
					},
					"required": ["version"],
					"type": "object"
				},
				"shortcut": {
					"additionalProperties": false,
					"properties": {
						"company": {
							"type": "string"
						},
						"description": {
							"type": "string"
						},
						"force": {
							"type": "boolean"
						},
						"icon": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"startMenuRootFolder": {
							"type": "string"
						},
						"target": {
							"items": {
								"enum": ["automatic-start-up", "desktop", "start-menu"],
								"type": "string"
							},
							"type": "array"
						},
						"uninstall-shortcut": {
							"type": "boolean"
						}
					},
					"required": ["company", "icon", "name"],
					"type": "object"
				},
				"snapshot": {
					"$ref": "#/definitions/Snapshot"
				},
				"splashScreenImage": {
					"type": "string"
				},
				"startup_app": {
					"$ref": "#/definitions/WindowOptions"
				},
				"supportInformation": {
					"additionalProperties": false,
					"properties": {
						"company": {
							"type": "string"
						},
						"email": {
							"type": "string"
						},
						"enableErrorReporting": {
							"type": "boolean"
						},
						"forwardErrorReports": {
							"type": "boolean"
						},
						"product": {
							"type": "string"
						}
					},
					"required": ["company", "email", "product"],
					"type": "object"
				}
			},
			"type": "object"
		},
		"WaitForWindowClassStrategy": {
			"additionalProperties": false,
			"description": "A window launch discovery strategy that looks for a window whose underlying OS class type matches the given regular expression.\nIt will timeout after the given time period if no window is found.",
			"properties": {
				"matchRegex": {
					"description": "A regular expression string to match the window class against",
					"type": "string"
				},
				"timeoutMs": {
					"description": "The timeout period milliseconds after which the window search will be abandoned",
					"type": "number"
				},
				"type": {
					"const": "waitForWindowOfClass",
					"type": "string"
				}
			},
			"required": ["matchRegex", "timeoutMs", "type"],
			"type": "object"
		},
		"WaitForWindowNameStrategy": {
			"additionalProperties": false,
			"description": "A window launch discovery strategy that looks for a window whose caption matches the given regular expression.\nIt will timeout after the given time period if no window is found.",
			"properties": {
				"matchRegex": {
					"description": "A regular expression string to match the window caption against",
					"type": "string"
				},
				"timeoutMs": {
					"description": "The timeout period milliseconds after which the window search will be abandoned",
					"type": "number"
				},
				"type": {
					"const": "waitForWindowOfName",
					"type": "string"
				}
			},
			"required": ["matchRegex", "timeoutMs", "type"],
			"type": "object"
		},
		"WebPermission": {
			"anyOf": [
				{
					"$ref": "#/definitions/OpenExternalPermission"
				},
				{
					"enum": [
						"audio",
						"clipboard-read",
						"clipboard-sanitized-write",
						"fullscreen",
						"geolocation",
						"hid",
						"midiSysex",
						"notifications",
						"openExternal",
						"pointerLock",
						"usb",
						"video"
					],
					"type": "string"
				}
			],
			"description": "Defines the type of requested web APIs permission."
		},
		"WebPreferenceName": {
			"description": "A list of web related settings that can be updated.",
			"enum": ["bounds", "centered", "custom-data", "interop", "url"],
			"type": "string"
		},
		"WindowContentCreationRule": {
			"additionalProperties": false,
			"description": "A rule prescribing content creation in a {@link OpenFin.Window}.",
			"properties": {
				"behavior": {
					"const": "window",
					"description": "Behavior to use when opening matched content.",
					"type": "string"
				},
				"data": {
					"description": "custom property"
				},
				"match": {
					"description": "List of [match patterns](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) that indicate the specified\nbehavior should be used",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"options": {
					"$ref": "#/definitions/Partial_2",
					"description": "Options for newly-created window."
				}
			},
			"required": ["behavior", "match"],
			"type": "object"
		},
		"WindowCreationOptions": {
			"additionalProperties": false,
			"description": "Options required to create a new window with {@link Window._WindowModule.create Window.create}.\n\nNote that `name` is the only required property — albeit the `url` property is usually provided as well\n(defaults to `\"about:blank\"` when omitted).",
			"properties": {
				"name": {
					"type": "string"
				}
			},
			"required": ["name"],
			"type": "object"
		},
		"WindowCreationReason": {
			"enum": [
				"api-call",
				"app-creation",
				"apply-snapshot",
				"create-view-without-target",
				"restore",
				"tearout"
			],
			"type": "string"
		},
		"WindowLaunchOptions": {
			"additionalProperties": false,
			"description": "Additional options that apply to a window",
			"properties": {
				"type": {
					"const": "window",
					"description": "Window options type",
					"type": "string"
				},
				"updatable": {
					"description": "What can be specified when launching a window. This is an array of named types to reflect the properties you are happy to be specified.\nBy default nothing can be set outside of the app definition when launching the app.",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/WindowPreferenceUrl"
							},
							{
								"$ref": "#/definitions/WindowPreference<never>_1"
							}
						]
					},
					"type": "array"
				},
				"window": {
					"$ref": "#/definitions/Partial_16",
					"description": "The option to override a few settings that are specific to windows."
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"WindowOptions": {
			"additionalProperties": false,
			"properties": {
				"_internalWorkspaceData": {},
				"accelerator": {
					"$ref": "#/definitions/Partial_4",
					"description": "Enable keyboard shortcuts for devtools, zoom, reload, and reload ignoring cache."
				},
				"alphaMask": {
					"$ref": "#/definitions/RGB",
					"description": "Turns anything of matching RGB value transparent.\n\nCaveats:\n* runtime key --disable-gpu is required. Note: Unclear behavior on remote Desktop support\n* User cannot click-through transparent regions\n* Not supported on Mac\n* Windows Aero must be enabled\n* Won't make visual sense on Pixel-pushed environments such as Citrix\n* Not supported on rounded corner windows"
				},
				"alwaysOnTop": {
					"type": "boolean"
				},
				"api": {
					"$ref": "#/definitions/Api",
					"description": "Configurations for API injection."
				},
				"applicationIcon": {
					"type": "string"
				},
				"aspectRatio": {
					"type": "number"
				},
				"autoShow": {
					"description": "Automatically show the window when it is created.",
					"type": "boolean"
				},
				"autoplayPolicy": {
					"$ref": "#/definitions/AutoplayPolicyOptions",
					"description": "Autoplay policy to apply to content in the window, can be\n`no-user-gesture-required`, `user-gesture-required`,\n`document-user-activation-required`. Defaults to `no-user-gesture-required`."
				},
				"backgroundColor": {
					"description": "The window’s _backfill_ color as a hexadecimal value. Not to be confused with the content background color\n(`document.body.style.backgroundColor`),\nthis color briefly fills a window’s (a) content area before its content is loaded as well as (b) newly exposed\nareas when growing a window. Setting\nthis value to the anticipated content background color can help improve user experience.\nDefault is white.",
					"type": "string"
				},
				"backgroundThrottling": {
					"type": "boolean"
				},
				"closeOnLastViewRemoved": {
					"type": "boolean"
				},
				"contentCreation": {
					"$ref": "#/definitions/ContentCreationOptions",
					"description": "Configures how new content (e,g, from `window.open` or a link) is opened."
				},
				"contentNavigation": {
					"$ref": "#/definitions/ContentNavigation",
					"description": "Restrict navigation to URLs that match an allowed pattern.\nIn the lack of an allowlist, navigation to URLs that match a denied pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contentRedirect": {
					"$ref": "#/definitions/Partial_5",
					"description": "Restrict redirects to URLs that match an allowed pattern.\nIn the lack of an allowlist, redirects to URLs that match a denied pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contextMenu": {
					"type": "boolean"
				},
				"contextMenuOptions": {
					"$ref": "#/definitions/ContextMenuOptions",
					"description": "Configure the context menu when right-clicking on a window."
				},
				"contextMenuSettings": {
					"$ref": "#/definitions/ContextMenuSettings"
				},
				"cornerRounding": {
					"$ref": "#/definitions/Partial_3",
					"description": "Defines and applies rounded corners for a frameless window. **NOTE:** On macOS corner is not ellipse but circle rounded by the\n average of _height_ and _width_."
				},
				"customContext": {
					"description": "A field that the user can use to attach serializable data that will be saved when {@link Platform#getSnapshot Platform.getSnapshot}\nis called.  If a window in a Platform is trying to update or retrieve its own context, it can use the\n{@link Platform#setWindowContext Platform.setWindowContext} and {@link Platform#getWindowContext Platform.getWindowContext} calls.\n_When omitted, _inherits_ from the parent application._\nAs opposed to customData, this is meant for frequent updates and sharing with other contexts."
				},
				"customData": {
					"description": "A field that the user can attach serializable data to be ferried around with the window options.\n_When omitted, _inherits_ from the parent application._"
				},
				"customRequestHeaders": {
					"description": "Custom headers for requests sent by the window.",
					"items": {
						"additionalProperties": false,
						"description": "Custom headers for requests sent by the window.",
						"properties": {
							"headers": {
								"description": "Headers for requests sent by window; {key: value} results\nin a header of `key=value`.",
								"items": {
									"additionalProperties": {
										"type": "string"
									},
									"description": "Object representing headers and their values, where the\nobject key is the name of header and value key is the value of the header",
									"type": "object"
								},
								"type": "array"
							},
							"urlPatterns": {
								"description": "The URL patterns for which the headers will be applied.",
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": ["headers", "urlPatterns"],
						"type": "object"
					},
					"type": "array"
				},
				"defaultCentered": {
					"description": "Centers the window in the primary monitor. This option overrides `defaultLeft` and `defaultTop`. When `saveWindowState` is `true`,\nthis value will be ignored for subsequent launches in favor of the cached value.\n\n**NOTE:** On macOS _defaultCenter_ is somewhat above center vertically.",
					"type": "boolean"
				},
				"defaultHeight": {
					"type": "number"
				},
				"defaultLeft": {
					"type": "number"
				},
				"defaultTop": {
					"type": "number"
				},
				"defaultWidth": {
					"type": "number"
				},
				"downloadShelf": {
					"$ref": "#/definitions/DownloadShelfOptions",
					"description": "Controls the styling and behavior of the window download shelf."
				},
				"experimental": {},
				"fdc3InteropApi": {
					"type": "string"
				},
				"frame": {
					"type": "boolean"
				},
				"height": {
					"type": "number"
				},
				"hideOnClose": {
					"type": "boolean"
				},
				"hotkeys": {
					"description": "Defines the hotkeys that will be emitted as a `hotkey` event on the window.\nWithin Platform, OpenFin also implements a set of pre-defined actions called\n{@link https://developers.openfin.co/docs/platform-api#section-5-3-using-keyboard-commands keyboard commands}\nthat can be assigned to a specific hotkey in the platform manifest.",
					"items": {
						"additionalProperties": false,
						"description": "A hotkey binding.",
						"properties": {
							"keys": {
								"description": "The key combination of the hotkey, i.e. \"Ctrl+T\".",
								"type": "string"
							},
							"preventDefault": {
								"type": "boolean"
							}
						},
						"required": ["keys"],
						"type": "object"
					},
					"type": "array"
				},
				"icon": {
					"description": "A URL for the icon to be shown in the window title bar and the taskbar.\nWhen omitted, inherits from the parent application.\n\nNote: Window OS caches taskbar icons, therefore an icon change might only be visible after the cache is removed or the uuid is changed.",
					"type": "string"
				},
				"ignoreSavedWindowState": {
					"description": "Ignores the cached state of the window.\nDefaults the opposite value of `saveWindowState` to maintain backwards compatibility.",
					"type": "boolean"
				},
				"includeInSnapshots": {
					"type": "boolean"
				},
				"inheritance": {
					"$ref": "#/definitions/Partial_9",
					"description": "Controls whether an option is inherited from the parent application. The option is set as part of the window options for the parent application in either the {@link Manifest.startup_app} or {@link Manifest.platform} properties in the manifest or in {@link ApplicationOptions.mainWindowOptions} when calling {@link Application.ApplicationModule.start Application.start}. Use { [option]: false } to disable a specific [option]. All inheritable properties will be inherited by default if omitted."
				},
				"interop": {
					"$ref": "#/definitions/InteropConfig"
				},
				"layout": {},
				"layoutSnapshot": {
					"$ref": "#/definitions/LayoutSnapshot"
				},
				"maxHeight": {
					"type": "number"
				},
				"maxWidth": {
					"type": "number"
				},
				"maximizable": {
					"type": "boolean"
				},
				"minHeight": {
					"type": "number"
				},
				"minWidth": {
					"type": "number"
				},
				"minimizable": {
					"type": "boolean"
				},
				"modalParentIdentity": {
					"$ref": "#/definitions/Identity_5",
					"description": "Parent identity of a modal window. It will create a modal child window when this option is set."
				},
				"name": {
					"description": "The name of the window.",
					"type": "string"
				},
				"opacity": {
					"type": "number"
				},
				"permissions": {
					"$ref": "#/definitions/Partial_6",
					"description": "API permissions for code running in the window."
				},
				"preloadScripts": {
					"description": "Scripts that run before page load.  When omitted, inherits from the parent application.",
					"items": {
						"additionalProperties": false,
						"description": "A script that is run before page load.",
						"properties": {
							"mandatory": {
								"type": "boolean"
							},
							"state": {
								"description": "Preload script execution state.",
								"enum": ["failed", "load-failed", "load-started", "load-succeeded", "succeeded"],
								"type": "string"
							},
							"url": {
								"description": "The URL from which the script was loaded.",
								"type": "string"
							}
						},
						"required": ["url"],
						"type": "object"
					},
					"type": "array"
				},
				"processAffinity": {
					"description": "String tag that attempts to group like-tagged renderers together. Will only be used if pages are on the same origin.",
					"type": "string"
				},
				"resizable": {
					"type": "boolean"
				},
				"resizeRegion": {
					"$ref": "#/definitions/ResizeRegion",
					"description": "Defines a region in pixels that will respond to user mouse interaction for resizing a frameless window."
				},
				"saveWindowState": {
					"type": "boolean"
				},
				"shadow": {
					"type": "boolean"
				},
				"showBackgroundImages": {
					"type": "boolean"
				},
				"showTaskbarIcon": {
					"type": "boolean"
				},
				"smallWindow": {
					"type": "boolean"
				},
				"state": {
					"$ref": "#/definitions/WindowState"
				},
				"taskbarIcon": {
					"type": "string"
				},
				"taskbarIconGroup": {
					"description": "Specify a taskbar group for the window.\n_If omitted, defaults to app's uuid (`fin.Application.getCurrentSync().identity.uuid`)._",
					"type": "string"
				},
				"throttling": {
					"$ref": "#/definitions/WindowThrottling",
					"description": "{@inheritDoc WindowThrottling}"
				},
				"url": {
					"type": "string"
				},
				"uuid": {
					"type": "string"
				},
				"viewVisibility": {
					"$ref": "#/definitions/ViewVisibilityOptions",
					"description": "_Platform Windows Only_. Controls behavior for showing views when they are being resized by the user."
				},
				"viewsPreventingClose": {
					"enum": ["all", "layout"],
					"type": "string"
				},
				"waitForPageLoad": {
					"type": "boolean"
				},
				"width": {
					"type": "number"
				},
				"workspacePlatform": {
					"$ref": "#/definitions/WorkspacePlatformOptions"
				},
				"x": {
					"type": "number"
				},
				"y": {
					"type": "number"
				}
			},
			"required": [
				"_internalWorkspaceData",
				"accelerator",
				"alphaMask",
				"alwaysOnTop",
				"api",
				"applicationIcon",
				"aspectRatio",
				"autoShow",
				"autoplayPolicy",
				"backgroundColor",
				"backgroundThrottling",
				"closeOnLastViewRemoved",
				"contentCreation",
				"contentNavigation",
				"contentRedirect",
				"contextMenu",
				"contextMenuOptions",
				"contextMenuSettings",
				"cornerRounding",
				"customContext",
				"customData",
				"customRequestHeaders",
				"defaultCentered",
				"defaultHeight",
				"defaultLeft",
				"defaultTop",
				"defaultWidth",
				"downloadShelf",
				"frame",
				"height",
				"hideOnClose",
				"hotkeys",
				"icon",
				"ignoreSavedWindowState",
				"includeInSnapshots",
				"interop",
				"layout",
				"layoutSnapshot",
				"maxHeight",
				"maxWidth",
				"maximizable",
				"minHeight",
				"minWidth",
				"minimizable",
				"modalParentIdentity",
				"name",
				"opacity",
				"permissions",
				"preloadScripts",
				"processAffinity",
				"resizable",
				"resizeRegion",
				"saveWindowState",
				"shadow",
				"showBackgroundImages",
				"showTaskbarIcon",
				"smallWindow",
				"state",
				"taskbarIcon",
				"taskbarIconGroup",
				"throttling",
				"url",
				"uuid",
				"viewsPreventingClose",
				"waitForPageLoad",
				"width",
				"workspacePlatform",
				"x",
				"y"
			],
			"type": "object"
		},
		"WindowPreference<never>": {
			"additionalProperties": false,
			"description": "Which Launch Options are updatable and are there any constraints",
			"properties": {
				"name": {
					"$ref": "#/definitions/WebPreferenceName",
					"description": "What setting is updatable?"
				}
			},
			"required": ["name"],
			"type": "object"
		},
		"WindowPreference<never>_1": {
			"additionalProperties": false,
			"description": "Which Launch Options are updatable and are there any constraints",
			"properties": {
				"name": {
					"$ref": "#/definitions/WebPreferenceName",
					"description": "What setting is updatable?"
				}
			},
			"required": ["name"],
			"type": "object"
		},
		"WindowPreferenceUrl": {
			"additionalProperties": false,
			"description": "Which Launch Options are updatable and are there any constraints",
			"properties": {
				"constraint": {
					"$ref": "#/definitions/Preference.T",
					"description": "Is there a constraint that the platform can apply?"
				},
				"name": {
					"const": "url",
					"description": "Is the url updatable?",
					"type": "string"
				}
			},
			"required": ["name"],
			"type": "object"
		},
		"WindowState": {
			"description": "Visibility state of a window.",
			"enum": ["maximized", "minimized", "normal"],
			"type": "string"
		},
		"WindowStateButton": {
			"anyOf": [
				{
					"$ref": "#/definitions/CustomBrowserButtonConfig"
				},
				{
					"$ref": "#/definitions/PreDefinedButtonConfig"
				}
			],
			"description": "Buttons to the top far right of Browser"
		},
		"WindowStateButtonOptions": {
			"additionalProperties": false,
			"properties": {
				"buttons": {
					"items": {
						"$ref": "#/definitions/WindowStateButton"
					},
					"type": "array"
				}
			},
			"required": ["buttons"],
			"type": "object"
		},
		"WindowThrottling": {
			"description": "Window throttling state.\n\n* `enabled`: Both background throttling and scheduler throttling are true. It's fully throttled.\n* `scheduler-disabled`: The background throttling is true, but scheduler throttling is disabled.\n* `disabled`: The background throttling is false. The throttling is fully disabled.",
			"enum": ["disabled", "enabled", "scheduler-disabled"],
			"type": "string"
		},
		"WindowType": {
			"enum": ["browser", "platform"],
			"type": "string"
		},
		"WindowType.Platform": {
			"const": "platform",
			"type": "string"
		},
		"WorkspacePlatformOptions": {
			"$ref": "#/definitions/__type_13"
		},
		"WorkspacePlatformToolbarButton": {
			"additionalProperties": false,
			"description": "Toolbar button with can be visibility options.",
			"properties": {
				"button": {
					"$ref": "#/definitions/ToolbarButton",
					"description": "Details about the button itself"
				},
				"conditions": {
					"description": "If the button is included should there be conditions related to whether or not it is shown (e.g. authenticated)",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"id": {
					"description": "A unique id for your button",
					"type": "string"
				},
				"include": {
					"description": "Should this definition be included in the list of buttons",
					"type": "boolean"
				}
			},
			"required": ["button", "id", "include"],
			"type": "object"
		},
		"__type": {
			"additionalProperties": false,
			"properties": {
				"_internalWorkspaceData": {},
				"accelerator": {
					"$ref": "#/definitions/Partial_4",
					"description": "Enable keyboard shortcuts for devtools, zoom, reload, and reload ignoring cache."
				},
				"alphaMask": {
					"$ref": "#/definitions/RGB",
					"description": "Turns anything of matching RGB value transparent.\n\nCaveats:\n* runtime key --disable-gpu is required. Note: Unclear behavior on remote Desktop support\n* User cannot click-through transparent regions\n* Not supported on Mac\n* Windows Aero must be enabled\n* Won't make visual sense on Pixel-pushed environments such as Citrix\n* Not supported on rounded corner windows"
				},
				"alwaysOnTop": {
					"type": "boolean"
				},
				"api": {
					"$ref": "#/definitions/Api",
					"description": "Configurations for API injection."
				},
				"applicationIcon": {
					"type": "string"
				},
				"aspectRatio": {
					"type": "number"
				},
				"autoShow": {
					"description": "Automatically show the window when it is created.",
					"type": "boolean"
				},
				"autoplayPolicy": {
					"$ref": "#/definitions/AutoplayPolicyOptions",
					"description": "Autoplay policy to apply to content in the window, can be\n`no-user-gesture-required`, `user-gesture-required`,\n`document-user-activation-required`. Defaults to `no-user-gesture-required`."
				},
				"backgroundColor": {
					"description": "The window’s _backfill_ color as a hexadecimal value. Not to be confused with the content background color\n(`document.body.style.backgroundColor`),\nthis color briefly fills a window’s (a) content area before its content is loaded as well as (b) newly exposed\nareas when growing a window. Setting\nthis value to the anticipated content background color can help improve user experience.\nDefault is white.",
					"type": "string"
				},
				"backgroundThrottling": {
					"type": "boolean"
				},
				"closeOnLastViewRemoved": {
					"type": "boolean"
				},
				"contentCreation": {
					"$ref": "#/definitions/ContentCreationOptions",
					"description": "Configures how new content (e,g, from `window.open` or a link) is opened."
				},
				"contentNavigation": {
					"$ref": "#/definitions/ContentNavigation",
					"description": "Restrict navigation to URLs that match an allowed pattern.\nIn the lack of an allowlist, navigation to URLs that match a denied pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contentRedirect": {
					"$ref": "#/definitions/Partial_5",
					"description": "Restrict redirects to URLs that match an allowed pattern.\nIn the lack of an allowlist, redirects to URLs that match a denied pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contextMenu": {
					"type": "boolean"
				},
				"contextMenuOptions": {
					"$ref": "#/definitions/ContextMenuOptions",
					"description": "Configure the context menu when right-clicking on a window."
				},
				"contextMenuSettings": {
					"$ref": "#/definitions/ContextMenuSettings"
				},
				"cornerRounding": {
					"$ref": "#/definitions/Partial_3",
					"description": "Defines and applies rounded corners for a frameless window. **NOTE:** On macOS corner is not ellipse but circle rounded by the\n average of _height_ and _width_."
				},
				"customContext": {
					"description": "A field that the user can use to attach serializable data that will be saved when {@link Platform#getSnapshot Platform.getSnapshot}\nis called.  If a window in a Platform is trying to update or retrieve its own context, it can use the\n{@link Platform#setWindowContext Platform.setWindowContext} and {@link Platform#getWindowContext Platform.getWindowContext} calls.\n_When omitted, _inherits_ from the parent application._\nAs opposed to customData, this is meant for frequent updates and sharing with other contexts."
				},
				"customData": {
					"description": "A field that the user can attach serializable data to be ferried around with the window options.\n_When omitted, _inherits_ from the parent application._"
				},
				"customRequestHeaders": {
					"description": "Custom headers for requests sent by the window.",
					"items": {
						"additionalProperties": false,
						"description": "Custom headers for requests sent by the window.",
						"properties": {
							"headers": {
								"description": "Headers for requests sent by window; {key: value} results\nin a header of `key=value`.",
								"items": {
									"additionalProperties": {
										"type": "string"
									},
									"description": "Object representing headers and their values, where the\nobject key is the name of header and value key is the value of the header",
									"type": "object"
								},
								"type": "array"
							},
							"urlPatterns": {
								"description": "The URL patterns for which the headers will be applied.",
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": ["headers", "urlPatterns"],
						"type": "object"
					},
					"type": "array"
				},
				"defaultCentered": {
					"description": "Centers the window in the primary monitor. This option overrides `defaultLeft` and `defaultTop`. When `saveWindowState` is `true`,\nthis value will be ignored for subsequent launches in favor of the cached value.\n\n**NOTE:** On macOS _defaultCenter_ is somewhat above center vertically.",
					"type": "boolean"
				},
				"defaultHeight": {
					"type": "number"
				},
				"defaultLeft": {
					"type": "number"
				},
				"defaultTop": {
					"type": "number"
				},
				"defaultWidth": {
					"type": "number"
				},
				"downloadShelf": {
					"$ref": "#/definitions/DownloadShelfOptions",
					"description": "Controls the styling and behavior of the window download shelf."
				},
				"experimental": {},
				"fdc3InteropApi": {
					"type": "string"
				},
				"frame": {
					"type": "boolean"
				},
				"height": {
					"type": "number"
				},
				"hideOnClose": {
					"type": "boolean"
				},
				"hotkeys": {
					"description": "Defines the hotkeys that will be emitted as a `hotkey` event on the window.\nWithin Platform, OpenFin also implements a set of pre-defined actions called\n{@link https://developers.openfin.co/docs/platform-api#section-5-3-using-keyboard-commands keyboard commands}\nthat can be assigned to a specific hotkey in the platform manifest.",
					"items": {
						"additionalProperties": false,
						"description": "A hotkey binding.",
						"properties": {
							"keys": {
								"description": "The key combination of the hotkey, i.e. \"Ctrl+T\".",
								"type": "string"
							},
							"preventDefault": {
								"type": "boolean"
							}
						},
						"required": ["keys"],
						"type": "object"
					},
					"type": "array"
				},
				"icon": {
					"description": "A URL for the icon to be shown in the window title bar and the taskbar.\nWhen omitted, inherits from the parent application.\n\nNote: Window OS caches taskbar icons, therefore an icon change might only be visible after the cache is removed or the uuid is changed.",
					"type": "string"
				},
				"ignoreSavedWindowState": {
					"description": "Ignores the cached state of the window.\nDefaults the opposite value of `saveWindowState` to maintain backwards compatibility.",
					"type": "boolean"
				},
				"includeInSnapshots": {
					"type": "boolean"
				},
				"inheritance": {
					"$ref": "#/definitions/Partial_9",
					"description": "Controls whether an option is inherited from the parent application. The option is set as part of the window options for the parent application in either the {@link Manifest.startup_app} or {@link Manifest.platform} properties in the manifest or in {@link ApplicationOptions.mainWindowOptions} when calling {@link Application.ApplicationModule.start Application.start}. Use { [option]: false } to disable a specific [option]. All inheritable properties will be inherited by default if omitted."
				},
				"interop": {
					"$ref": "#/definitions/InteropConfig"
				},
				"layout": {},
				"layoutSnapshot": {
					"$ref": "#/definitions/LayoutSnapshot"
				},
				"maxHeight": {
					"type": "number"
				},
				"maxWidth": {
					"type": "number"
				},
				"maximizable": {
					"type": "boolean"
				},
				"minHeight": {
					"type": "number"
				},
				"minWidth": {
					"type": "number"
				},
				"minimizable": {
					"type": "boolean"
				},
				"modalParentIdentity": {
					"$ref": "#/definitions/Identity_5",
					"description": "Parent identity of a modal window. It will create a modal child window when this option is set."
				},
				"name": {
					"description": "The name of the window.",
					"type": "string"
				},
				"opacity": {
					"type": "number"
				},
				"permissions": {
					"$ref": "#/definitions/Partial_6",
					"description": "API permissions for code running in the window."
				},
				"preloadScripts": {
					"description": "Scripts that run before page load.  When omitted, inherits from the parent application.",
					"items": {
						"additionalProperties": false,
						"description": "A script that is run before page load.",
						"properties": {
							"mandatory": {
								"type": "boolean"
							},
							"state": {
								"description": "Preload script execution state.",
								"enum": ["failed", "load-failed", "load-started", "load-succeeded", "succeeded"],
								"type": "string"
							},
							"url": {
								"description": "The URL from which the script was loaded.",
								"type": "string"
							}
						},
						"required": ["url"],
						"type": "object"
					},
					"type": "array"
				},
				"processAffinity": {
					"description": "String tag that attempts to group like-tagged renderers together. Will only be used if pages are on the same origin.",
					"type": "string"
				},
				"reason": {
					"$ref": "#/definitions/WindowCreationReason"
				},
				"resizable": {
					"type": "boolean"
				},
				"resizeRegion": {
					"$ref": "#/definitions/ResizeRegion",
					"description": "Defines a region in pixels that will respond to user mouse interaction for resizing a frameless window."
				},
				"saveWindowState": {
					"type": "boolean"
				},
				"shadow": {
					"type": "boolean"
				},
				"showBackgroundImages": {
					"type": "boolean"
				},
				"showTaskbarIcon": {
					"type": "boolean"
				},
				"smallWindow": {
					"type": "boolean"
				},
				"state": {
					"$ref": "#/definitions/WindowState"
				},
				"taskbarIcon": {
					"type": "string"
				},
				"taskbarIconGroup": {
					"description": "Specify a taskbar group for the window.\n_If omitted, defaults to app's uuid (`fin.Application.getCurrentSync().identity.uuid`)._",
					"type": "string"
				},
				"throttling": {
					"$ref": "#/definitions/WindowThrottling",
					"description": "{@inheritDoc WindowThrottling}"
				},
				"updateStateIfExists": {
					"type": "boolean"
				},
				"url": {
					"type": "string"
				},
				"uuid": {
					"type": "string"
				},
				"viewVisibility": {
					"$ref": "#/definitions/ViewVisibilityOptions",
					"description": "_Platform Windows Only_. Controls behavior for showing views when they are being resized by the user."
				},
				"viewsPreventingClose": {
					"enum": ["all", "layout"],
					"type": "string"
				},
				"waitForPageLoad": {
					"type": "boolean"
				},
				"width": {
					"type": "number"
				},
				"workspacePlatform": {
					"anyOf": [
						{
							"$ref": "#/definitions/BrowserWorkspacePlatformWindowOptions"
						},
						{
							"additionalProperties": false,
							"properties": {
								"windowType": {
									"$ref": "#/definitions/WindowType.Platform",
									"description": "For internal usage.  Defaults to 'browser' when Browser is enabled when the WorkspacePlatform is initialized.  In order to use\nnon-Browser layout windows ('platform' windows) in a Browser-enabled workspace platform, set windowType to `platform`. In that instance, the other properties\nin the workspacePlatform object are not relevant."
								}
							},
							"required": ["windowType"],
							"type": "object"
						}
					],
					"description": "WorkspacePlatform specific window options. These options will not work unless a workspace platform has been initialized."
				},
				"x": {
					"type": "number"
				},
				"y": {
					"type": "number"
				}
			},
			"type": "object"
		},
		"__type_1": {
			"additionalProperties": false,
			"description": "Represents the arrangement of Views within a Platform window's Layout. We do not recommend trying\nto build Layouts or LayoutItems by hand and instead use calls such as {@link Platform#getSnapshot getSnapshot}.",
			"properties": {
				"content": {
					"$ref": "#/definitions/LayoutContent",
					"description": "Array of configurations for items that will be created as children of this item."
				},
				"height": {
					"type": "number"
				},
				"id": {
					"anyOf": [
						{
							"items": {
								"type": "string"
							},
							"type": "array"
						},
						{
							"type": "string"
						}
					]
				},
				"isClosable": {
					"type": "boolean"
				},
				"title": {
					"type": "string"
				},
				"type": {
					"description": "The type of the item. Possible values are 'row', 'column', 'stack', and 'component'.",
					"type": "string"
				},
				"width": {
					"type": "number"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"__type_10": {
			"additionalProperties": false,
			"properties": {
				"height": {
					"type": "number"
				},
				"width": {
					"type": "number"
				}
			},
			"type": "object"
		},
		"__type_11": {
			"additionalProperties": false,
			"description": "Defines a region in pixels that will respond to user mouse interaction for resizing a frameless window.",
			"properties": {
				"bottomRightCorner": {
					"type": "number"
				},
				"sides": {
					"additionalProperties": false,
					"description": "Enables resizing interaction for each side of the window.",
					"properties": {
						"bottom": {
							"type": "boolean"
						},
						"left": {
							"type": "boolean"
						},
						"right": {
							"type": "boolean"
						},
						"top": {
							"type": "boolean"
						}
					},
					"type": "object"
				},
				"size": {
					"type": "number"
				}
			},
			"type": "object"
		},
		"__type_12": {
			"additionalProperties": false,
			"description": "Information relevant to the Interop Broker.",
			"properties": {
				"currentContextGroup": {
					"description": "Context Group for the client. (green, yellow, red, etc.).",
					"type": "string"
				},
				"providerId": {
					"description": "When provided, automatically connects the client to the specified provider uuid.",
					"type": "string"
				}
			},
			"type": "object"
		},
		"__type_13": {
			"additionalProperties": {},
			"type": "object"
		},
		"__type_14": {
			"additionalProperties": false,
			"properties": {
				"devtools": {
					"description": "If `true`, enables the devtools keyboard shortcut:<br>\n`Ctrl` + `Shift` + `I` _(Toggles Devtools)_",
					"type": "boolean"
				},
				"reload": {
					"description": "If `true`, enables the reload keyboard shortcuts:<br>\n`Ctrl` + `R` _(Windows)_<br>\n`F5` _(Windows)_<br>\n`Command` + `R` _(Mac)_",
					"type": "boolean"
				},
				"reloadIgnoringCache": {
					"description": "If `true`, enables the reload-from-source keyboard shortcuts:<br>\n`Ctrl` + `Shift` + `R` _(Windows)_<br>\n`Shift` + `F5` _(Windows)_<br>\n`Command` + `Shift` + `R` _(Mac)_",
					"type": "boolean"
				},
				"zoom": {
					"description": "NOTE: It is not recommended to set this value to true for Windows in Platforms as that may lead to unexpected visual shifts in layout.\nIf `true`, enables the zoom keyboard shortcuts:<br>\n`Ctrl` + `+` _(Zoom In)_<br>\n`Ctrl` + `Shift` + `+` _(Zoom In)_<br>\n`Ctrl` + `NumPad+` _(Zoom In)_<br>\n`Ctrl` + `-` _(Zoom Out)_<br>\n`Ctrl` + `Shift` + `-` _(Zoom Out)_<br>\n`Ctrl` + `NumPad-` _(Zoom Out)_<br>\n`Ctrl` + `Scroll` _(Zoom In & Out)_<br>\n`Ctrl` + `0` _(Restore to 100%)_",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"__type_15": {
			"additionalProperties": false,
			"properties": {
				"allowlist": {
					"description": "Allowed URLs for navigation.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"blacklist": {
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"denylist": {
					"description": "Forbidden URLs for navigation.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"matchOptions": {
					"$ref": "#/definitions/RuleMatchOptions",
					"description": "Options to use when comparing URIs to the `allowlist` and `denylist` patterns."
				},
				"whitelist": {
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"__type_16": {
			"additionalProperties": false,
			"description": "Controls the behavior of the navigation URI pattern matching algorithm.",
			"properties": {
				"matchAllSchemes": {
					"description": "Matches all schemes rather than just http and https when a wild card is specified. For example, `'*://*.site.com'` will\nonly match urls which begin with `'http:'` or `'https:'` unless this setting is `true`.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"__type_17": {
			"additionalProperties": false,
			"properties": {
				"allowlist": {
					"description": "Allowed URLs for navigation.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"blacklist": {
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"denylist": {
					"description": "Forbidden URLs for navigation.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"matchOptions": {
					"$ref": "#/definitions/RuleMatchOptions",
					"description": "Options to use when comparing URIs to the `allowlist` and `denylist` patterns."
				},
				"whitelist": {
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"__type_18": {
			"additionalProperties": false,
			"properties": {
				"border": {
					"additionalProperties": false,
					"description": "Styling options for the download shelf border.",
					"properties": {
						"color": {
							"description": "Color of the border.  Must be a 6-character hex code prefixed by #.  Defaults to chromium theme\nif absent.",
							"type": "string"
						},
						"size": {
							"description": "Thickness of the border in pixels.  Default 1 pixel.  Used only for frameless windows.",
							"type": "number"
						}
					},
					"type": "object"
				},
				"enabled": {
					"description": "Whether downloads in this window trigger display of the download shelf.",
					"type": "boolean"
				}
			},
			"required": ["enabled"],
			"type": "object"
		},
		"__type_19": {
			"additionalProperties": false,
			"properties": {
				"layouts": {
					"$ref": "#/definitions/Record"
				}
			},
			"required": ["layouts"],
			"type": "object"
		},
		"__type_2": {
			"additionalProperties": false,
			"properties": {
				"_internalWorkspaceData": {},
				"accelerator": {
					"$ref": "#/definitions/Partial_4",
					"description": "Enable keyboard shortcuts for devtools, zoom, reload, and reload ignoring cache."
				},
				"api": {
					"$ref": "#/definitions/ApiSettings",
					"description": "Configurations for API injection."
				},
				"autoResize": {
					"$ref": "#/definitions/AutoResizeOptions"
				},
				"autoplayPolicy": {
					"$ref": "#/definitions/AutoplayPolicyOptions",
					"description": "Autoplay policy to apply to content in the window, can be\n`no-user-gesture-required`, `user-gesture-required`,\n`document-user-activation-required`. Defaults to `no-user-gesture-required`."
				},
				"backgroundColor": {
					"description": "The view’s _backfill_ color as a hexadecimal value. Not to be confused with the content background color\n(`document.body.style.backgroundColor`),\nthis color briefly fills a view’s (a) content area before its content is loaded as well as (b) newly exposed\nareas when growing a view. Setting\nthis value to the anticipated content background color can help improve user experience.\nDefault is white.",
					"type": "string"
				},
				"bounds": {
					"$ref": "#/definitions/Bounds",
					"description": "Initial bounds given relative to the window."
				},
				"closeBehavior": {
					"description": "**Platforms Only.**\nDetermines what happens when a view is closed in a platform window.\nSupersedes the deprecated `detachOnClose`.\nIf not set, detaults to `destroy` if `detachOnClose` is false (default), or `detach` if `detachOnClose` is true.\nWhile this option is not updateable, it may change at runtime if `detachOnClose` is updated.\n'hide' hides the view on the platform window that closed it.\n'detach' behaves like 'detachOnClose': true. It attaches the closed view to the platform provider.\n'destroy' is the default behavior as long as 'detachOnClose' is not set. It destroys the view.",
					"enum": ["destroy", "detach", "hide"],
					"type": "string"
				},
				"contentCreation": {
					"$ref": "#/definitions/ContentCreationOptions",
					"description": "Configures how new content (e,g, from `window.open` or a link) is opened."
				},
				"contentNavigation": {
					"$ref": "#/definitions/ContentNavigation",
					"description": "Restrict navigation to URLs that match an allowed pattern.\nIn the lack of an allowlist, navigation to URLs that match a denylisted pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contentRedirect": {
					"$ref": "#/definitions/ContentRedirect"
				},
				"contextMenu": {
					"type": "boolean"
				},
				"contextMenuOptions": {
					"$ref": "#/definitions/ContextMenuOptions",
					"description": "Configure the context menu when right-clicking on a window."
				},
				"contextMenuSettings": {
					"$ref": "#/definitions/ContextMenuSettings"
				},
				"customContext": {
					"description": "A field that the user can use to attach serializable data that will be saved when {@link Platform#getSnapshot Platform.getSnapshot}\nis called.  If a window in a Platform is trying to update or retrieve its own context, it can use the\n{@link Platform#setWindowContext Platform.setWindowContext} and {@link Platform#getWindowContext Platform.getWindowContext} calls.\n_When omitted, _inherits_ from the parent application._\nAs opposed to customData, this is meant for frequent updates and sharing with other contexts. For usage example, see {@link MutableWindowOptionscustomContext Example}."
				},
				"customData": {
					"description": "A field that the user can attach serializable data to be ferried around with the window options.\n_When omitted, _inherits_ from the parent application._"
				},
				"customRequestHeaders": {
					"description": "Custom headers for requests sent by the view.",
					"items": {
						"additionalProperties": false,
						"description": "Custom headers for requests sent by the window.",
						"properties": {
							"headers": {
								"description": "Headers for requests sent by window; {key: value} results\nin a header of `key=value`.",
								"items": {
									"additionalProperties": {
										"type": "string"
									},
									"description": "Object representing headers and their values, where the\nobject key is the name of header and value key is the value of the header",
									"type": "object"
								},
								"type": "array"
							},
							"urlPatterns": {
								"description": "The URL patterns for which the headers will be applied.",
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": ["headers", "urlPatterns"],
						"type": "object"
					},
					"type": "array"
				},
				"detachOnClose": {
					"type": "boolean"
				},
				"downloadShelf": {
					"additionalProperties": false,
					"description": "Controls interaction of the view with its parent window's download shelf.",
					"properties": {
						"enabled": {
							"description": "Whether downloads in this view trigger opening the download shelf on its parent BrowserWindow.",
							"type": "boolean"
						}
					},
					"required": ["enabled"],
					"type": "object"
				},
				"enableBeforeUnload": {
					"type": "boolean"
				},
				"experimental": {},
				"fdc3InteropApi": {
					"type": "string"
				},
				"hotkeys": {
					"description": "Defines the hotkeys that will be emitted as a `hotkey` event on the view. For usage example, see {@link MutableWindowOptionshotkeys Example}.\nWithin Platform, OpenFin also implements a set of pre-defined actions called\n{@link https://developers.openfin.co/docs/platform-api#section-5-3-using-keyboard-commands keyboard commands}\nthat can be assigned to a specific hotkey in the platform manifest.",
					"items": {
						"additionalProperties": false,
						"description": "A hotkey binding.",
						"properties": {
							"keys": {
								"description": "The key combination of the hotkey, i.e. \"Ctrl+T\".",
								"type": "string"
							},
							"preventDefault": {
								"type": "boolean"
							}
						},
						"required": ["keys"],
						"type": "object"
					},
					"type": "array"
				},
				"interop": {
					"$ref": "#/definitions/InteropConfig"
				},
				"isClosable": {
					"type": "boolean"
				},
				"manifestUrl": {
					"description": "**Platforms Only.** Url to a manifest that contains View Options. Properties other than manifestUrl can still be used\nbut the properties in the manifest will take precedence if there is any collision.",
					"type": "string"
				},
				"name": {
					"description": "The name of the view.",
					"type": "string"
				},
				"permissions": {
					"$ref": "#/definitions/Partial_6",
					"description": "API permissions for code running in the view."
				},
				"preloadScripts": {
					"description": "Scripts that run before page load.  When omitted, inherits from the parent application.",
					"items": {
						"additionalProperties": false,
						"description": "A script that is run before page load.",
						"properties": {
							"mandatory": {
								"type": "boolean"
							},
							"state": {
								"description": "Preload script execution state.",
								"enum": ["failed", "load-failed", "load-started", "load-succeeded", "succeeded"],
								"type": "string"
							},
							"url": {
								"description": "The URL from which the script was loaded.",
								"type": "string"
							}
						},
						"required": ["url"],
						"type": "object"
					},
					"type": "array"
				},
				"preventDragOut": {
					"type": "boolean"
				},
				"processAffinity": {
					"description": "String tag that attempts to group like-tagged renderers together. Will only be used if pages are on the same origin.",
					"type": "string"
				},
				"target": {
					"$ref": "#/definitions/Identity_5",
					"description": "The identity of the window this view should be attached to."
				},
				"throttling": {
					"$ref": "#/definitions/ViewThrottling",
					"description": "{@inheritDoc ViewThrottling}"
				},
				"url": {
					"type": "string"
				},
				"zoomLevel": {
					"type": "number"
				}
			},
			"type": "object"
		},
		"__type_20": {
			"additionalProperties": false,
			"type": "object"
		},
		"__type_21": {
			"additionalProperties": false,
			"properties": {
				"Application": {
					"$ref": "#/definitions/Partial_7"
				},
				"System": {
					"$ref": "#/definitions/Partial_8"
				},
				"devices": {
					"items": {
						"additionalProperties": false,
						"properties": {
							"productId": {
								"type": ["string", "number"]
							},
							"vendorId": {
								"type": ["string", "number"]
							}
						},
						"required": ["productId", "vendorId"],
						"type": "object"
					},
					"type": "array"
				},
				"webAPIs": {
					"items": {
						"$ref": "#/definitions/WebPermission"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"__type_22": {
			"additionalProperties": false,
			"properties": {
				"getFileDownloadLocation": {
					"type": "boolean"
				},
				"setFileDownloadLocation": {
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"__type_23": {
			"additionalProperties": false,
			"properties": {
				"getAllExternalWindows": {
					"type": "boolean"
				},
				"getCustomProtocolState": {
					"anyOf": [
						{
							"additionalProperties": false,
							"properties": {
								"enabled": {
									"type": "boolean"
								},
								"protocols": {
									"items": {
										"type": "string"
									},
									"type": "array"
								}
							},
							"required": ["enabled", "protocols"],
							"type": "object"
						},
						{
							"type": "boolean"
						}
					]
				},
				"launchExternalProcess": {
					"anyOf": [
						{
							"additionalProperties": false,
							"properties": {
								"assets": {
									"additionalProperties": false,
									"properties": {
										"enabled": {
											"type": "boolean"
										},
										"srcRules": {
											"items": {
												"additionalProperties": false,
												"properties": {
													"behavior": {
														"enum": ["allow", "block"],
														"type": "string"
													},
													"match": {
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"required": ["behavior", "match"],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": ["enabled"],
									"type": "object"
								},
								"downloads": {
									"additionalProperties": false,
									"properties": {
										"enabled": {
											"type": "boolean"
										}
									},
									"required": ["enabled"],
									"type": "object"
								},
								"enabled": {
									"type": "boolean"
								},
								"executables": {
									"additionalProperties": false,
									"properties": {
										"enabled": {
											"type": "boolean"
										},
										"pathRules": {
											"items": {
												"additionalProperties": false,
												"properties": {
													"behavior": {
														"enum": ["allow", "block"],
														"type": "string"
													},
													"match": {
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"required": ["behavior", "match"],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": ["enabled"],
									"type": "object"
								}
							},
							"required": ["enabled"],
							"type": "object"
						},
						{
							"type": "boolean"
						}
					]
				},
				"openUrlWithBrowser": {
					"additionalProperties": false,
					"properties": {
						"enabled": {
							"type": "boolean"
						},
						"protocols": {
							"items": {
								"type": "string"
							},
							"type": "array"
						}
					},
					"required": ["enabled", "protocols"],
					"type": "object"
				},
				"readRegistryValue": {
					"anyOf": [
						{
							"additionalProperties": false,
							"properties": {
								"enabled": {
									"type": "boolean"
								},
								"registryKeys": {
									"items": {
										"type": "string"
									},
									"type": "array"
								}
							},
							"required": ["enabled", "registryKeys"],
							"type": "object"
						},
						{
							"type": "boolean"
						}
					]
				},
				"registerCustomProtocol": {
					"anyOf": [
						{
							"additionalProperties": false,
							"properties": {
								"enabled": {
									"type": "boolean"
								},
								"protocols": {
									"items": {
										"type": "string"
									},
									"type": "array"
								}
							},
							"required": ["enabled", "protocols"],
							"type": "object"
						},
						{
							"type": "boolean"
						}
					]
				},
				"terminateExternalProcess": {
					"type": "boolean"
				},
				"unregisterCustomProtocol": {
					"anyOf": [
						{
							"additionalProperties": false,
							"properties": {
								"enabled": {
									"type": "boolean"
								},
								"protocols": {
									"items": {
										"type": "string"
									},
									"type": "array"
								}
							},
							"required": ["enabled", "protocols"],
							"type": "object"
						},
						{
							"type": "boolean"
						}
					]
				}
			},
			"type": "object"
		},
		"__type_24": {
			"additionalProperties": false,
			"description": "_Platform Windows Only_. Controls behavior for showing views when they are being resized by the user.",
			"properties": {
				"showViewsOnSplitterDrag": {
					"$ref": "#/definitions/ViewVisibilityOption",
					"description": "Allows views to be shown when they are resized by the user dragging the splitter between layout stacks."
				},
				"showViewsOnTabDrag": {
					"$ref": "#/definitions/ViewVisibilityOption",
					"description": "_Supported on Windows Operating Systems only_. Allows views to be shown when the user is dragging a tab around a layout."
				},
				"showViewsOnWindowResize": {
					"$ref": "#/definitions/ShowViewOnWindowResizeOptions",
					"description": "Enables views to be shown when a Platform Window is being resized by the user."
				}
			},
			"type": "object"
		},
		"__type_25": {
			"additionalProperties": false,
			"description": "Configuration for view visibility settings",
			"properties": {
				"enabled": {
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"__type_26": {
			"additionalProperties": false,
			"properties": {
				"customContext": {
					"type": "boolean"
				},
				"customData": {
					"type": "boolean"
				},
				"icon": {
					"type": "boolean"
				},
				"preloadScripts": {
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"__type_27": {
			"additionalProperties": false,
			"properties": {
				"_internalWorkspaceData": {},
				"accelerator": {
					"$ref": "#/definitions/Partial_4",
					"description": "Enable keyboard shortcuts for devtools, zoom, reload, and reload ignoring cache."
				},
				"api": {
					"$ref": "#/definitions/ApiSettings",
					"description": "Configurations for API injection."
				},
				"autoResize": {
					"$ref": "#/definitions/AutoResizeOptions"
				},
				"autoplayPolicy": {
					"$ref": "#/definitions/AutoplayPolicyOptions",
					"description": "Autoplay policy to apply to content in the window, can be\n`no-user-gesture-required`, `user-gesture-required`,\n`document-user-activation-required`. Defaults to `no-user-gesture-required`."
				},
				"backgroundColor": {
					"description": "The view’s _backfill_ color as a hexadecimal value. Not to be confused with the content background color\n(`document.body.style.backgroundColor`),\nthis color briefly fills a view’s (a) content area before its content is loaded as well as (b) newly exposed\nareas when growing a view. Setting\nthis value to the anticipated content background color can help improve user experience.\nDefault is white.",
					"type": "string"
				},
				"bounds": {
					"$ref": "#/definitions/Bounds",
					"description": "Initial bounds given relative to the window."
				},
				"closeBehavior": {
					"description": "**Platforms Only.**\nDetermines what happens when a view is closed in a platform window.\nSupersedes the deprecated `detachOnClose`.\nIf not set, detaults to `destroy` if `detachOnClose` is false (default), or `detach` if `detachOnClose` is true.\nWhile this option is not updateable, it may change at runtime if `detachOnClose` is updated.\n'hide' hides the view on the platform window that closed it.\n'detach' behaves like 'detachOnClose': true. It attaches the closed view to the platform provider.\n'destroy' is the default behavior as long as 'detachOnClose' is not set. It destroys the view.",
					"enum": ["destroy", "detach", "hide"],
					"type": "string"
				},
				"contentCreation": {
					"$ref": "#/definitions/ContentCreationOptions",
					"description": "Configures how new content (e,g, from `window.open` or a link) is opened."
				},
				"contentNavigation": {
					"$ref": "#/definitions/ContentNavigation",
					"description": "Restrict navigation to URLs that match an allowed pattern.\nIn the lack of an allowlist, navigation to URLs that match a denylisted pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contentRedirect": {
					"$ref": "#/definitions/ContentRedirect"
				},
				"contextMenu": {
					"type": "boolean"
				},
				"contextMenuOptions": {
					"$ref": "#/definitions/ContextMenuOptions",
					"description": "Configure the context menu when right-clicking on a window."
				},
				"contextMenuSettings": {
					"$ref": "#/definitions/ContextMenuSettings"
				},
				"customContext": {
					"description": "A field that the user can use to attach serializable data that will be saved when {@link Platform#getSnapshot Platform.getSnapshot}\nis called.  If a window in a Platform is trying to update or retrieve its own context, it can use the\n{@link Platform#setWindowContext Platform.setWindowContext} and {@link Platform#getWindowContext Platform.getWindowContext} calls.\n_When omitted, _inherits_ from the parent application._\nAs opposed to customData, this is meant for frequent updates and sharing with other contexts. For usage example, see {@link MutableWindowOptionscustomContext Example}."
				},
				"customData": {
					"description": "A field that the user can attach serializable data to be ferried around with the window options.\n_When omitted, _inherits_ from the parent application._"
				},
				"customRequestHeaders": {
					"description": "Custom headers for requests sent by the view.",
					"items": {
						"additionalProperties": false,
						"description": "Custom headers for requests sent by the window.",
						"properties": {
							"headers": {
								"description": "Headers for requests sent by window; {key: value} results\nin a header of `key=value`.",
								"items": {
									"additionalProperties": {
										"type": "string"
									},
									"description": "Object representing headers and their values, where the\nobject key is the name of header and value key is the value of the header",
									"type": "object"
								},
								"type": "array"
							},
							"urlPatterns": {
								"description": "The URL patterns for which the headers will be applied.",
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": ["headers", "urlPatterns"],
						"type": "object"
					},
					"type": "array"
				},
				"detachOnClose": {
					"type": "boolean"
				},
				"downloadShelf": {
					"additionalProperties": false,
					"description": "Controls interaction of the view with its parent window's download shelf.",
					"properties": {
						"enabled": {
							"description": "Whether downloads in this view trigger opening the download shelf on its parent BrowserWindow.",
							"type": "boolean"
						}
					},
					"required": ["enabled"],
					"type": "object"
				},
				"enableBeforeUnload": {
					"type": "boolean"
				},
				"experimental": {},
				"fdc3InteropApi": {
					"type": "string"
				},
				"hotkeys": {
					"description": "Defines the hotkeys that will be emitted as a `hotkey` event on the view. For usage example, see {@link MutableWindowOptionshotkeys Example}.\nWithin Platform, OpenFin also implements a set of pre-defined actions called\n{@link https://developers.openfin.co/docs/platform-api#section-5-3-using-keyboard-commands keyboard commands}\nthat can be assigned to a specific hotkey in the platform manifest.",
					"items": {
						"additionalProperties": false,
						"description": "A hotkey binding.",
						"properties": {
							"keys": {
								"description": "The key combination of the hotkey, i.e. \"Ctrl+T\".",
								"type": "string"
							},
							"preventDefault": {
								"type": "boolean"
							}
						},
						"required": ["keys"],
						"type": "object"
					},
					"type": "array"
				},
				"interop": {
					"$ref": "#/definitions/InteropConfig"
				},
				"isClosable": {
					"type": "boolean"
				},
				"manifestUrl": {
					"description": "**Platforms Only.** Url to a manifest that contains View Options. Properties other than manifestUrl can still be used\nbut the properties in the manifest will take precedence if there is any collision.",
					"type": "string"
				},
				"name": {
					"description": "The name of the view.",
					"type": "string"
				},
				"permissions": {
					"$ref": "#/definitions/Partial_6",
					"description": "API permissions for code running in the view."
				},
				"preloadScripts": {
					"description": "Scripts that run before page load.  When omitted, inherits from the parent application.",
					"items": {
						"additionalProperties": false,
						"description": "A script that is run before page load.",
						"properties": {
							"mandatory": {
								"type": "boolean"
							},
							"state": {
								"description": "Preload script execution state.",
								"enum": ["failed", "load-failed", "load-started", "load-succeeded", "succeeded"],
								"type": "string"
							},
							"url": {
								"description": "The URL from which the script was loaded.",
								"type": "string"
							}
						},
						"required": ["url"],
						"type": "object"
					},
					"type": "array"
				},
				"preventDragOut": {
					"type": "boolean"
				},
				"processAffinity": {
					"description": "String tag that attempts to group like-tagged renderers together. Will only be used if pages are on the same origin.",
					"type": "string"
				},
				"target": {
					"$ref": "#/definitions/Identity_5",
					"description": "The identity of the window this view should be attached to."
				},
				"throttling": {
					"$ref": "#/definitions/ViewThrottling",
					"description": "{@inheritDoc ViewThrottling}"
				},
				"url": {
					"type": "string"
				},
				"zoomLevel": {
					"type": "number"
				}
			},
			"type": "object"
		},
		"__type_28": {
			"additionalProperties": false,
			"properties": {
				"height": {
					"type": "number"
				},
				"left": {
					"type": "number"
				},
				"top": {
					"type": "number"
				},
				"width": {
					"type": "number"
				}
			},
			"required": ["height", "left", "top", "width"],
			"type": "object"
		},
		"__type_29": {
			"additionalProperties": false,
			"properties": {
				"height": {
					"description": "If true, the view's height will grow and shrink together with the window. false\nby default.",
					"type": "boolean"
				},
				"horizontal": {
					"description": "If true, the view's x position and width will grow and shrink proportionally with\nthe window. false by default.",
					"type": "boolean"
				},
				"vertical": {
					"description": "If true, the view's y position and height will grow and shrink proportionally with\nthe window. false by default.",
					"type": "boolean"
				},
				"width": {
					"description": "If true, the view's width will grow and shrink together with the window. false\nby default.",
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"__type_3": {
			"additionalProperties": false,
			"description": "Configurations for API injection.",
			"properties": {
				"fin": {
					"$ref": "#/definitions/InjectionType",
					"description": "Configure injection of the `fin` API in this context.\n\n* 'none': The `fin` API will be not available in this context.\n* 'global': The entire `fin` API will be available in this context."
				},
				"iframe": {
					"additionalProperties": false,
					"description": "Configure conditional injection of OpenFin API into iframes",
					"properties": {
						"crossOriginInjection": {
							"description": "Inject OpenFin API into cross-origin iframes",
							"type": "boolean"
						},
						"enableDeprecatedSharedName": {
							"type": "boolean"
						},
						"sameOriginInjection": {
							"description": "Inject OpenFin API into same-origin iframes",
							"type": "boolean"
						}
					},
					"type": "object"
				}
			},
			"type": "object"
		},
		"__type_30": {
			"additionalProperties": false,
			"properties": {
				"_internalWorkspaceData": {},
				"accelerator": {
					"$ref": "#/definitions/Partial_4",
					"description": "Enable keyboard shortcuts for devtools, zoom, reload, and reload ignoring cache."
				},
				"api": {
					"$ref": "#/definitions/ApiSettings",
					"description": "Configurations for API injection."
				},
				"autoResize": {
					"$ref": "#/definitions/AutoResizeOptions"
				},
				"autoplayPolicy": {
					"$ref": "#/definitions/AutoplayPolicyOptions",
					"description": "Autoplay policy to apply to content in the window, can be\n`no-user-gesture-required`, `user-gesture-required`,\n`document-user-activation-required`. Defaults to `no-user-gesture-required`."
				},
				"backgroundColor": {
					"description": "The view’s _backfill_ color as a hexadecimal value. Not to be confused with the content background color\n(`document.body.style.backgroundColor`),\nthis color briefly fills a view’s (a) content area before its content is loaded as well as (b) newly exposed\nareas when growing a view. Setting\nthis value to the anticipated content background color can help improve user experience.\nDefault is white.",
					"type": "string"
				},
				"closeBehavior": {
					"description": "**Platforms Only.**\nDetermines what happens when a view is closed in a platform window.\nSupersedes the deprecated `detachOnClose`.\nIf not set, detaults to `destroy` if `detachOnClose` is false (default), or `detach` if `detachOnClose` is true.\nWhile this option is not updateable, it may change at runtime if `detachOnClose` is updated.\n'hide' hides the view on the platform window that closed it.\n'detach' behaves like 'detachOnClose': true. It attaches the closed view to the platform provider.\n'destroy' is the default behavior as long as 'detachOnClose' is not set. It destroys the view.",
					"enum": ["destroy", "detach", "hide"],
					"type": "string"
				},
				"contentCreation": {
					"$ref": "#/definitions/ContentCreationOptions",
					"description": "Configures how new content (e,g, from `window.open` or a link) is opened."
				},
				"contentNavigation": {
					"$ref": "#/definitions/ContentNavigation",
					"description": "Restrict navigation to URLs that match an allowed pattern.\nIn the lack of an allowlist, navigation to URLs that match a denylisted pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contentRedirect": {
					"$ref": "#/definitions/ContentRedirect"
				},
				"contextMenu": {
					"type": "boolean"
				},
				"contextMenuOptions": {
					"$ref": "#/definitions/ContextMenuOptions",
					"description": "Configure the context menu when right-clicking on a window."
				},
				"contextMenuSettings": {
					"$ref": "#/definitions/ContextMenuSettings"
				},
				"customContext": {
					"description": "A field that the user can use to attach serializable data that will be saved when {@link Platform#getSnapshot Platform.getSnapshot}\nis called.  If a window in a Platform is trying to update or retrieve its own context, it can use the\n{@link Platform#setWindowContext Platform.setWindowContext} and {@link Platform#getWindowContext Platform.getWindowContext} calls.\n_When omitted, _inherits_ from the parent application._\nAs opposed to customData, this is meant for frequent updates and sharing with other contexts. For usage example, see {@link MutableWindowOptionscustomContext Example}."
				},
				"customData": {
					"description": "A field that the user can attach serializable data to be ferried around with the window options.\n_When omitted, _inherits_ from the parent application._"
				},
				"customRequestHeaders": {
					"description": "Custom headers for requests sent by the view.",
					"items": {
						"additionalProperties": false,
						"description": "Custom headers for requests sent by the window.",
						"properties": {
							"headers": {
								"description": "Headers for requests sent by window; {key: value} results\nin a header of `key=value`.",
								"items": {
									"additionalProperties": {
										"type": "string"
									},
									"description": "Object representing headers and their values, where the\nobject key is the name of header and value key is the value of the header",
									"type": "object"
								},
								"type": "array"
							},
							"urlPatterns": {
								"description": "The URL patterns for which the headers will be applied.",
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": ["headers", "urlPatterns"],
						"type": "object"
					},
					"type": "array"
				},
				"detachOnClose": {
					"type": "boolean"
				},
				"downloadShelf": {
					"additionalProperties": false,
					"description": "Controls interaction of the view with its parent window's download shelf.",
					"properties": {
						"enabled": {
							"description": "Whether downloads in this view trigger opening the download shelf on its parent BrowserWindow.",
							"type": "boolean"
						}
					},
					"required": ["enabled"],
					"type": "object"
				},
				"enableBeforeUnload": {
					"type": "boolean"
				},
				"experimental": {},
				"fdc3InteropApi": {
					"type": "string"
				},
				"hotkeys": {
					"description": "Defines the hotkeys that will be emitted as a `hotkey` event on the view. For usage example, see {@link MutableWindowOptionshotkeys Example}.\nWithin Platform, OpenFin also implements a set of pre-defined actions called\n{@link https://developers.openfin.co/docs/platform-api#section-5-3-using-keyboard-commands keyboard commands}\nthat can be assigned to a specific hotkey in the platform manifest.",
					"items": {
						"additionalProperties": false,
						"description": "A hotkey binding.",
						"properties": {
							"keys": {
								"description": "The key combination of the hotkey, i.e. \"Ctrl+T\".",
								"type": "string"
							},
							"preventDefault": {
								"type": "boolean"
							}
						},
						"required": ["keys"],
						"type": "object"
					},
					"type": "array"
				},
				"interop": {
					"$ref": "#/definitions/InteropConfig"
				},
				"isClosable": {
					"type": "boolean"
				},
				"manifestUrl": {
					"description": "**Platforms Only.** Url to a manifest that contains View Options. Properties other than manifestUrl can still be used\nbut the properties in the manifest will take precedence if there is any collision.",
					"type": "string"
				},
				"name": {
					"description": "The name of the view.",
					"type": "string"
				},
				"permissions": {
					"$ref": "#/definitions/Partial_6",
					"description": "API permissions for code running in the view."
				},
				"preloadScripts": {
					"description": "Scripts that run before page load.  When omitted, inherits from the parent application.",
					"items": {
						"additionalProperties": false,
						"description": "A script that is run before page load.",
						"properties": {
							"mandatory": {
								"type": "boolean"
							},
							"state": {
								"description": "Preload script execution state.",
								"enum": ["failed", "load-failed", "load-started", "load-succeeded", "succeeded"],
								"type": "string"
							},
							"url": {
								"description": "The URL from which the script was loaded.",
								"type": "string"
							}
						},
						"required": ["url"],
						"type": "object"
					},
					"type": "array"
				},
				"preventDragOut": {
					"type": "boolean"
				},
				"processAffinity": {
					"description": "String tag that attempts to group like-tagged renderers together. Will only be used if pages are on the same origin.",
					"type": "string"
				},
				"throttling": {
					"$ref": "#/definitions/ViewThrottling",
					"description": "{@inheritDoc ViewThrottling}"
				},
				"url": {
					"type": "string"
				},
				"zoomLevel": {
					"type": "number"
				}
			},
			"type": "object"
		},
		"__type_31": {
			"additionalProperties": false,
			"description": "Configuration Object for the show/hide tabs button within the browser toolbar",
			"properties": {
				"disabled": {
					"type": "boolean"
				},
				"tabsHiddenIconUrl": {
					"additionalProperties": false,
					"properties": {
						"disabled": {
							"description": "The URL of the icon to display when the button is disabled and tabs are hidden.\n\nThe button is disabled when the page is locked.",
							"type": "string"
						},
						"enabled": {
							"description": "The URL of the icon to display when the button is enabled and tabs are hidden.",
							"type": "string"
						}
					},
					"type": "object"
				},
				"tabsShownIconUrl": {
					"additionalProperties": false,
					"properties": {
						"disabled": {
							"description": "The URL of the icon to display when the button is disabled and tabs are hidden.\n\nThe button is disabled when the page is locked.",
							"type": "string"
						},
						"enabled": {
							"description": "The URL of the icon to display when the button is enabled and tabs are hidden.",
							"type": "string"
						}
					},
					"type": "object"
				},
				"type": {
					"$ref": "#/definitions/BrowserButtonType.ShowHideTabs"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"__type_32": {
			"additionalProperties": false,
			"description": "Configuration Object for the page lock/unlock button within the browser toolbar",
			"properties": {
				"disabled": {
					"type": "boolean"
				},
				"lockedIconUrl": {
					"type": "string"
				},
				"type": {
					"$ref": "#/definitions/BrowserButtonType.LockUnlockPage"
				},
				"unlockedIconUrl": {
					"type": "string"
				}
			},
			"required": ["type"],
			"type": "object"
		},
		"__type_33": {
			"additionalProperties": false,
			"properties": {
				"closeButton": {
					"additionalProperties": false,
					"description": "Used to manipulate behaviour of a close button on a page tab. If `undefined`, then close button is visible and actionable.\nIf either property true, this page tab's context menu will disable its 'Close Page' option.",
					"properties": {
						"disabled": {
							"type": "boolean"
						},
						"hidden": {
							"type": "boolean"
						}
					},
					"type": "object"
				},
				"iconUrl": {
					"description": "Icon that appears on a page tab if there are no unsaved changes. If 'undefined', default icon will appear.",
					"type": "string"
				},
				"panels": {
					"description": "Used to configure fixed views on the edges of the browser window. Only one panel per side is supported.",
					"items": {
						"$ref": "#/definitions/PanelConfig"
					},
					"type": "array"
				},
				"unsavedIconUrl": {
					"description": "Icon that appears on a page tab if there are unsaved changes (dirty state). If 'undefined', default icon will appear.",
					"type": "string"
				}
			},
			"type": "object"
		},
		"__type_34": {
			"additionalProperties": false,
			"properties": {
				"conditions": {
					"description": "Condition to determine if the item should be shown.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"display": {
					"description": "Should this entry show a single app or a group of apps.",
					"enum": ["group", "individual"],
					"type": "string"
				},
				"iconUrl": {
					"description": "The icon to use to distinguish this entry from others",
					"type": "string"
				},
				"noEntries": {
					"description": "Text to display if there are no entries because there are no tagged apps.",
					"type": "string"
				},
				"tags": {
					"description": "The tags to use to find the single app or a collection of apps that need to be listed. This will be compared\nagainst the tags associated with apps returned from the app data sources.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"tooltip": {
					"description": "The tooltip to be shown for this button/entry",
					"type": "string"
				},
				"visible": {
					"description": "Is the dock entry visible.",
					"type": "boolean"
				}
			},
			"required": ["display"],
			"type": "object"
		},
		"__type_35": {
			"additionalProperties": false,
			"properties": {
				"appId": {
					"description": "Launch an app by it's id.",
					"type": "string"
				},
				"conditions": {
					"description": "Condition to determine if the item should be shown.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"iconUrl": {
					"description": "The icon to use to distinguish this entry from others",
					"type": "string"
				},
				"tooltip": {
					"description": "The tooltip to be shown for this button/entry",
					"type": "string"
				},
				"visible": {
					"description": "Is the dock entry visible.",
					"type": "boolean"
				}
			},
			"required": ["appId"],
			"type": "object"
		},
		"__type_36": {
			"additionalProperties": false,
			"properties": {
				"action": {
					"additionalProperties": false,
					"description": "Launch an action.",
					"properties": {
						"customData": {
							"description": "data that should be passed to the action"
						},
						"id": {
							"description": "The id of the action to fire",
							"type": "string"
						}
					},
					"required": ["id"],
					"type": "object"
				},
				"conditions": {
					"description": "Condition to determine if the item should be shown.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"iconUrl": {
					"description": "The icon to use to distinguish this entry from others",
					"type": "string"
				},
				"tooltip": {
					"description": "The tooltip to be shown for this button/entry",
					"type": "string"
				},
				"visible": {
					"description": "Is the dock entry visible.",
					"type": "boolean"
				}
			},
			"required": ["action"],
			"type": "object"
		},
		"__type_37": {
			"additionalProperties": false,
			"properties": {
				"conditions": {
					"description": "Condition to determine if the item should be shown.",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"iconUrl": {
					"description": "The icon to use to distinguish this entry from others",
					"type": "string"
				},
				"noEntries": {
					"description": "Text to display if there are no entries because conditions have excluded options.",
					"type": "string"
				},
				"options": {
					"description": "List of button options",
					"items": {
						"anyOf": [
							{
								"$ref": "#/definitions/Omit_1"
							},
							{
								"$ref": "#/definitions/Omit_2"
							},
							{
								"$ref": "#/definitions/Omit_3"
							},
							{
								"$ref": "#/definitions/Omit_4"
							}
						]
					},
					"type": "array"
				},
				"tooltip": {
					"description": "The tooltip to be shown for this button/entry",
					"type": "string"
				},
				"visible": {
					"description": "Is the dock entry visible.",
					"type": "boolean"
				}
			},
			"required": ["options"],
			"type": "object"
		},
		"__type_38": {
			"additionalProperties": false,
			"properties": {
				"clientAPIVersion": {
					"description": "version of client SDK,  set by the API",
					"type": "string"
				},
				"commandCode": {
					"description": "A keycode that can be used to interact with this Search Provider.",
					"type": "string"
				},
				"description": {
					"description": "A short description of the Search Provider.",
					"type": "string"
				},
				"dispatchFocusEvents": {
					"description": "If set, focusing on a search result will trigger onResultDispatch callback.",
					"type": "boolean"
				},
				"hidden": {
					"description": "A flag to indicate this provider will not be displayed as a command.",
					"type": "boolean"
				},
				"icon": {
					"description": "An icon that a UI can display for the Search Provider.",
					"type": "string"
				},
				"id": {
					"description": "A unique ID used to identify the search provider.",
					"type": "string"
				},
				"identity": {
					"$ref": "#/definitions/Identity_5_1",
					"description": "The OpenFin identity that registered this search provider."
				},
				"inputPlaceholder": {
					"description": "The placeholder string to be displayed in a UI when targeting this specific Search Provider.",
					"type": "string"
				},
				"listTitle": {
					"description": "A title to display above the result list in a UI when targeting this specific Search Provider.",
					"type": "string"
				},
				"logoUrl": {
					"description": "Logo to show render when targeting this specific Search Provider.",
					"type": "string"
				},
				"scoreOrder": {
					"$ref": "#/definitions/ScoreOrder_1",
					"description": "The order to sort the score in. The default is `ascending`."
				},
				"title": {
					"description": "A UI friendly title for the search provider.",
					"type": "string"
				}
			},
			"type": "object"
		},
		"__type_39": {
			"additionalProperties": false,
			"properties": {
				"name": {
					"description": "The name of the component.  Must be unique within the owning application.",
					"type": "string"
				},
				"uuid": {
					"description": "Universally unique identifier of the application that owns the component.",
					"type": "string"
				}
			},
			"type": "object"
		},
		"__type_4": {
			"additionalProperties": false,
			"description": "Unique identifier for a window, view or iframe.",
			"properties": {
				"name": {
					"description": "The name of the component.  Must be unique within the owning application.",
					"type": "string"
				},
				"uuid": {
					"description": "Universally unique identifier of the application that owns the component.",
					"type": "string"
				}
			},
			"required": ["name", "uuid"],
			"type": "object"
		},
		"__type_40": {
			"additionalProperties": false,
			"description": "Options for using privately hosted notification service.",
			"properties": {
				"manifestUrl": {
					"description": "A custom manifest location to start the notification service from.\nThe UUID cannot be OpenFin hosted Notification Service UUID, 'notifications-service'.",
					"type": "string"
				},
				"manifestUuid": {
					"description": "The UUID of the provided custom notifications service manifest.\nThis value **MUST** match the UUID of the manifest provided in `manifestUrl`.",
					"type": "string"
				}
			},
			"required": ["manifestUrl", "manifestUuid"],
			"type": "object"
		},
		"__type_41": {
			"additionalProperties": false,
			"properties": {
				"interopSnapshotDetails": {
					"additionalProperties": false,
					"properties": {
						"contextGroupStates": {
							"$ref": "#/definitions/ContextGroupStates"
						}
					},
					"required": ["contextGroupStates"],
					"type": "object"
				},
				"snapshotDetails": {
					"additionalProperties": false,
					"properties": {
						"monitorInfo": {
							"$ref": "#/definitions/MonitorInfo"
						},
						"runtimeVersion": {
							"type": "string"
						},
						"timestamp": {
							"type": "string"
						}
					},
					"required": ["monitorInfo", "runtimeVersion", "timestamp"],
					"type": "object"
				},
				"windows": {
					"description": "The array of window options objects",
					"items": {
						"$ref": "#/definitions/WindowCreationOptions"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"__type_42": {
			"additionalProperties": false,
			"properties": {
				"deviceScaleFactor": {
					"description": "The device scale factor.",
					"type": "number"
				},
				"dpi": {
					"$ref": "#/definitions/Point"
				},
				"nonPrimaryMonitors": {
					"items": {
						"additionalProperties": false,
						"properties": {
							"available": {
								"$ref": "#/definitions/DipScaleRects",
								"description": "The available DIP scale coordinates."
							},
							"availableRect": {
								"$ref": "#/definitions/RectangleByEdgePositions",
								"description": "The available monitor coordinates."
							},
							"deviceId": {
								"description": "The device id of the display.",
								"type": ["string", "number"]
							},
							"deviceScaleFactor": {
								"description": "The device scale factor.",
								"type": "number"
							},
							"displayDeviceActive": {
								"description": "True if the display is active.",
								"type": "boolean"
							},
							"dpi": {
								"$ref": "#/definitions/Point"
							},
							"monitor": {
								"$ref": "#/definitions/DipScaleRects",
								"description": "The monitor coordinates."
							},
							"monitorRect": {
								"$ref": "#/definitions/RectangleByEdgePositions",
								"description": "The monitor coordinates."
							},
							"name": {
								"description": "The name of the display.",
								"type": ["string", "number"]
							}
						},
						"required": [
							"available",
							"availableRect",
							"deviceId",
							"deviceScaleFactor",
							"displayDeviceActive",
							"dpi",
							"monitor",
							"monitorRect",
							"name"
						],
						"type": "object"
					},
					"type": "array"
				},
				"primaryMonitor": {
					"$ref": "#/definitions/MonitorDetails"
				},
				"reason": {
					"description": "Always \"api-query\".",
					"type": "string"
				},
				"taskbar": {
					"$ref": "#/definitions/TaskBar"
				},
				"virtualScreen": {
					"$ref": "#/definitions/DipRect",
					"description": "The virtual display screen coordinates."
				}
			},
			"required": [
				"deviceScaleFactor",
				"dpi",
				"nonPrimaryMonitors",
				"primaryMonitor",
				"reason",
				"taskbar",
				"virtualScreen"
			],
			"type": "object"
		},
		"__type_43": {
			"additionalProperties": false,
			"properties": {
				"x": {
					"description": "The mouse x position",
					"type": "number"
				},
				"y": {
					"description": "The mouse y position",
					"type": "number"
				}
			},
			"required": ["x", "y"],
			"type": "object"
		},
		"__type_44": {
			"additionalProperties": false,
			"properties": {
				"dipRect": {
					"$ref": "#/definitions/RectangleByEdgePositions"
				},
				"scaledRect": {
					"$ref": "#/definitions/RectangleByEdgePositions"
				}
			},
			"required": ["dipRect", "scaledRect"],
			"type": "object"
		},
		"__type_45": {
			"additionalProperties": false,
			"properties": {
				"bottom": {
					"type": "number"
				},
				"left": {
					"type": "number"
				},
				"right": {
					"type": "number"
				},
				"top": {
					"type": "number"
				}
			},
			"required": ["bottom", "left", "right", "top"],
			"type": "object"
		},
		"__type_46": {
			"additionalProperties": false,
			"properties": {
				"available": {
					"$ref": "#/definitions/DipScaleRects",
					"description": "The available DIP scale coordinates."
				},
				"availableRect": {
					"$ref": "#/definitions/RectangleByEdgePositions",
					"description": "The available monitor coordinates."
				},
				"deviceId": {
					"description": "The device id of the display.",
					"type": ["string", "number"]
				},
				"deviceScaleFactor": {
					"description": "The device scale factor.",
					"type": "number"
				},
				"displayDeviceActive": {
					"description": "True if the display is active.",
					"type": "boolean"
				},
				"dpi": {
					"$ref": "#/definitions/Point"
				},
				"monitor": {
					"$ref": "#/definitions/DipScaleRects",
					"description": "The monitor coordinates."
				},
				"monitorRect": {
					"$ref": "#/definitions/RectangleByEdgePositions",
					"description": "The monitor coordinates."
				},
				"name": {
					"description": "The name of the display.",
					"type": ["string", "number"]
				}
			},
			"required": [
				"available",
				"availableRect",
				"deviceId",
				"deviceScaleFactor",
				"displayDeviceActive",
				"dpi",
				"monitor",
				"monitorRect",
				"name"
			],
			"type": "object"
		},
		"__type_47": {
			"additionalProperties": {
				"additionalProperties": {
					"additionalProperties": false,
					"description": "Data passed between entities and applications.",
					"properties": {
						"id": {
							"additionalProperties": {
								"type": "string"
							},
							"description": "An object containing string key-value pairs for the bulk of the data for the context. Differs between context types.",
							"type": "object"
						},
						"name": {
							"description": "User-readable name for the incoming context.",
							"type": "string"
						},
						"type": {
							"description": "Conserved type for the context (e.g. `instrument` or `country`).",
							"type": "string"
						}
					},
					"required": ["type"],
					"type": "object"
				},
				"type": "object"
			},
			"type": "object"
		},
		"__type_48": {
			"additionalProperties": false,
			"properties": {
				"alias": {
					"type": "string"
				},
				"arguments": {
					"description": "The arguments to pass to the application.",
					"type": "string"
				},
				"certificate": {
					"$ref": "#/definitions/CertificationInfo"
				},
				"cwd": {
					"description": "Current working directory.",
					"type": "string"
				},
				"initialWindowState": {
					"description": "Initial window state after launching: 'normal' (default), 'minimized', 'maximized'.",
					"type": "string"
				},
				"lifetime": {
					"type": "string"
				},
				"listener": {
					"$ref": "#/definitions/LaunchExternalProcessListener"
				},
				"path": {
					"description": "The file path to where the running application resides.",
					"type": "string"
				},
				"uuid": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"__type_49": {
			"additionalProperties": false,
			"type": "object"
		},
		"__type_5": {
			"additionalProperties": false,
			"description": "Configures how new content (e,g, from `window.open` or a link) is opened.",
			"properties": {
				"rules": {
					"description": "List of rules for creation of new content.",
					"items": {
						"$ref": "#/definitions/ContentCreationRule<ContentCreationBehavior>"
					},
					"type": "array"
				}
			},
			"required": ["rules"],
			"type": "object"
		},
		"__type_50": {
			"additionalProperties": false,
			"properties": {
				"publickey": {
					"type": "string"
				},
				"serial": {
					"type": "string"
				},
				"subject": {
					"type": "string"
				},
				"thumbprint": {
					"type": "string"
				},
				"trusted": {
					"type": "boolean"
				}
			},
			"type": "object"
		},
		"__type_51": {
			"additionalProperties": false,
			"properties": {
				"alias": {
					"description": "The name of the asset",
					"type": "string"
				},
				"args": {
					"description": "The default command line arguments for the aforementioned target.",
					"type": "string"
				},
				"mandatory": {
					"description": "When set to true, the app will fail to load if the asset cannot be downloaded.\nWhen set to false, the app will continue to load if the asset cannot be downloaded. (Default: true)",
					"type": "boolean"
				},
				"src": {
					"description": "The URL to a zip file containing the package files (executables, dlls, etc…)",
					"type": "string"
				},
				"target": {
					"description": "Specify default executable to launch. This option can be overridden in launchExternalProcess",
					"type": "string"
				},
				"version": {
					"description": "The version of the package",
					"type": "string"
				}
			},
			"type": "object"
		},
		"__type_52": {
			"additionalProperties": false,
			"properties": {
				"height": {
					"type": "number"
				},
				"left": {
					"type": "number"
				},
				"top": {
					"type": "number"
				},
				"width": {
					"type": "number"
				}
			},
			"type": "object"
		},
		"__type_53": {
			"additionalProperties": false,
			"properties": {
				"customData": {
					"description": "A field that the user can attach serializable data to be ferried around with the window options.\n_When omitted, _inherits_ from the parent application._"
				},
				"interop": {
					"$ref": "#/definitions/InteropConfig"
				},
				"url": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"__type_54": {
			"additionalProperties": false,
			"properties": {
				"customData": {
					"description": "A field that the user can attach serializable data to be ferried around with the window options.\n_When omitted, _inherits_ from the parent application._"
				},
				"interop": {
					"$ref": "#/definitions/InteropConfig"
				},
				"url": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"__type_55": {
			"additionalProperties": false,
			"type": "object"
		},
		"__type_56": {
			"additionalProperties": false,
			"type": "object"
		},
		"__type_57": {
			"additionalProperties": false,
			"properties": {
				"alias": {
					"description": "The name of the asset",
					"type": "string"
				},
				"args": {
					"description": "The default command line arguments for the aforementioned target.",
					"type": "string"
				},
				"mandatory": {
					"description": "When set to true, the app will fail to load if the asset cannot be downloaded.\nWhen set to false, the app will continue to load if the asset cannot be downloaded. (Default: true)",
					"type": "boolean"
				},
				"src": {
					"description": "The URL to a zip file containing the package files (executables, dlls, etc…)",
					"type": "string"
				},
				"target": {
					"description": "Specify default executable to launch. This option can be overridden in launchExternalProcess",
					"type": "string"
				},
				"version": {
					"description": "The version of the package",
					"type": "string"
				}
			},
			"required": ["alias", "src", "version"],
			"type": "object"
		},
		"__type_58": {
			"additionalProperties": false,
			"properties": {
				"interopSnapshotDetails": {
					"additionalProperties": false,
					"properties": {
						"contextGroupStates": {
							"$ref": "#/definitions/ContextGroupStates"
						}
					},
					"required": ["contextGroupStates"],
					"type": "object"
				},
				"snapshotDetails": {
					"additionalProperties": false,
					"properties": {
						"monitorInfo": {
							"$ref": "#/definitions/MonitorInfo"
						},
						"runtimeVersion": {
							"type": "string"
						},
						"timestamp": {
							"type": "string"
						}
					},
					"required": ["monitorInfo", "runtimeVersion", "timestamp"],
					"type": "object"
				},
				"windows": {
					"description": "The array of window options objects",
					"items": {
						"$ref": "#/definitions/WindowCreationOptions"
					},
					"type": "array"
				}
			},
			"required": ["windows"],
			"type": "object"
		},
		"__type_59": {
			"additionalProperties": false,
			"properties": {
				"_internalWorkspaceData": {},
				"accelerator": {
					"$ref": "#/definitions/Partial_4",
					"description": "Enable keyboard shortcuts for devtools, zoom, reload, and reload ignoring cache."
				},
				"alphaMask": {
					"$ref": "#/definitions/RGB",
					"description": "Turns anything of matching RGB value transparent.\n\nCaveats:\n* runtime key --disable-gpu is required. Note: Unclear behavior on remote Desktop support\n* User cannot click-through transparent regions\n* Not supported on Mac\n* Windows Aero must be enabled\n* Won't make visual sense on Pixel-pushed environments such as Citrix\n* Not supported on rounded corner windows"
				},
				"alwaysOnTop": {
					"type": "boolean"
				},
				"api": {
					"$ref": "#/definitions/Api",
					"description": "Configurations for API injection."
				},
				"applicationIcon": {
					"type": "string"
				},
				"aspectRatio": {
					"type": "number"
				},
				"autoShow": {
					"description": "Automatically show the window when it is created.",
					"type": "boolean"
				},
				"autoplayPolicy": {
					"$ref": "#/definitions/AutoplayPolicyOptions",
					"description": "Autoplay policy to apply to content in the window, can be\n`no-user-gesture-required`, `user-gesture-required`,\n`document-user-activation-required`. Defaults to `no-user-gesture-required`."
				},
				"backgroundColor": {
					"description": "The window’s _backfill_ color as a hexadecimal value. Not to be confused with the content background color\n(`document.body.style.backgroundColor`),\nthis color briefly fills a window’s (a) content area before its content is loaded as well as (b) newly exposed\nareas when growing a window. Setting\nthis value to the anticipated content background color can help improve user experience.\nDefault is white.",
					"type": "string"
				},
				"backgroundThrottling": {
					"type": "boolean"
				},
				"closeOnLastViewRemoved": {
					"type": "boolean"
				},
				"contentCreation": {
					"$ref": "#/definitions/ContentCreationOptions",
					"description": "Configures how new content (e,g, from `window.open` or a link) is opened."
				},
				"contentNavigation": {
					"$ref": "#/definitions/ContentNavigation",
					"description": "Restrict navigation to URLs that match an allowed pattern.\nIn the lack of an allowlist, navigation to URLs that match a denied pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contentRedirect": {
					"$ref": "#/definitions/Partial_5",
					"description": "Restrict redirects to URLs that match an allowed pattern.\nIn the lack of an allowlist, redirects to URLs that match a denied pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contextMenu": {
					"type": "boolean"
				},
				"contextMenuOptions": {
					"$ref": "#/definitions/ContextMenuOptions",
					"description": "Configure the context menu when right-clicking on a window."
				},
				"contextMenuSettings": {
					"$ref": "#/definitions/ContextMenuSettings"
				},
				"cornerRounding": {
					"$ref": "#/definitions/Partial_3",
					"description": "Defines and applies rounded corners for a frameless window. **NOTE:** On macOS corner is not ellipse but circle rounded by the\n average of _height_ and _width_."
				},
				"customContext": {
					"description": "A field that the user can use to attach serializable data that will be saved when {@link Platform#getSnapshot Platform.getSnapshot}\nis called.  If a window in a Platform is trying to update or retrieve its own context, it can use the\n{@link Platform#setWindowContext Platform.setWindowContext} and {@link Platform#getWindowContext Platform.getWindowContext} calls.\n_When omitted, _inherits_ from the parent application._\nAs opposed to customData, this is meant for frequent updates and sharing with other contexts."
				},
				"customData": {
					"description": "A field that the user can attach serializable data to be ferried around with the window options.\n_When omitted, _inherits_ from the parent application._"
				},
				"customRequestHeaders": {
					"description": "Custom headers for requests sent by the window.",
					"items": {
						"additionalProperties": false,
						"description": "Custom headers for requests sent by the window.",
						"properties": {
							"headers": {
								"description": "Headers for requests sent by window; {key: value} results\nin a header of `key=value`.",
								"items": {
									"additionalProperties": {
										"type": "string"
									},
									"description": "Object representing headers and their values, where the\nobject key is the name of header and value key is the value of the header",
									"type": "object"
								},
								"type": "array"
							},
							"urlPatterns": {
								"description": "The URL patterns for which the headers will be applied.",
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": ["headers", "urlPatterns"],
						"type": "object"
					},
					"type": "array"
				},
				"defaultCentered": {
					"description": "Centers the window in the primary monitor. This option overrides `defaultLeft` and `defaultTop`. When `saveWindowState` is `true`,\nthis value will be ignored for subsequent launches in favor of the cached value.\n\n**NOTE:** On macOS _defaultCenter_ is somewhat above center vertically.",
					"type": "boolean"
				},
				"defaultHeight": {
					"type": "number"
				},
				"defaultLeft": {
					"type": "number"
				},
				"defaultTop": {
					"type": "number"
				},
				"defaultWidth": {
					"type": "number"
				},
				"downloadShelf": {
					"$ref": "#/definitions/DownloadShelfOptions",
					"description": "Controls the styling and behavior of the window download shelf."
				},
				"experimental": {},
				"fdc3InteropApi": {
					"type": "string"
				},
				"frame": {
					"type": "boolean"
				},
				"height": {
					"type": "number"
				},
				"hideOnClose": {
					"type": "boolean"
				},
				"hotkeys": {
					"description": "Defines the hotkeys that will be emitted as a `hotkey` event on the window.\nWithin Platform, OpenFin also implements a set of pre-defined actions called\n{@link https://developers.openfin.co/docs/platform-api#section-5-3-using-keyboard-commands keyboard commands}\nthat can be assigned to a specific hotkey in the platform manifest.",
					"items": {
						"additionalProperties": false,
						"description": "A hotkey binding.",
						"properties": {
							"keys": {
								"description": "The key combination of the hotkey, i.e. \"Ctrl+T\".",
								"type": "string"
							},
							"preventDefault": {
								"type": "boolean"
							}
						},
						"required": ["keys"],
						"type": "object"
					},
					"type": "array"
				},
				"icon": {
					"description": "A URL for the icon to be shown in the window title bar and the taskbar.\nWhen omitted, inherits from the parent application.\n\nNote: Window OS caches taskbar icons, therefore an icon change might only be visible after the cache is removed or the uuid is changed.",
					"type": "string"
				},
				"ignoreSavedWindowState": {
					"description": "Ignores the cached state of the window.\nDefaults the opposite value of `saveWindowState` to maintain backwards compatibility.",
					"type": "boolean"
				},
				"includeInSnapshots": {
					"type": "boolean"
				},
				"inheritance": {
					"$ref": "#/definitions/Partial_9",
					"description": "Controls whether an option is inherited from the parent application. The option is set as part of the window options for the parent application in either the {@link Manifest.startup_app} or {@link Manifest.platform} properties in the manifest or in {@link ApplicationOptions.mainWindowOptions} when calling {@link Application.ApplicationModule.start Application.start}. Use { [option]: false } to disable a specific [option]. All inheritable properties will be inherited by default if omitted."
				},
				"interop": {
					"$ref": "#/definitions/InteropConfig"
				},
				"layout": {},
				"layoutSnapshot": {
					"$ref": "#/definitions/LayoutSnapshot"
				},
				"maxHeight": {
					"type": "number"
				},
				"maxWidth": {
					"type": "number"
				},
				"maximizable": {
					"type": "boolean"
				},
				"minHeight": {
					"type": "number"
				},
				"minWidth": {
					"type": "number"
				},
				"minimizable": {
					"type": "boolean"
				},
				"modalParentIdentity": {
					"$ref": "#/definitions/Identity_5",
					"description": "Parent identity of a modal window. It will create a modal child window when this option is set."
				},
				"name": {
					"description": "The name of the window.",
					"type": "string"
				},
				"opacity": {
					"type": "number"
				},
				"permissions": {
					"$ref": "#/definitions/Partial_6",
					"description": "API permissions for code running in the window."
				},
				"preloadScripts": {
					"description": "Scripts that run before page load.  When omitted, inherits from the parent application.",
					"items": {
						"additionalProperties": false,
						"description": "A script that is run before page load.",
						"properties": {
							"mandatory": {
								"type": "boolean"
							},
							"state": {
								"description": "Preload script execution state.",
								"enum": ["failed", "load-failed", "load-started", "load-succeeded", "succeeded"],
								"type": "string"
							},
							"url": {
								"description": "The URL from which the script was loaded.",
								"type": "string"
							}
						},
						"required": ["url"],
						"type": "object"
					},
					"type": "array"
				},
				"processAffinity": {
					"description": "String tag that attempts to group like-tagged renderers together. Will only be used if pages are on the same origin.",
					"type": "string"
				},
				"resizable": {
					"type": "boolean"
				},
				"resizeRegion": {
					"$ref": "#/definitions/ResizeRegion",
					"description": "Defines a region in pixels that will respond to user mouse interaction for resizing a frameless window."
				},
				"saveWindowState": {
					"type": "boolean"
				},
				"shadow": {
					"type": "boolean"
				},
				"showBackgroundImages": {
					"type": "boolean"
				},
				"showTaskbarIcon": {
					"type": "boolean"
				},
				"smallWindow": {
					"type": "boolean"
				},
				"state": {
					"$ref": "#/definitions/WindowState"
				},
				"stylesheetUrl": {
					"description": "Specify a path of a custom CSS file to be injected to all of the platform's windows.\n_note_: this option is only applied to windows that use the Default OpenFin Window.\nWindows with a specified url (Custom Windows) will not be affected by this option.",
					"type": "string"
				},
				"taskbarIcon": {
					"type": "string"
				},
				"taskbarIconGroup": {
					"description": "Specify a taskbar group for the window.\n_If omitted, defaults to app's uuid (`fin.Application.getCurrentSync().identity.uuid`)._",
					"type": "string"
				},
				"throttling": {
					"$ref": "#/definitions/WindowThrottling",
					"description": "{@inheritDoc WindowThrottling}"
				},
				"url": {
					"type": "string"
				},
				"uuid": {
					"type": "string"
				},
				"viewVisibility": {
					"$ref": "#/definitions/ViewVisibilityOptions",
					"description": "_Platform Windows Only_. Controls behavior for showing views when they are being resized by the user."
				},
				"viewsPreventingClose": {
					"enum": ["all", "layout"],
					"type": "string"
				},
				"waitForPageLoad": {
					"type": "boolean"
				},
				"width": {
					"type": "number"
				},
				"workspacePlatform": {
					"$ref": "#/definitions/WorkspacePlatformOptions"
				},
				"x": {
					"type": "number"
				},
				"y": {
					"type": "number"
				}
			},
			"type": "object"
		},
		"__type_6": {
			"additionalProperties": false,
			"properties": {
				"_internalWorkspaceData": {},
				"accelerator": {
					"$ref": "#/definitions/Partial_4",
					"description": "Enable keyboard shortcuts for devtools, zoom, reload, and reload ignoring cache."
				},
				"alphaMask": {
					"$ref": "#/definitions/RGB",
					"description": "Turns anything of matching RGB value transparent.\n\nCaveats:\n* runtime key --disable-gpu is required. Note: Unclear behavior on remote Desktop support\n* User cannot click-through transparent regions\n* Not supported on Mac\n* Windows Aero must be enabled\n* Won't make visual sense on Pixel-pushed environments such as Citrix\n* Not supported on rounded corner windows"
				},
				"alwaysOnTop": {
					"type": "boolean"
				},
				"api": {
					"$ref": "#/definitions/Api",
					"description": "Configurations for API injection."
				},
				"applicationIcon": {
					"type": "string"
				},
				"aspectRatio": {
					"type": "number"
				},
				"autoShow": {
					"description": "Automatically show the window when it is created.",
					"type": "boolean"
				},
				"autoplayPolicy": {
					"$ref": "#/definitions/AutoplayPolicyOptions",
					"description": "Autoplay policy to apply to content in the window, can be\n`no-user-gesture-required`, `user-gesture-required`,\n`document-user-activation-required`. Defaults to `no-user-gesture-required`."
				},
				"backgroundColor": {
					"description": "The window’s _backfill_ color as a hexadecimal value. Not to be confused with the content background color\n(`document.body.style.backgroundColor`),\nthis color briefly fills a window’s (a) content area before its content is loaded as well as (b) newly exposed\nareas when growing a window. Setting\nthis value to the anticipated content background color can help improve user experience.\nDefault is white.",
					"type": "string"
				},
				"backgroundThrottling": {
					"type": "boolean"
				},
				"closeOnLastViewRemoved": {
					"type": "boolean"
				},
				"contentCreation": {
					"$ref": "#/definitions/ContentCreationOptions",
					"description": "Configures how new content (e,g, from `window.open` or a link) is opened."
				},
				"contentNavigation": {
					"$ref": "#/definitions/ContentNavigation",
					"description": "Restrict navigation to URLs that match an allowed pattern.\nIn the lack of an allowlist, navigation to URLs that match a denied pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contentRedirect": {
					"$ref": "#/definitions/Partial_5",
					"description": "Restrict redirects to URLs that match an allowed pattern.\nIn the lack of an allowlist, redirects to URLs that match a denied pattern would be prohibited.\nSee [here](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) for more details."
				},
				"contextMenu": {
					"type": "boolean"
				},
				"contextMenuOptions": {
					"$ref": "#/definitions/ContextMenuOptions",
					"description": "Configure the context menu when right-clicking on a window."
				},
				"contextMenuSettings": {
					"$ref": "#/definitions/ContextMenuSettings"
				},
				"cornerRounding": {
					"$ref": "#/definitions/Partial_3",
					"description": "Defines and applies rounded corners for a frameless window. **NOTE:** On macOS corner is not ellipse but circle rounded by the\n average of _height_ and _width_."
				},
				"customContext": {
					"description": "A field that the user can use to attach serializable data that will be saved when {@link Platform#getSnapshot Platform.getSnapshot}\nis called.  If a window in a Platform is trying to update or retrieve its own context, it can use the\n{@link Platform#setWindowContext Platform.setWindowContext} and {@link Platform#getWindowContext Platform.getWindowContext} calls.\n_When omitted, _inherits_ from the parent application._\nAs opposed to customData, this is meant for frequent updates and sharing with other contexts."
				},
				"customData": {
					"description": "A field that the user can attach serializable data to be ferried around with the window options.\n_When omitted, _inherits_ from the parent application._"
				},
				"customRequestHeaders": {
					"description": "Custom headers for requests sent by the window.",
					"items": {
						"additionalProperties": false,
						"description": "Custom headers for requests sent by the window.",
						"properties": {
							"headers": {
								"description": "Headers for requests sent by window; {key: value} results\nin a header of `key=value`.",
								"items": {
									"additionalProperties": {
										"type": "string"
									},
									"description": "Object representing headers and their values, where the\nobject key is the name of header and value key is the value of the header",
									"type": "object"
								},
								"type": "array"
							},
							"urlPatterns": {
								"description": "The URL patterns for which the headers will be applied.",
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": ["headers", "urlPatterns"],
						"type": "object"
					},
					"type": "array"
				},
				"defaultCentered": {
					"description": "Centers the window in the primary monitor. This option overrides `defaultLeft` and `defaultTop`. When `saveWindowState` is `true`,\nthis value will be ignored for subsequent launches in favor of the cached value.\n\n**NOTE:** On macOS _defaultCenter_ is somewhat above center vertically.",
					"type": "boolean"
				},
				"defaultHeight": {
					"type": "number"
				},
				"defaultLeft": {
					"type": "number"
				},
				"defaultTop": {
					"type": "number"
				},
				"defaultWidth": {
					"type": "number"
				},
				"downloadShelf": {
					"$ref": "#/definitions/DownloadShelfOptions",
					"description": "Controls the styling and behavior of the window download shelf."
				},
				"experimental": {},
				"fdc3InteropApi": {
					"type": "string"
				},
				"frame": {
					"type": "boolean"
				},
				"height": {
					"type": "number"
				},
				"hideOnClose": {
					"type": "boolean"
				},
				"hotkeys": {
					"description": "Defines the hotkeys that will be emitted as a `hotkey` event on the window.\nWithin Platform, OpenFin also implements a set of pre-defined actions called\n{@link https://developers.openfin.co/docs/platform-api#section-5-3-using-keyboard-commands keyboard commands}\nthat can be assigned to a specific hotkey in the platform manifest.",
					"items": {
						"additionalProperties": false,
						"description": "A hotkey binding.",
						"properties": {
							"keys": {
								"description": "The key combination of the hotkey, i.e. \"Ctrl+T\".",
								"type": "string"
							},
							"preventDefault": {
								"type": "boolean"
							}
						},
						"required": ["keys"],
						"type": "object"
					},
					"type": "array"
				},
				"icon": {
					"description": "A URL for the icon to be shown in the window title bar and the taskbar.\nWhen omitted, inherits from the parent application.\n\nNote: Window OS caches taskbar icons, therefore an icon change might only be visible after the cache is removed or the uuid is changed.",
					"type": "string"
				},
				"ignoreSavedWindowState": {
					"description": "Ignores the cached state of the window.\nDefaults the opposite value of `saveWindowState` to maintain backwards compatibility.",
					"type": "boolean"
				},
				"includeInSnapshots": {
					"type": "boolean"
				},
				"inheritance": {
					"$ref": "#/definitions/Partial_9",
					"description": "Controls whether an option is inherited from the parent application. The option is set as part of the window options for the parent application in either the {@link Manifest.startup_app} or {@link Manifest.platform} properties in the manifest or in {@link ApplicationOptions.mainWindowOptions} when calling {@link Application.ApplicationModule.start Application.start}. Use { [option]: false } to disable a specific [option]. All inheritable properties will be inherited by default if omitted."
				},
				"interop": {
					"$ref": "#/definitions/InteropConfig"
				},
				"layout": {},
				"layoutSnapshot": {
					"$ref": "#/definitions/LayoutSnapshot"
				},
				"maxHeight": {
					"type": "number"
				},
				"maxWidth": {
					"type": "number"
				},
				"maximizable": {
					"type": "boolean"
				},
				"minHeight": {
					"type": "number"
				},
				"minWidth": {
					"type": "number"
				},
				"minimizable": {
					"type": "boolean"
				},
				"modalParentIdentity": {
					"$ref": "#/definitions/Identity_5",
					"description": "Parent identity of a modal window. It will create a modal child window when this option is set."
				},
				"name": {
					"description": "The name of the window.",
					"type": "string"
				},
				"opacity": {
					"type": "number"
				},
				"permissions": {
					"$ref": "#/definitions/Partial_6",
					"description": "API permissions for code running in the window."
				},
				"preloadScripts": {
					"description": "Scripts that run before page load.  When omitted, inherits from the parent application.",
					"items": {
						"additionalProperties": false,
						"description": "A script that is run before page load.",
						"properties": {
							"mandatory": {
								"type": "boolean"
							},
							"state": {
								"description": "Preload script execution state.",
								"enum": ["failed", "load-failed", "load-started", "load-succeeded", "succeeded"],
								"type": "string"
							},
							"url": {
								"description": "The URL from which the script was loaded.",
								"type": "string"
							}
						},
						"required": ["url"],
						"type": "object"
					},
					"type": "array"
				},
				"processAffinity": {
					"description": "String tag that attempts to group like-tagged renderers together. Will only be used if pages are on the same origin.",
					"type": "string"
				},
				"resizable": {
					"type": "boolean"
				},
				"resizeRegion": {
					"$ref": "#/definitions/ResizeRegion",
					"description": "Defines a region in pixels that will respond to user mouse interaction for resizing a frameless window."
				},
				"saveWindowState": {
					"type": "boolean"
				},
				"shadow": {
					"type": "boolean"
				},
				"showBackgroundImages": {
					"type": "boolean"
				},
				"showTaskbarIcon": {
					"type": "boolean"
				},
				"smallWindow": {
					"type": "boolean"
				},
				"state": {
					"$ref": "#/definitions/WindowState"
				},
				"taskbarIcon": {
					"type": "string"
				},
				"taskbarIconGroup": {
					"description": "Specify a taskbar group for the window.\n_If omitted, defaults to app's uuid (`fin.Application.getCurrentSync().identity.uuid`)._",
					"type": "string"
				},
				"throttling": {
					"$ref": "#/definitions/WindowThrottling",
					"description": "{@inheritDoc WindowThrottling}"
				},
				"url": {
					"type": "string"
				},
				"uuid": {
					"type": "string"
				},
				"viewVisibility": {
					"$ref": "#/definitions/ViewVisibilityOptions",
					"description": "_Platform Windows Only_. Controls behavior for showing views when they are being resized by the user."
				},
				"viewsPreventingClose": {
					"enum": ["all", "layout"],
					"type": "string"
				},
				"waitForPageLoad": {
					"type": "boolean"
				},
				"width": {
					"type": "number"
				},
				"workspacePlatform": {
					"$ref": "#/definitions/WorkspacePlatformOptions"
				},
				"x": {
					"type": "number"
				},
				"y": {
					"type": "number"
				}
			},
			"type": "object"
		},
		"__type_60": {
			"additionalProperties": false,
			"properties": {
				"contextGroups": {
					"items": {
						"additionalProperties": false,
						"description": "Information for a Context Group. Contains metadata for displaying the group properly.",
						"properties": {
							"displayMetadata": {
								"$ref": "#/definitions/DisplayMetadata",
								"description": "Metadata for the Context Group. Contains the group's human-readable name, color, and an image, as defined by the Interop Broker."
							},
							"id": {
								"description": "Unique identifier of the context group.",
								"type": "string"
							}
						},
						"required": ["id"],
						"type": "object"
					},
					"type": "array"
				},
				"logging": {
					"$ref": "#/definitions/InteropLoggingOptions"
				}
			},
			"type": "object"
		},
		"__type_61": {
			"additionalProperties": false,
			"description": "The display data for a context group.",
			"properties": {
				"color": {
					"description": "The color that should be associated within this context group when displaying this context group in a UI, e.g: `0xFF0000`.",
					"type": "string"
				},
				"glyph": {
					"description": "A URL of an image that can be used to display this context group",
					"type": "string"
				},
				"name": {
					"description": "A user-readable name for this context group, e.g: `\"Red\"`",
					"type": "string"
				}
			},
			"type": "object"
		},
		"__type_62": {
			"additionalProperties": false,
			"properties": {
				"afterAction": {
					"additionalProperties": false,
					"description": "Define whether to enable interop action logging.",
					"properties": {
						"enabled": {
							"type": "boolean"
						}
					},
					"required": ["enabled"],
					"type": "object"
				},
				"beforeAction": {
					"additionalProperties": false,
					"description": "Define whether to enable interop action logging.",
					"properties": {
						"enabled": {
							"type": "boolean"
						}
					},
					"required": ["enabled"],
					"type": "object"
				}
			},
			"required": ["afterAction", "beforeAction"],
			"type": "object"
		},
		"__type_63": {
			"additionalProperties": false,
			"properties": {
				"default": {
					"$ref": "#/definitions/PerDomainSettings",
					"description": "Default values for settings in {@link DomainSettingsRule}."
				},
				"rules": {
					"description": "{@inheritDoc DomainSettingsRule}",
					"items": {
						"additionalProperties": false,
						"properties": {
							"match": {
								"description": "Array of [match patterns](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) specifying\nthe domain(s) for which the rule applies.",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"matchOptions": {
								"$ref": "#/definitions/RuleMatchOptions",
								"description": "Options to use when comparing URIs to the `match` patterns."
							},
							"options": {
								"$ref": "#/definitions/PerDomainSettings",
								"description": "Settings applied when a webcontents has been navigated to a matched domain."
							}
						},
						"required": ["options"],
						"type": "object"
					},
					"type": "array"
				}
			},
			"required": ["rules"],
			"type": "object"
		},
		"__type_64": {
			"additionalProperties": false,
			"properties": {
				"api": {
					"$ref": "#/definitions/DomainApiSettings",
					"description": "{@inheritDoc ApiInjection}"
				},
				"content": {
					"$ref": "#/definitions/ContentPermission",
					"description": "Whether DOM content can be loaded (by navigation or redirect)."
				},
				"downloadSettings": {
					"$ref": "#/definitions/FileDownloadSettings",
					"description": "{@inheritDoc FileDownloadSettings}"
				}
			},
			"type": "object"
		},
		"__type_65": {
			"additionalProperties": false,
			"description": "Domain-conditional rules for file downloads.",
			"properties": {
				"rules": {
					"description": "{@inheritDoc DownloadRule}",
					"items": {
						"additionalProperties": false,
						"properties": {
							"behavior": {
								"$ref": "#/definitions/FileDownloadBehavior",
								"description": "{@inheritDoc FileDownloadBehavior}"
							},
							"match": {
								"description": "Array of [match patterns](https://developer.chrome.com/docs/extensions/develop/concepts/match-patterns) specifying\nURL(s) of the resource(s) being downloaded.",
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"required": ["behavior", "match"],
						"type": "object"
					},
					"type": "array"
				}
			},
			"required": ["rules"],
			"type": "object"
		},
		"__type_66": {
			"additionalProperties": false,
			"properties": {
				"fin": {
					"$ref": "#/definitions/InjectionType",
					"description": "Injection setting for the `fin` API for contexts on a matched domain.\n\n* 'none': The `fin` API will be not available.\n* 'global': The entire `fin` API will be available."
				},
				"permissions": {
					"$ref": "#/definitions/Permissions_2",
					"description": "API permissions for domains matched to the current {@link DomainSettingsRule}."
				}
			},
			"type": "object"
		},
		"__type_67": {
			"additionalProperties": false,
			"properties": {
				"Application": {
					"$ref": "#/definitions/Partial_7"
				},
				"System": {
					"$ref": "#/definitions/Partial_8"
				},
				"devices": {
					"items": {
						"additionalProperties": false,
						"properties": {
							"productId": {
								"type": ["string", "number"]
							},
							"vendorId": {
								"type": ["string", "number"]
							}
						},
						"required": ["productId", "vendorId"],
						"type": "object"
					},
					"type": "array"
				},
				"webAPIs": {
					"items": {
						"$ref": "#/definitions/WebPermission"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"__type_7": {
			"additionalProperties": false,
			"properties": {
				"blue": {
					"type": "number"
				},
				"green": {
					"type": "number"
				},
				"red": {
					"type": "number"
				}
			},
			"required": ["blue", "green", "red"],
			"type": "object"
		},
		"__type_8": {
			"additionalProperties": false,
			"properties": {
				"devtools": {
					"description": "Should the context menu contain a button for opening devtools.",
					"type": "boolean"
				},
				"enable": {
					"description": "Should the context menu display on right click.",
					"type": "boolean"
				},
				"reload": {
					"description": "Should the context menu contain a button for reloading the page.",
					"type": "boolean"
				}
			},
			"required": ["enable"],
			"type": "object"
		},
		"__type_9": {
			"additionalProperties": false,
			"description": "Configure the context menu when right-clicking on a window.",
			"properties": {
				"enabled": {
					"description": "Displays the context menu on right click.",
					"type": "boolean"
				},
				"template": {
					"$ref": "#/definitions/Array_1",
					"description": "Context menu items to display on right-click."
				}
			},
			"type": "object"
		},
		"unknown": {}
	}
}
