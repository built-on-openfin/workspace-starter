/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@openfin/workspace-platform/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@openfin/workspace-platform/index.js ***!
  \***********************************************************/
/***/ ((module) => {

(()=>{"use strict";var e,t,a,n,o,i,r,s={d:(e,t)=>{for(var a in t)s.o(t,a)&&!s.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},c={};s.r(c),s.d(c,{AppManifestType:()=>i,BrowserButtonType:()=>u,CustomActionCallerType:()=>y,GlobalContextMenuOptionType:()=>p,PageTabContextMenuOptionType:()=>l,SaveButtonContextMenuOptionType:()=>g,SaveModalType:()=>h,ViewTabMenuOptionType:()=>w,getCurrentSync:()=>Et,init:()=>xa,wrapSync:()=>Mt}),function(e){e.Fetching="fetching",e.Fetched="fetched",e.Complete="complete"}(e||(e={})),function(e){e.Active="active",e.Default="default"}(t||(t={})),function(e){e.Suggestion="suggestion"}(a||(a={})),function(e){e.Contact="Contact",e.Custom="Custom",e.List="List",e.Plain="Plain",e.SimpleText="SimpleText"}(n||(n={})),function(e){e.MultiSelect="MultiSelect"}(o||(o={})),function(e){e.Snapshot="snapshot",e.Manifest="manifest",e.View="view",e.External="external"}(i||(i={})),function(e){e.LandingPage="landingPage",e.AppGrid="appGrid"}(r||(r={}));var d,p,l,w,u,g,y,h,f;!function(e){e.Primary="primary",e.Secondary="secondary",e.TextOnly="textOnly"}(d||(d={})),function(e){e.NewWindow="NewWindow",e.NewPage="NewPage",e.SaveWorkspace="SaveWorkspace",e.SavePage="SavePage",e.SavePageAs="SavePageAs",e.CloseWindow="CloseWindow",e.SaveWorkspaceAs="SaveWorkspaceAs",e.RenameWorkspace="RenameWorkspace",e.SwitchWorkspace="SwitchWorkspace",e.DeleteWorkspace="DeleteWorkspace",e.OpenStorefront="OpenStorefront",e.Quit="Quit",e.Custom="Custom"}(p||(p={})),function(e){e.Close="Close",e.Duplicate="Duplicate",e.Rename="Rename",e.Save="Save",e.SaveAs="Save As",e.Custom="Custom"}(l||(l={})),function(e){e.NewView="NewView",e.DuplicateViews="DuplicateView",e.OpenWithDefaultBrowser="OpenWithDefaultBrowser",e.ReloadViews="ReloadTab",e.CloseViews="CloseTab",e.AddToChannel="AddToChannel",e.RemoveFromChannel="RemoveFromChannel",e.Custom="Custom"}(w||(w={})),function(e){e.ShowHideTabs="ShowHideTabs",e.ColorLinking="ColorLinking",e.PresetLayouts="PresetLayouts",e.SaveMenu="SaveMenu",e.Minimise="Minimise",e.Maximise="Maximise",e.Close="Close",e.Custom="Custom"}(u||(u={})),function(e){e.SavePage="SavePage",e.SaveWorkspace="SaveWorkspace",e.Custom="Custom"}(g||(g={})),function(e){e.CustomButton="CustomButton",e.GlobalContextMenu="GlobalContextMenu",e.ViewTabContextMenu="ViewTabContextMenu",e.PageTabContextMenu="PageTabContextMenu",e.SaveButtonContextMenu="SaveButtonContextMenu",e.API="API"}(y||(y={})),function(e){e.SAVE_PAGE="SAVE_PAGE",e.SAVE_WORKSPACE="SAVE_WORKSPACE",e.SAVE_PAGE_AS="SAVE_PAGE_AS",e.SAVE_WORKSPACE_AS="SAVE_WORKSPACE_AS",e.RENAME_PAGE="RENAME_PAGE",e.RENAME_WORKSPACE="RENAME_WORKSPACE"}(h||(h={})),function(e){e.Local="local",e.Dev="dev",e.Staging="staging",e.Prod="prod"}(f||(f={}));const S="undefined"!=typeof window&&"undefined"!=typeof fin,m=("undefined"==typeof process||process.env?.JEST_WORKER_ID,"undefined"!=typeof window),v=m&&"undefined"!=typeof indexedDB,P=m?window.origin:f.Local,b=S&&fin.me.uuid,k=S&&fin.me.name,W=S&&fin.me.entityType,C=(f.Local,f.Dev,f.Staging,f.Prod,e=>e.startsWith("http://")||e.startsWith("https://")?e:P+e),I=(C("https://cdn.openfin.co/workspace/7.2.2"),C("https://cdn.openfin.co/workspace/7.2.2")),A=("undefined"!=typeof WORKSPACE_DOCS_PLATFORM_URL&&C(WORKSPACE_DOCS_PLATFORM_URL),"undefined"!=typeof WORKSPACE_DOCS_CLIENT_URL&&C(WORKSPACE_DOCS_CLIENT_URL),"24.98.69.6"),T="7.2.2";var M,E,V;!function(e){e.Workspace="openfin-browser"}(M||(M={})),function(e){e.RunRequested="run-requested",e.WindowOptionsChanged="window-options-changed",e.WindowClosed="window-closed",e.WindowCreated="window-created"}(E||(E={})),function(e){e.FinProtocol="fin-protocol"}(V||(V={}));const O={uuid:b,name:b},x=(M.Workspace,M.Workspace,e=>{if(!S)throw new Error("getApplication cannot be used in a non OpenFin env. Avoid using this during pre-rendering.");return fin.Application.wrapSync(e)});var R,_;!function(e){e.Home="openfin-home",e.Dock="openfin-dock",e.Storefront="openfin-storefront",e.HomeInternal="openfin-home-internal",e.BrowserMenu="openfin-browser-menu",e.BrowserIndicator="openfin-browser-indicator",e.BrowserWindow="internal-generated-window"}(R||(R={})),function(e){e.Shown="shown",e.BoundsChanged="bounds-changed",e.LayoutReady="layout-ready",e.EndUserBoundsChanging="end-user-bounds-changing",e.Blurred="blurred",e.CloseRequested="close-requested",e.Focused="focused",e.ShowRequested="show-requested",e.ViewCrashed="view-crashed",e.ViewAttached="view-attached",e.ViewDetached="view-detached",e.ViewPageTitleUpdated="view-page-title-updated",e.ViewDestroyed="view-destroyed",e.OptionsChanged="options-changed"}(_||(_={}));function L(e){if(!S)throw new Error("getOFWindow can only be used in an OpenFin env. Avoid calling this method during pre-rendering.");return fin.Window.wrapSync(e)}const B={name:k,uuid:b};function G(){return L(B)}R.Home,M.Workspace,R.Dock,M.Workspace;const D={name:R.Storefront,uuid:M.Workspace};M.Workspace,M.Workspace;async function F(e){const t=L(e);"minimized"===await t.getState()&&await t.restore(),await t.show(),await t.bringToFront(),await t.focus()}const U=e=>e.startsWith(R.BrowserWindow);async function N(){return(await fin.Application.getCurrentSync().getChildWindows()).filter((e=>U(e.identity.name)))}const $=e=>L(e).getOptions().then((()=>!0)).catch((()=>!1)),H=()=>$(D);var q;!function(e){e.Browser="Browser",e.Home="Home",e.Notification="Notification",e.Storefront="Storefront",e.Platform="Platform",e.Theming="Theming"}(q||(q={}));const K=async(e,t)=>{const a={apiVersion:t.apiVersion||T,componentName:e,componentVersion:T,...t};fin.System.registerUsage({type:"workspace-licensing",data:a})};var j,Q=new Uint8Array(16);function J(){if(!j&&!(j="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return j(Q)}const z=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;const X=function(e){return"string"==typeof e&&z.test(e)};for(var Y=[],Z=0;Z<256;++Z)Y.push((Z+256).toString(16).substr(1));const ee=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=(Y[e[t+0]]+Y[e[t+1]]+Y[e[t+2]]+Y[e[t+3]]+"-"+Y[e[t+4]]+Y[e[t+5]]+"-"+Y[e[t+6]]+Y[e[t+7]]+"-"+Y[e[t+8]]+Y[e[t+9]]+"-"+Y[e[t+10]]+Y[e[t+11]]+Y[e[t+12]]+Y[e[t+13]]+Y[e[t+14]]+Y[e[t+15]]).toLowerCase();if(!X(a))throw TypeError("Stringified UUID is invalid");return a};const te=function(e,t,a){var n=(e=e||{}).random||(e.rng||J)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t){a=a||0;for(var o=0;o<16;++o)t[a+o]=n[o];return t}return ee(n)};var ae;!function(e){e.CurrentWorkspaceId="currentWorkspaceId",e.LastFocusedBrowserWindow="lastFocusedBrowserWindow",e.MachineName="machineName",e.NewTabPageLayout="NewTabPageLayout",e.NewTabPageSort="NewTabPageSort"}(ae||(ae={}));const ne=ae;var oe;!function(e){e.LaunchApp="launchApp",e.SavePage="savePage",e.GetSavedPage="getSavedPage",e.CreateSavedPage="createSavedPage",e.UpdateSavedPage="updateSavedPage",e.DeleteSavedPage="deleteSavedPage",e.GetSavedPages="getSavedPages",e.CreateSavedPageInternal="createSavedPageInternal",e.UpdateSavedPageInternal="updateSavedPageInternal",e.DeleteSavedPageInternal="deleteSavedPageInternal",e.SharePage="sharePage",e.UpdatePageForWindow="updatePageForWindow",e.AttachPagesToWindow="attachPagesToWindow",e.DetachPagesFromWindow="detachPagesFromWindow",e.ReorderPagesForWindow="reorderPagesForWindow",e.SetActivePage="setActivePage",e.GetAllAttachedPages="getAllAttachedPages",e.GetActivePageIdForWindow="getActivePageIdForWindow",e.GetPagesForWindow="getPagesForWindow",e.GetPageForWindow="getPageForWindow",e.GetSavedPageMetadata="getSavedPageMetadata",e.GetUniquePageTitle="getUniquePageTitle",e.GetLastFocusedBrowserWindow="getLastFocusedBrowserWindow",e.GetThemes="getThemes",e.OpenGlobalContextMenuInternal="openGlobalContextMenuInternal",e.OpenViewTabContextMenuInternal="openViewTabContextMenuInternal",e.OpenPageTabContextMenuInternal="openPageTabContextMenuInternal",e.OpenSaveButtonContextMenuInternal="openSaveButtonContextMenuInternal",e.InvokeCustomActionInternal="invokeCustomActionInternal",e.GetSavedWorkspace="getSavedWorkspace",e.CreateSavedWorkspace="createSavedWorkspace",e.UpdateSavedWorkspace="updateSavedWorkspace",e.DeleteSavedWorkspace="deleteSavedWorkspace",e.GetSavedWorkspaces="getSavedWorkspaces",e.SaveWorkspace="saveWorkspace",e.GetCurrentWorkspace="getCurrentWorkspace",e.ApplyWorkspace="applyWorkspace",e.SetActiveWorkspace="setActiveWorkspace"}(oe||(oe={}));const ie=async e=>{const t=fin.Platform.wrapSync(e),a=await t.getClient(),n="Target is not a Workspace Platform. Target must call WorkspacePlatform.init";try{if(!0===await a.dispatch("isWorkspacePlatform"))return a;throw new Error(n)}catch(e){throw new Error(n)}},re=(e,t)=>!t.find((t=>t===e)),se=(e,t)=>`${e} (${t})`,ce=(e,t)=>{let a=1;const n=e.replace(/ \(.+\)$/,"");for(;!re(se(n,a),t);)a+=1;return se(n,a)};async function de(e){try{await fin.Platform.getCurrentSync().applySnapshot(e.snapshot,{closeExistingWindows:!0}),pe(e)}catch(e){}}function pe(e){if("undefined"!=typeof localStorage)try{const t=JSON.stringify(e);localStorage.setItem(ne.CurrentWorkspaceId,t)}catch(e){}}async function le(){if("undefined"==typeof localStorage)return;const e=await fin.Platform.getCurrentSync().getSnapshot();return{workspaceId:te(),title:await ge(),metadata:{APIVersion:T},snapshot:e}}async function we(){if("undefined"==typeof localStorage)return;const e=localStorage.getItem(ne.CurrentWorkspaceId);if(!e)return le();const t=JSON.parse(e),a=await fin.Platform.getCurrentSync().getSnapshot();return{...t,metadata:t.metadata||{APIVersion:T},snapshot:a}}const ue=async e=>await(async e=>(await ie(B)).dispatch(oe.GetSavedWorkspace,e))(e.workspaceId)?(async e=>(await ie(B)).dispatch(oe.UpdateSavedWorkspace,e))({workspaceId:e.workspaceId,workspace:e}):(async e=>(await ie(B)).dispatch(oe.CreateSavedWorkspace,e))({workspace:e});async function ge(e="Untitled Workspace"){const t=(await(async()=>(await ie(B)).dispatch(oe.GetSavedWorkspaces,void 0))()).map((({title:e})=>e));return t.find((t=>t===e))?ce(e,t):e}async function ye(){if("undefined"!=typeof localStorage)try{const e=localStorage.getItem(ne.LastFocusedBrowserWindow),t=JSON.parse(e);if(await $(t))return t}catch(e){throw new Error(`failed to get last focused browser window: ${e}`)}}function he(e=fin.me.identity){U(e.name)&&function(e){if("undefined"!=typeof localStorage)try{const t=JSON.stringify(e);localStorage.setItem(ne.LastFocusedBrowserWindow,t)}catch(e){}}(e)}const fe=(e,t=0)=>{let a,n,o=!1;const i=async n=>{const r=await e(...n);if(o){await new Promise((e=>setTimeout(e,t)));const e=a;return a=void 0,o=!1,i(e)}return r};return(...e)=>(n?(o=!0,a=e):n=i(e).then((e=>(n=void 0,e))),n)};var Se;!function(e){e.TabCreated="tab-created",e.ContainerCreated="container-created",e.ContainerResized="container-resized"}(Se||(Se={}));const me=e=>{const t=[];return(e&&Array.isArray(e)?e:[]).forEach((e=>{if("component"===e.type)return t.push(e.componentState);const a=me(e.content);t.push(...a)})),t},ve=async(e,t,a=B)=>{let n;if(U(a.name)){n=(await L(a).getOptions()).layout||{settings:{}}}return{...n,content:[{type:"stack",content:[{type:"component",componentName:"view",componentState:{title:e,url:t}}]}]}};new Map;const Pe=m&&"complete"!==document.readyState&&new Promise((e=>document.addEventListener("readystatechange",(()=>{"complete"===document.readyState&&e()}))));function be(e){let t;return()=>{if(!S)throw new Error("getChannelClient cannot be used outside an OpenFin env. Avoid using this method during pre-rendering.");return t||(t=(async()=>{await Pe;const a=await fin.InterApplicationBus.Channel.connect(e);return a.onDisconnection((async()=>{t=void 0})),a})().then((e=>e)).catch((a=>{throw t=void 0,new Error(`failed to connect to channel provider ${e}: ${a}`)}))),t}}const ke=e=>`__browser_window__-${e.uuid}-${e.name}`,We=new Map,Ce=e=>{const t=ke(e);return We.has(t)||We.set(t,be(t)),We.get(t)()};var Ie,Ae,Te;!function(e){e.CloseBrowserWindow="close-browser-window",e.QuitPlatform="quit-platform",e.ClosePage="close-page",e.AddToChannel="add-to-channel",e.RemoveFromChannel="remove-from-channel",e.OpenSaveModalInternal="open-save-modal-internal",e.DuplicatePage="duplicate-page"}(Ie||(Ie={})),function(e){e.GetPages="get-pages",e.GetActivePageForWindow="get-active-page-for-window",e.AttachPagesToWindow="attach-pages-to-window",e.DetachPagesFromWindow="detach-pages-from-window",e.SetActivePageForWindow="set-active-page-for-window",e.RenamePage="rename-page",e.ReorderPagesForWindow="reorder-pages-for-window",e.UpdatePageForWindow="update-page-for-window",e.UpdatePagesWindowOptions="update-pages-window-options",e.IsDetachingPages="is-detaching-pages",e.IsActivePageChanging="is-active-page-changing"}(Ae||(Ae={})),function(e){e.AttachedPagesToWindow="attached-pages-to-window",e.DetachedPagesFromWindow="detached-pages-from-window"}(Te||(Te={}));new Map;const Me=async e=>{const t=await Ce(e);return await t.dispatch(Ae.GetPages)},Ee=async e=>(await Ce(e.identity)).dispatch(Ae.UpdatePageForWindow,e),Ve=async()=>{const e=await N();return(await Promise.all(e.map((async({identity:e})=>Me(e))))).reduce(((e,t)=>e.concat(t)),[])},Oe=async()=>(await ie(B)).dispatch(oe.GetSavedPages,void 0),xe=async e=>(await ie(B)).dispatch(oe.GetSavedPage,e),Re=async(e,t)=>{const a=await(async e=>(await Ve()).find((t=>t.pageId===e)))(e);return!a||a.title===t.title&&e===t.pageId||await Ee({identity:a.parentIdentity,pageId:e,page:{pageId:t.pageId,title:t.title}}),a},_e=async({page:e})=>{await Re(e.pageId,e),await(async e=>(await ie(B)).dispatch(oe.CreateSavedPage,e))({page:e})},Le=async e=>{await xe(e)&&await(async e=>(await ie(B)).dispatch(oe.DeleteSavedPage,e))(e)},Be=async({pageId:e,page:t})=>{await Re(e,t);return await(async e=>(await ie(B)).dispatch(oe.UpdateSavedPage,e))({pageId:e,page:t})},Ge=async e=>await xe(e.pageId)?Be({pageId:e.pageId,page:e}):_e({page:e}),De=async e=>{await(async e=>(await Ce(e.identity)).dispatch(Ae.AttachPagesToWindow,e))(e)},Fe=async e=>{await Ee(e)},Ue=async e=>{await(async e=>(await Ce(e.identity)).dispatch(Ae.DetachPagesFromWindow,e))(e)},Ne=async e=>{await(async e=>(await Ce(e.identity)).dispatch(Ae.SetActivePageForWindow,e))(e)},$e=e=>Me(e),He=async({identity:e,pageId:t})=>(await $e(e)).find((e=>e.pageId===t)),qe=async e=>{await(async e=>(await Ce(e.identity)).dispatch(Ae.ReorderPagesForWindow,e))(e)};async function Ke(e="Untitled Page"){const[t,a]=await Promise.all([Oe(),Ve()]),n=[...t,...a].map((({title:e})=>e));return n.find((t=>t===e))?ce(e,n):e}const je=new Map,Qe=e=>`${e.uuid}-${e.name}`;const Je=fe((async function(){const e=await Ve(),t=new Set;e.forEach((e=>{me(e.layout.content).forEach((e=>{if(e.name){const a=Qe(e);t.add(a)}}))}));const a=G();(await a.getCurrentViews()).forEach((({identity:e})=>{const a=Qe(e);if(t.has(a)||je.has(a))return;const n=setTimeout((()=>{fin.View.wrapSync(e).destroy(),je.delete(a)}),5e3);je.set(a,n)})),je.forEach(((e,a)=>{t.has(a)&&(clearTimeout(e),je.delete(a))}))}),2500),ze=({name:e})=>{U(e)&&Je().catch((()=>{}))};function Xe(){const e=x(O);e.addListener(E.WindowOptionsChanged,Je),e.addListener(E.WindowClosed,ze),e.addListener(E.WindowCreated,ze)}let Ye={};const Ze=({actionId:e,payload:t})=>{if("function"!=typeof Ye[e])throw new Error(`Cannot find a configured function for the action '${e}'`);return Ye[e](t)};function et(){return localStorage.getItem(ne.MachineName)}let tt,at;async function nt(){return tt||(tt=await fin.System.getMachineId()),tt}async function ot(e){const t=e||await fin.Platform.getCurrentSync().getSnapshot();if(t.snapshotDetails?.machineId)return t;const a=et();return{...t,snapshotDetails:{...e.snapshotDetails,machineId:await nt(),machineName:a}}}function it(e){return new Promise(((t,a)=>{e.oncomplete=e.onsuccess=()=>t(e.result),e.onabort=e.onerror=()=>a(e.error)}))}function rt(e,t){const a=indexedDB.open(e);a.onupgradeneeded=()=>a.result.createObjectStore(t);const n=it(a);return(e,a)=>n.then((n=>a(n.transaction(t,e).objectStore(t))))}function st(){return at||(at=rt("keyval-store","keyval")),at}function ct(e,t=st()){return t("readonly",(t=>it(t.get(e))))}function dt(e,t,a=st()){return a("readwrite",(a=>(a.put(t,e),it(a.transaction))))}function pt(e,t=st()){return t("readwrite",(t=>(t.delete(e),it(t.transaction))))}function lt(e,t){return e("readonly",(e=>(e.openCursor().onsuccess=function(){this.result&&(t(this.result),this.result.continue())},it(e.transaction))))}function wt(e=st()){const t=[];return lt(e,(e=>t.push(e.key))).then((()=>t))}const ut=(e,t="")=>e.toLowerCase().includes(t.toLowerCase()),gt=v&&rt("openfin-home-pages","pages");async function yt(e){const t=await ct(e,gt);return t?(t.pageId=e.toString(),t.title=t.title||t.pageId,t):null}async function ht(e){const t=await wt(gt),a=await Promise.all(t.map((e=>yt(e.toString()))));return e?a.filter((t=>ut(t.title,e))):a}async function ft({page:e}){await dt(e.pageId,e,gt)}async function St(e){await pt(e,gt)}async function mt({pageId:e,page:t}){if(void 0===await yt(e))throw new Error("page not found");await ft({page:t}),e!==t.pageId&&await St(e)}var vt;!function(e){e.Label="normal",e.Separator="separator",e.Submenu="submenu",e.Checkbox="checkbox"}(vt||(vt={}));const Pt=247;var bt;!function(e){e.RegisterStorefrontProvider="register-storefront-provider",e.DeregisterStorefrontProvider="deregister-storefront-provider",e.GetStorefrontProviders="get-storefront-providers",e.HideStorefront="hide-storefront",e.GetStorefrontProviderApps="get-storefront-provider-apps",e.GetStorefrontProviderLandingPage="get-storefront-provider-landing-page",e.GetStorefrontProviderFooter="get-storefront-provider-footer",e.GetStorefrontProviderNavigation="get-storefront-provider-navigation",e.LaunchStorefrontProviderApp="launch-storefront-provider-app",e.ShowStorefront="show-storefront",e.CreateStorefrontWindow="create-storefront-window",e.ShowHome="show-home",e.HideHome="hide-home",e.AssignHomeSearchContext="assign-home-search-context",e.GetLegacyPages="get-legacy-pages",e.GetLegacyWorkspaces="get-legacy-workspaces",e.GetComputedPlatformTheme="get-computed-platform-theme"}(bt||(bt={}));be("__of_workspace_protocol__");const kt=async(e,t)=>{const a=await(async e=>({...e,layoutDetails:{machineId:await nt(),machineName:et()}}))(t);return{pageId:te(),title:e,layout:a,isReadOnly:!1,hasUnsavedChanges:!0}},Wt=e=>({identity:e,openfinWindow:fin.Window.wrapSync(e),getPages:async()=>(await ie(e)).dispatch(oe.GetPagesForWindow,e),getPage:async t=>(await ie(e)).dispatch(oe.GetPageForWindow,{identity:e,pageId:t}),addPage:async t=>{const a=await ie(e);t?.title||(t.title=await a.dispatch(oe.GetUniquePageTitle,void 0));const n=(await a.dispatch(oe.GetAllAttachedPages,void 0)).find((e=>e.pageId===t.pageId||e.title===t.title));if(n)throw n.pageId===t.pageId?new Error(`page with id ${t.pageId} is already attached to a browser window ${n.parentIdentity.name}`):new Error(`page with title ${t.title} is already attached to a browser window ${n.parentIdentity.name}`);const o={identity:e,pages:[t]};return a.dispatch(oe.AttachPagesToWindow,o)},removePage:async t=>(await ie(e)).dispatch(oe.DetachPagesFromWindow,{identity:e,pageIds:[t]}),setActivePage:async t=>(await ie(e)).dispatch(oe.SetActivePage,{identity:e,pageId:t}),updatePage:async t=>{const a=await ie(e);return t.identity=e,a.dispatch(oe.UpdatePageForWindow,t)},reorderPages:async t=>{const a=await ie(e);return t.identity=e,a.dispatch(oe.ReorderPagesForWindow,t)},_openGlobalContextMenu:async t=>{const a=await ie(e);return t.identity=e,a.dispatch(oe.OpenGlobalContextMenuInternal,t)},replaceToolbarOptions:async t=>{const a=fin.Window.wrapSync(e);await a.updateOptions({workspacePlatform:{toolbarOptions:t}})},replaceWindowStateButtonOptions:async t=>{const a=fin.Window.wrapSync(e);await a.updateOptions({workspacePlatform:{windowStateButtonOptions:t}})},_openViewTabContextMenu:async t=>{const a=await ie(e);return t.identity=e,a.dispatch(oe.OpenViewTabContextMenuInternal,t)},_openPageTabContextMenu:async t=>{const a=await ie(e);return t.identity=e,a.dispatch(oe.OpenPageTabContextMenuInternal,t)},_openSaveModal:async t=>(await Ce(e)).dispatch(Ie.OpenSaveModalInternal,t),_openSaveButtonContextMenu:async t=>{const a=await ie(e);return t.identity=e,a.dispatch(oe.OpenSaveButtonContextMenuInternal,t)}});let Ct=!1;const It=e=>{const t=fin.Platform.wrapSync(e);return{wrapSync:e=>Wt(e),createWindow:async e=>{Ct||(Ct=!0,(async e=>{K(q.Browser,e)})({allowed:!0}));const a=await t.createWindow(e);return Wt(a.identity)},getAllAttachedPages:async()=>(await t.getClient()).dispatch(oe.GetAllAttachedPages,void 0),getAllWindows:async()=>(await fin.Application.wrapSync(e).getChildWindows()).filter((e=>e.identity.name.includes("internal-generated-window-"))).map((e=>Wt(e.identity))),getUniquePageTitle:async t=>(await ie(e)).dispatch(oe.GetUniquePageTitle,t),getLastFocusedWindow:async()=>(await ie(e)).dispatch(oe.GetLastFocusedBrowserWindow,void 0)}},At=e=>({createPage:async t=>(await ie(e)).dispatch(oe.CreateSavedPageInternal,t),deletePage:async t=>(await ie(e)).dispatch(oe.DeleteSavedPageInternal,t),updatePage:async t=>(await ie(e)).dispatch(oe.UpdateSavedPageInternal,t),getPage:async t=>(await ie(e)).dispatch(oe.GetSavedPage,t),getPages:async t=>(await ie(e)).dispatch(oe.GetSavedPages,t),savePage:async t=>(await ie(e)).dispatch(oe.SavePage,t),createWorkspace:async t=>(await ie(e)).dispatch(oe.CreateSavedWorkspace,t),deleteWorkspace:async t=>(await ie(e)).dispatch(oe.DeleteSavedWorkspace,t),updateWorkspace:async t=>(await ie(e)).dispatch(oe.UpdateSavedWorkspace,t),getWorkspace:async t=>(await ie(e)).dispatch(oe.GetSavedWorkspace,t),getWorkspaces:async t=>(await ie(e)).dispatch(oe.GetSavedWorkspaces,t),saveWorkspace:async t=>(await ie(e)).dispatch(oe.SaveWorkspace,t)}),Tt=e=>({getThemes:async()=>(await ie(e)).dispatch(oe.GetThemes,void 0)}),Mt=e=>{const t=fin.Platform.wrapSync(e);return Object.assign(t,{applySnapshot:async t=>{if("string"!=typeof t&&!t?.windows)throw new Error("Not a valid browser snapshot");return fin.Platform.wrapSync(e).applySnapshot(t)},getSnapshot:()=>fin.Platform.wrapSync(e).getSnapshot().then((e=>e)),launchApp:async t=>{t.target||(t.target={uuid:b,name:k,entityType:W||"unknown"});return(await ie(e)).dispatch(oe.LaunchApp,t)},_invokeCustomAction:async(t,a)=>{const n=await ie(e),o={actionId:t,payload:{...a,callerType:a.callerType||y.API}};return n.dispatch(oe.InvokeCustomActionInternal,o)},getCurrentWorkspace:async()=>(await ie(e)).dispatch(oe.GetCurrentWorkspace,void 0),applyWorkspace:async t=>(await ie(e)).dispatch(oe.ApplyWorkspace,t),setActiveWorkspace:async t=>(await ie(e)).dispatch(oe.SetActiveWorkspace,t),Theme:Tt(e),Browser:It(e),Storage:At(e)})},Et=()=>Mt(fin.me.identity),Vt=async(e=B)=>{const{workspacePlatform:t}=await L(e).getOptions();return{newPageUrl:t?.newPageUrl,newTabUrl:t?.newTabUrl}},Ot=async(e=B)=>{const t=await Et().Browser.getUniquePageTitle("Untitled Page"),a=await(async(e=B)=>{const{newPageUrl:t}=await Vt(e);if(!t)throw new Error("Trying to create a new page without a newPageUrl set");return ve("New Tab",t,e)})(e);return kt(t,a)},xt=[{type:vt.Label,label:"Close Window",data:{type:p.CloseWindow}},{type:vt.Separator,data:void 0},{type:vt.Label,label:"Open Storefront",data:{type:p.OpenStorefront}},{type:vt.Separator,data:void 0},{type:vt.Label,label:"Quit Workspace",data:{type:p.Quit}}],Rt=[{type:vt.Separator,data:void 0},{type:vt.Label,label:"Close Window",data:{type:p.CloseWindow}},{type:vt.Separator,data:void 0},{type:vt.Label,label:"Quit",data:{type:p.Quit}}],_t=(e,t,a)=>t.map((t=>{const n=t.workspaceId===e.workspaceId;return{label:t.title,type:vt.Checkbox,enabled:!n,checked:n,data:{type:a,workspaceId:t.workspaceId}}})),Lt=async e=>{const t=await H(),{newPageUrl:a}=await Vt(e),n=await(async e=>{const t=L(e),{workspacePlatform:a}=await t.getOptions();return a?.disableMultiplePages})(e),o=[];a&&(o.push({type:vt.Label,label:"New Window",data:{type:p.NewWindow}}),n||o.push({type:vt.Label,label:"New Page",data:{type:p.NewPage}})),o.push({type:vt.Separator,data:void 0},{type:vt.Label,label:"Save Workspace",data:{type:p.SaveWorkspace}},{type:vt.Label,label:"Save Workspace As...",data:{type:p.SaveWorkspaceAs}});const i=Et(),r=await i.getCurrentWorkspace(),s=await i.Storage.getWorkspaces();return s.some((e=>e.workspaceId===r.workspaceId))?o.push({type:vt.Label,label:"Rename Workspace",data:{type:p.RenameWorkspace}}):o.push({label:"Rename Workspace",enabled:!1}),s.some((e=>e.workspaceId!==r.workspaceId))?o.push({label:"Switch Workspace",submenu:_t(r,s,p.SwitchWorkspace)},{label:"Delete Workspace",submenu:_t(r,s,p.DeleteWorkspace)}):o.push({label:"Switch Workspace",enabled:!1},{label:"Delete Workspace",enabled:!1}),o.push({type:vt.Separator,data:void 0},{type:vt.Label,label:"Save Page",data:{type:p.SavePage}},{type:vt.Label,label:"Save Page As...",data:{type:p.SavePageAs}}),t?[...o,...xt]:[...o,...Rt]};var Bt,Gt;!function(e){e.HomeIndex="/home/",e.HomeSearch="/home/search/",e.HomePagesRename="/home/pages/rename/",e.Dock="/home/dock/",e.BrowserPagesLanding="/browser/pages/landing/",e.HomeIndicator="/home/indicator/",e.Browser="/browser/",e.BrowserPopupMenu="/browser/popup-menu/",e.Provider="/provider/",e.BrowserPopupMenuSharePage="/browser/popup-menu/share-page/",e.BrowserPopupMenuSaveModal="/browser/popup-menu/save-modal/",e.BrowserPopupMenuLayouts="/browser/popup-menu/layouts/layouts/",e.BrowserPopupMenuColorLinking="/browser/popup-menu/color-linking/color-linking/",e.BrowserIndicator="/browser/indicator/",e.ResponseModal="/browser/popup-menu/response-modal/",e.Docs="/provider/docs/",e.Storefront="/storefront/",e.DeprecatedAlert="/provider/deprecated-alert/"}(Bt||(Bt={})),function(e){e.IconOpenFinLogo="/icons/openfinlogo.svg",e.IconFilter="/icons/filter.svg"}(Gt||(Gt={}));const Dt={...Gt,...Bt};var Ft,Ut;!function(e){e.ERROR="error",e.SUCCESS="success",e.INFO="info"}(Ft||(Ft={})),function(e){e.Home="/home",e.Browser="/browser",e.Provider="/provider",e.Storefront="/storefront"}(Ut||(Ut={}));const Nt="/workspace/7.2.2";function $t(){return Nt.substring(0,Nt.length-"".length)}function Ht(e){if(!m)throw new Error("getAbsoluteRoutePath can only be used in a window");return function(){if(!window)throw new Error("getAbsoluteBasePath can only be used in a window");return`${window.origin}${$t()}`}()+e}const qt={alwaysOnTop:!0,autoShow:!1,cornerRounding:{height:5,width:5},frame:!1,resizable:!1,showTaskbarIcon:!1};var Kt;!function(e){e.Locked="LockClosedIcon",e.Unlocked="LockOpen1Icon"}(Kt||(Kt={}));const jt=function(e=qt){const t=new Map;return async(a,n,o,i)=>{if(t.has(a)){const{currentUrl:e,currentName:o}=t.get(a);if(e===n)return;const i=fin.Window.wrapSync({uuid:fin.me.uuid,name:o});await i.close()}const r=`${R.HomeInternal}-${Date.now()}${Math.random()}`;t.set(a,{currentUrl:n,currentName:r});const s=await fin.Platform.getCurrentSync().createWindow({...e,name:r,url:n});((e,t)=>{const a=document.createElement("div");a.setAttribute("aria-live",t||"polite"),(e=>{e.style.position="absolute",e.style.width="1px",e.style.height="1px",e.style.padding="0",e.style.margin="-1px",e.style.overflow="hidden",e.style.whiteSpace="nowrap",e.style.border="0"})(a),document.body.appendChild(a),setTimeout((()=>{a.innerHTML=e}),100),setTimeout((()=>{document.body.removeChild(a)}),1e3)})(`New ${i} indicator: ${o}`),s.once("closed",(()=>{t.delete(a)}))}}();async function Qt(e,t,a,n){const o=new URLSearchParams;o.append("type",e),o.append("message",t),o.append("parentName",a),o.append("icon",n||"");const i=`${Ht(Dt.BrowserIndicator)}?${o.toString()}`;return jt("browser"+a,i,t,e)}function Jt(e,t,a){return Qt(Ft.SUCCESS,e,t,a)}const zt=async(e,t)=>{if(!e)return;const a=t.identity,n=await Ce(a),o=Et().Browser.wrapSync(t.identity),i=(await o.getPages()).find((e=>e.isActive)),r=e,s=Et(),c=await s.Storage.getWorkspaces();switch(e.type){case p.NewWindow:const{newPageUrl:t}=await Vt(a);if(!t)throw new Error("Trying to create a new empty window without a newPageUrl set");Et().createView({target:void 0,url:t});break;case p.NewPage:await(async e=>{const t=await Ot(e);await Et().Browser.wrapSync(e).addPage(t)})(a);break;case p.CloseWindow:n.dispatch(Ie.CloseBrowserWindow);break;case p.SaveWorkspace:const g=await s.getCurrentWorkspace(),f=g.workspaceId;c.some((e=>e.workspaceId===f))?(s.Storage.saveWorkspace(g),Jt("Workspace Saved!",a.name)):o._openSaveModal({menuType:h.SAVE_WORKSPACE});break;case p.SavePage:if((await Et().Storage.getPages()).some((e=>i.pageId===e.pageId)))try{await Et().Storage.savePage((u=i,{...u,hasUnsavedChanges:void 0,parentIdentity:void 0,isActive:void 0})),await o.updatePage({pageId:i.pageId,page:{hasUnsavedChanges:!1}}),Jt("Page saved",i.parentIdentity.name)}catch{d="Page failed to save",l=i.parentIdentity.name,Qt(Ft.ERROR,d,l,w)}else o._openSaveModal({id:i.pageId,menuType:h.SAVE_PAGE});break;case p.SavePageAs:o._openSaveModal({id:i.pageId,menuType:h.SAVE_PAGE_AS});break;case p.SaveWorkspaceAs:o._openSaveModal({menuType:h.SAVE_WORKSPACE_AS});break;case p.RenameWorkspace:o._openSaveModal({menuType:h.RENAME_WORKSPACE});break;case p.SwitchWorkspace:const S=c.find((e=>e.workspaceId===r.workspaceId));S&&(await s.applyWorkspace(S),Jt("Workspace Switched!",a.name));break;case p.DeleteWorkspace:c.some((e=>e.workspaceId===r.workspaceId))&&(await s.Storage.deleteWorkspace(r.workspaceId),Jt("Workspace Deleted!",a.name));break;case p.Quit:n.dispatch(Ie.QuitPlatform);break;case p.OpenStorefront:(async()=>{await H()&&F(D)})();break;case p.Custom:if(e.action){const t={callerType:y.GlobalContextMenu,windowIdentity:a,customData:e.action.customData};Et()._invokeCustomAction(e.action.id,t)}}var d,l,w,u},Xt=async(e,t)=>{const a=await Ce(t.identity),n=Et();switch(e.type){case l.Save:await n.Browser.wrapSync(t.identity)._openSaveModal({menuType:h.SAVE_PAGE,id:t.pageId});break;case l.SaveAs:await n.Browser.wrapSync(t.identity)._openSaveModal({menuType:h.SAVE_PAGE_AS,id:t.pageId});break;case l.Rename:await n.Browser.wrapSync(t.identity)._openSaveModal({menuType:h.RENAME_PAGE,id:t.pageId});break;case l.Duplicate:a.dispatch(Ie.DuplicatePage,t.pageId);break;case l.Close:a.dispatch(Ie.ClosePage,t.pageId);break;case l.Custom:if(e.action){const a={callerType:y.PageTabContextMenu,windowIdentity:t.identity,pageId:t.pageId,customData:e.action.customData};Et()._invokeCustomAction(e.action.id,a)}}},Yt=async(e,t)=>{if(e?.type){const a=Et();switch(e.type){case g.SavePage:await a.Browser.wrapSync(t.identity)._openSaveModal({menuType:h.SAVE_PAGE,id:t.pageId,x:t.buttonLeft+t.buttonWidth/2-Pt/2,y:t.y});break;case g.SaveWorkspace:await a.Browser.wrapSync(t.identity)._openSaveModal({menuType:h.SAVE_WORKSPACE,x:t.buttonLeft+t.buttonWidth/2-Pt/2,y:t.y});break;case g.Custom:if(e.action){const a={callerType:y.SaveButtonContextMenu,windowIdentity:t.identity,pageId:t.pageId,customData:e.action.customData};Et()._invokeCustomAction(e.action.id,a)}}}},Zt=async(e,t)=>{const a=t.selectedViews[0],n=fin.View.wrapSync(a),o=await(async e=>{const{newTabUrl:t}=await Vt(e);if(!t)throw new Error("Trying to create a new page without a newTabUrl set");return{...ve("New View",t),url:t,target:e}})(e);await Et().createView(o,e,n.identity)},ea=async(e,t)=>{const a=await(e=>Promise.all(e.map((async e=>fin.View.wrapSync(e).getInfo()))))(t),{newPageUrl:n,newTabUrl:o}=await Vt(e);a.forEach((async e=>{e.url!==n&&e.url!==o&&await fin.System.openUrlWithBrowser(e.url)}))},ta=(e,t)=>{t.forEach((async t=>{const a=fin.View.wrapSync(t);await(async(e,t)=>{const{url:a}=await t.getInfo(),n={...await t.getOptions(),url:a,target:e,name:void 0};await Et().createView(n,e,t.identity)})(e,a)}))},aa=async(e,t)=>{if(!e)return;const a=t.identity;switch(e.type){case w.CloseViews:await(async(e,t)=>{if((await fin.Window.wrapSync(e).getCurrentViews()).length!==t.length)t.forEach((async e=>{const t=fin.View.wrapSync(e);await t.destroy()}));else{const t=(await Et().Browser.wrapSync(e).getPages()).find((e=>e.isActive));(await Ce(e)).dispatch(Ie.ClosePage,t?.pageId)}})(a,t.selectedViews);break;case w.OpenWithDefaultBrowser:await ea(a,t.selectedViews);break;case w.ReloadViews:t.selectedViews.forEach((async e=>{const t=fin.View.wrapSync(e);await t.reload()}));break;case w.NewView:await Zt(a,t);break;case w.DuplicateViews:ta(a,t.selectedViews);break;case w.AddToChannel:(async(e,t,a)=>{const n={newChannelId:t,selectedViews:a};(await Ce(e)).dispatch(Ie.AddToChannel,n)})(a,e.option,t.selectedViews);break;case w.RemoveFromChannel:(async(e,t)=>{(await Ce(e)).dispatch(Ie.RemoveFromChannel,t)})(a,t.selectedViews);break;case w.Custom:if(e.action){const n={callerType:y.ViewTabContextMenu,windowIdentity:a,selectedViews:t.selectedViews,customData:e.action.customData};Et()._invokeCustomAction(e.action.id,n)}}};async function na(e,t){const a=await Lt(e.identity),n={...e,template:a,callback:zt};await this.openGlobalContextMenu(n,t)}const oa=async(e,t)=>{const{x:a,y:n,identity:o,template:i,callback:r}=e,{data:s}=await function(e,t){if(!S)throw new Error("showContextMenu can only be used in an OpenFin env. Avoid calling this method during pre-rendering.");if(!t&&!fin.me.isWindow)throw new Error("showContextMenu can only be used in an OpenFin window.");return(t||fin.Window.getCurrentSync()).showPopupMenu(e)}({x:a,y:n,template:i},fin.Window.wrapSync(o));r(s,e)};async function ia(e,t){const a={...e,callback:aa};await this.openViewTabContextMenu(a,t)}async function ra(e,t){const a=await Et().Storage.getPage(e.pageId),n=await(o=!!a,[{type:vt.Label,label:"Save Page",data:{type:l.Save}},{type:vt.Label,label:"Save Page As",data:{type:l.SaveAs}},{type:vt.Separator,data:void 0},{type:vt.Label,label:"Rename Page",data:{type:l.Rename},enabled:o},{type:vt.Label,label:"Duplicate Page",data:{type:l.Duplicate}},{type:vt.Separator,data:void 0},{type:vt.Label,label:"Close Page",data:{type:l.Close}}]);var o;const i={...e,template:n,callback:Xt};await this.openPageTabContextMenu(i,t)}async function sa(e,t){const a={...e,template:await([{type:vt.Label,label:"Save Workspace",data:{type:g.SaveWorkspace}},{type:vt.Label,label:"Save Page",data:{type:g.SavePage}}]),callback:Yt};await this.openSaveButtonContextMenu(a,t)}const ca=v&&rt("openfin-workspace-platform-workspaces","workspaces");async function da(e){const t=await ct(e,ca);return t?(t.workspaceId=e.toString(),t.title=t.title||t.workspaceId,t):null}async function pa(e){const t=await wt(ca),a=await Promise.all(t.map((e=>da(e.toString()))));return e?a.filter((t=>ut(t.title,e))):a}async function la({workspace:e}){await dt(e.workspaceId,e,ca)}async function wa(e){await pt(e,ca)}async function ua({workspaceId:e,workspace:t}){if(void 0===await da(e))throw new Error("workspace not found");await la({workspace:t}),e!==t.workspaceId&&await wa(e)}async function ga({app:e,target:t}){const a=fin.Platform.getCurrentSync();switch(e.manifestType){case i.Snapshot:return a.applySnapshot(e.manifest);case i.View:return async function(e,t){const a=fin.Platform.getCurrentSync();if("view"===t.entityType){const a=fin.View.wrapSync(t),n=await a.getParentLayout();return await n.replaceView(t,{manifestUrl:e.manifest,url:void 0,target:void 0}),a.destroy()}return a.createView({name:void 0,url:void 0,manifestUrl:e.manifest,target:void 0})}(e,t);case i.External:return fin.System.launchExternalProcess({path:e.manifest,uuid:e.appId});default:return fin.Application.startFromManifest(e.manifest)}}const ya=e=>e&&"object"==typeof e&&!Array.isArray(e);function ha(e,...t){if(!t.length)return e;const a=t.shift();return ya(e)&&ya(a)&&Object.entries(a).forEach((([t,a])=>{if(ya(a))return e[t]||(e[t]={}),ha(e[t],a);e[t]=a})),ha(e,...t)}const fa=I+Dt.Browser;function Sa(e,t){const a=ha({},t,e);return a.detachOnClose=!0,a}async function ma(e,t,a){const n=e.manifestUrl?await t({manifestUrl:e.manifestUrl},a):void 0;if(n?.interop&&e.interop){const t={...e,...n,interop:e.interop};return delete t.manifestUrl,t}return e}const va=e=>{const t=e.name===R.Home,a=e.name?.startsWith(R.HomeInternal),n=e.name?.startsWith(R.BrowserMenu);return!t&&!a&&!n},Pa=e=>"workspacePlatform"in e?e:(({workstacks:e,pages:t,...a})=>({...a,workspacePlatform:{pages:t||e||null}}))(e),ba={contextMenuSettings:{reload:!1},backgroundThrottling:!0,url:fa,contextMenu:!0,closeOnLastViewRemoved:!1,experimental:{showFavicons:!0,defaultFaviconUrl:`${I}/icons/defaultFavicon.svg`},permissions:{System:{openUrlWithBrowser:{enabled:!0,protocols:["mailto"]}}}},ka={dimensions:{borderWidth:3,headerHeight:30}},Wa=(e,t)=>t?e.map((e=>({...t,...e}))):e,Ca=e=>{const t=fin.Window.wrapSync(e);return Promise.all([t.bringToFront(),t.restore(),t.focus()])};async function Ia(e){const t=await N();return await Promise.all(t.map((({identity:e})=>(async e=>(await Ce(e)).dispatch(Ae.UpdatePagesWindowOptions))(e)))),e?e():ot()}let Aa=[];const Ta=()=>Aa;const Ma=e=>async t=>{class a extends t{constructor(){super(),this.isWorkspacePlatform=()=>!0,this.addPage=this.attachPagesToWindow,this.detachPagesFromWindow=Ue,this.getAllAttachedPages=Ve,this.getPagesForWindow=$e,this.getPageForWindow=He,this.setActivePage=Ne,this.launchApp=ga,this.savePage=Ge,this.saveWorkspace=ue,this.createSavedPageInternal=_e,this.updateSavedPageInternal=Be,this.deleteSavedPageInternal=Le,this.reorderPagesForWindow=qe,this.getUniquePageTitle=Ke,this.updatePageForWindow=Fe,this.getLastFocusedBrowserWindow=ye,this.getThemes=Ta,this.invokeCustomActionInternal=Ze,this.getCurrentWorkspace=we,this.applyWorkspace=de,this.setActiveWorkspace=pe,this.openGlobalContextMenuInternal=this.openGlobalContextMenuInternal.bind(this),this.openGlobalContextMenu=this.openGlobalContextMenu.bind(this),this.getSavedPages=this.getSavedPages.bind(this),this.getSavedPage=this.getSavedPage.bind(this),this.createSavedPage=this.createSavedPage.bind(this),this.updateSavedPage=this.updateSavedPage.bind(this),this.deleteSavedPage=this.deleteSavedPage.bind(this),this.attachPagesToWindow=this.attachPagesToWindow.bind(this),this.openViewTabContextMenuInternal=this.openViewTabContextMenuInternal.bind(this),this.openViewTabContextMenu=this.openViewTabContextMenu.bind(this),this.openPageTabContextMenuInternal=this.openPageTabContextMenuInternal.bind(this),this.openPageTabContextMenu=this.openPageTabContextMenu.bind(this),this.getSavedWorkspaces=this.getSavedWorkspaces.bind(this),this.getSavedWorkspace=this.getSavedWorkspace.bind(this),this.createSavedWorkspace=this.createSavedWorkspace.bind(this),this.updateSavedWorkspace=this.updateSavedWorkspace.bind(this),this.deleteSavedWorkspace=this.deleteSavedWorkspace.bind(this),this.getCurrentWorkspace=this.getCurrentWorkspace.bind(this),this.applyWorkspace=this.applyWorkspace.bind(this),this.setActiveWorkspace=this.setActiveWorkspace.bind(this),this.openSaveButtonContextMenu=this.openSaveButtonContextMenu.bind(this),this.openSaveButtonContextMenuInternal=this.openSaveButtonContextMenuInternal.bind(this)}async getSnapshot(){const e=await Ia((async()=>ot(await super.getSnapshot(void 0,fin.me.identity))));return{...e,windows:e.windows.filter(va)}}async applySnapshot({snapshot:e,options:t}){t?.closeExistingWindows&&await async function(){const e=await N();await Promise.all(e.map((e=>e.close(!0).catch((()=>{})))))}();let a=e;return"string"==typeof a&&(a=await super.fetchManifest({manifestUrl:a},fin.me.identity)),async function(e,t){const a=await Ve(),n=e.snapshotDetails?.monitorInfo||await fin.System.getMonitorInfo(),o=(e.windows||[]).filter((({layout:e})=>!!e)),i=new Map;a.forEach((e=>i.set(e.pageId,e)));const r=[],s=o.map((async e=>{const t=Pa(e),a=[],n=(e=>{let t=!1;const a=(e||[]).map((e=>{const a=function({id:e,name:t,...a}){return{pageId:e,title:t,...a}}(e);return t&&a.isActive&&(a.isActive=!1),a.isActive&&(t=!0),a}));return!t&&a.length&&(a[0].isActive=!0),a})(t?.workspacePlatform?.pages);if(!n?.length){const e=await Ke();a.push(await kt(e,t.layout))}let o;n.forEach((e=>{const t=i.get(e.pageId);t?o=t:a.push(e)})),o&&await Promise.all([Ne({identity:o.parentIdentity,pageId:o.pageId}),Ca(o.parentIdentity)]),a.length&&r.push({...t,workspacePlatform:{...t.workspacePlatform,pages:a}})}));if(await Promise.all(s),!r.length)return;const c=fin.Platform.getCurrentSync();return(t||c.applySnapshot.bind(c))({...e,snapshotDetails:{...e.snapshotDetails,monitorInfo:n},windows:r})}(a,(e=>super.applySnapshot({snapshot:e,options:{...t,closeExistingWindows:!1}})))}async createWindow(t,a){let n=Pa(t);const o=await this.getThemes();n=((e,t,a)=>{let n=e;const o=n?.workspacePlatform?.pages;if(o){const e=o.find((e=>e.isActive));e?n.layout=e.layout:(o[0].isActive=!0,n.layout=o[0].layout)}if(n.layout){if(n=ha({},t.defaultWindowOptions,n,ba),n.layout=ha(n.layout,ka),(n.icon||n.taskbarIcon)&&(n.taskbarIconGroup=n.taskbarIconGroup||fin.me.identity.uuid),!n.backgroundColor){const e=a?.palette;n.backgroundColor=e?.background2||e?.backgroundPrimary}const e=n.workspacePlatform.newTabUrl;e&&(n.layout.settings||(n.layout.settings={}),n.layout.settings.newTabButton={url:e}),n=(e=>{const t=e;return t.workspacePlatform||(t.workspacePlatform={}),t.workspacePlatform._internalDeferShowEnabled=!0,t.workspacePlatform._internalAutoShow=t.workspacePlatform?._internalAutoShow||void 0===t.autoShow||t.autoShow,t.autoShow=!1,t})(n)}return n.workspacePlatform?.pages&&(n.workspacePlatform.pages=Wa(n.workspacePlatform.pages,t?.defaultPageOptions)),n.cornerRounding&&delete n.cornerRounding,n})(n,e,o[0]),n=await(async e=>{const t=await fin.System.getMonitorInfo(),a=t.primaryMonitor.availableRect.bottom-t.primaryMonitor.availableRect.top,n=t.primaryMonitor.availableRect.right-t.primaryMonitor.availableRect.left;return e.defaultHeight=e.defaultHeight||"800",e.defaultWidth=e.defaultWidth||"800",a<e.defaultHeight&&(e.defaultHeight=a),n<e.defaultWidth&&(e.defaultWidth=n),e})(n);return(e=>async(t,a)=>{const n=await e(t,a);return t?.workspacePlatform?._internalDeferShowEnabled?(await n.addListener(_.ShowRequested,(()=>{})),n):n})(((e,t)=>super.createWindow(e,t)))(n,a)}async createView(t,a){return t.opts=Sa(t.opts,e?.defaultViewOptions),t.opts=await ma(t.opts,this.fetchManifest,a),super.createView(t,a)}async replaceView(t,a){return t.opts.newView=await Sa(t.opts.newView,e?.defaultViewOptions),t.opts.newView=await ma(t.opts.newView,this.fetchManifest,a),super.replaceView(t,a)}async replaceLayout(e,t){return e.opts.layout?.dimensions,super.replaceLayout(e,t)}async closeView(e,t){const a=fin.View.wrapSync(e.view);await super.closeView(e,t),await a.destroy().catch((e=>e))}async getSavedPage(...e){return yt.apply(this,e)}async getSavedPages(...e){return ht.apply(this,e)}async createSavedPage(...e){return ft.apply(this,e)}async deleteSavedPage(...e){return St.apply(this,e)}async updateSavedPage(...e){return mt.apply(this,e)}async getSavedWorkspace(...e){return da.apply(this,e)}async getSavedWorkspaces(...e){return pa.apply(this,e)}async createSavedWorkspace(...e){return la.apply(this,e)}async deleteSavedWorkspace(...e){return wa.apply(this,e)}async updateSavedWorkspace(...e){return ua.apply(this,e)}async attachPagesToWindow(t){t.pages=Wa(t.pages,e?.defaultPageOptions),await De(t)}async openGlobalContextMenuInternal(...e){return na.apply(this,e)}async openGlobalContextMenu(...e){return oa.apply(this,e)}async openViewTabContextMenuInternal(...e){return ia.apply(this,e)}async openViewTabContextMenu(...e){return oa.apply(this,e)}async openPageTabContextMenuInternal(...e){return ra.apply(this,e)}async openPageTabContextMenu(...e){return oa.apply(this,e)}async openSaveButtonContextMenu(...e){return oa.apply(this,e)}async openSaveButtonContextMenuInternal(...e){return sa.apply(this,e)}}return"function"==typeof e?.overrideCallback?e.overrideCallback(a):new a};async function Ea(){Xe(),async function(){const e=fin.Application.getCurrentSync();await e.addListener("window-focused",he)}();pe(await le())}let Va;function Oa(e){if(!S)throw new Error("Cannot be used outside an OpenFin env.");if(!Va){fin.Platform.getCurrentSync().once("platform-api-ready",(()=>Ea())),Va=fin.Platform.init({overrideCallback:Ma(e),interopOverride:e?.interopOverride}),(async e=>{K(q.Platform,e)})({allowed:!0})}return Va}const xa=async e=>{const t=A.split(".").map((e=>parseInt(e))),a=await(async e=>new Promise((async t=>{const a=(await fin.System.getVersion()).split(".").map((e=>parseInt(e)));t(e.every(((t,n)=>!(n<3)||a[n]===e[n])))})))(t),n=e?.theme;var o;if(n&&((o=n).forEach((e=>{const t=e.palette.backgroundPrimary;if(!t.includes("#")&&!t.includes("rgb")&&!t.includes("hsl"))throw new Error("Background primary color is not the right format.")})),Aa=o,(async e=>{K(q.Theming,e)})({allowed:!0})),e?.customActions&&(Ye=e?.customActions),a){return Oa(e?.browser)}throw new Error(`Runtime version is not supported.  ${t[0]}.${t[1]}.${t[2]}.* is required`)};module.exports=c})();
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@openfin/workspace/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@openfin/workspace/index.js ***!
  \**************************************************/
/***/ ((module) => {

(()=>{"use strict";var e={3133:(e,t,n)=>{n.r(t),n.d(t,{CLIAction:()=>ze.Pt,CLIFilterOptionType:()=>ze.el,CLITemplate:()=>ze.yW,deregister:()=>Ye,hide:()=>tt,register:()=>Qe,show:()=>et});var r={};n.r(r),n.d(r,{subscribe:()=>oe});var o={};n.r(o),n.d(o,{create:()=>Ge});var i=n(6532),s=n(7405);const a="home";var c;!function(e){e.Commands="home-commands"}(c||(c={}));var d,u=n(5806);n(7564);!function(e){e[e.Initial=0]="Initial",e[e.Open=1]="Open",e[e.Close=2]="Close"}(d||(d={}));const f="all",l="0",p="5",g="6",w=()=>{};function h(e,t){return e?`${e}-${t}`:t}function y(e){return`__search-${e}-topic__`}const v=new Map;function m(e,t){v.has(e)||v.set(e,new Set),v.get(e).add(t)}function S(e,t){const n=v.get(e);n&&n.delete(t)}const C=new Map;function P(e,t){C.has(e)||C.set(e,new Set),C.get(e).add(t)}function R(e,t){const n=C.get(e);n&&n.delete(t)}const b=new Map;async function T(e,t){b.has(e)||b.set(e,new Map),b.get(e).set(t.id,t);const n=v.get(e);if(!n)return;const r=[...n].map((e=>e()));await Promise.all(r)}async function I(e,t){const n=b.get(e);if(!n)return;n.delete(t);const r=C.get(e);if(!r)return;const o=[...r].map((e=>e()));await Promise.all(o)}function L(e){return b.get(e)?[...b.get(e).values()]:[]}function k(e){const t=b.get(e);t&&t.clear()}function M(e,t){const n=b.get(e);return n?n.get(t):null}function B(e,t,n){return{...e,action:n||e.actions[0],dispatcherIdentity:t}}function O(e,t,n="ascending"){const r=e||[];if(!t?.length)return r;const o=[],i=new Map;t.forEach((e=>{if(e.key)return i.set(e.key,e);o.push(e)}));let s=r.map((e=>{const{key:t}=e;if(t&&i.has(t)){const e=i.get(t);return i.delete(t),e}return e}));return s.push(...i.values(),...o),s="ascending"===n?s.sort(((e,t)=>(null!==e.score&&void 0!==e.score?e.score:1/0)-(null!==t.score&&void 0!==t.score?t.score:1/0))):s.sort(((e,t)=>(null!==t.score&&void 0!==t.score?t.score:1/0)-(null!==e.score&&void 0!==e.score?e.score:1/0))),s}function W(e){const t={};let n=[];let r=[];let o=d.Initial;t.getStatus=()=>o,t.getResultBuffer=()=>n,t.setResultBuffer=e=>{n=e,n?.length&&t.onChange()},t.getRevokedBuffer=()=>r,t.setRevokedBuffer=e=>{r=e,r?.length&&t.onChange()},t.onChange=w;const i={};return t.res=i,i.close=()=>{o!==d.Close&&(o=d.Close,t.onChange())},i.open=()=>{o!==d.Open&&(o=d.Open,t.onChange())},i.respond=n=>{const r=O(t.getResultBuffer(),n,e);t.setResultBuffer(r)},i.revoke=(...e)=>{const n=new Set(e),r=t.getResultBuffer().filter((({key:e})=>{const t=n.has(e);return t&&n.delete(e),!t}));t.setResultBuffer(r),n.size&&(t.getRevokedBuffer().forEach((e=>n.add(e))),t.setRevokedBuffer([...n]))},t}function D(e,t,n){const r=new Set;let o=!1;return{close:()=>{o=!0;for(const e of r)e()},req:{id:t,topic:e,...n,context:n?.context||{},onClose:e=>{r.add(e),o&&e()},removeListener:e=>{r.delete(e)}}}}function x(){return{name:fin.me.name,uuid:fin.me.uuid}}function A(){let e;try{const t=fin.Platform.getCurrentSync();if(!t?.identity)return;e=t.identity.uuid}catch(e){}return e}const E="deregistered or does not exist",F=new Error(`provider ${E}`),_=new Error("provider with name already exists"),$=new Error("bad payload"),q=new Error("subscription rejected"),G=new Error(`channel ${E}`),N=new Map;function H(e){const t=U(e);if(t)return t;throw G}function U(e){const t=N.get(e);if(t)return t}function V(e,t){N.set(e,t)}const j=new Map;function K(e){j.has(e)||j.set(e,new Map);const t=j.get(e);return{getRequestsForIdentity:e=>{const n=function(e){return`${e.uuid}:${e.name}`}(e);return t.has(n)||t.set(n,new Map),t.get(n)}}}async function X(e,t){return(await H(e)).dispatch(l,t)}function J({namespacedTopic:e,topic:t}){const n=M.bind(null,e),r=K(e),o=X.bind(null,e);return async(e,i)=>{if(!e||!e.id||!e.providerId){const e=$;return{error:e.message}}const{id:s,providerId:a}=e,c=n(a);if(!c){const e=F;return{error:e.message}}const d=r.getRequestsForIdentity(i);let u=d.get(e.id);u||(u=D(t,s,e),d.set(e.id,u));const f=W(),l=()=>{const e=f.getResultBuffer();f.setResultBuffer([]);const t=f.getRevokedBuffer();f.setRevokedBuffer([]);const n=f.getStatus();o({id:s,providerId:a,results:e,revoked:t,status:n})};let p=!0,g=!1;f.onChange=()=>{if(p)return p=!1,void l();g||(g=!0,setTimeout((()=>{g=!1,l()}),100))};try{const{results:e,context:t}=await c.onUserInput(u.req,f.res),n=f.getStatus();return{id:s,providerId:a,status:n,results:e,context:t}}catch(e){return{id:s,providerId:a,error:e.message}}}}async function Z(e,t,n){const r=n||await H(e),o=x(),i={identity:o,...t,onUserInput:void 0,onResultDispatch:void 0};await r.dispatch("2",i),await T(e,{identity:o,...t})}async function z(e,t){const n=await H(e);return await n.dispatch("3",t),I(e,t)}async function Q(e,t,n,r){const o=B(n,x(),r),i=M(e,t);if(i){const{onResultDispatch:e}=i;if(!e)return;return e(o)}const s={providerId:t,result:o};return(await H(e)).dispatch(p,s)}async function Y(e,t){const n={...t,context:t?.context||{}},r={},o=async function*(e,t,{setState:n}){const r=await H(e);for(;;){const e=await r.dispatch("1",t),o=e.error;if(o)throw new Error(o);const i=e;if(t.id=i.id,n(i.state),i.done)return i.value;yield i.value}}(e,n,{setState:e=>{r.state=e}});let i=await o.next();return r.id=n.id,r.close=()=>{!async function(e,t){(await H(e)).dispatch(g,{id:t})}(e,r.id)},r.next=()=>{if(i){const e=i;return i=void 0,e}return o.next()},r}async function ee(e){return(await H(e)).dispatch("4",null)}async function te(e){const t=await H(e);var n;n=e,N.delete(n),k(e),await t.disconnect()}function ne(e){const{namespacedTopic:t}=e,n=K(t);return async r=>{if(!U(t))return;const o=n.getRequestsForIdentity(r);for(const{req:e,close:t}of o.values())t(),o.delete(e.id);V(t,(async e=>{const{namespacedTopic:t}=e,n=await re(e);for(const e of L(t))await Z(t,e,n);return n})(e))}}async function re(e){const{namespacedTopic:t}=e,n=y(t),r=await async function(e){for(let t=0;t<50;t++)try{return await fin.InterApplicationBus.Channel.connect(e,{wait:!1})}catch(e){if(49===t)throw e;await new Promise((e=>setTimeout(e,1e3)))}}(n);return r.register(l,J(e)),r.register(g,function(e){const t=K(e);return(e,n)=>{const r=t.getRequestsForIdentity(n),o=r.get(e.id);o&&(o.close(),r.delete(e.id))}}(t)),r.register(p,function(e){return async(t,n)=>{if(!t||!t.providerId||!t.result)return;const r=M(e,t.providerId);if(!r)return;const{onResultDispatch:o}=r;return o?(t.result.dispatcherIdentity=n,o(t.result)):void 0}}(t)),r.onDisconnection(ne(e)),r}async function oe(e){const t=("string"==typeof e?e:e?.topic)||f,n=("string"==typeof e?null:e?.uuid)||A(),r=h(n,t),o={topic:t,namespace:n,namespacedTopic:r};let i=U(r);return i||(i=re(o),V(r,i),await i),{getAllProviders:ee.bind(null,r),register:Z.bind(null,r),search:Y.bind(null,r),deregister:z.bind(null,r),dispatch:Q.bind(null,r),disconnect:te.bind(null,r)}}const ie=new Map;function se(e){const t=ae(e);if(t)return t;throw G}function ae(e){const t=ie.get(e);if(t)return t}const ce=new Map;function de(e,t){ce.has(e)||ce.set(e,new Set),ce.get(e).add(t)}function ue(e,t){const n=ce.get(e);n&&n.delete(t)}var fe=n(5316);function le(e){return[...L(e)].map((e=>({...e,onUserInput:void 0,onResultDispatch:void 0})))}async function pe(e,t){if(M(e,t.id))throw new Error("provider with name already exists");const n=x();await T(e,{identity:n,...t})}function ge(e,t){I(e,t)}async function we(e,t,n,r){const o=M(e,t);if(!o)throw F;const{onResultDispatch:i}=o;if(!i)return;return i(B(n,x(),r))}async function*he(e,t,n){const r=function(e,t){const n=[],r=[],o=[],i=[];for(const s of e){const e=W(s.scoreOrder),a={results:[],provider:{id:s.id,identity:s.identity,title:s.title,scoreOrder:s.scoreOrder,icon:s.icon}};n.push(a),r.push(e);const c=(async()=>{try{const{results:n,context:r}=await s.onUserInput(t,e.res);a.results=O(a.results,n),a.context={...a.context,...r}}catch(e){a.error=e}c.done=!0})();i.push(c),o.push(o.length)}return{providerResponses:n,listenerResponses:r,openListenerResponses:o,initialResponsePromises:i}}(t.targets?t.targets.map((t=>M(e,t))).filter((e=>!!e)):[...L(e).filter((e=>!e.hidden))],t),{providerResponses:o,listenerResponses:i}=r;let{openListenerResponses:s,initialResponsePromises:a}=r,c=fe.D.Fetching;const u=e=>{c=e,n.setState(c)};let f,l=!1;t.onClose((()=>{l=!0,f&&f()}));do{let e=!1;if(a.length){const t=[];for(const n of a)n.done?e=!0:t.push(n);a=t,a.length||(u(fe.D.Fetched),e=!0)}let t,n=!1;const r=()=>{n=!0,t&&t()},p=[];for(const t of s){const n=i[t],s=o[t],a=n.getStatus();(a===d.Open||c===fe.D.Fetching&&a===d.Initial)&&(p.push(t),n.onChange=r);const u=n.getResultBuffer();u.length&&(n.setResultBuffer([]),s.results=O(s.results,u),e=!0);const f=n.getRevokedBuffer();if(f.length){n.setRevokedBuffer([]);const t=new Set(f);s.results=s.results.filter((({key:e})=>!t.has(e))),e=!0}}if(s=p,e&&(yield o),l)break;n||(s.length||a.length)&&await Promise.race([...a,new Promise((e=>{t=e})),new Promise((e=>{f=e}))])}while(s.length||a.length);return u(fe.D.Complete),o}let ye=0;function ve({namespacedTopic:e,topic:t},n){ye+=1;const r=D(t,ye.toString(),n),o=he(e,r.req,{setState:e=>{o.state=e}});return o.id=ye.toString(),o.close=r.close,o.state=fe.D.Fetching,o}const me=new Map;function Se(e,t){return`${e}:${t}`}function Ce(e){return async(t,...n)=>{if(!t)return{error:$.message};let r;if(t.id)r=Se(e.namespacedTopic,t.id);else{const n=ve(e,t);r=Se(e.namespacedTopic,n.id),t.id=n.id,me.set(r,{generator:n})}const o=me.get(r);clearTimeout(o.timeout);const i=await o.generator.next();return o.timeout=function(e){return window.setTimeout((()=>{me.delete(e)}),1e4)}(r),{...i,id:t.id,state:o.generator.state}}}function Pe(e,t,n){return se(e).dispatch(t,g,{id:n})}function Re(e){return t=>function(e,t){const n=Se(e,t),r=me.get(n);r&&r.generator.close()}(e,t.id)}async function be(e,t,{id:n,query:r,context:o,targets:i}){const s=se(e),a={id:n,query:r,context:o,targets:i,providerId:t.id},c=await s.dispatch(t.identity,l,a),d=c.error;if(d)throw new Error(d);return c}const Te=new Map;function Ie(e,t,n){return`${e}:${t.name}:${t.uuid}:${n}`}const Le=new Map;function ke(e,t,n){return`${e}:${t}:${n}`}function Me(e,t){const n=Ie.bind(null,e,t.identity),r=Pe.bind(null,e,t.identity),o=be.bind(null,e,t);return async(i,s)=>{const a=n(i.id);if(!Te.has(a)){const e=()=>{r(i.id),Te.delete(a)};Te.set(a,e),i.onClose(e)}const c=ke(e,t.id,i.id),u=()=>{Le.delete(c),s.close()};i.onClose(u),Le.set(c,(e=>{e.results?.length&&s.respond(e.results),e.revoked?.length&&s.revoke(...e.revoked),e.status===d.Open&&s.open(),e.status===d.Close&&u()}));const f=await o(i);return f.status===d.Open&&s.open(),f.status!==d.Close&&f.status!==d.Initial||u(),f}}function Be(e,t){return async n=>{const r=se(e),o={providerId:t.id,result:n};return r.dispatch(t.identity,p,o)}}const Oe=new Map;function We(e,t){return`${e}-${t.name}-${t.uuid}`}function De(e){return async(t,n)=>{if(!t||!t.id)return void new Error(JSON.stringify(t));if(M(e,t.id))throw _;t.identity=n,await async function(e,t){const n=We(e,t.identity);Oe.has(n)||Oe.set(n,[]),Oe.get(n).push(t.id),await T(e,{...t,onUserInput:Me(e,t),onResultDispatch:Be(e,t)})}(e,t)}}function xe(e){return t=>{t&&function(e,t){const n=M(e,t);if(!n)return;const r=We(e,n.identity),o=Oe.get(r);if(o){const n=o.findIndex((e=>e===t));-1!==n&&(o.splice(n,1),I(e,t))}}(e,t)}}const Ae=new Map;function Ee(e,t){Ae.has(e)||Ae.set(e,new Set),Ae.get(e).add(t)}function Fe(e,t){const n=Ae.get(e);n&&n.delete(t)}function _e(e){return async t=>{!function(e,t){const n=We(e,t),r=Oe.get(n);if(r){for(const t of r)I(e,t);Oe.delete(n)}}(e,t);const n=Ae.get(e);n&&n.forEach((e=>e(t)))}}async function $e(e){const{namespacedTopic:t}=e,n=y(e.namespacedTopic),r=await(o=n,fin.InterApplicationBus.Channel.create(o));var o;return r.onConnection(function({namespacedTopic:e}){return async t=>{const n=ce.get(e);if(n)for(const e of n)if(!await e(t))throw q}}(e)),r.onDisconnection(_e(t)),r.register(g,Re(t)),r.register(l,function(e){return t=>{const n=ke(e,t.providerId,t.id),r=Le.get(n);r&&r(t)}}(t)),r.register("2",De(t)),r.register("3",xe(t)),r.register("4",function(e){return async()=>le(e)}(t)),r.register("1",Ce(e)),r.register(p,function(e){return async(t,n)=>{if(!t||!t.providerId||!t.result)return;const r=M(e,t.providerId);if(!r)throw F;const{onResultDispatch:o}=r;return o?(t.result.dispatcherIdentity=n,o(t.result)):void 0}}(t)),r}async function qe(e){const t=se(e);var n;n=e,ie.delete(n),await t.destroy(),k(e)}async function Ge(e){const t=("string"==typeof e?e:e?.topic)||f,n=A(),r=h(n,t),o={topic:t,namespace:n,namespacedTopic:r};let i=ae(r);i||(i=await $e(o),function(e,t){ie.set(e,t)}(r,i));const s=ue.bind(null,r),a=Fe.bind(null,r),c=S.bind(null,r),d=R.bind(null,r);return{getAllProviders:le.bind(null,r),search:ve.bind(null,o),register:pe.bind(null,r),deregister:ge.bind(null,r),onSubscription:de.bind(null,r),onDisconnect:Ee.bind(null,r),onRegister:m.bind(null,r),onDeregister:P.bind(null,r),dispatch:we.bind(null,o),disconnect:qe.bind(null,r),removeListener:e=>{s(e),a(e),c(e),d(e)}}}const{create:Ne}=o,{subscribe:He}=r,Ue={create:Ne,subscribe:He,defaultTopic:"all"},Ve=()=>{const e=window;e.search=Ue,e.fin&&(e.fin.Search=Ue)},je=e=>{const t=()=>{Ve(),window.removeEventListener(e,t)};return t};if("undefined"!=typeof window){Ve();const e="load",t=je(e);window.addEventListener(e,t);const n="DOMContentLoaded",r=je(n);window.addEventListener(n,r)}const Ke=new Map;async function Xe(){await async function(e){Ke.set(e,await He({topic:e,uuid:u.q9.Workspace}))}(a)}let Je;async function Ze(e){return await async function(){return Je||(Je=Xe()),Je}(),Ke.get(e)}var ze=n(3758);const Qe=async e=>{if(!e.icon)throw new Error(`${e.id} provider needs to have icon property defined.`);await(0,s.aB)();const t=await Ze(a);try{const n=await t.register(e);return(0,i.ck)({allowed:!0}),n}catch(e){throw(0,i.ck)({allowed:!1,rejectionCode:e.message}),e}},Ye=async e=>{await(0,s.aB)();return(await Ze(a)).deregister(e)};async function et(){return(await(0,s.Xl)()).dispatch(s.Ml.ShowHome,void 0)}async function tt(){return(await(0,s.Xl)()).dispatch(s.Ml.HideHome,void 0)}},3298:(e,t,n)=>{n.d(t,{w:()=>r.w});var r=n(5316)},3758:(e,t,n)=>{var r,o,i;n.d(t,{Pt:()=>r,yW:()=>o,el:()=>i}),function(e){e.Suggestion="suggestion"}(r||(r={})),function(e){e.Contact="Contact",e.Custom="Custom",e.List="List",e.Plain="Plain",e.SimpleText="SimpleText"}(o||(o={})),function(e){e.MultiSelect="MultiSelect"}(i||(i={}))},7564:(e,t,n)=>{n(3298),n(3758),n(6114),n(2109)},6114:(e,t,n)=>{var r,o;n.d(t,{L:()=>r,T:()=>o}),function(e){e.Snapshot="snapshot",e.Manifest="manifest",e.View="view",e.External="external"}(r||(r={})),function(e){e.LandingPage="landingPage",e.AppGrid="appGrid"}(o||(o={}))},2109:(e,t,n)=>{n.d(t,{p6:()=>r,Go:()=>o,bI:()=>i,ZJ:()=>s});const r={Container:"Container",Button:"Button"},o={Text:"Text",Image:"Image",List:"List"},i={...r,...o};var s;!function(e){e.Primary="primary",e.Secondary="secondary",e.TextOnly="textOnly"}(s||(s={}))},317:(e,t,n)=>{n.r(t),n.d(t,{AppManifestType:()=>i.L,StorefrontTemplate:()=>i.T,deregister:()=>f,hide:()=>l,register:()=>u,show:()=>p});var r=n(6532),o=n(7405);n(7564);var i=n(6114);let s;const a=new Map,c=e=>{if(!a.has(e))throw new Error(`Storefront Provider with id ${e} is not registered`);return a.get(e)},d=async e=>{const t=await(0,o.Xl)();if(a.has(e.id))throw new Error(`Storefront provider with id ${e.id} already registered`);return a.set(e.id,e),(e=>{e.isStorefrontActionsRegistered||(e.isStorefrontActionsRegistered=!0,e.register(o.Ml.GetStorefrontProviderApps,(e=>c(e).getApps())),e.register(o.Ml.GetStorefrontProviderFooter,(e=>c(e).getFooter())),e.register(o.Ml.GetStorefrontProviderLandingPage,(e=>c(e).getLandingPage())),e.register(o.Ml.GetStorefrontProviderNavigation,(e=>c(e).getNavigation())),e.register(o.Ml.LaunchStorefrontProviderApp,(({id:e,app:t})=>c(e).launchApp(t))))})(t),t.dispatch(o.Ml.RegisterStorefrontProvider,e)},u=e=>(s=d(e),(0,r.d9)({allowed:!0}),s),f=async e=>{await s,a.delete(e);return(await(0,o.Xl)()).dispatch(o.Ml.DeregisterStorefrontProvider,e)},l=async()=>{await s,await(0,o.aB)(),await(async()=>(await(0,o.Dm)()).dispatch(o.Ml.HideStorefront,void 0))()},p=async()=>{await s,await(0,o.aB)(),await(async()=>(await(0,o.Dm)()).dispatch(o.Ml.ShowStorefront,null))()}},7405:(e,t,n)=>{n.d(t,{Ml:()=>s,Dm:()=>a,Xl:()=>f,aB:()=>u});var r=n(6678);const o=r.Ax&&"complete"!==document.readyState&&new Promise((e=>document.addEventListener("readystatechange",(()=>{"complete"===document.readyState&&e()}))));var i=n(121);var s;!function(e){e.RegisterStorefrontProvider="register-storefront-provider",e.DeregisterStorefrontProvider="deregister-storefront-provider",e.GetStorefrontProviders="get-storefront-providers",e.HideStorefront="hide-storefront",e.GetStorefrontProviderApps="get-storefront-provider-apps",e.GetStorefrontProviderLandingPage="get-storefront-provider-landing-page",e.GetStorefrontProviderFooter="get-storefront-provider-footer",e.GetStorefrontProviderNavigation="get-storefront-provider-navigation",e.LaunchStorefrontProviderApp="launch-storefront-provider-app",e.ShowStorefront="show-storefront",e.CreateStorefrontWindow="create-storefront-window",e.ShowHome="show-home",e.HideHome="hide-home",e.AssignHomeSearchContext="assign-home-search-context",e.GetLegacyPages="get-legacy-pages",e.GetLegacyWorkspaces="get-legacy-workspaces",e.GetComputedPlatformTheme="get-computed-platform-theme"}(s||(s={}));const a=function(e){let t;return()=>{if(!r.sS)throw new Error("getChannelClient cannot be used outside an OpenFin env. Avoid using this method during pre-rendering.");return t||(t=(async()=>{await o;const n=await fin.InterApplicationBus.Channel.connect(e);return n.onDisconnection((async()=>{t=void 0})),n})().then((e=>e)).catch((n=>{throw t=void 0,new Error(`failed to connect to channel provider ${e}: ${n}`)}))),t}}("__of_workspace_protocol__"),c="isLaunchedViaLib",d=e=>{const t=new URL(e);return t.searchParams.append(c,"true"),t.toString()},u=async()=>{if(!await(0,i.JV)(i.iW))return(r.ZK||-1===navigator.userAgent.indexOf("Win"))&&await fin.Application.startFromManifest(d(r.aW)),fin.System.openUrlWithBrowser(d(r.GX))},f=async()=>(await u(),a())},5806:(e,t,n)=>{n.d(t,{q9:()=>r});var r,o,i,s=n(6678);!function(e){e.Workspace="openfin-browser"}(r||(r={})),function(e){e.RunRequested="run-requested",e.WindowOptionsChanged="window-options-changed",e.WindowClosed="window-closed",e.WindowCreated="window-created"}(o||(o={})),function(e){e.FinProtocol="fin-protocol"}(i||(i={}));s.AB,s.AB,r.Workspace,r.Workspace},6678:(e,t,n)=>{var r;n.d(t,{sS:()=>o,Ax:()=>i,AB:()=>a,oC:()=>c,ZK:()=>d,GX:()=>u,aW:()=>f,u0:()=>p}),function(e){e.Local="local",e.Dev="dev",e.Staging="staging",e.Prod="prod"}(r||(r={}));const o="undefined"!=typeof window&&"undefined"!=typeof fin,i=("undefined"==typeof process||process.env?.JEST_WORKER_ID,"undefined"!=typeof window),s=i?window.origin:r.Local,a=o&&fin.me.uuid,c=o&&fin.me.name,d=(o&&fin.me.entityType,"prod"===r.Local),u=(r.Dev,r.Staging,r.Prod,"fins://system-apps/workspace"),f="https://cdn.openfin.co/workspace/7.2.2/app.json",l=e=>e.startsWith("http://")||e.startsWith("https://")?e:s+e,p=(l("https://cdn.openfin.co/workspace/7.2.2"),l("https://cdn.openfin.co/workspace/7.2.2"),"undefined"!=typeof WORKSPACE_DOCS_PLATFORM_URL&&l(WORKSPACE_DOCS_PLATFORM_URL),"undefined"!=typeof WORKSPACE_DOCS_CLIENT_URL&&l(WORKSPACE_DOCS_CLIENT_URL),"7.2.2")},6532:(e,t,n)=>{n.d(t,{ck:()=>a,d9:()=>c});var r,o=n(6678),i=n(121);!function(e){e.Browser="Browser",e.Home="Home",e.Notification="Notification",e.Storefront="Storefront",e.Platform="Platform",e.Theming="Theming"}(r||(r={}));const s=async(e,t)=>{const n={apiVersion:t.apiVersion||o.u0,componentName:e,componentVersion:o.u0,...t};fin.System.registerUsage({type:"workspace-licensing",data:n})},a=async e=>{i.OI.uuid===i.Gi.uuid&&i.OI.name===i.Gi.name||s(r.Home,e)},c=async e=>{s(r.Storefront,e)}},121:(e,t,n)=>{n.d(t,{Gi:()=>c,OI:()=>d,iW:()=>u,JV:()=>f});var r,o,i=n(5806),s=n(6678);!function(e){e.Home="openfin-home",e.Dock="openfin-dock",e.Storefront="openfin-storefront",e.HomeInternal="openfin-home-internal",e.BrowserMenu="openfin-browser-menu",e.BrowserIndicator="openfin-browser-indicator",e.BrowserWindow="internal-generated-window"}(r||(r={})),function(e){e.Shown="shown",e.BoundsChanged="bounds-changed",e.LayoutReady="layout-ready",e.EndUserBoundsChanging="end-user-bounds-changing",e.Blurred="blurred",e.CloseRequested="close-requested",e.Focused="focused",e.ShowRequested="show-requested",e.ViewCrashed="view-crashed",e.ViewAttached="view-attached",e.ViewDetached="view-detached",e.ViewPageTitleUpdated="view-page-title-updated",e.ViewDestroyed="view-destroyed",e.OptionsChanged="options-changed"}(o||(o={}));function a(e){if(!s.sS)throw new Error("getOFWindow can only be used in an OpenFin env. Avoid calling this method during pre-rendering.");return fin.Window.wrapSync(e)}const c={name:s.oC,uuid:s.AB};const d={name:r.Home,uuid:i.q9.Workspace},u=(r.Dock,i.q9.Workspace,r.Storefront,i.q9.Workspace,{name:i.q9.Workspace,uuid:i.q9.Workspace});const f=e=>a(e).getOptions().then((()=>!0)).catch((()=>!1))},5316:(e,t,n)=>{var r,o;n.d(t,{D:()=>r,w:()=>o}),function(e){e.Fetching="fetching",e.Fetched="fetched",e.Complete="complete"}(r||(r={})),function(e){e.Active="active",e.Default="default"}(o||(o={}))}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};(()=>{n.r(r),n.d(r,{AppManifestType:()=>p.L,ButtonStyle:()=>f.ZJ,CLIAction:()=>l.Pt,CLIFilterOptionType:()=>l.el,CLITemplate:()=>l.yW,ContainerTemplateFragmentNames:()=>f.p6,Home:()=>o,Legacy:()=>e,PresentationTemplateFragmentNames:()=>f.Go,SearchTagBackground:()=>u.w,Storefront:()=>d,StorefrontTemplate:()=>p.T,TemplateFragmentTypes:()=>f.bI});var e={};n.r(e),n.d(e,{getPages:()=>a,getWorkspaces:()=>c});var t,o=n(3133);n(6678),n(121);!function(e){e.TabCreated="tab-created",e.ContainerCreated="container-created",e.ContainerResized="container-resized"}(t||(t={}));new Map;var i;!function(e){e.CurrentWorkspaceId="currentWorkspaceId",e.LastFocusedBrowserWindow="lastFocusedBrowserWindow",e.MachineName="machineName",e.NewTabPageLayout="NewTabPageLayout",e.NewTabPageSort="NewTabPageSort"}(i||(i={}));var s=n(7405);const a=()=>async function(){return(await(0,s.Dm)()).dispatch(s.Ml.GetLegacyPages,void 0)}(),c=()=>(async()=>(await(0,s.Dm)()).dispatch(s.Ml.GetLegacyWorkspaces,void 0))();var d=n(317),u=n(3298),f=n(2109),l=n(3758),p=n(6114)})(),module.exports=r})();
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./client/src/apps.ts":
/*!****************************!*\
  !*** ./client/src/apps.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "developerContent": () => (/* binding */ developerContent),
/* harmony export */   "experoApp": () => (/* binding */ experoApp),
/* harmony export */   "getApps": () => (/* binding */ getApps),
/* harmony export */   "notificationStudio": () => (/* binding */ notificationStudio),
/* harmony export */   "processManager": () => (/* binding */ processManager)
/* harmony export */ });
async function getApps() {
    return [experoApp, notificationStudio, processManager, developerContent];
}
const experoApp = {
    appId: "expero-company-news",
    title: "Gateway - Company News",
    manifest: "https://openfin-iex.experolabs.com/openfin/manifests/company-news.json",
    manifestType: "view",
    icons: [
        {
            src: "https://openfin-iex.experolabs.com/favicon.ico"
        }
    ],
    contactEmail: "contact@example.com",
    supportEmail: "support@example.com",
    publisher: "Expero",
    intents: [],
    images: [{
            src: "http://localhost:8080/images/previews/expero-news-view.png"
        }],
    tags: ["expero", "view", "interop"]
};
const notificationStudio = {
    appId: "notifications-generator",
    title: "OpenFin Notifications Studio",
    manifestType: "manifest",
    description: "Notifications Studio: This is OpenFin's tool for demonstrating the power of our Notification Center. Use it to create local notifications or use some of the examples shown in our Catalog. Experiment with our features and see the power that OpenFin Notification Center can bring to your applications.",
    manifest: "https://cdn.openfin.co/studio/notification/app.json",
    icons: [
        { src: "https://cdn.openfin.co/demos/notifications/generator/images/icon-blue.png" }
    ],
    contactEmail: "contact@example.com",
    supportEmail: "support@example.com",
    publisher: "OpenFin",
    intents: [],
    images: [{
            src: "http://localhost:8080/images/previews/openfin-notification-studio.png"
        }],
    tags: ["hero", "manifest", "tools"]
};
const processManager = {
    appId: "openfin-process-manager",
    title: "OpenFin Process Manager",
    manifestType: "manifest",
    description: "Process Manager: This is OpenFin's tool for helping developers build OpenFin Applications. It lets you see the OpenFin applications that are running, the performance of the applications (memory and cpu) and easy access to the dev tools for the Windows of your application.",
    manifest: "https://cdn.openfin.co/process-manager/app.json",
    icons: [
        { src: "https://cdn.openfin.co/process-manager/img/proc-mgr-icon.png" }
    ],
    contactEmail: "contact@example.com",
    supportEmail: "support@example.com",
    publisher: "OpenFin",
    intents: [],
    images: [{
            src: "http://localhost:8080/images/previews/openfin-process-manager.png"
        }],
    tags: ["hero", "manifest", "tools"]
};
const developerContent = {
    appId: "openfin-developer-page",
    title: "OpenFin Developer Docs",
    manifestType: "snapshot",
    description: "Shows a collection of OpenFin developer pages and provides an example of how you can present a pre-built page as a launch target in OpenFin Home. This entry has a manifest type of 'snapshot'.",
    manifest: "http://localhost:8080/snapshot.json",
    icons: [
        { src: "http://localhost:8080/images/icon-blue.png" }
    ],
    contactEmail: "contact@example.com",
    supportEmail: "support@example.com",
    publisher: "OpenFin",
    intents: [],
    images: [{
            src: "http://localhost:8080/images/previews/openfin-page-docs.png"
        }],
    tags: ["page"]
};


/***/ }),

/***/ "./client/src/store.ts":
/*!*****************************!*\
  !*** ./client/src/store.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "deregister": () => (/* binding */ deregister),
/* harmony export */   "hide": () => (/* binding */ hide),
/* harmony export */   "register": () => (/* binding */ register),
/* harmony export */   "show": () => (/* binding */ show)
/* harmony export */ });
/* harmony import */ var _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openfin/workspace */ "./node_modules/@openfin/workspace/index.js");
/* harmony import */ var _openfin_workspace__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_openfin_workspace__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _openfin_workspace_platform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @openfin/workspace-platform */ "./node_modules/@openfin/workspace-platform/index.js");
/* harmony import */ var _openfin_workspace_platform__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_openfin_workspace_platform__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _apps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./apps */ "./client/src/apps.ts");



const providerId = "register-with-store-basic";
async function register() {
    console.log("Initialising the storefront provider.");
    let provider = await getStoreProvider();
    try {
        await _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.Storefront.register(provider);
        console.log("Storefront provider initialised.");
    }
    catch (err) {
        console.error("An error was encountered while trying to register the content store provider", err);
    }
}
async function deregister() {
    return _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.Storefront.deregister(providerId);
}
async function show() {
    console.log("Showing the store.");
    return _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.Storefront.show();
}
async function hide() {
    console.log("Hiding the store.");
    return _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.Storefront.hide();
}
async function getStoreProvider() {
    console.log("Getting the store provider.");
    return {
        id: providerId,
        title: "Basic Store",
        icon: "http://localhost:8080/favicon.ico",
        getNavigation: getNavigation,
        getLandingPage: getLandingPage,
        getFooter: getFooter,
        getApps: _apps__WEBPACK_IMPORTED_MODULE_2__.getApps,
        launchApp: async (app) => {
            let platform = (0,_openfin_workspace_platform__WEBPACK_IMPORTED_MODULE_1__.getCurrentSync)();
            await platform.launchApp({ app });
        },
    };
}
async function getNavigation() {
    console.log("Showing the store navigation.");
    let navigationSections = [
        {
            id: "apps",
            title: "Apps",
            items: [
                {
                    id: "view",
                    title: "Views",
                    templateId: _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.StorefrontTemplate.AppGrid,
                    templateData: {
                        apps: [_apps__WEBPACK_IMPORTED_MODULE_2__.experoApp],
                    },
                },
                {
                    id: "page",
                    title: "Pages",
                    templateId: _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.StorefrontTemplate.AppGrid,
                    templateData: {
                        apps: [_apps__WEBPACK_IMPORTED_MODULE_2__.developerContent],
                    },
                },
                {
                    id: "manifest",
                    title: "Web Apps",
                    templateId: _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.StorefrontTemplate.AppGrid,
                    templateData: {
                        apps: [_apps__WEBPACK_IMPORTED_MODULE_2__.notificationStudio, _apps__WEBPACK_IMPORTED_MODULE_2__.processManager],
                    },
                },
            ],
        },
    ];
    return navigationSections;
}
async function getLandingPage() {
    console.log("Getting the store landing page.");
    let landingPage = {
        hero: {
            title: "Custom Hero Title",
            description: "This is a demonstration of the hero section that you can configure for your store.",
            cta: {
                id: "hero-1",
                title: "Hero Apps!",
                templateId: _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.StorefrontTemplate.AppGrid,
                templateData: {
                    apps: [_apps__WEBPACK_IMPORTED_MODULE_2__.notificationStudio, _apps__WEBPACK_IMPORTED_MODULE_2__.processManager],
                },
            },
            image: {
                src: "http://localhost:8080/images/superhero-unsplash.jpg",
            },
        },
        topRow: {
            title: "Custom Top Row Content",
            items: [
                {
                    id: "top-row-item-1",
                    title: "Expero",
                    description: "A collection of example views from Expero showing the power of interop and context sharing.",
                    image: {
                        src: "http://localhost:8080/images/coding-1-unsplash.jpg",
                    },
                    templateId: _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.StorefrontTemplate.AppGrid,
                    templateData: {
                        apps: [_apps__WEBPACK_IMPORTED_MODULE_2__.experoApp],
                    },
                },
                {
                    id: "top-row-item-2",
                    title: "Dev Tools",
                    description: "A collection of developer tools that can aid with building and debugging OpenFin applications.",
                    image: {
                        src: "http://localhost:8080/images/coding-2-unsplash.jpg",
                    },
                    templateId: _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.StorefrontTemplate.AppGrid,
                    templateData: {
                        apps: [_apps__WEBPACK_IMPORTED_MODULE_2__.notificationStudio, _apps__WEBPACK_IMPORTED_MODULE_2__.processManager],
                    },
                },
            ],
        },
        middleRow: {
            title: "A collection of simple views that show how to share context using the Interop API.",
            apps: [_apps__WEBPACK_IMPORTED_MODULE_2__.experoApp],
        },
        bottomRow: {
            title: "Quick Access",
            items: [
                {
                    id: "bottom-row-item-1",
                    title: "Views",
                    description: "A collection of views made available through our catalog.",
                    image: {
                        src: "http://localhost:8080/images/coding-4-unsplash.jpg",
                    },
                    templateId: _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.StorefrontTemplate.AppGrid,
                    templateData: {
                        apps: [_apps__WEBPACK_IMPORTED_MODULE_2__.experoApp],
                    },
                },
                {
                    id: "bottom-row-item-2",
                    title: "Web Apps",
                    description: "A collection of web apps built using OpenFin.",
                    image: {
                        src: "http://localhost:8080/images/coding-5-unsplash.jpg",
                    },
                    templateId: _openfin_workspace__WEBPACK_IMPORTED_MODULE_0__.StorefrontTemplate.AppGrid,
                    templateData: {
                        apps: [_apps__WEBPACK_IMPORTED_MODULE_2__.notificationStudio, _apps__WEBPACK_IMPORTED_MODULE_2__.processManager],
                    },
                },
            ],
        },
    };
    return landingPage;
}
async function getFooter() {
    console.log("Getting the store footer.");
    return {
        logo: { src: "http://localhost:8080/favicon.ico", size: "32" },
        text: "Welcome to the OpenFin Sample Footer",
        links: [
            {
                title: "Github",
                url: "https://github.com/built-on-openfin/workspace-starter",
            },
            {
                title: "YouTube",
                url: "https://www.youtube.com/user/OpenFinTech",
            },
        ],
    };
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!********************************!*\
  !*** ./client/src/provider.ts ***!
  \********************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _openfin_workspace_platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openfin/workspace-platform */ "./node_modules/@openfin/workspace-platform/index.js");
/* harmony import */ var _openfin_workspace_platform__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_openfin_workspace_platform__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store */ "./client/src/store.ts");


async function init() {
    await (0,_openfin_workspace_platform__WEBPACK_IMPORTED_MODULE_0__.init)({
        browser: {}
    });
    let registerStore = document.getElementById("register");
    let showStore = document.getElementById("show");
    let hideStore = document.getElementById("hide");
    let deregisterStore = document.getElementById("deregister");
    registerStore.onclick = async () => {
        await (0,_store__WEBPACK_IMPORTED_MODULE_1__.register)();
        showStore.style.display = "unset";
        hideStore.style.display = "unset";
        deregisterStore.style.display = "unset";
        registerStore.style.display = "none";
    };
    deregisterStore.onclick = async () => {
        showStore.style.display = "none";
        hideStore.style.display = "none";
        deregisterStore.style.display = "none";
        registerStore.style.display = "unset";
        await (0,_store__WEBPACK_IMPORTED_MODULE_1__.deregister)();
    };
    showStore.onclick = async () => {
        await (0,_store__WEBPACK_IMPORTED_MODULE_1__.show)();
    };
    hideStore.onclick = async () => {
        await (0,_store__WEBPACK_IMPORTED_MODULE_1__.hide)();
    };
}
window.addEventListener('DOMContentLoaded', async () => {
    await init();
});

})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDLFlBQVksQ0FBQyxDQUFDO0lBRTVELGFBQWEsQ0FBQyxPQUFPLEdBQUcsS0FBSyxJQUFHLEVBQUU7UUFDaEMsTUFBTSxnREFBUSxFQUFFLENBQUM7UUFDakIsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ2xDLFNBQVMsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUNsQyxlQUFlLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDeEMsYUFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO0lBQ3ZDLENBQUMsQ0FBQztJQUVGLGVBQWUsQ0FBQyxPQUFPLEdBQUcsS0FBSyxJQUFHLEVBQUU7UUFDbEMsU0FBUyxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ2pDLFNBQVMsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUNqQyxlQUFlLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdkMsYUFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3RDLE1BQU0sa0RBQVUsRUFBRSxDQUFDO0lBQ3JCLENBQUMsQ0FBQztJQUVGLFNBQVMsQ0FBQyxPQUFPLEdBQUcsS0FBSyxJQUFHLEVBQUU7UUFDNUIsTUFBTSw0Q0FBSSxFQUFFLENBQUM7SUFDZixDQUFDLENBQUM7SUFFRixTQUFTLENBQUMsT0FBTyxHQUFHLEtBQUssSUFBRyxFQUFFO1FBQzVCLE1BQU0sNENBQUksRUFBRSxDQUFDO0lBQ2YsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxLQUFLLElBQUksRUFBRTtJQUNyRCxNQUFNLElBQUksRUFBRSxDQUFDO0FBQ2YsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuZmluLXdvcmtzcGFjZS0tcmVnaXN0ZXItd2l0aC1zdG9yZS1iYXNpYy8uL25vZGVfbW9kdWxlcy9Ab3BlbmZpbi93b3Jrc3BhY2UtcGxhdGZvcm0vaW5kZXguanMiLCJ3ZWJwYWNrOi8vb3BlbmZpbi13b3Jrc3BhY2UtLXJlZ2lzdGVyLXdpdGgtc3RvcmUtYmFzaWMvLi9ub2RlX21vZHVsZXMvQG9wZW5maW4vd29ya3NwYWNlL2luZGV4LmpzIiwid2VicGFjazovL29wZW5maW4td29ya3NwYWNlLS1yZWdpc3Rlci13aXRoLXN0b3JlLWJhc2ljLy4vY2xpZW50L3NyYy9hcHBzLnRzIiwid2VicGFjazovL29wZW5maW4td29ya3NwYWNlLS1yZWdpc3Rlci13aXRoLXN0b3JlLWJhc2ljLy4vY2xpZW50L3NyYy9zdG9yZS50cyIsIndlYnBhY2s6Ly9vcGVuZmluLXdvcmtzcGFjZS0tcmVnaXN0ZXItd2l0aC1zdG9yZS1iYXNpYy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9vcGVuZmluLXdvcmtzcGFjZS0tcmVnaXN0ZXItd2l0aC1zdG9yZS1iYXNpYy93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9vcGVuZmluLXdvcmtzcGFjZS0tcmVnaXN0ZXItd2l0aC1zdG9yZS1iYXNpYy93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vb3BlbmZpbi13b3Jrc3BhY2UtLXJlZ2lzdGVyLXdpdGgtc3RvcmUtYmFzaWMvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9vcGVuZmluLXdvcmtzcGFjZS0tcmVnaXN0ZXItd2l0aC1zdG9yZS1iYXNpYy93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL29wZW5maW4td29ya3NwYWNlLS1yZWdpc3Rlci13aXRoLXN0b3JlLWJhc2ljLy4vY2xpZW50L3NyYy9wcm92aWRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIoKCk9PntcInVzZSBzdHJpY3RcIjt2YXIgZSx0LGEsbixvLGkscixzPXtkOihlLHQpPT57Zm9yKHZhciBhIGluIHQpcy5vKHQsYSkmJiFzLm8oZSxhKSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsYSx7ZW51bWVyYWJsZTohMCxnZXQ6dFthXX0pfSxvOihlLHQpPT5PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KSxyOmU9PntcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfX0sYz17fTtzLnIoYykscy5kKGMse0FwcE1hbmlmZXN0VHlwZTooKT0+aSxCcm93c2VyQnV0dG9uVHlwZTooKT0+dSxDdXN0b21BY3Rpb25DYWxsZXJUeXBlOigpPT55LEdsb2JhbENvbnRleHRNZW51T3B0aW9uVHlwZTooKT0+cCxQYWdlVGFiQ29udGV4dE1lbnVPcHRpb25UeXBlOigpPT5sLFNhdmVCdXR0b25Db250ZXh0TWVudU9wdGlvblR5cGU6KCk9PmcsU2F2ZU1vZGFsVHlwZTooKT0+aCxWaWV3VGFiTWVudU9wdGlvblR5cGU6KCk9PncsZ2V0Q3VycmVudFN5bmM6KCk9PkV0LGluaXQ6KCk9PnhhLHdyYXBTeW5jOigpPT5NdH0pLGZ1bmN0aW9uKGUpe2UuRmV0Y2hpbmc9XCJmZXRjaGluZ1wiLGUuRmV0Y2hlZD1cImZldGNoZWRcIixlLkNvbXBsZXRlPVwiY29tcGxldGVcIn0oZXx8KGU9e30pKSxmdW5jdGlvbihlKXtlLkFjdGl2ZT1cImFjdGl2ZVwiLGUuRGVmYXVsdD1cImRlZmF1bHRcIn0odHx8KHQ9e30pKSxmdW5jdGlvbihlKXtlLlN1Z2dlc3Rpb249XCJzdWdnZXN0aW9uXCJ9KGF8fChhPXt9KSksZnVuY3Rpb24oZSl7ZS5Db250YWN0PVwiQ29udGFjdFwiLGUuQ3VzdG9tPVwiQ3VzdG9tXCIsZS5MaXN0PVwiTGlzdFwiLGUuUGxhaW49XCJQbGFpblwiLGUuU2ltcGxlVGV4dD1cIlNpbXBsZVRleHRcIn0obnx8KG49e30pKSxmdW5jdGlvbihlKXtlLk11bHRpU2VsZWN0PVwiTXVsdGlTZWxlY3RcIn0ob3x8KG89e30pKSxmdW5jdGlvbihlKXtlLlNuYXBzaG90PVwic25hcHNob3RcIixlLk1hbmlmZXN0PVwibWFuaWZlc3RcIixlLlZpZXc9XCJ2aWV3XCIsZS5FeHRlcm5hbD1cImV4dGVybmFsXCJ9KGl8fChpPXt9KSksZnVuY3Rpb24oZSl7ZS5MYW5kaW5nUGFnZT1cImxhbmRpbmdQYWdlXCIsZS5BcHBHcmlkPVwiYXBwR3JpZFwifShyfHwocj17fSkpO3ZhciBkLHAsbCx3LHUsZyx5LGgsZjshZnVuY3Rpb24oZSl7ZS5QcmltYXJ5PVwicHJpbWFyeVwiLGUuU2Vjb25kYXJ5PVwic2Vjb25kYXJ5XCIsZS5UZXh0T25seT1cInRleHRPbmx5XCJ9KGR8fChkPXt9KSksZnVuY3Rpb24oZSl7ZS5OZXdXaW5kb3c9XCJOZXdXaW5kb3dcIixlLk5ld1BhZ2U9XCJOZXdQYWdlXCIsZS5TYXZlV29ya3NwYWNlPVwiU2F2ZVdvcmtzcGFjZVwiLGUuU2F2ZVBhZ2U9XCJTYXZlUGFnZVwiLGUuU2F2ZVBhZ2VBcz1cIlNhdmVQYWdlQXNcIixlLkNsb3NlV2luZG93PVwiQ2xvc2VXaW5kb3dcIixlLlNhdmVXb3Jrc3BhY2VBcz1cIlNhdmVXb3Jrc3BhY2VBc1wiLGUuUmVuYW1lV29ya3NwYWNlPVwiUmVuYW1lV29ya3NwYWNlXCIsZS5Td2l0Y2hXb3Jrc3BhY2U9XCJTd2l0Y2hXb3Jrc3BhY2VcIixlLkRlbGV0ZVdvcmtzcGFjZT1cIkRlbGV0ZVdvcmtzcGFjZVwiLGUuT3BlblN0b3JlZnJvbnQ9XCJPcGVuU3RvcmVmcm9udFwiLGUuUXVpdD1cIlF1aXRcIixlLkN1c3RvbT1cIkN1c3RvbVwifShwfHwocD17fSkpLGZ1bmN0aW9uKGUpe2UuQ2xvc2U9XCJDbG9zZVwiLGUuRHVwbGljYXRlPVwiRHVwbGljYXRlXCIsZS5SZW5hbWU9XCJSZW5hbWVcIixlLlNhdmU9XCJTYXZlXCIsZS5TYXZlQXM9XCJTYXZlIEFzXCIsZS5DdXN0b209XCJDdXN0b21cIn0obHx8KGw9e30pKSxmdW5jdGlvbihlKXtlLk5ld1ZpZXc9XCJOZXdWaWV3XCIsZS5EdXBsaWNhdGVWaWV3cz1cIkR1cGxpY2F0ZVZpZXdcIixlLk9wZW5XaXRoRGVmYXVsdEJyb3dzZXI9XCJPcGVuV2l0aERlZmF1bHRCcm93c2VyXCIsZS5SZWxvYWRWaWV3cz1cIlJlbG9hZFRhYlwiLGUuQ2xvc2VWaWV3cz1cIkNsb3NlVGFiXCIsZS5BZGRUb0NoYW5uZWw9XCJBZGRUb0NoYW5uZWxcIixlLlJlbW92ZUZyb21DaGFubmVsPVwiUmVtb3ZlRnJvbUNoYW5uZWxcIixlLkN1c3RvbT1cIkN1c3RvbVwifSh3fHwodz17fSkpLGZ1bmN0aW9uKGUpe2UuU2hvd0hpZGVUYWJzPVwiU2hvd0hpZGVUYWJzXCIsZS5Db2xvckxpbmtpbmc9XCJDb2xvckxpbmtpbmdcIixlLlByZXNldExheW91dHM9XCJQcmVzZXRMYXlvdXRzXCIsZS5TYXZlTWVudT1cIlNhdmVNZW51XCIsZS5NaW5pbWlzZT1cIk1pbmltaXNlXCIsZS5NYXhpbWlzZT1cIk1heGltaXNlXCIsZS5DbG9zZT1cIkNsb3NlXCIsZS5DdXN0b209XCJDdXN0b21cIn0odXx8KHU9e30pKSxmdW5jdGlvbihlKXtlLlNhdmVQYWdlPVwiU2F2ZVBhZ2VcIixlLlNhdmVXb3Jrc3BhY2U9XCJTYXZlV29ya3NwYWNlXCIsZS5DdXN0b209XCJDdXN0b21cIn0oZ3x8KGc9e30pKSxmdW5jdGlvbihlKXtlLkN1c3RvbUJ1dHRvbj1cIkN1c3RvbUJ1dHRvblwiLGUuR2xvYmFsQ29udGV4dE1lbnU9XCJHbG9iYWxDb250ZXh0TWVudVwiLGUuVmlld1RhYkNvbnRleHRNZW51PVwiVmlld1RhYkNvbnRleHRNZW51XCIsZS5QYWdlVGFiQ29udGV4dE1lbnU9XCJQYWdlVGFiQ29udGV4dE1lbnVcIixlLlNhdmVCdXR0b25Db250ZXh0TWVudT1cIlNhdmVCdXR0b25Db250ZXh0TWVudVwiLGUuQVBJPVwiQVBJXCJ9KHl8fCh5PXt9KSksZnVuY3Rpb24oZSl7ZS5TQVZFX1BBR0U9XCJTQVZFX1BBR0VcIixlLlNBVkVfV09SS1NQQUNFPVwiU0FWRV9XT1JLU1BBQ0VcIixlLlNBVkVfUEFHRV9BUz1cIlNBVkVfUEFHRV9BU1wiLGUuU0FWRV9XT1JLU1BBQ0VfQVM9XCJTQVZFX1dPUktTUEFDRV9BU1wiLGUuUkVOQU1FX1BBR0U9XCJSRU5BTUVfUEFHRVwiLGUuUkVOQU1FX1dPUktTUEFDRT1cIlJFTkFNRV9XT1JLU1BBQ0VcIn0oaHx8KGg9e30pKSxmdW5jdGlvbihlKXtlLkxvY2FsPVwibG9jYWxcIixlLkRldj1cImRldlwiLGUuU3RhZ2luZz1cInN0YWdpbmdcIixlLlByb2Q9XCJwcm9kXCJ9KGZ8fChmPXt9KSk7Y29uc3QgUz1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZcInVuZGVmaW5lZFwiIT10eXBlb2YgZmluLG09KFwidW5kZWZpbmVkXCI9PXR5cGVvZiBwcm9jZXNzfHxwcm9jZXNzLmVudj8uSkVTVF9XT1JLRVJfSUQsXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyksdj1tJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgaW5kZXhlZERCLFA9bT93aW5kb3cub3JpZ2luOmYuTG9jYWwsYj1TJiZmaW4ubWUudXVpZCxrPVMmJmZpbi5tZS5uYW1lLFc9UyYmZmluLm1lLmVudGl0eVR5cGUsQz0oZi5Mb2NhbCxmLkRldixmLlN0YWdpbmcsZi5Qcm9kLGU9PmUuc3RhcnRzV2l0aChcImh0dHA6Ly9cIil8fGUuc3RhcnRzV2l0aChcImh0dHBzOi8vXCIpP2U6UCtlKSxJPShDKFwiaHR0cHM6Ly9jZG4ub3BlbmZpbi5jby93b3Jrc3BhY2UvNy4yLjJcIiksQyhcImh0dHBzOi8vY2RuLm9wZW5maW4uY28vd29ya3NwYWNlLzcuMi4yXCIpKSxBPShcInVuZGVmaW5lZFwiIT10eXBlb2YgV09SS1NQQUNFX0RPQ1NfUExBVEZPUk1fVVJMJiZDKFdPUktTUEFDRV9ET0NTX1BMQVRGT1JNX1VSTCksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFdPUktTUEFDRV9ET0NTX0NMSUVOVF9VUkwmJkMoV09SS1NQQUNFX0RPQ1NfQ0xJRU5UX1VSTCksXCIyNC45OC42OS42XCIpLFQ9XCI3LjIuMlwiO3ZhciBNLEUsVjshZnVuY3Rpb24oZSl7ZS5Xb3Jrc3BhY2U9XCJvcGVuZmluLWJyb3dzZXJcIn0oTXx8KE09e30pKSxmdW5jdGlvbihlKXtlLlJ1blJlcXVlc3RlZD1cInJ1bi1yZXF1ZXN0ZWRcIixlLldpbmRvd09wdGlvbnNDaGFuZ2VkPVwid2luZG93LW9wdGlvbnMtY2hhbmdlZFwiLGUuV2luZG93Q2xvc2VkPVwid2luZG93LWNsb3NlZFwiLGUuV2luZG93Q3JlYXRlZD1cIndpbmRvdy1jcmVhdGVkXCJ9KEV8fChFPXt9KSksZnVuY3Rpb24oZSl7ZS5GaW5Qcm90b2NvbD1cImZpbi1wcm90b2NvbFwifShWfHwoVj17fSkpO2NvbnN0IE89e3V1aWQ6YixuYW1lOmJ9LHg9KE0uV29ya3NwYWNlLE0uV29ya3NwYWNlLGU9PntpZighUyl0aHJvdyBuZXcgRXJyb3IoXCJnZXRBcHBsaWNhdGlvbiBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbiBPcGVuRmluIGVudi4gQXZvaWQgdXNpbmcgdGhpcyBkdXJpbmcgcHJlLXJlbmRlcmluZy5cIik7cmV0dXJuIGZpbi5BcHBsaWNhdGlvbi53cmFwU3luYyhlKX0pO3ZhciBSLF87IWZ1bmN0aW9uKGUpe2UuSG9tZT1cIm9wZW5maW4taG9tZVwiLGUuRG9jaz1cIm9wZW5maW4tZG9ja1wiLGUuU3RvcmVmcm9udD1cIm9wZW5maW4tc3RvcmVmcm9udFwiLGUuSG9tZUludGVybmFsPVwib3BlbmZpbi1ob21lLWludGVybmFsXCIsZS5Ccm93c2VyTWVudT1cIm9wZW5maW4tYnJvd3Nlci1tZW51XCIsZS5Ccm93c2VySW5kaWNhdG9yPVwib3BlbmZpbi1icm93c2VyLWluZGljYXRvclwiLGUuQnJvd3NlcldpbmRvdz1cImludGVybmFsLWdlbmVyYXRlZC13aW5kb3dcIn0oUnx8KFI9e30pKSxmdW5jdGlvbihlKXtlLlNob3duPVwic2hvd25cIixlLkJvdW5kc0NoYW5nZWQ9XCJib3VuZHMtY2hhbmdlZFwiLGUuTGF5b3V0UmVhZHk9XCJsYXlvdXQtcmVhZHlcIixlLkVuZFVzZXJCb3VuZHNDaGFuZ2luZz1cImVuZC11c2VyLWJvdW5kcy1jaGFuZ2luZ1wiLGUuQmx1cnJlZD1cImJsdXJyZWRcIixlLkNsb3NlUmVxdWVzdGVkPVwiY2xvc2UtcmVxdWVzdGVkXCIsZS5Gb2N1c2VkPVwiZm9jdXNlZFwiLGUuU2hvd1JlcXVlc3RlZD1cInNob3ctcmVxdWVzdGVkXCIsZS5WaWV3Q3Jhc2hlZD1cInZpZXctY3Jhc2hlZFwiLGUuVmlld0F0dGFjaGVkPVwidmlldy1hdHRhY2hlZFwiLGUuVmlld0RldGFjaGVkPVwidmlldy1kZXRhY2hlZFwiLGUuVmlld1BhZ2VUaXRsZVVwZGF0ZWQ9XCJ2aWV3LXBhZ2UtdGl0bGUtdXBkYXRlZFwiLGUuVmlld0Rlc3Ryb3llZD1cInZpZXctZGVzdHJveWVkXCIsZS5PcHRpb25zQ2hhbmdlZD1cIm9wdGlvbnMtY2hhbmdlZFwifShffHwoXz17fSkpO2Z1bmN0aW9uIEwoZSl7aWYoIVMpdGhyb3cgbmV3IEVycm9yKFwiZ2V0T0ZXaW5kb3cgY2FuIG9ubHkgYmUgdXNlZCBpbiBhbiBPcGVuRmluIGVudi4gQXZvaWQgY2FsbGluZyB0aGlzIG1ldGhvZCBkdXJpbmcgcHJlLXJlbmRlcmluZy5cIik7cmV0dXJuIGZpbi5XaW5kb3cud3JhcFN5bmMoZSl9Y29uc3QgQj17bmFtZTprLHV1aWQ6Yn07ZnVuY3Rpb24gRygpe3JldHVybiBMKEIpfVIuSG9tZSxNLldvcmtzcGFjZSxSLkRvY2ssTS5Xb3Jrc3BhY2U7Y29uc3QgRD17bmFtZTpSLlN0b3JlZnJvbnQsdXVpZDpNLldvcmtzcGFjZX07TS5Xb3Jrc3BhY2UsTS5Xb3Jrc3BhY2U7YXN5bmMgZnVuY3Rpb24gRihlKXtjb25zdCB0PUwoZSk7XCJtaW5pbWl6ZWRcIj09PWF3YWl0IHQuZ2V0U3RhdGUoKSYmYXdhaXQgdC5yZXN0b3JlKCksYXdhaXQgdC5zaG93KCksYXdhaXQgdC5icmluZ1RvRnJvbnQoKSxhd2FpdCB0LmZvY3VzKCl9Y29uc3QgVT1lPT5lLnN0YXJ0c1dpdGgoUi5Ccm93c2VyV2luZG93KTthc3luYyBmdW5jdGlvbiBOKCl7cmV0dXJuKGF3YWl0IGZpbi5BcHBsaWNhdGlvbi5nZXRDdXJyZW50U3luYygpLmdldENoaWxkV2luZG93cygpKS5maWx0ZXIoKGU9PlUoZS5pZGVudGl0eS5uYW1lKSkpfWNvbnN0ICQ9ZT0+TChlKS5nZXRPcHRpb25zKCkudGhlbigoKCk9PiEwKSkuY2F0Y2goKCgpPT4hMSkpLEg9KCk9PiQoRCk7dmFyIHE7IWZ1bmN0aW9uKGUpe2UuQnJvd3Nlcj1cIkJyb3dzZXJcIixlLkhvbWU9XCJIb21lXCIsZS5Ob3RpZmljYXRpb249XCJOb3RpZmljYXRpb25cIixlLlN0b3JlZnJvbnQ9XCJTdG9yZWZyb250XCIsZS5QbGF0Zm9ybT1cIlBsYXRmb3JtXCIsZS5UaGVtaW5nPVwiVGhlbWluZ1wifShxfHwocT17fSkpO2NvbnN0IEs9YXN5bmMoZSx0KT0+e2NvbnN0IGE9e2FwaVZlcnNpb246dC5hcGlWZXJzaW9ufHxULGNvbXBvbmVudE5hbWU6ZSxjb21wb25lbnRWZXJzaW9uOlQsLi4udH07ZmluLlN5c3RlbS5yZWdpc3RlclVzYWdlKHt0eXBlOlwid29ya3NwYWNlLWxpY2Vuc2luZ1wiLGRhdGE6YX0pfTt2YXIgaixRPW5ldyBVaW50OEFycmF5KDE2KTtmdW5jdGlvbiBKKCl7aWYoIWomJiEoaj1cInVuZGVmaW5lZFwiIT10eXBlb2YgY3J5cHRvJiZjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzJiZjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLmJpbmQoY3J5cHRvKXx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1zQ3J5cHRvJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBtc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMmJm1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKG1zQ3J5cHRvKSkpdGhyb3cgbmV3IEVycm9yKFwiY3J5cHRvLmdldFJhbmRvbVZhbHVlcygpIG5vdCBzdXBwb3J0ZWQuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQjZ2V0cmFuZG9tdmFsdWVzLW5vdC1zdXBwb3J0ZWRcIik7cmV0dXJuIGooUSl9Y29uc3Qgej0vXig/OlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9fDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCkkL2k7Y29uc3QgWD1mdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZSYmei50ZXN0KGUpfTtmb3IodmFyIFk9W10sWj0wO1o8MjU2OysrWilZLnB1c2goKForMjU2KS50b1N0cmluZygxNikuc3Vic3RyKDEpKTtjb25zdCBlZT1mdW5jdGlvbihlKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06MCxhPShZW2VbdCswXV0rWVtlW3QrMV1dK1lbZVt0KzJdXStZW2VbdCszXV0rXCItXCIrWVtlW3QrNF1dK1lbZVt0KzVdXStcIi1cIitZW2VbdCs2XV0rWVtlW3QrN11dK1wiLVwiK1lbZVt0KzhdXStZW2VbdCs5XV0rXCItXCIrWVtlW3QrMTBdXStZW2VbdCsxMV1dK1lbZVt0KzEyXV0rWVtlW3QrMTNdXStZW2VbdCsxNF1dK1lbZVt0KzE1XV0pLnRvTG93ZXJDYXNlKCk7aWYoIVgoYSkpdGhyb3cgVHlwZUVycm9yKFwiU3RyaW5naWZpZWQgVVVJRCBpcyBpbnZhbGlkXCIpO3JldHVybiBhfTtjb25zdCB0ZT1mdW5jdGlvbihlLHQsYSl7dmFyIG49KGU9ZXx8e30pLnJhbmRvbXx8KGUucm5nfHxKKSgpO2lmKG5bNl09MTUmbls2XXw2NCxuWzhdPTYzJm5bOF18MTI4LHQpe2E9YXx8MDtmb3IodmFyIG89MDtvPDE2Oysrbyl0W2Erb109bltvXTtyZXR1cm4gdH1yZXR1cm4gZWUobil9O3ZhciBhZTshZnVuY3Rpb24oZSl7ZS5DdXJyZW50V29ya3NwYWNlSWQ9XCJjdXJyZW50V29ya3NwYWNlSWRcIixlLkxhc3RGb2N1c2VkQnJvd3NlcldpbmRvdz1cImxhc3RGb2N1c2VkQnJvd3NlcldpbmRvd1wiLGUuTWFjaGluZU5hbWU9XCJtYWNoaW5lTmFtZVwiLGUuTmV3VGFiUGFnZUxheW91dD1cIk5ld1RhYlBhZ2VMYXlvdXRcIixlLk5ld1RhYlBhZ2VTb3J0PVwiTmV3VGFiUGFnZVNvcnRcIn0oYWV8fChhZT17fSkpO2NvbnN0IG5lPWFlO3ZhciBvZTshZnVuY3Rpb24oZSl7ZS5MYXVuY2hBcHA9XCJsYXVuY2hBcHBcIixlLlNhdmVQYWdlPVwic2F2ZVBhZ2VcIixlLkdldFNhdmVkUGFnZT1cImdldFNhdmVkUGFnZVwiLGUuQ3JlYXRlU2F2ZWRQYWdlPVwiY3JlYXRlU2F2ZWRQYWdlXCIsZS5VcGRhdGVTYXZlZFBhZ2U9XCJ1cGRhdGVTYXZlZFBhZ2VcIixlLkRlbGV0ZVNhdmVkUGFnZT1cImRlbGV0ZVNhdmVkUGFnZVwiLGUuR2V0U2F2ZWRQYWdlcz1cImdldFNhdmVkUGFnZXNcIixlLkNyZWF0ZVNhdmVkUGFnZUludGVybmFsPVwiY3JlYXRlU2F2ZWRQYWdlSW50ZXJuYWxcIixlLlVwZGF0ZVNhdmVkUGFnZUludGVybmFsPVwidXBkYXRlU2F2ZWRQYWdlSW50ZXJuYWxcIixlLkRlbGV0ZVNhdmVkUGFnZUludGVybmFsPVwiZGVsZXRlU2F2ZWRQYWdlSW50ZXJuYWxcIixlLlNoYXJlUGFnZT1cInNoYXJlUGFnZVwiLGUuVXBkYXRlUGFnZUZvcldpbmRvdz1cInVwZGF0ZVBhZ2VGb3JXaW5kb3dcIixlLkF0dGFjaFBhZ2VzVG9XaW5kb3c9XCJhdHRhY2hQYWdlc1RvV2luZG93XCIsZS5EZXRhY2hQYWdlc0Zyb21XaW5kb3c9XCJkZXRhY2hQYWdlc0Zyb21XaW5kb3dcIixlLlJlb3JkZXJQYWdlc0ZvcldpbmRvdz1cInJlb3JkZXJQYWdlc0ZvcldpbmRvd1wiLGUuU2V0QWN0aXZlUGFnZT1cInNldEFjdGl2ZVBhZ2VcIixlLkdldEFsbEF0dGFjaGVkUGFnZXM9XCJnZXRBbGxBdHRhY2hlZFBhZ2VzXCIsZS5HZXRBY3RpdmVQYWdlSWRGb3JXaW5kb3c9XCJnZXRBY3RpdmVQYWdlSWRGb3JXaW5kb3dcIixlLkdldFBhZ2VzRm9yV2luZG93PVwiZ2V0UGFnZXNGb3JXaW5kb3dcIixlLkdldFBhZ2VGb3JXaW5kb3c9XCJnZXRQYWdlRm9yV2luZG93XCIsZS5HZXRTYXZlZFBhZ2VNZXRhZGF0YT1cImdldFNhdmVkUGFnZU1ldGFkYXRhXCIsZS5HZXRVbmlxdWVQYWdlVGl0bGU9XCJnZXRVbmlxdWVQYWdlVGl0bGVcIixlLkdldExhc3RGb2N1c2VkQnJvd3NlcldpbmRvdz1cImdldExhc3RGb2N1c2VkQnJvd3NlcldpbmRvd1wiLGUuR2V0VGhlbWVzPVwiZ2V0VGhlbWVzXCIsZS5PcGVuR2xvYmFsQ29udGV4dE1lbnVJbnRlcm5hbD1cIm9wZW5HbG9iYWxDb250ZXh0TWVudUludGVybmFsXCIsZS5PcGVuVmlld1RhYkNvbnRleHRNZW51SW50ZXJuYWw9XCJvcGVuVmlld1RhYkNvbnRleHRNZW51SW50ZXJuYWxcIixlLk9wZW5QYWdlVGFiQ29udGV4dE1lbnVJbnRlcm5hbD1cIm9wZW5QYWdlVGFiQ29udGV4dE1lbnVJbnRlcm5hbFwiLGUuT3BlblNhdmVCdXR0b25Db250ZXh0TWVudUludGVybmFsPVwib3BlblNhdmVCdXR0b25Db250ZXh0TWVudUludGVybmFsXCIsZS5JbnZva2VDdXN0b21BY3Rpb25JbnRlcm5hbD1cImludm9rZUN1c3RvbUFjdGlvbkludGVybmFsXCIsZS5HZXRTYXZlZFdvcmtzcGFjZT1cImdldFNhdmVkV29ya3NwYWNlXCIsZS5DcmVhdGVTYXZlZFdvcmtzcGFjZT1cImNyZWF0ZVNhdmVkV29ya3NwYWNlXCIsZS5VcGRhdGVTYXZlZFdvcmtzcGFjZT1cInVwZGF0ZVNhdmVkV29ya3NwYWNlXCIsZS5EZWxldGVTYXZlZFdvcmtzcGFjZT1cImRlbGV0ZVNhdmVkV29ya3NwYWNlXCIsZS5HZXRTYXZlZFdvcmtzcGFjZXM9XCJnZXRTYXZlZFdvcmtzcGFjZXNcIixlLlNhdmVXb3Jrc3BhY2U9XCJzYXZlV29ya3NwYWNlXCIsZS5HZXRDdXJyZW50V29ya3NwYWNlPVwiZ2V0Q3VycmVudFdvcmtzcGFjZVwiLGUuQXBwbHlXb3Jrc3BhY2U9XCJhcHBseVdvcmtzcGFjZVwiLGUuU2V0QWN0aXZlV29ya3NwYWNlPVwic2V0QWN0aXZlV29ya3NwYWNlXCJ9KG9lfHwob2U9e30pKTtjb25zdCBpZT1hc3luYyBlPT57Y29uc3QgdD1maW4uUGxhdGZvcm0ud3JhcFN5bmMoZSksYT1hd2FpdCB0LmdldENsaWVudCgpLG49XCJUYXJnZXQgaXMgbm90IGEgV29ya3NwYWNlIFBsYXRmb3JtLiBUYXJnZXQgbXVzdCBjYWxsIFdvcmtzcGFjZVBsYXRmb3JtLmluaXRcIjt0cnl7aWYoITA9PT1hd2FpdCBhLmRpc3BhdGNoKFwiaXNXb3Jrc3BhY2VQbGF0Zm9ybVwiKSlyZXR1cm4gYTt0aHJvdyBuZXcgRXJyb3Iobil9Y2F0Y2goZSl7dGhyb3cgbmV3IEVycm9yKG4pfX0scmU9KGUsdCk9PiF0LmZpbmQoKHQ9PnQ9PT1lKSksc2U9KGUsdCk9PmAke2V9ICgke3R9KWAsY2U9KGUsdCk9PntsZXQgYT0xO2NvbnN0IG49ZS5yZXBsYWNlKC8gXFwoLitcXCkkLyxcIlwiKTtmb3IoOyFyZShzZShuLGEpLHQpOylhKz0xO3JldHVybiBzZShuLGEpfTthc3luYyBmdW5jdGlvbiBkZShlKXt0cnl7YXdhaXQgZmluLlBsYXRmb3JtLmdldEN1cnJlbnRTeW5jKCkuYXBwbHlTbmFwc2hvdChlLnNuYXBzaG90LHtjbG9zZUV4aXN0aW5nV2luZG93czohMH0pLHBlKGUpfWNhdGNoKGUpe319ZnVuY3Rpb24gcGUoZSl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGxvY2FsU3RvcmFnZSl0cnl7Y29uc3QgdD1KU09OLnN0cmluZ2lmeShlKTtsb2NhbFN0b3JhZ2Uuc2V0SXRlbShuZS5DdXJyZW50V29ya3NwYWNlSWQsdCl9Y2F0Y2goZSl7fX1hc3luYyBmdW5jdGlvbiBsZSgpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBsb2NhbFN0b3JhZ2UpcmV0dXJuO2NvbnN0IGU9YXdhaXQgZmluLlBsYXRmb3JtLmdldEN1cnJlbnRTeW5jKCkuZ2V0U25hcHNob3QoKTtyZXR1cm57d29ya3NwYWNlSWQ6dGUoKSx0aXRsZTphd2FpdCBnZSgpLG1ldGFkYXRhOntBUElWZXJzaW9uOlR9LHNuYXBzaG90OmV9fWFzeW5jIGZ1bmN0aW9uIHdlKCl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIGxvY2FsU3RvcmFnZSlyZXR1cm47Y29uc3QgZT1sb2NhbFN0b3JhZ2UuZ2V0SXRlbShuZS5DdXJyZW50V29ya3NwYWNlSWQpO2lmKCFlKXJldHVybiBsZSgpO2NvbnN0IHQ9SlNPTi5wYXJzZShlKSxhPWF3YWl0IGZpbi5QbGF0Zm9ybS5nZXRDdXJyZW50U3luYygpLmdldFNuYXBzaG90KCk7cmV0dXJuey4uLnQsbWV0YWRhdGE6dC5tZXRhZGF0YXx8e0FQSVZlcnNpb246VH0sc25hcHNob3Q6YX19Y29uc3QgdWU9YXN5bmMgZT0+YXdhaXQoYXN5bmMgZT0+KGF3YWl0IGllKEIpKS5kaXNwYXRjaChvZS5HZXRTYXZlZFdvcmtzcGFjZSxlKSkoZS53b3Jrc3BhY2VJZCk/KGFzeW5jIGU9Pihhd2FpdCBpZShCKSkuZGlzcGF0Y2gob2UuVXBkYXRlU2F2ZWRXb3Jrc3BhY2UsZSkpKHt3b3Jrc3BhY2VJZDplLndvcmtzcGFjZUlkLHdvcmtzcGFjZTplfSk6KGFzeW5jIGU9Pihhd2FpdCBpZShCKSkuZGlzcGF0Y2gob2UuQ3JlYXRlU2F2ZWRXb3Jrc3BhY2UsZSkpKHt3b3Jrc3BhY2U6ZX0pO2FzeW5jIGZ1bmN0aW9uIGdlKGU9XCJVbnRpdGxlZCBXb3Jrc3BhY2VcIil7Y29uc3QgdD0oYXdhaXQoYXN5bmMoKT0+KGF3YWl0IGllKEIpKS5kaXNwYXRjaChvZS5HZXRTYXZlZFdvcmtzcGFjZXMsdm9pZCAwKSkoKSkubWFwKCgoe3RpdGxlOmV9KT0+ZSkpO3JldHVybiB0LmZpbmQoKHQ9PnQ9PT1lKSk/Y2UoZSx0KTplfWFzeW5jIGZ1bmN0aW9uIHllKCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGxvY2FsU3RvcmFnZSl0cnl7Y29uc3QgZT1sb2NhbFN0b3JhZ2UuZ2V0SXRlbShuZS5MYXN0Rm9jdXNlZEJyb3dzZXJXaW5kb3cpLHQ9SlNPTi5wYXJzZShlKTtpZihhd2FpdCAkKHQpKXJldHVybiB0fWNhdGNoKGUpe3Rocm93IG5ldyBFcnJvcihgZmFpbGVkIHRvIGdldCBsYXN0IGZvY3VzZWQgYnJvd3NlciB3aW5kb3c6ICR7ZX1gKX19ZnVuY3Rpb24gaGUoZT1maW4ubWUuaWRlbnRpdHkpe1UoZS5uYW1lKSYmZnVuY3Rpb24oZSl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGxvY2FsU3RvcmFnZSl0cnl7Y29uc3QgdD1KU09OLnN0cmluZ2lmeShlKTtsb2NhbFN0b3JhZ2Uuc2V0SXRlbShuZS5MYXN0Rm9jdXNlZEJyb3dzZXJXaW5kb3csdCl9Y2F0Y2goZSl7fX0oZSl9Y29uc3QgZmU9KGUsdD0wKT0+e2xldCBhLG4sbz0hMTtjb25zdCBpPWFzeW5jIG49Pntjb25zdCByPWF3YWl0IGUoLi4ubik7aWYobyl7YXdhaXQgbmV3IFByb21pc2UoKGU9PnNldFRpbWVvdXQoZSx0KSkpO2NvbnN0IGU9YTtyZXR1cm4gYT12b2lkIDAsbz0hMSxpKGUpfXJldHVybiByfTtyZXR1cm4oLi4uZSk9PihuPyhvPSEwLGE9ZSk6bj1pKGUpLnRoZW4oKGU9PihuPXZvaWQgMCxlKSkpLG4pfTt2YXIgU2U7IWZ1bmN0aW9uKGUpe2UuVGFiQ3JlYXRlZD1cInRhYi1jcmVhdGVkXCIsZS5Db250YWluZXJDcmVhdGVkPVwiY29udGFpbmVyLWNyZWF0ZWRcIixlLkNvbnRhaW5lclJlc2l6ZWQ9XCJjb250YWluZXItcmVzaXplZFwifShTZXx8KFNlPXt9KSk7Y29uc3QgbWU9ZT0+e2NvbnN0IHQ9W107cmV0dXJuKGUmJkFycmF5LmlzQXJyYXkoZSk/ZTpbXSkuZm9yRWFjaCgoZT0+e2lmKFwiY29tcG9uZW50XCI9PT1lLnR5cGUpcmV0dXJuIHQucHVzaChlLmNvbXBvbmVudFN0YXRlKTtjb25zdCBhPW1lKGUuY29udGVudCk7dC5wdXNoKC4uLmEpfSkpLHR9LHZlPWFzeW5jKGUsdCxhPUIpPT57bGV0IG47aWYoVShhLm5hbWUpKXtuPShhd2FpdCBMKGEpLmdldE9wdGlvbnMoKSkubGF5b3V0fHx7c2V0dGluZ3M6e319fXJldHVybnsuLi5uLGNvbnRlbnQ6W3t0eXBlOlwic3RhY2tcIixjb250ZW50Olt7dHlwZTpcImNvbXBvbmVudFwiLGNvbXBvbmVudE5hbWU6XCJ2aWV3XCIsY29tcG9uZW50U3RhdGU6e3RpdGxlOmUsdXJsOnR9fV19XX19O25ldyBNYXA7Y29uc3QgUGU9bSYmXCJjb21wbGV0ZVwiIT09ZG9jdW1lbnQucmVhZHlTdGF0ZSYmbmV3IFByb21pc2UoKGU9PmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJyZWFkeXN0YXRlY2hhbmdlXCIsKCgpPT57XCJjb21wbGV0ZVwiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZSYmZSgpfSkpKSk7ZnVuY3Rpb24gYmUoZSl7bGV0IHQ7cmV0dXJuKCk9PntpZighUyl0aHJvdyBuZXcgRXJyb3IoXCJnZXRDaGFubmVsQ2xpZW50IGNhbm5vdCBiZSB1c2VkIG91dHNpZGUgYW4gT3BlbkZpbiBlbnYuIEF2b2lkIHVzaW5nIHRoaXMgbWV0aG9kIGR1cmluZyBwcmUtcmVuZGVyaW5nLlwiKTtyZXR1cm4gdHx8KHQ9KGFzeW5jKCk9Pnthd2FpdCBQZTtjb25zdCBhPWF3YWl0IGZpbi5JbnRlckFwcGxpY2F0aW9uQnVzLkNoYW5uZWwuY29ubmVjdChlKTtyZXR1cm4gYS5vbkRpc2Nvbm5lY3Rpb24oKGFzeW5jKCk9Pnt0PXZvaWQgMH0pKSxhfSkoKS50aGVuKChlPT5lKSkuY2F0Y2goKGE9Pnt0aHJvdyB0PXZvaWQgMCxuZXcgRXJyb3IoYGZhaWxlZCB0byBjb25uZWN0IHRvIGNoYW5uZWwgcHJvdmlkZXIgJHtlfTogJHthfWApfSkpKSx0fX1jb25zdCBrZT1lPT5gX19icm93c2VyX3dpbmRvd19fLSR7ZS51dWlkfS0ke2UubmFtZX1gLFdlPW5ldyBNYXAsQ2U9ZT0+e2NvbnN0IHQ9a2UoZSk7cmV0dXJuIFdlLmhhcyh0KXx8V2Uuc2V0KHQsYmUodCkpLFdlLmdldCh0KSgpfTt2YXIgSWUsQWUsVGU7IWZ1bmN0aW9uKGUpe2UuQ2xvc2VCcm93c2VyV2luZG93PVwiY2xvc2UtYnJvd3Nlci13aW5kb3dcIixlLlF1aXRQbGF0Zm9ybT1cInF1aXQtcGxhdGZvcm1cIixlLkNsb3NlUGFnZT1cImNsb3NlLXBhZ2VcIixlLkFkZFRvQ2hhbm5lbD1cImFkZC10by1jaGFubmVsXCIsZS5SZW1vdmVGcm9tQ2hhbm5lbD1cInJlbW92ZS1mcm9tLWNoYW5uZWxcIixlLk9wZW5TYXZlTW9kYWxJbnRlcm5hbD1cIm9wZW4tc2F2ZS1tb2RhbC1pbnRlcm5hbFwiLGUuRHVwbGljYXRlUGFnZT1cImR1cGxpY2F0ZS1wYWdlXCJ9KEllfHwoSWU9e30pKSxmdW5jdGlvbihlKXtlLkdldFBhZ2VzPVwiZ2V0LXBhZ2VzXCIsZS5HZXRBY3RpdmVQYWdlRm9yV2luZG93PVwiZ2V0LWFjdGl2ZS1wYWdlLWZvci13aW5kb3dcIixlLkF0dGFjaFBhZ2VzVG9XaW5kb3c9XCJhdHRhY2gtcGFnZXMtdG8td2luZG93XCIsZS5EZXRhY2hQYWdlc0Zyb21XaW5kb3c9XCJkZXRhY2gtcGFnZXMtZnJvbS13aW5kb3dcIixlLlNldEFjdGl2ZVBhZ2VGb3JXaW5kb3c9XCJzZXQtYWN0aXZlLXBhZ2UtZm9yLXdpbmRvd1wiLGUuUmVuYW1lUGFnZT1cInJlbmFtZS1wYWdlXCIsZS5SZW9yZGVyUGFnZXNGb3JXaW5kb3c9XCJyZW9yZGVyLXBhZ2VzLWZvci13aW5kb3dcIixlLlVwZGF0ZVBhZ2VGb3JXaW5kb3c9XCJ1cGRhdGUtcGFnZS1mb3Itd2luZG93XCIsZS5VcGRhdGVQYWdlc1dpbmRvd09wdGlvbnM9XCJ1cGRhdGUtcGFnZXMtd2luZG93LW9wdGlvbnNcIixlLklzRGV0YWNoaW5nUGFnZXM9XCJpcy1kZXRhY2hpbmctcGFnZXNcIixlLklzQWN0aXZlUGFnZUNoYW5naW5nPVwiaXMtYWN0aXZlLXBhZ2UtY2hhbmdpbmdcIn0oQWV8fChBZT17fSkpLGZ1bmN0aW9uKGUpe2UuQXR0YWNoZWRQYWdlc1RvV2luZG93PVwiYXR0YWNoZWQtcGFnZXMtdG8td2luZG93XCIsZS5EZXRhY2hlZFBhZ2VzRnJvbVdpbmRvdz1cImRldGFjaGVkLXBhZ2VzLWZyb20td2luZG93XCJ9KFRlfHwoVGU9e30pKTtuZXcgTWFwO2NvbnN0IE1lPWFzeW5jIGU9Pntjb25zdCB0PWF3YWl0IENlKGUpO3JldHVybiBhd2FpdCB0LmRpc3BhdGNoKEFlLkdldFBhZ2VzKX0sRWU9YXN5bmMgZT0+KGF3YWl0IENlKGUuaWRlbnRpdHkpKS5kaXNwYXRjaChBZS5VcGRhdGVQYWdlRm9yV2luZG93LGUpLFZlPWFzeW5jKCk9Pntjb25zdCBlPWF3YWl0IE4oKTtyZXR1cm4oYXdhaXQgUHJvbWlzZS5hbGwoZS5tYXAoKGFzeW5jKHtpZGVudGl0eTplfSk9Pk1lKGUpKSkpKS5yZWR1Y2UoKChlLHQpPT5lLmNvbmNhdCh0KSksW10pfSxPZT1hc3luYygpPT4oYXdhaXQgaWUoQikpLmRpc3BhdGNoKG9lLkdldFNhdmVkUGFnZXMsdm9pZCAwKSx4ZT1hc3luYyBlPT4oYXdhaXQgaWUoQikpLmRpc3BhdGNoKG9lLkdldFNhdmVkUGFnZSxlKSxSZT1hc3luYyhlLHQpPT57Y29uc3QgYT1hd2FpdChhc3luYyBlPT4oYXdhaXQgVmUoKSkuZmluZCgodD0+dC5wYWdlSWQ9PT1lKSkpKGUpO3JldHVybiFhfHxhLnRpdGxlPT09dC50aXRsZSYmZT09PXQucGFnZUlkfHxhd2FpdCBFZSh7aWRlbnRpdHk6YS5wYXJlbnRJZGVudGl0eSxwYWdlSWQ6ZSxwYWdlOntwYWdlSWQ6dC5wYWdlSWQsdGl0bGU6dC50aXRsZX19KSxhfSxfZT1hc3luYyh7cGFnZTplfSk9Pnthd2FpdCBSZShlLnBhZ2VJZCxlKSxhd2FpdChhc3luYyBlPT4oYXdhaXQgaWUoQikpLmRpc3BhdGNoKG9lLkNyZWF0ZVNhdmVkUGFnZSxlKSkoe3BhZ2U6ZX0pfSxMZT1hc3luYyBlPT57YXdhaXQgeGUoZSkmJmF3YWl0KGFzeW5jIGU9Pihhd2FpdCBpZShCKSkuZGlzcGF0Y2gob2UuRGVsZXRlU2F2ZWRQYWdlLGUpKShlKX0sQmU9YXN5bmMoe3BhZ2VJZDplLHBhZ2U6dH0pPT57YXdhaXQgUmUoZSx0KTtyZXR1cm4gYXdhaXQoYXN5bmMgZT0+KGF3YWl0IGllKEIpKS5kaXNwYXRjaChvZS5VcGRhdGVTYXZlZFBhZ2UsZSkpKHtwYWdlSWQ6ZSxwYWdlOnR9KX0sR2U9YXN5bmMgZT0+YXdhaXQgeGUoZS5wYWdlSWQpP0JlKHtwYWdlSWQ6ZS5wYWdlSWQscGFnZTplfSk6X2Uoe3BhZ2U6ZX0pLERlPWFzeW5jIGU9Pnthd2FpdChhc3luYyBlPT4oYXdhaXQgQ2UoZS5pZGVudGl0eSkpLmRpc3BhdGNoKEFlLkF0dGFjaFBhZ2VzVG9XaW5kb3csZSkpKGUpfSxGZT1hc3luYyBlPT57YXdhaXQgRWUoZSl9LFVlPWFzeW5jIGU9Pnthd2FpdChhc3luYyBlPT4oYXdhaXQgQ2UoZS5pZGVudGl0eSkpLmRpc3BhdGNoKEFlLkRldGFjaFBhZ2VzRnJvbVdpbmRvdyxlKSkoZSl9LE5lPWFzeW5jIGU9Pnthd2FpdChhc3luYyBlPT4oYXdhaXQgQ2UoZS5pZGVudGl0eSkpLmRpc3BhdGNoKEFlLlNldEFjdGl2ZVBhZ2VGb3JXaW5kb3csZSkpKGUpfSwkZT1lPT5NZShlKSxIZT1hc3luYyh7aWRlbnRpdHk6ZSxwYWdlSWQ6dH0pPT4oYXdhaXQgJGUoZSkpLmZpbmQoKGU9PmUucGFnZUlkPT09dCkpLHFlPWFzeW5jIGU9Pnthd2FpdChhc3luYyBlPT4oYXdhaXQgQ2UoZS5pZGVudGl0eSkpLmRpc3BhdGNoKEFlLlJlb3JkZXJQYWdlc0ZvcldpbmRvdyxlKSkoZSl9O2FzeW5jIGZ1bmN0aW9uIEtlKGU9XCJVbnRpdGxlZCBQYWdlXCIpe2NvbnN0W3QsYV09YXdhaXQgUHJvbWlzZS5hbGwoW09lKCksVmUoKV0pLG49Wy4uLnQsLi4uYV0ubWFwKCgoe3RpdGxlOmV9KT0+ZSkpO3JldHVybiBuLmZpbmQoKHQ9PnQ9PT1lKSk/Y2UoZSxuKTplfWNvbnN0IGplPW5ldyBNYXAsUWU9ZT0+YCR7ZS51dWlkfS0ke2UubmFtZX1gO2NvbnN0IEplPWZlKChhc3luYyBmdW5jdGlvbigpe2NvbnN0IGU9YXdhaXQgVmUoKSx0PW5ldyBTZXQ7ZS5mb3JFYWNoKChlPT57bWUoZS5sYXlvdXQuY29udGVudCkuZm9yRWFjaCgoZT0+e2lmKGUubmFtZSl7Y29uc3QgYT1RZShlKTt0LmFkZChhKX19KSl9KSk7Y29uc3QgYT1HKCk7KGF3YWl0IGEuZ2V0Q3VycmVudFZpZXdzKCkpLmZvckVhY2goKCh7aWRlbnRpdHk6ZX0pPT57Y29uc3QgYT1RZShlKTtpZih0LmhhcyhhKXx8amUuaGFzKGEpKXJldHVybjtjb25zdCBuPXNldFRpbWVvdXQoKCgpPT57ZmluLlZpZXcud3JhcFN5bmMoZSkuZGVzdHJveSgpLGplLmRlbGV0ZShhKX0pLDVlMyk7amUuc2V0KGEsbil9KSksamUuZm9yRWFjaCgoKGUsYSk9Pnt0LmhhcyhhKSYmKGNsZWFyVGltZW91dChlKSxqZS5kZWxldGUoYSkpfSkpfSksMjUwMCksemU9KHtuYW1lOmV9KT0+e1UoZSkmJkplKCkuY2F0Y2goKCgpPT57fSkpfTtmdW5jdGlvbiBYZSgpe2NvbnN0IGU9eChPKTtlLmFkZExpc3RlbmVyKEUuV2luZG93T3B0aW9uc0NoYW5nZWQsSmUpLGUuYWRkTGlzdGVuZXIoRS5XaW5kb3dDbG9zZWQsemUpLGUuYWRkTGlzdGVuZXIoRS5XaW5kb3dDcmVhdGVkLHplKX1sZXQgWWU9e307Y29uc3QgWmU9KHthY3Rpb25JZDplLHBheWxvYWQ6dH0pPT57aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgWWVbZV0pdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgZmluZCBhIGNvbmZpZ3VyZWQgZnVuY3Rpb24gZm9yIHRoZSBhY3Rpb24gJyR7ZX0nYCk7cmV0dXJuIFllW2VdKHQpfTtmdW5jdGlvbiBldCgpe3JldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShuZS5NYWNoaW5lTmFtZSl9bGV0IHR0LGF0O2FzeW5jIGZ1bmN0aW9uIG50KCl7cmV0dXJuIHR0fHwodHQ9YXdhaXQgZmluLlN5c3RlbS5nZXRNYWNoaW5lSWQoKSksdHR9YXN5bmMgZnVuY3Rpb24gb3QoZSl7Y29uc3QgdD1lfHxhd2FpdCBmaW4uUGxhdGZvcm0uZ2V0Q3VycmVudFN5bmMoKS5nZXRTbmFwc2hvdCgpO2lmKHQuc25hcHNob3REZXRhaWxzPy5tYWNoaW5lSWQpcmV0dXJuIHQ7Y29uc3QgYT1ldCgpO3JldHVybnsuLi50LHNuYXBzaG90RGV0YWlsczp7Li4uZS5zbmFwc2hvdERldGFpbHMsbWFjaGluZUlkOmF3YWl0IG50KCksbWFjaGluZU5hbWU6YX19fWZ1bmN0aW9uIGl0KGUpe3JldHVybiBuZXcgUHJvbWlzZSgoKHQsYSk9PntlLm9uY29tcGxldGU9ZS5vbnN1Y2Nlc3M9KCk9PnQoZS5yZXN1bHQpLGUub25hYm9ydD1lLm9uZXJyb3I9KCk9PmEoZS5lcnJvcil9KSl9ZnVuY3Rpb24gcnQoZSx0KXtjb25zdCBhPWluZGV4ZWREQi5vcGVuKGUpO2Eub251cGdyYWRlbmVlZGVkPSgpPT5hLnJlc3VsdC5jcmVhdGVPYmplY3RTdG9yZSh0KTtjb25zdCBuPWl0KGEpO3JldHVybihlLGEpPT5uLnRoZW4oKG49PmEobi50cmFuc2FjdGlvbih0LGUpLm9iamVjdFN0b3JlKHQpKSkpfWZ1bmN0aW9uIHN0KCl7cmV0dXJuIGF0fHwoYXQ9cnQoXCJrZXl2YWwtc3RvcmVcIixcImtleXZhbFwiKSksYXR9ZnVuY3Rpb24gY3QoZSx0PXN0KCkpe3JldHVybiB0KFwicmVhZG9ubHlcIiwodD0+aXQodC5nZXQoZSkpKSl9ZnVuY3Rpb24gZHQoZSx0LGE9c3QoKSl7cmV0dXJuIGEoXCJyZWFkd3JpdGVcIiwoYT0+KGEucHV0KHQsZSksaXQoYS50cmFuc2FjdGlvbikpKSl9ZnVuY3Rpb24gcHQoZSx0PXN0KCkpe3JldHVybiB0KFwicmVhZHdyaXRlXCIsKHQ9Pih0LmRlbGV0ZShlKSxpdCh0LnRyYW5zYWN0aW9uKSkpKX1mdW5jdGlvbiBsdChlLHQpe3JldHVybiBlKFwicmVhZG9ubHlcIiwoZT0+KGUub3BlbkN1cnNvcigpLm9uc3VjY2Vzcz1mdW5jdGlvbigpe3RoaXMucmVzdWx0JiYodCh0aGlzLnJlc3VsdCksdGhpcy5yZXN1bHQuY29udGludWUoKSl9LGl0KGUudHJhbnNhY3Rpb24pKSkpfWZ1bmN0aW9uIHd0KGU9c3QoKSl7Y29uc3QgdD1bXTtyZXR1cm4gbHQoZSwoZT0+dC5wdXNoKGUua2V5KSkpLnRoZW4oKCgpPT50KSl9Y29uc3QgdXQ9KGUsdD1cIlwiKT0+ZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHQudG9Mb3dlckNhc2UoKSksZ3Q9diYmcnQoXCJvcGVuZmluLWhvbWUtcGFnZXNcIixcInBhZ2VzXCIpO2FzeW5jIGZ1bmN0aW9uIHl0KGUpe2NvbnN0IHQ9YXdhaXQgY3QoZSxndCk7cmV0dXJuIHQ/KHQucGFnZUlkPWUudG9TdHJpbmcoKSx0LnRpdGxlPXQudGl0bGV8fHQucGFnZUlkLHQpOm51bGx9YXN5bmMgZnVuY3Rpb24gaHQoZSl7Y29uc3QgdD1hd2FpdCB3dChndCksYT1hd2FpdCBQcm9taXNlLmFsbCh0Lm1hcCgoZT0+eXQoZS50b1N0cmluZygpKSkpKTtyZXR1cm4gZT9hLmZpbHRlcigodD0+dXQodC50aXRsZSxlKSkpOmF9YXN5bmMgZnVuY3Rpb24gZnQoe3BhZ2U6ZX0pe2F3YWl0IGR0KGUucGFnZUlkLGUsZ3QpfWFzeW5jIGZ1bmN0aW9uIFN0KGUpe2F3YWl0IHB0KGUsZ3QpfWFzeW5jIGZ1bmN0aW9uIG10KHtwYWdlSWQ6ZSxwYWdlOnR9KXtpZih2b2lkIDA9PT1hd2FpdCB5dChlKSl0aHJvdyBuZXcgRXJyb3IoXCJwYWdlIG5vdCBmb3VuZFwiKTthd2FpdCBmdCh7cGFnZTp0fSksZSE9PXQucGFnZUlkJiZhd2FpdCBTdChlKX12YXIgdnQ7IWZ1bmN0aW9uKGUpe2UuTGFiZWw9XCJub3JtYWxcIixlLlNlcGFyYXRvcj1cInNlcGFyYXRvclwiLGUuU3VibWVudT1cInN1Ym1lbnVcIixlLkNoZWNrYm94PVwiY2hlY2tib3hcIn0odnR8fCh2dD17fSkpO2NvbnN0IFB0PTI0Nzt2YXIgYnQ7IWZ1bmN0aW9uKGUpe2UuUmVnaXN0ZXJTdG9yZWZyb250UHJvdmlkZXI9XCJyZWdpc3Rlci1zdG9yZWZyb250LXByb3ZpZGVyXCIsZS5EZXJlZ2lzdGVyU3RvcmVmcm9udFByb3ZpZGVyPVwiZGVyZWdpc3Rlci1zdG9yZWZyb250LXByb3ZpZGVyXCIsZS5HZXRTdG9yZWZyb250UHJvdmlkZXJzPVwiZ2V0LXN0b3JlZnJvbnQtcHJvdmlkZXJzXCIsZS5IaWRlU3RvcmVmcm9udD1cImhpZGUtc3RvcmVmcm9udFwiLGUuR2V0U3RvcmVmcm9udFByb3ZpZGVyQXBwcz1cImdldC1zdG9yZWZyb250LXByb3ZpZGVyLWFwcHNcIixlLkdldFN0b3JlZnJvbnRQcm92aWRlckxhbmRpbmdQYWdlPVwiZ2V0LXN0b3JlZnJvbnQtcHJvdmlkZXItbGFuZGluZy1wYWdlXCIsZS5HZXRTdG9yZWZyb250UHJvdmlkZXJGb290ZXI9XCJnZXQtc3RvcmVmcm9udC1wcm92aWRlci1mb290ZXJcIixlLkdldFN0b3JlZnJvbnRQcm92aWRlck5hdmlnYXRpb249XCJnZXQtc3RvcmVmcm9udC1wcm92aWRlci1uYXZpZ2F0aW9uXCIsZS5MYXVuY2hTdG9yZWZyb250UHJvdmlkZXJBcHA9XCJsYXVuY2gtc3RvcmVmcm9udC1wcm92aWRlci1hcHBcIixlLlNob3dTdG9yZWZyb250PVwic2hvdy1zdG9yZWZyb250XCIsZS5DcmVhdGVTdG9yZWZyb250V2luZG93PVwiY3JlYXRlLXN0b3JlZnJvbnQtd2luZG93XCIsZS5TaG93SG9tZT1cInNob3ctaG9tZVwiLGUuSGlkZUhvbWU9XCJoaWRlLWhvbWVcIixlLkFzc2lnbkhvbWVTZWFyY2hDb250ZXh0PVwiYXNzaWduLWhvbWUtc2VhcmNoLWNvbnRleHRcIixlLkdldExlZ2FjeVBhZ2VzPVwiZ2V0LWxlZ2FjeS1wYWdlc1wiLGUuR2V0TGVnYWN5V29ya3NwYWNlcz1cImdldC1sZWdhY3ktd29ya3NwYWNlc1wiLGUuR2V0Q29tcHV0ZWRQbGF0Zm9ybVRoZW1lPVwiZ2V0LWNvbXB1dGVkLXBsYXRmb3JtLXRoZW1lXCJ9KGJ0fHwoYnQ9e30pKTtiZShcIl9fb2Zfd29ya3NwYWNlX3Byb3RvY29sX19cIik7Y29uc3Qga3Q9YXN5bmMoZSx0KT0+e2NvbnN0IGE9YXdhaXQoYXN5bmMgZT0+KHsuLi5lLGxheW91dERldGFpbHM6e21hY2hpbmVJZDphd2FpdCBudCgpLG1hY2hpbmVOYW1lOmV0KCl9fSkpKHQpO3JldHVybntwYWdlSWQ6dGUoKSx0aXRsZTplLGxheW91dDphLGlzUmVhZE9ubHk6ITEsaGFzVW5zYXZlZENoYW5nZXM6ITB9fSxXdD1lPT4oe2lkZW50aXR5OmUsb3BlbmZpbldpbmRvdzpmaW4uV2luZG93LndyYXBTeW5jKGUpLGdldFBhZ2VzOmFzeW5jKCk9Pihhd2FpdCBpZShlKSkuZGlzcGF0Y2gob2UuR2V0UGFnZXNGb3JXaW5kb3csZSksZ2V0UGFnZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLkdldFBhZ2VGb3JXaW5kb3cse2lkZW50aXR5OmUscGFnZUlkOnR9KSxhZGRQYWdlOmFzeW5jIHQ9Pntjb25zdCBhPWF3YWl0IGllKGUpO3Q/LnRpdGxlfHwodC50aXRsZT1hd2FpdCBhLmRpc3BhdGNoKG9lLkdldFVuaXF1ZVBhZ2VUaXRsZSx2b2lkIDApKTtjb25zdCBuPShhd2FpdCBhLmRpc3BhdGNoKG9lLkdldEFsbEF0dGFjaGVkUGFnZXMsdm9pZCAwKSkuZmluZCgoZT0+ZS5wYWdlSWQ9PT10LnBhZ2VJZHx8ZS50aXRsZT09PXQudGl0bGUpKTtpZihuKXRocm93IG4ucGFnZUlkPT09dC5wYWdlSWQ/bmV3IEVycm9yKGBwYWdlIHdpdGggaWQgJHt0LnBhZ2VJZH0gaXMgYWxyZWFkeSBhdHRhY2hlZCB0byBhIGJyb3dzZXIgd2luZG93ICR7bi5wYXJlbnRJZGVudGl0eS5uYW1lfWApOm5ldyBFcnJvcihgcGFnZSB3aXRoIHRpdGxlICR7dC50aXRsZX0gaXMgYWxyZWFkeSBhdHRhY2hlZCB0byBhIGJyb3dzZXIgd2luZG93ICR7bi5wYXJlbnRJZGVudGl0eS5uYW1lfWApO2NvbnN0IG89e2lkZW50aXR5OmUscGFnZXM6W3RdfTtyZXR1cm4gYS5kaXNwYXRjaChvZS5BdHRhY2hQYWdlc1RvV2luZG93LG8pfSxyZW1vdmVQYWdlOmFzeW5jIHQ9Pihhd2FpdCBpZShlKSkuZGlzcGF0Y2gob2UuRGV0YWNoUGFnZXNGcm9tV2luZG93LHtpZGVudGl0eTplLHBhZ2VJZHM6W3RdfSksc2V0QWN0aXZlUGFnZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLlNldEFjdGl2ZVBhZ2Use2lkZW50aXR5OmUscGFnZUlkOnR9KSx1cGRhdGVQYWdlOmFzeW5jIHQ9Pntjb25zdCBhPWF3YWl0IGllKGUpO3JldHVybiB0LmlkZW50aXR5PWUsYS5kaXNwYXRjaChvZS5VcGRhdGVQYWdlRm9yV2luZG93LHQpfSxyZW9yZGVyUGFnZXM6YXN5bmMgdD0+e2NvbnN0IGE9YXdhaXQgaWUoZSk7cmV0dXJuIHQuaWRlbnRpdHk9ZSxhLmRpc3BhdGNoKG9lLlJlb3JkZXJQYWdlc0ZvcldpbmRvdyx0KX0sX29wZW5HbG9iYWxDb250ZXh0TWVudTphc3luYyB0PT57Y29uc3QgYT1hd2FpdCBpZShlKTtyZXR1cm4gdC5pZGVudGl0eT1lLGEuZGlzcGF0Y2gob2UuT3Blbkdsb2JhbENvbnRleHRNZW51SW50ZXJuYWwsdCl9LHJlcGxhY2VUb29sYmFyT3B0aW9uczphc3luYyB0PT57Y29uc3QgYT1maW4uV2luZG93LndyYXBTeW5jKGUpO2F3YWl0IGEudXBkYXRlT3B0aW9ucyh7d29ya3NwYWNlUGxhdGZvcm06e3Rvb2xiYXJPcHRpb25zOnR9fSl9LHJlcGxhY2VXaW5kb3dTdGF0ZUJ1dHRvbk9wdGlvbnM6YXN5bmMgdD0+e2NvbnN0IGE9ZmluLldpbmRvdy53cmFwU3luYyhlKTthd2FpdCBhLnVwZGF0ZU9wdGlvbnMoe3dvcmtzcGFjZVBsYXRmb3JtOnt3aW5kb3dTdGF0ZUJ1dHRvbk9wdGlvbnM6dH19KX0sX29wZW5WaWV3VGFiQ29udGV4dE1lbnU6YXN5bmMgdD0+e2NvbnN0IGE9YXdhaXQgaWUoZSk7cmV0dXJuIHQuaWRlbnRpdHk9ZSxhLmRpc3BhdGNoKG9lLk9wZW5WaWV3VGFiQ29udGV4dE1lbnVJbnRlcm5hbCx0KX0sX29wZW5QYWdlVGFiQ29udGV4dE1lbnU6YXN5bmMgdD0+e2NvbnN0IGE9YXdhaXQgaWUoZSk7cmV0dXJuIHQuaWRlbnRpdHk9ZSxhLmRpc3BhdGNoKG9lLk9wZW5QYWdlVGFiQ29udGV4dE1lbnVJbnRlcm5hbCx0KX0sX29wZW5TYXZlTW9kYWw6YXN5bmMgdD0+KGF3YWl0IENlKGUpKS5kaXNwYXRjaChJZS5PcGVuU2F2ZU1vZGFsSW50ZXJuYWwsdCksX29wZW5TYXZlQnV0dG9uQ29udGV4dE1lbnU6YXN5bmMgdD0+e2NvbnN0IGE9YXdhaXQgaWUoZSk7cmV0dXJuIHQuaWRlbnRpdHk9ZSxhLmRpc3BhdGNoKG9lLk9wZW5TYXZlQnV0dG9uQ29udGV4dE1lbnVJbnRlcm5hbCx0KX19KTtsZXQgQ3Q9ITE7Y29uc3QgSXQ9ZT0+e2NvbnN0IHQ9ZmluLlBsYXRmb3JtLndyYXBTeW5jKGUpO3JldHVybnt3cmFwU3luYzplPT5XdChlKSxjcmVhdGVXaW5kb3c6YXN5bmMgZT0+e0N0fHwoQ3Q9ITAsKGFzeW5jIGU9PntLKHEuQnJvd3NlcixlKX0pKHthbGxvd2VkOiEwfSkpO2NvbnN0IGE9YXdhaXQgdC5jcmVhdGVXaW5kb3coZSk7cmV0dXJuIFd0KGEuaWRlbnRpdHkpfSxnZXRBbGxBdHRhY2hlZFBhZ2VzOmFzeW5jKCk9Pihhd2FpdCB0LmdldENsaWVudCgpKS5kaXNwYXRjaChvZS5HZXRBbGxBdHRhY2hlZFBhZ2VzLHZvaWQgMCksZ2V0QWxsV2luZG93czphc3luYygpPT4oYXdhaXQgZmluLkFwcGxpY2F0aW9uLndyYXBTeW5jKGUpLmdldENoaWxkV2luZG93cygpKS5maWx0ZXIoKGU9PmUuaWRlbnRpdHkubmFtZS5pbmNsdWRlcyhcImludGVybmFsLWdlbmVyYXRlZC13aW5kb3ctXCIpKSkubWFwKChlPT5XdChlLmlkZW50aXR5KSkpLGdldFVuaXF1ZVBhZ2VUaXRsZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLkdldFVuaXF1ZVBhZ2VUaXRsZSx0KSxnZXRMYXN0Rm9jdXNlZFdpbmRvdzphc3luYygpPT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLkdldExhc3RGb2N1c2VkQnJvd3NlcldpbmRvdyx2b2lkIDApfX0sQXQ9ZT0+KHtjcmVhdGVQYWdlOmFzeW5jIHQ9Pihhd2FpdCBpZShlKSkuZGlzcGF0Y2gob2UuQ3JlYXRlU2F2ZWRQYWdlSW50ZXJuYWwsdCksZGVsZXRlUGFnZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLkRlbGV0ZVNhdmVkUGFnZUludGVybmFsLHQpLHVwZGF0ZVBhZ2U6YXN5bmMgdD0+KGF3YWl0IGllKGUpKS5kaXNwYXRjaChvZS5VcGRhdGVTYXZlZFBhZ2VJbnRlcm5hbCx0KSxnZXRQYWdlOmFzeW5jIHQ9Pihhd2FpdCBpZShlKSkuZGlzcGF0Y2gob2UuR2V0U2F2ZWRQYWdlLHQpLGdldFBhZ2VzOmFzeW5jIHQ9Pihhd2FpdCBpZShlKSkuZGlzcGF0Y2gob2UuR2V0U2F2ZWRQYWdlcyx0KSxzYXZlUGFnZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLlNhdmVQYWdlLHQpLGNyZWF0ZVdvcmtzcGFjZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLkNyZWF0ZVNhdmVkV29ya3NwYWNlLHQpLGRlbGV0ZVdvcmtzcGFjZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLkRlbGV0ZVNhdmVkV29ya3NwYWNlLHQpLHVwZGF0ZVdvcmtzcGFjZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLlVwZGF0ZVNhdmVkV29ya3NwYWNlLHQpLGdldFdvcmtzcGFjZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLkdldFNhdmVkV29ya3NwYWNlLHQpLGdldFdvcmtzcGFjZXM6YXN5bmMgdD0+KGF3YWl0IGllKGUpKS5kaXNwYXRjaChvZS5HZXRTYXZlZFdvcmtzcGFjZXMsdCksc2F2ZVdvcmtzcGFjZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLlNhdmVXb3Jrc3BhY2UsdCl9KSxUdD1lPT4oe2dldFRoZW1lczphc3luYygpPT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLkdldFRoZW1lcyx2b2lkIDApfSksTXQ9ZT0+e2NvbnN0IHQ9ZmluLlBsYXRmb3JtLndyYXBTeW5jKGUpO3JldHVybiBPYmplY3QuYXNzaWduKHQse2FwcGx5U25hcHNob3Q6YXN5bmMgdD0+e2lmKFwic3RyaW5nXCIhPXR5cGVvZiB0JiYhdD8ud2luZG93cyl0aHJvdyBuZXcgRXJyb3IoXCJOb3QgYSB2YWxpZCBicm93c2VyIHNuYXBzaG90XCIpO3JldHVybiBmaW4uUGxhdGZvcm0ud3JhcFN5bmMoZSkuYXBwbHlTbmFwc2hvdCh0KX0sZ2V0U25hcHNob3Q6KCk9PmZpbi5QbGF0Zm9ybS53cmFwU3luYyhlKS5nZXRTbmFwc2hvdCgpLnRoZW4oKGU9PmUpKSxsYXVuY2hBcHA6YXN5bmMgdD0+e3QudGFyZ2V0fHwodC50YXJnZXQ9e3V1aWQ6YixuYW1lOmssZW50aXR5VHlwZTpXfHxcInVua25vd25cIn0pO3JldHVybihhd2FpdCBpZShlKSkuZGlzcGF0Y2gob2UuTGF1bmNoQXBwLHQpfSxfaW52b2tlQ3VzdG9tQWN0aW9uOmFzeW5jKHQsYSk9Pntjb25zdCBuPWF3YWl0IGllKGUpLG89e2FjdGlvbklkOnQscGF5bG9hZDp7Li4uYSxjYWxsZXJUeXBlOmEuY2FsbGVyVHlwZXx8eS5BUEl9fTtyZXR1cm4gbi5kaXNwYXRjaChvZS5JbnZva2VDdXN0b21BY3Rpb25JbnRlcm5hbCxvKX0sZ2V0Q3VycmVudFdvcmtzcGFjZTphc3luYygpPT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLkdldEN1cnJlbnRXb3Jrc3BhY2Usdm9pZCAwKSxhcHBseVdvcmtzcGFjZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLkFwcGx5V29ya3NwYWNlLHQpLHNldEFjdGl2ZVdvcmtzcGFjZTphc3luYyB0PT4oYXdhaXQgaWUoZSkpLmRpc3BhdGNoKG9lLlNldEFjdGl2ZVdvcmtzcGFjZSx0KSxUaGVtZTpUdChlKSxCcm93c2VyOkl0KGUpLFN0b3JhZ2U6QXQoZSl9KX0sRXQ9KCk9Pk10KGZpbi5tZS5pZGVudGl0eSksVnQ9YXN5bmMoZT1CKT0+e2NvbnN0e3dvcmtzcGFjZVBsYXRmb3JtOnR9PWF3YWl0IEwoZSkuZ2V0T3B0aW9ucygpO3JldHVybntuZXdQYWdlVXJsOnQ/Lm5ld1BhZ2VVcmwsbmV3VGFiVXJsOnQ/Lm5ld1RhYlVybH19LE90PWFzeW5jKGU9Qik9Pntjb25zdCB0PWF3YWl0IEV0KCkuQnJvd3Nlci5nZXRVbmlxdWVQYWdlVGl0bGUoXCJVbnRpdGxlZCBQYWdlXCIpLGE9YXdhaXQoYXN5bmMoZT1CKT0+e2NvbnN0e25ld1BhZ2VVcmw6dH09YXdhaXQgVnQoZSk7aWYoIXQpdGhyb3cgbmV3IEVycm9yKFwiVHJ5aW5nIHRvIGNyZWF0ZSBhIG5ldyBwYWdlIHdpdGhvdXQgYSBuZXdQYWdlVXJsIHNldFwiKTtyZXR1cm4gdmUoXCJOZXcgVGFiXCIsdCxlKX0pKGUpO3JldHVybiBrdCh0LGEpfSx4dD1be3R5cGU6dnQuTGFiZWwsbGFiZWw6XCJDbG9zZSBXaW5kb3dcIixkYXRhOnt0eXBlOnAuQ2xvc2VXaW5kb3d9fSx7dHlwZTp2dC5TZXBhcmF0b3IsZGF0YTp2b2lkIDB9LHt0eXBlOnZ0LkxhYmVsLGxhYmVsOlwiT3BlbiBTdG9yZWZyb250XCIsZGF0YTp7dHlwZTpwLk9wZW5TdG9yZWZyb250fX0se3R5cGU6dnQuU2VwYXJhdG9yLGRhdGE6dm9pZCAwfSx7dHlwZTp2dC5MYWJlbCxsYWJlbDpcIlF1aXQgV29ya3NwYWNlXCIsZGF0YTp7dHlwZTpwLlF1aXR9fV0sUnQ9W3t0eXBlOnZ0LlNlcGFyYXRvcixkYXRhOnZvaWQgMH0se3R5cGU6dnQuTGFiZWwsbGFiZWw6XCJDbG9zZSBXaW5kb3dcIixkYXRhOnt0eXBlOnAuQ2xvc2VXaW5kb3d9fSx7dHlwZTp2dC5TZXBhcmF0b3IsZGF0YTp2b2lkIDB9LHt0eXBlOnZ0LkxhYmVsLGxhYmVsOlwiUXVpdFwiLGRhdGE6e3R5cGU6cC5RdWl0fX1dLF90PShlLHQsYSk9PnQubWFwKCh0PT57Y29uc3Qgbj10LndvcmtzcGFjZUlkPT09ZS53b3Jrc3BhY2VJZDtyZXR1cm57bGFiZWw6dC50aXRsZSx0eXBlOnZ0LkNoZWNrYm94LGVuYWJsZWQ6IW4sY2hlY2tlZDpuLGRhdGE6e3R5cGU6YSx3b3Jrc3BhY2VJZDp0LndvcmtzcGFjZUlkfX19KSksTHQ9YXN5bmMgZT0+e2NvbnN0IHQ9YXdhaXQgSCgpLHtuZXdQYWdlVXJsOmF9PWF3YWl0IFZ0KGUpLG49YXdhaXQoYXN5bmMgZT0+e2NvbnN0IHQ9TChlKSx7d29ya3NwYWNlUGxhdGZvcm06YX09YXdhaXQgdC5nZXRPcHRpb25zKCk7cmV0dXJuIGE/LmRpc2FibGVNdWx0aXBsZVBhZ2VzfSkoZSksbz1bXTthJiYoby5wdXNoKHt0eXBlOnZ0LkxhYmVsLGxhYmVsOlwiTmV3IFdpbmRvd1wiLGRhdGE6e3R5cGU6cC5OZXdXaW5kb3d9fSksbnx8by5wdXNoKHt0eXBlOnZ0LkxhYmVsLGxhYmVsOlwiTmV3IFBhZ2VcIixkYXRhOnt0eXBlOnAuTmV3UGFnZX19KSksby5wdXNoKHt0eXBlOnZ0LlNlcGFyYXRvcixkYXRhOnZvaWQgMH0se3R5cGU6dnQuTGFiZWwsbGFiZWw6XCJTYXZlIFdvcmtzcGFjZVwiLGRhdGE6e3R5cGU6cC5TYXZlV29ya3NwYWNlfX0se3R5cGU6dnQuTGFiZWwsbGFiZWw6XCJTYXZlIFdvcmtzcGFjZSBBcy4uLlwiLGRhdGE6e3R5cGU6cC5TYXZlV29ya3NwYWNlQXN9fSk7Y29uc3QgaT1FdCgpLHI9YXdhaXQgaS5nZXRDdXJyZW50V29ya3NwYWNlKCkscz1hd2FpdCBpLlN0b3JhZ2UuZ2V0V29ya3NwYWNlcygpO3JldHVybiBzLnNvbWUoKGU9PmUud29ya3NwYWNlSWQ9PT1yLndvcmtzcGFjZUlkKSk/by5wdXNoKHt0eXBlOnZ0LkxhYmVsLGxhYmVsOlwiUmVuYW1lIFdvcmtzcGFjZVwiLGRhdGE6e3R5cGU6cC5SZW5hbWVXb3Jrc3BhY2V9fSk6by5wdXNoKHtsYWJlbDpcIlJlbmFtZSBXb3Jrc3BhY2VcIixlbmFibGVkOiExfSkscy5zb21lKChlPT5lLndvcmtzcGFjZUlkIT09ci53b3Jrc3BhY2VJZCkpP28ucHVzaCh7bGFiZWw6XCJTd2l0Y2ggV29ya3NwYWNlXCIsc3VibWVudTpfdChyLHMscC5Td2l0Y2hXb3Jrc3BhY2UpfSx7bGFiZWw6XCJEZWxldGUgV29ya3NwYWNlXCIsc3VibWVudTpfdChyLHMscC5EZWxldGVXb3Jrc3BhY2UpfSk6by5wdXNoKHtsYWJlbDpcIlN3aXRjaCBXb3Jrc3BhY2VcIixlbmFibGVkOiExfSx7bGFiZWw6XCJEZWxldGUgV29ya3NwYWNlXCIsZW5hYmxlZDohMX0pLG8ucHVzaCh7dHlwZTp2dC5TZXBhcmF0b3IsZGF0YTp2b2lkIDB9LHt0eXBlOnZ0LkxhYmVsLGxhYmVsOlwiU2F2ZSBQYWdlXCIsZGF0YTp7dHlwZTpwLlNhdmVQYWdlfX0se3R5cGU6dnQuTGFiZWwsbGFiZWw6XCJTYXZlIFBhZ2UgQXMuLi5cIixkYXRhOnt0eXBlOnAuU2F2ZVBhZ2VBc319KSx0P1suLi5vLC4uLnh0XTpbLi4ubywuLi5SdF19O3ZhciBCdCxHdDshZnVuY3Rpb24oZSl7ZS5Ib21lSW5kZXg9XCIvaG9tZS9cIixlLkhvbWVTZWFyY2g9XCIvaG9tZS9zZWFyY2gvXCIsZS5Ib21lUGFnZXNSZW5hbWU9XCIvaG9tZS9wYWdlcy9yZW5hbWUvXCIsZS5Eb2NrPVwiL2hvbWUvZG9jay9cIixlLkJyb3dzZXJQYWdlc0xhbmRpbmc9XCIvYnJvd3Nlci9wYWdlcy9sYW5kaW5nL1wiLGUuSG9tZUluZGljYXRvcj1cIi9ob21lL2luZGljYXRvci9cIixlLkJyb3dzZXI9XCIvYnJvd3Nlci9cIixlLkJyb3dzZXJQb3B1cE1lbnU9XCIvYnJvd3Nlci9wb3B1cC1tZW51L1wiLGUuUHJvdmlkZXI9XCIvcHJvdmlkZXIvXCIsZS5Ccm93c2VyUG9wdXBNZW51U2hhcmVQYWdlPVwiL2Jyb3dzZXIvcG9wdXAtbWVudS9zaGFyZS1wYWdlL1wiLGUuQnJvd3NlclBvcHVwTWVudVNhdmVNb2RhbD1cIi9icm93c2VyL3BvcHVwLW1lbnUvc2F2ZS1tb2RhbC9cIixlLkJyb3dzZXJQb3B1cE1lbnVMYXlvdXRzPVwiL2Jyb3dzZXIvcG9wdXAtbWVudS9sYXlvdXRzL2xheW91dHMvXCIsZS5Ccm93c2VyUG9wdXBNZW51Q29sb3JMaW5raW5nPVwiL2Jyb3dzZXIvcG9wdXAtbWVudS9jb2xvci1saW5raW5nL2NvbG9yLWxpbmtpbmcvXCIsZS5Ccm93c2VySW5kaWNhdG9yPVwiL2Jyb3dzZXIvaW5kaWNhdG9yL1wiLGUuUmVzcG9uc2VNb2RhbD1cIi9icm93c2VyL3BvcHVwLW1lbnUvcmVzcG9uc2UtbW9kYWwvXCIsZS5Eb2NzPVwiL3Byb3ZpZGVyL2RvY3MvXCIsZS5TdG9yZWZyb250PVwiL3N0b3JlZnJvbnQvXCIsZS5EZXByZWNhdGVkQWxlcnQ9XCIvcHJvdmlkZXIvZGVwcmVjYXRlZC1hbGVydC9cIn0oQnR8fChCdD17fSkpLGZ1bmN0aW9uKGUpe2UuSWNvbk9wZW5GaW5Mb2dvPVwiL2ljb25zL29wZW5maW5sb2dvLnN2Z1wiLGUuSWNvbkZpbHRlcj1cIi9pY29ucy9maWx0ZXIuc3ZnXCJ9KEd0fHwoR3Q9e30pKTtjb25zdCBEdD17Li4uR3QsLi4uQnR9O3ZhciBGdCxVdDshZnVuY3Rpb24oZSl7ZS5FUlJPUj1cImVycm9yXCIsZS5TVUNDRVNTPVwic3VjY2Vzc1wiLGUuSU5GTz1cImluZm9cIn0oRnR8fChGdD17fSkpLGZ1bmN0aW9uKGUpe2UuSG9tZT1cIi9ob21lXCIsZS5Ccm93c2VyPVwiL2Jyb3dzZXJcIixlLlByb3ZpZGVyPVwiL3Byb3ZpZGVyXCIsZS5TdG9yZWZyb250PVwiL3N0b3JlZnJvbnRcIn0oVXR8fChVdD17fSkpO2NvbnN0IE50PVwiL3dvcmtzcGFjZS83LjIuMlwiO2Z1bmN0aW9uICR0KCl7cmV0dXJuIE50LnN1YnN0cmluZygwLE50Lmxlbmd0aC1cIlwiLmxlbmd0aCl9ZnVuY3Rpb24gSHQoZSl7aWYoIW0pdGhyb3cgbmV3IEVycm9yKFwiZ2V0QWJzb2x1dGVSb3V0ZVBhdGggY2FuIG9ubHkgYmUgdXNlZCBpbiBhIHdpbmRvd1wiKTtyZXR1cm4gZnVuY3Rpb24oKXtpZighd2luZG93KXRocm93IG5ldyBFcnJvcihcImdldEFic29sdXRlQmFzZVBhdGggY2FuIG9ubHkgYmUgdXNlZCBpbiBhIHdpbmRvd1wiKTtyZXR1cm5gJHt3aW5kb3cub3JpZ2lufSR7JHQoKX1gfSgpK2V9Y29uc3QgcXQ9e2Fsd2F5c09uVG9wOiEwLGF1dG9TaG93OiExLGNvcm5lclJvdW5kaW5nOntoZWlnaHQ6NSx3aWR0aDo1fSxmcmFtZTohMSxyZXNpemFibGU6ITEsc2hvd1Rhc2tiYXJJY29uOiExfTt2YXIgS3Q7IWZ1bmN0aW9uKGUpe2UuTG9ja2VkPVwiTG9ja0Nsb3NlZEljb25cIixlLlVubG9ja2VkPVwiTG9ja09wZW4xSWNvblwifShLdHx8KEt0PXt9KSk7Y29uc3QganQ9ZnVuY3Rpb24oZT1xdCl7Y29uc3QgdD1uZXcgTWFwO3JldHVybiBhc3luYyhhLG4sbyxpKT0+e2lmKHQuaGFzKGEpKXtjb25zdHtjdXJyZW50VXJsOmUsY3VycmVudE5hbWU6b309dC5nZXQoYSk7aWYoZT09PW4pcmV0dXJuO2NvbnN0IGk9ZmluLldpbmRvdy53cmFwU3luYyh7dXVpZDpmaW4ubWUudXVpZCxuYW1lOm99KTthd2FpdCBpLmNsb3NlKCl9Y29uc3Qgcj1gJHtSLkhvbWVJbnRlcm5hbH0tJHtEYXRlLm5vdygpfSR7TWF0aC5yYW5kb20oKX1gO3Quc2V0KGEse2N1cnJlbnRVcmw6bixjdXJyZW50TmFtZTpyfSk7Y29uc3Qgcz1hd2FpdCBmaW4uUGxhdGZvcm0uZ2V0Q3VycmVudFN5bmMoKS5jcmVhdGVXaW5kb3coey4uLmUsbmFtZTpyLHVybDpufSk7KChlLHQpPT57Y29uc3QgYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2Euc2V0QXR0cmlidXRlKFwiYXJpYS1saXZlXCIsdHx8XCJwb2xpdGVcIiksKGU9PntlLnN0eWxlLnBvc2l0aW9uPVwiYWJzb2x1dGVcIixlLnN0eWxlLndpZHRoPVwiMXB4XCIsZS5zdHlsZS5oZWlnaHQ9XCIxcHhcIixlLnN0eWxlLnBhZGRpbmc9XCIwXCIsZS5zdHlsZS5tYXJnaW49XCItMXB4XCIsZS5zdHlsZS5vdmVyZmxvdz1cImhpZGRlblwiLGUuc3R5bGUud2hpdGVTcGFjZT1cIm5vd3JhcFwiLGUuc3R5bGUuYm9yZGVyPVwiMFwifSkoYSksZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKSxzZXRUaW1lb3V0KCgoKT0+e2EuaW5uZXJIVE1MPWV9KSwxMDApLHNldFRpbWVvdXQoKCgpPT57ZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChhKX0pLDFlMyl9KShgTmV3ICR7aX0gaW5kaWNhdG9yOiAke299YCkscy5vbmNlKFwiY2xvc2VkXCIsKCgpPT57dC5kZWxldGUoYSl9KSl9fSgpO2FzeW5jIGZ1bmN0aW9uIFF0KGUsdCxhLG4pe2NvbnN0IG89bmV3IFVSTFNlYXJjaFBhcmFtcztvLmFwcGVuZChcInR5cGVcIixlKSxvLmFwcGVuZChcIm1lc3NhZ2VcIix0KSxvLmFwcGVuZChcInBhcmVudE5hbWVcIixhKSxvLmFwcGVuZChcImljb25cIixufHxcIlwiKTtjb25zdCBpPWAke0h0KER0LkJyb3dzZXJJbmRpY2F0b3IpfT8ke28udG9TdHJpbmcoKX1gO3JldHVybiBqdChcImJyb3dzZXJcIithLGksdCxlKX1mdW5jdGlvbiBKdChlLHQsYSl7cmV0dXJuIFF0KEZ0LlNVQ0NFU1MsZSx0LGEpfWNvbnN0IHp0PWFzeW5jKGUsdCk9PntpZighZSlyZXR1cm47Y29uc3QgYT10LmlkZW50aXR5LG49YXdhaXQgQ2UoYSksbz1FdCgpLkJyb3dzZXIud3JhcFN5bmModC5pZGVudGl0eSksaT0oYXdhaXQgby5nZXRQYWdlcygpKS5maW5kKChlPT5lLmlzQWN0aXZlKSkscj1lLHM9RXQoKSxjPWF3YWl0IHMuU3RvcmFnZS5nZXRXb3Jrc3BhY2VzKCk7c3dpdGNoKGUudHlwZSl7Y2FzZSBwLk5ld1dpbmRvdzpjb25zdHtuZXdQYWdlVXJsOnR9PWF3YWl0IFZ0KGEpO2lmKCF0KXRocm93IG5ldyBFcnJvcihcIlRyeWluZyB0byBjcmVhdGUgYSBuZXcgZW1wdHkgd2luZG93IHdpdGhvdXQgYSBuZXdQYWdlVXJsIHNldFwiKTtFdCgpLmNyZWF0ZVZpZXcoe3RhcmdldDp2b2lkIDAsdXJsOnR9KTticmVhaztjYXNlIHAuTmV3UGFnZTphd2FpdChhc3luYyBlPT57Y29uc3QgdD1hd2FpdCBPdChlKTthd2FpdCBFdCgpLkJyb3dzZXIud3JhcFN5bmMoZSkuYWRkUGFnZSh0KX0pKGEpO2JyZWFrO2Nhc2UgcC5DbG9zZVdpbmRvdzpuLmRpc3BhdGNoKEllLkNsb3NlQnJvd3NlcldpbmRvdyk7YnJlYWs7Y2FzZSBwLlNhdmVXb3Jrc3BhY2U6Y29uc3QgZz1hd2FpdCBzLmdldEN1cnJlbnRXb3Jrc3BhY2UoKSxmPWcud29ya3NwYWNlSWQ7Yy5zb21lKChlPT5lLndvcmtzcGFjZUlkPT09ZikpPyhzLlN0b3JhZ2Uuc2F2ZVdvcmtzcGFjZShnKSxKdChcIldvcmtzcGFjZSBTYXZlZCFcIixhLm5hbWUpKTpvLl9vcGVuU2F2ZU1vZGFsKHttZW51VHlwZTpoLlNBVkVfV09SS1NQQUNFfSk7YnJlYWs7Y2FzZSBwLlNhdmVQYWdlOmlmKChhd2FpdCBFdCgpLlN0b3JhZ2UuZ2V0UGFnZXMoKSkuc29tZSgoZT0+aS5wYWdlSWQ9PT1lLnBhZ2VJZCkpKXRyeXthd2FpdCBFdCgpLlN0b3JhZ2Uuc2F2ZVBhZ2UoKHU9aSx7Li4udSxoYXNVbnNhdmVkQ2hhbmdlczp2b2lkIDAscGFyZW50SWRlbnRpdHk6dm9pZCAwLGlzQWN0aXZlOnZvaWQgMH0pKSxhd2FpdCBvLnVwZGF0ZVBhZ2Uoe3BhZ2VJZDppLnBhZ2VJZCxwYWdlOntoYXNVbnNhdmVkQ2hhbmdlczohMX19KSxKdChcIlBhZ2Ugc2F2ZWRcIixpLnBhcmVudElkZW50aXR5Lm5hbWUpfWNhdGNoe2Q9XCJQYWdlIGZhaWxlZCB0byBzYXZlXCIsbD1pLnBhcmVudElkZW50aXR5Lm5hbWUsUXQoRnQuRVJST1IsZCxsLHcpfWVsc2Ugby5fb3BlblNhdmVNb2RhbCh7aWQ6aS5wYWdlSWQsbWVudVR5cGU6aC5TQVZFX1BBR0V9KTticmVhaztjYXNlIHAuU2F2ZVBhZ2VBczpvLl9vcGVuU2F2ZU1vZGFsKHtpZDppLnBhZ2VJZCxtZW51VHlwZTpoLlNBVkVfUEFHRV9BU30pO2JyZWFrO2Nhc2UgcC5TYXZlV29ya3NwYWNlQXM6by5fb3BlblNhdmVNb2RhbCh7bWVudVR5cGU6aC5TQVZFX1dPUktTUEFDRV9BU30pO2JyZWFrO2Nhc2UgcC5SZW5hbWVXb3Jrc3BhY2U6by5fb3BlblNhdmVNb2RhbCh7bWVudVR5cGU6aC5SRU5BTUVfV09SS1NQQUNFfSk7YnJlYWs7Y2FzZSBwLlN3aXRjaFdvcmtzcGFjZTpjb25zdCBTPWMuZmluZCgoZT0+ZS53b3Jrc3BhY2VJZD09PXIud29ya3NwYWNlSWQpKTtTJiYoYXdhaXQgcy5hcHBseVdvcmtzcGFjZShTKSxKdChcIldvcmtzcGFjZSBTd2l0Y2hlZCFcIixhLm5hbWUpKTticmVhaztjYXNlIHAuRGVsZXRlV29ya3NwYWNlOmMuc29tZSgoZT0+ZS53b3Jrc3BhY2VJZD09PXIud29ya3NwYWNlSWQpKSYmKGF3YWl0IHMuU3RvcmFnZS5kZWxldGVXb3Jrc3BhY2Uoci53b3Jrc3BhY2VJZCksSnQoXCJXb3Jrc3BhY2UgRGVsZXRlZCFcIixhLm5hbWUpKTticmVhaztjYXNlIHAuUXVpdDpuLmRpc3BhdGNoKEllLlF1aXRQbGF0Zm9ybSk7YnJlYWs7Y2FzZSBwLk9wZW5TdG9yZWZyb250Oihhc3luYygpPT57YXdhaXQgSCgpJiZGKEQpfSkoKTticmVhaztjYXNlIHAuQ3VzdG9tOmlmKGUuYWN0aW9uKXtjb25zdCB0PXtjYWxsZXJUeXBlOnkuR2xvYmFsQ29udGV4dE1lbnUsd2luZG93SWRlbnRpdHk6YSxjdXN0b21EYXRhOmUuYWN0aW9uLmN1c3RvbURhdGF9O0V0KCkuX2ludm9rZUN1c3RvbUFjdGlvbihlLmFjdGlvbi5pZCx0KX19dmFyIGQsbCx3LHV9LFh0PWFzeW5jKGUsdCk9Pntjb25zdCBhPWF3YWl0IENlKHQuaWRlbnRpdHkpLG49RXQoKTtzd2l0Y2goZS50eXBlKXtjYXNlIGwuU2F2ZTphd2FpdCBuLkJyb3dzZXIud3JhcFN5bmModC5pZGVudGl0eSkuX29wZW5TYXZlTW9kYWwoe21lbnVUeXBlOmguU0FWRV9QQUdFLGlkOnQucGFnZUlkfSk7YnJlYWs7Y2FzZSBsLlNhdmVBczphd2FpdCBuLkJyb3dzZXIud3JhcFN5bmModC5pZGVudGl0eSkuX29wZW5TYXZlTW9kYWwoe21lbnVUeXBlOmguU0FWRV9QQUdFX0FTLGlkOnQucGFnZUlkfSk7YnJlYWs7Y2FzZSBsLlJlbmFtZTphd2FpdCBuLkJyb3dzZXIud3JhcFN5bmModC5pZGVudGl0eSkuX29wZW5TYXZlTW9kYWwoe21lbnVUeXBlOmguUkVOQU1FX1BBR0UsaWQ6dC5wYWdlSWR9KTticmVhaztjYXNlIGwuRHVwbGljYXRlOmEuZGlzcGF0Y2goSWUuRHVwbGljYXRlUGFnZSx0LnBhZ2VJZCk7YnJlYWs7Y2FzZSBsLkNsb3NlOmEuZGlzcGF0Y2goSWUuQ2xvc2VQYWdlLHQucGFnZUlkKTticmVhaztjYXNlIGwuQ3VzdG9tOmlmKGUuYWN0aW9uKXtjb25zdCBhPXtjYWxsZXJUeXBlOnkuUGFnZVRhYkNvbnRleHRNZW51LHdpbmRvd0lkZW50aXR5OnQuaWRlbnRpdHkscGFnZUlkOnQucGFnZUlkLGN1c3RvbURhdGE6ZS5hY3Rpb24uY3VzdG9tRGF0YX07RXQoKS5faW52b2tlQ3VzdG9tQWN0aW9uKGUuYWN0aW9uLmlkLGEpfX19LFl0PWFzeW5jKGUsdCk9PntpZihlPy50eXBlKXtjb25zdCBhPUV0KCk7c3dpdGNoKGUudHlwZSl7Y2FzZSBnLlNhdmVQYWdlOmF3YWl0IGEuQnJvd3Nlci53cmFwU3luYyh0LmlkZW50aXR5KS5fb3BlblNhdmVNb2RhbCh7bWVudVR5cGU6aC5TQVZFX1BBR0UsaWQ6dC5wYWdlSWQseDp0LmJ1dHRvbkxlZnQrdC5idXR0b25XaWR0aC8yLVB0LzIseTp0Lnl9KTticmVhaztjYXNlIGcuU2F2ZVdvcmtzcGFjZTphd2FpdCBhLkJyb3dzZXIud3JhcFN5bmModC5pZGVudGl0eSkuX29wZW5TYXZlTW9kYWwoe21lbnVUeXBlOmguU0FWRV9XT1JLU1BBQ0UseDp0LmJ1dHRvbkxlZnQrdC5idXR0b25XaWR0aC8yLVB0LzIseTp0Lnl9KTticmVhaztjYXNlIGcuQ3VzdG9tOmlmKGUuYWN0aW9uKXtjb25zdCBhPXtjYWxsZXJUeXBlOnkuU2F2ZUJ1dHRvbkNvbnRleHRNZW51LHdpbmRvd0lkZW50aXR5OnQuaWRlbnRpdHkscGFnZUlkOnQucGFnZUlkLGN1c3RvbURhdGE6ZS5hY3Rpb24uY3VzdG9tRGF0YX07RXQoKS5faW52b2tlQ3VzdG9tQWN0aW9uKGUuYWN0aW9uLmlkLGEpfX19fSxadD1hc3luYyhlLHQpPT57Y29uc3QgYT10LnNlbGVjdGVkVmlld3NbMF0sbj1maW4uVmlldy53cmFwU3luYyhhKSxvPWF3YWl0KGFzeW5jIGU9Pntjb25zdHtuZXdUYWJVcmw6dH09YXdhaXQgVnQoZSk7aWYoIXQpdGhyb3cgbmV3IEVycm9yKFwiVHJ5aW5nIHRvIGNyZWF0ZSBhIG5ldyBwYWdlIHdpdGhvdXQgYSBuZXdUYWJVcmwgc2V0XCIpO3JldHVybnsuLi52ZShcIk5ldyBWaWV3XCIsdCksdXJsOnQsdGFyZ2V0OmV9fSkoZSk7YXdhaXQgRXQoKS5jcmVhdGVWaWV3KG8sZSxuLmlkZW50aXR5KX0sZWE9YXN5bmMoZSx0KT0+e2NvbnN0IGE9YXdhaXQoZT0+UHJvbWlzZS5hbGwoZS5tYXAoKGFzeW5jIGU9PmZpbi5WaWV3LndyYXBTeW5jKGUpLmdldEluZm8oKSkpKSkodCkse25ld1BhZ2VVcmw6bixuZXdUYWJVcmw6b309YXdhaXQgVnQoZSk7YS5mb3JFYWNoKChhc3luYyBlPT57ZS51cmwhPT1uJiZlLnVybCE9PW8mJmF3YWl0IGZpbi5TeXN0ZW0ub3BlblVybFdpdGhCcm93c2VyKGUudXJsKX0pKX0sdGE9KGUsdCk9Pnt0LmZvckVhY2goKGFzeW5jIHQ9Pntjb25zdCBhPWZpbi5WaWV3LndyYXBTeW5jKHQpO2F3YWl0KGFzeW5jKGUsdCk9Pntjb25zdHt1cmw6YX09YXdhaXQgdC5nZXRJbmZvKCksbj17Li4uYXdhaXQgdC5nZXRPcHRpb25zKCksdXJsOmEsdGFyZ2V0OmUsbmFtZTp2b2lkIDB9O2F3YWl0IEV0KCkuY3JlYXRlVmlldyhuLGUsdC5pZGVudGl0eSl9KShlLGEpfSkpfSxhYT1hc3luYyhlLHQpPT57aWYoIWUpcmV0dXJuO2NvbnN0IGE9dC5pZGVudGl0eTtzd2l0Y2goZS50eXBlKXtjYXNlIHcuQ2xvc2VWaWV3czphd2FpdChhc3luYyhlLHQpPT57aWYoKGF3YWl0IGZpbi5XaW5kb3cud3JhcFN5bmMoZSkuZ2V0Q3VycmVudFZpZXdzKCkpLmxlbmd0aCE9PXQubGVuZ3RoKXQuZm9yRWFjaCgoYXN5bmMgZT0+e2NvbnN0IHQ9ZmluLlZpZXcud3JhcFN5bmMoZSk7YXdhaXQgdC5kZXN0cm95KCl9KSk7ZWxzZXtjb25zdCB0PShhd2FpdCBFdCgpLkJyb3dzZXIud3JhcFN5bmMoZSkuZ2V0UGFnZXMoKSkuZmluZCgoZT0+ZS5pc0FjdGl2ZSkpOyhhd2FpdCBDZShlKSkuZGlzcGF0Y2goSWUuQ2xvc2VQYWdlLHQ/LnBhZ2VJZCl9fSkoYSx0LnNlbGVjdGVkVmlld3MpO2JyZWFrO2Nhc2Ugdy5PcGVuV2l0aERlZmF1bHRCcm93c2VyOmF3YWl0IGVhKGEsdC5zZWxlY3RlZFZpZXdzKTticmVhaztjYXNlIHcuUmVsb2FkVmlld3M6dC5zZWxlY3RlZFZpZXdzLmZvckVhY2goKGFzeW5jIGU9Pntjb25zdCB0PWZpbi5WaWV3LndyYXBTeW5jKGUpO2F3YWl0IHQucmVsb2FkKCl9KSk7YnJlYWs7Y2FzZSB3Lk5ld1ZpZXc6YXdhaXQgWnQoYSx0KTticmVhaztjYXNlIHcuRHVwbGljYXRlVmlld3M6dGEoYSx0LnNlbGVjdGVkVmlld3MpO2JyZWFrO2Nhc2Ugdy5BZGRUb0NoYW5uZWw6KGFzeW5jKGUsdCxhKT0+e2NvbnN0IG49e25ld0NoYW5uZWxJZDp0LHNlbGVjdGVkVmlld3M6YX07KGF3YWl0IENlKGUpKS5kaXNwYXRjaChJZS5BZGRUb0NoYW5uZWwsbil9KShhLGUub3B0aW9uLHQuc2VsZWN0ZWRWaWV3cyk7YnJlYWs7Y2FzZSB3LlJlbW92ZUZyb21DaGFubmVsOihhc3luYyhlLHQpPT57KGF3YWl0IENlKGUpKS5kaXNwYXRjaChJZS5SZW1vdmVGcm9tQ2hhbm5lbCx0KX0pKGEsdC5zZWxlY3RlZFZpZXdzKTticmVhaztjYXNlIHcuQ3VzdG9tOmlmKGUuYWN0aW9uKXtjb25zdCBuPXtjYWxsZXJUeXBlOnkuVmlld1RhYkNvbnRleHRNZW51LHdpbmRvd0lkZW50aXR5OmEsc2VsZWN0ZWRWaWV3czp0LnNlbGVjdGVkVmlld3MsY3VzdG9tRGF0YTplLmFjdGlvbi5jdXN0b21EYXRhfTtFdCgpLl9pbnZva2VDdXN0b21BY3Rpb24oZS5hY3Rpb24uaWQsbil9fX07YXN5bmMgZnVuY3Rpb24gbmEoZSx0KXtjb25zdCBhPWF3YWl0IEx0KGUuaWRlbnRpdHkpLG49ey4uLmUsdGVtcGxhdGU6YSxjYWxsYmFjazp6dH07YXdhaXQgdGhpcy5vcGVuR2xvYmFsQ29udGV4dE1lbnUobix0KX1jb25zdCBvYT1hc3luYyhlLHQpPT57Y29uc3R7eDphLHk6bixpZGVudGl0eTpvLHRlbXBsYXRlOmksY2FsbGJhY2s6cn09ZSx7ZGF0YTpzfT1hd2FpdCBmdW5jdGlvbihlLHQpe2lmKCFTKXRocm93IG5ldyBFcnJvcihcInNob3dDb250ZXh0TWVudSBjYW4gb25seSBiZSB1c2VkIGluIGFuIE9wZW5GaW4gZW52LiBBdm9pZCBjYWxsaW5nIHRoaXMgbWV0aG9kIGR1cmluZyBwcmUtcmVuZGVyaW5nLlwiKTtpZighdCYmIWZpbi5tZS5pc1dpbmRvdyl0aHJvdyBuZXcgRXJyb3IoXCJzaG93Q29udGV4dE1lbnUgY2FuIG9ubHkgYmUgdXNlZCBpbiBhbiBPcGVuRmluIHdpbmRvdy5cIik7cmV0dXJuKHR8fGZpbi5XaW5kb3cuZ2V0Q3VycmVudFN5bmMoKSkuc2hvd1BvcHVwTWVudShlKX0oe3g6YSx5Om4sdGVtcGxhdGU6aX0sZmluLldpbmRvdy53cmFwU3luYyhvKSk7cihzLGUpfTthc3luYyBmdW5jdGlvbiBpYShlLHQpe2NvbnN0IGE9ey4uLmUsY2FsbGJhY2s6YWF9O2F3YWl0IHRoaXMub3BlblZpZXdUYWJDb250ZXh0TWVudShhLHQpfWFzeW5jIGZ1bmN0aW9uIHJhKGUsdCl7Y29uc3QgYT1hd2FpdCBFdCgpLlN0b3JhZ2UuZ2V0UGFnZShlLnBhZ2VJZCksbj1hd2FpdChvPSEhYSxbe3R5cGU6dnQuTGFiZWwsbGFiZWw6XCJTYXZlIFBhZ2VcIixkYXRhOnt0eXBlOmwuU2F2ZX19LHt0eXBlOnZ0LkxhYmVsLGxhYmVsOlwiU2F2ZSBQYWdlIEFzXCIsZGF0YTp7dHlwZTpsLlNhdmVBc319LHt0eXBlOnZ0LlNlcGFyYXRvcixkYXRhOnZvaWQgMH0se3R5cGU6dnQuTGFiZWwsbGFiZWw6XCJSZW5hbWUgUGFnZVwiLGRhdGE6e3R5cGU6bC5SZW5hbWV9LGVuYWJsZWQ6b30se3R5cGU6dnQuTGFiZWwsbGFiZWw6XCJEdXBsaWNhdGUgUGFnZVwiLGRhdGE6e3R5cGU6bC5EdXBsaWNhdGV9fSx7dHlwZTp2dC5TZXBhcmF0b3IsZGF0YTp2b2lkIDB9LHt0eXBlOnZ0LkxhYmVsLGxhYmVsOlwiQ2xvc2UgUGFnZVwiLGRhdGE6e3R5cGU6bC5DbG9zZX19XSk7dmFyIG87Y29uc3QgaT17Li4uZSx0ZW1wbGF0ZTpuLGNhbGxiYWNrOlh0fTthd2FpdCB0aGlzLm9wZW5QYWdlVGFiQ29udGV4dE1lbnUoaSx0KX1hc3luYyBmdW5jdGlvbiBzYShlLHQpe2NvbnN0IGE9ey4uLmUsdGVtcGxhdGU6YXdhaXQoW3t0eXBlOnZ0LkxhYmVsLGxhYmVsOlwiU2F2ZSBXb3Jrc3BhY2VcIixkYXRhOnt0eXBlOmcuU2F2ZVdvcmtzcGFjZX19LHt0eXBlOnZ0LkxhYmVsLGxhYmVsOlwiU2F2ZSBQYWdlXCIsZGF0YTp7dHlwZTpnLlNhdmVQYWdlfX1dKSxjYWxsYmFjazpZdH07YXdhaXQgdGhpcy5vcGVuU2F2ZUJ1dHRvbkNvbnRleHRNZW51KGEsdCl9Y29uc3QgY2E9diYmcnQoXCJvcGVuZmluLXdvcmtzcGFjZS1wbGF0Zm9ybS13b3Jrc3BhY2VzXCIsXCJ3b3Jrc3BhY2VzXCIpO2FzeW5jIGZ1bmN0aW9uIGRhKGUpe2NvbnN0IHQ9YXdhaXQgY3QoZSxjYSk7cmV0dXJuIHQ/KHQud29ya3NwYWNlSWQ9ZS50b1N0cmluZygpLHQudGl0bGU9dC50aXRsZXx8dC53b3Jrc3BhY2VJZCx0KTpudWxsfWFzeW5jIGZ1bmN0aW9uIHBhKGUpe2NvbnN0IHQ9YXdhaXQgd3QoY2EpLGE9YXdhaXQgUHJvbWlzZS5hbGwodC5tYXAoKGU9PmRhKGUudG9TdHJpbmcoKSkpKSk7cmV0dXJuIGU/YS5maWx0ZXIoKHQ9PnV0KHQudGl0bGUsZSkpKTphfWFzeW5jIGZ1bmN0aW9uIGxhKHt3b3Jrc3BhY2U6ZX0pe2F3YWl0IGR0KGUud29ya3NwYWNlSWQsZSxjYSl9YXN5bmMgZnVuY3Rpb24gd2EoZSl7YXdhaXQgcHQoZSxjYSl9YXN5bmMgZnVuY3Rpb24gdWEoe3dvcmtzcGFjZUlkOmUsd29ya3NwYWNlOnR9KXtpZih2b2lkIDA9PT1hd2FpdCBkYShlKSl0aHJvdyBuZXcgRXJyb3IoXCJ3b3Jrc3BhY2Ugbm90IGZvdW5kXCIpO2F3YWl0IGxhKHt3b3Jrc3BhY2U6dH0pLGUhPT10LndvcmtzcGFjZUlkJiZhd2FpdCB3YShlKX1hc3luYyBmdW5jdGlvbiBnYSh7YXBwOmUsdGFyZ2V0OnR9KXtjb25zdCBhPWZpbi5QbGF0Zm9ybS5nZXRDdXJyZW50U3luYygpO3N3aXRjaChlLm1hbmlmZXN0VHlwZSl7Y2FzZSBpLlNuYXBzaG90OnJldHVybiBhLmFwcGx5U25hcHNob3QoZS5tYW5pZmVzdCk7Y2FzZSBpLlZpZXc6cmV0dXJuIGFzeW5jIGZ1bmN0aW9uKGUsdCl7Y29uc3QgYT1maW4uUGxhdGZvcm0uZ2V0Q3VycmVudFN5bmMoKTtpZihcInZpZXdcIj09PXQuZW50aXR5VHlwZSl7Y29uc3QgYT1maW4uVmlldy53cmFwU3luYyh0KSxuPWF3YWl0IGEuZ2V0UGFyZW50TGF5b3V0KCk7cmV0dXJuIGF3YWl0IG4ucmVwbGFjZVZpZXcodCx7bWFuaWZlc3RVcmw6ZS5tYW5pZmVzdCx1cmw6dm9pZCAwLHRhcmdldDp2b2lkIDB9KSxhLmRlc3Ryb3koKX1yZXR1cm4gYS5jcmVhdGVWaWV3KHtuYW1lOnZvaWQgMCx1cmw6dm9pZCAwLG1hbmlmZXN0VXJsOmUubWFuaWZlc3QsdGFyZ2V0OnZvaWQgMH0pfShlLHQpO2Nhc2UgaS5FeHRlcm5hbDpyZXR1cm4gZmluLlN5c3RlbS5sYXVuY2hFeHRlcm5hbFByb2Nlc3Moe3BhdGg6ZS5tYW5pZmVzdCx1dWlkOmUuYXBwSWR9KTtkZWZhdWx0OnJldHVybiBmaW4uQXBwbGljYXRpb24uc3RhcnRGcm9tTWFuaWZlc3QoZS5tYW5pZmVzdCl9fWNvbnN0IHlhPWU9PmUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiYhQXJyYXkuaXNBcnJheShlKTtmdW5jdGlvbiBoYShlLC4uLnQpe2lmKCF0Lmxlbmd0aClyZXR1cm4gZTtjb25zdCBhPXQuc2hpZnQoKTtyZXR1cm4geWEoZSkmJnlhKGEpJiZPYmplY3QuZW50cmllcyhhKS5mb3JFYWNoKCgoW3QsYV0pPT57aWYoeWEoYSkpcmV0dXJuIGVbdF18fChlW3RdPXt9KSxoYShlW3RdLGEpO2VbdF09YX0pKSxoYShlLC4uLnQpfWNvbnN0IGZhPUkrRHQuQnJvd3NlcjtmdW5jdGlvbiBTYShlLHQpe2NvbnN0IGE9aGEoe30sdCxlKTtyZXR1cm4gYS5kZXRhY2hPbkNsb3NlPSEwLGF9YXN5bmMgZnVuY3Rpb24gbWEoZSx0LGEpe2NvbnN0IG49ZS5tYW5pZmVzdFVybD9hd2FpdCB0KHttYW5pZmVzdFVybDplLm1hbmlmZXN0VXJsfSxhKTp2b2lkIDA7aWYobj8uaW50ZXJvcCYmZS5pbnRlcm9wKXtjb25zdCB0PXsuLi5lLC4uLm4saW50ZXJvcDplLmludGVyb3B9O3JldHVybiBkZWxldGUgdC5tYW5pZmVzdFVybCx0fXJldHVybiBlfWNvbnN0IHZhPWU9Pntjb25zdCB0PWUubmFtZT09PVIuSG9tZSxhPWUubmFtZT8uc3RhcnRzV2l0aChSLkhvbWVJbnRlcm5hbCksbj1lLm5hbWU/LnN0YXJ0c1dpdGgoUi5Ccm93c2VyTWVudSk7cmV0dXJuIXQmJiFhJiYhbn0sUGE9ZT0+XCJ3b3Jrc3BhY2VQbGF0Zm9ybVwiaW4gZT9lOigoe3dvcmtzdGFja3M6ZSxwYWdlczp0LC4uLmF9KT0+KHsuLi5hLHdvcmtzcGFjZVBsYXRmb3JtOntwYWdlczp0fHxlfHxudWxsfX0pKShlKSxiYT17Y29udGV4dE1lbnVTZXR0aW5nczp7cmVsb2FkOiExfSxiYWNrZ3JvdW5kVGhyb3R0bGluZzohMCx1cmw6ZmEsY29udGV4dE1lbnU6ITAsY2xvc2VPbkxhc3RWaWV3UmVtb3ZlZDohMSxleHBlcmltZW50YWw6e3Nob3dGYXZpY29uczohMCxkZWZhdWx0RmF2aWNvblVybDpgJHtJfS9pY29ucy9kZWZhdWx0RmF2aWNvbi5zdmdgfSxwZXJtaXNzaW9uczp7U3lzdGVtOntvcGVuVXJsV2l0aEJyb3dzZXI6e2VuYWJsZWQ6ITAscHJvdG9jb2xzOltcIm1haWx0b1wiXX19fX0sa2E9e2RpbWVuc2lvbnM6e2JvcmRlcldpZHRoOjMsaGVhZGVySGVpZ2h0OjMwfX0sV2E9KGUsdCk9PnQ/ZS5tYXAoKGU9Pih7Li4udCwuLi5lfSkpKTplLENhPWU9Pntjb25zdCB0PWZpbi5XaW5kb3cud3JhcFN5bmMoZSk7cmV0dXJuIFByb21pc2UuYWxsKFt0LmJyaW5nVG9Gcm9udCgpLHQucmVzdG9yZSgpLHQuZm9jdXMoKV0pfTthc3luYyBmdW5jdGlvbiBJYShlKXtjb25zdCB0PWF3YWl0IE4oKTtyZXR1cm4gYXdhaXQgUHJvbWlzZS5hbGwodC5tYXAoKCh7aWRlbnRpdHk6ZX0pPT4oYXN5bmMgZT0+KGF3YWl0IENlKGUpKS5kaXNwYXRjaChBZS5VcGRhdGVQYWdlc1dpbmRvd09wdGlvbnMpKShlKSkpKSxlP2UoKTpvdCgpfWxldCBBYT1bXTtjb25zdCBUYT0oKT0+QWE7Y29uc3QgTWE9ZT0+YXN5bmMgdD0+e2NsYXNzIGEgZXh0ZW5kcyB0e2NvbnN0cnVjdG9yKCl7c3VwZXIoKSx0aGlzLmlzV29ya3NwYWNlUGxhdGZvcm09KCk9PiEwLHRoaXMuYWRkUGFnZT10aGlzLmF0dGFjaFBhZ2VzVG9XaW5kb3csdGhpcy5kZXRhY2hQYWdlc0Zyb21XaW5kb3c9VWUsdGhpcy5nZXRBbGxBdHRhY2hlZFBhZ2VzPVZlLHRoaXMuZ2V0UGFnZXNGb3JXaW5kb3c9JGUsdGhpcy5nZXRQYWdlRm9yV2luZG93PUhlLHRoaXMuc2V0QWN0aXZlUGFnZT1OZSx0aGlzLmxhdW5jaEFwcD1nYSx0aGlzLnNhdmVQYWdlPUdlLHRoaXMuc2F2ZVdvcmtzcGFjZT11ZSx0aGlzLmNyZWF0ZVNhdmVkUGFnZUludGVybmFsPV9lLHRoaXMudXBkYXRlU2F2ZWRQYWdlSW50ZXJuYWw9QmUsdGhpcy5kZWxldGVTYXZlZFBhZ2VJbnRlcm5hbD1MZSx0aGlzLnJlb3JkZXJQYWdlc0ZvcldpbmRvdz1xZSx0aGlzLmdldFVuaXF1ZVBhZ2VUaXRsZT1LZSx0aGlzLnVwZGF0ZVBhZ2VGb3JXaW5kb3c9RmUsdGhpcy5nZXRMYXN0Rm9jdXNlZEJyb3dzZXJXaW5kb3c9eWUsdGhpcy5nZXRUaGVtZXM9VGEsdGhpcy5pbnZva2VDdXN0b21BY3Rpb25JbnRlcm5hbD1aZSx0aGlzLmdldEN1cnJlbnRXb3Jrc3BhY2U9d2UsdGhpcy5hcHBseVdvcmtzcGFjZT1kZSx0aGlzLnNldEFjdGl2ZVdvcmtzcGFjZT1wZSx0aGlzLm9wZW5HbG9iYWxDb250ZXh0TWVudUludGVybmFsPXRoaXMub3Blbkdsb2JhbENvbnRleHRNZW51SW50ZXJuYWwuYmluZCh0aGlzKSx0aGlzLm9wZW5HbG9iYWxDb250ZXh0TWVudT10aGlzLm9wZW5HbG9iYWxDb250ZXh0TWVudS5iaW5kKHRoaXMpLHRoaXMuZ2V0U2F2ZWRQYWdlcz10aGlzLmdldFNhdmVkUGFnZXMuYmluZCh0aGlzKSx0aGlzLmdldFNhdmVkUGFnZT10aGlzLmdldFNhdmVkUGFnZS5iaW5kKHRoaXMpLHRoaXMuY3JlYXRlU2F2ZWRQYWdlPXRoaXMuY3JlYXRlU2F2ZWRQYWdlLmJpbmQodGhpcyksdGhpcy51cGRhdGVTYXZlZFBhZ2U9dGhpcy51cGRhdGVTYXZlZFBhZ2UuYmluZCh0aGlzKSx0aGlzLmRlbGV0ZVNhdmVkUGFnZT10aGlzLmRlbGV0ZVNhdmVkUGFnZS5iaW5kKHRoaXMpLHRoaXMuYXR0YWNoUGFnZXNUb1dpbmRvdz10aGlzLmF0dGFjaFBhZ2VzVG9XaW5kb3cuYmluZCh0aGlzKSx0aGlzLm9wZW5WaWV3VGFiQ29udGV4dE1lbnVJbnRlcm5hbD10aGlzLm9wZW5WaWV3VGFiQ29udGV4dE1lbnVJbnRlcm5hbC5iaW5kKHRoaXMpLHRoaXMub3BlblZpZXdUYWJDb250ZXh0TWVudT10aGlzLm9wZW5WaWV3VGFiQ29udGV4dE1lbnUuYmluZCh0aGlzKSx0aGlzLm9wZW5QYWdlVGFiQ29udGV4dE1lbnVJbnRlcm5hbD10aGlzLm9wZW5QYWdlVGFiQ29udGV4dE1lbnVJbnRlcm5hbC5iaW5kKHRoaXMpLHRoaXMub3BlblBhZ2VUYWJDb250ZXh0TWVudT10aGlzLm9wZW5QYWdlVGFiQ29udGV4dE1lbnUuYmluZCh0aGlzKSx0aGlzLmdldFNhdmVkV29ya3NwYWNlcz10aGlzLmdldFNhdmVkV29ya3NwYWNlcy5iaW5kKHRoaXMpLHRoaXMuZ2V0U2F2ZWRXb3Jrc3BhY2U9dGhpcy5nZXRTYXZlZFdvcmtzcGFjZS5iaW5kKHRoaXMpLHRoaXMuY3JlYXRlU2F2ZWRXb3Jrc3BhY2U9dGhpcy5jcmVhdGVTYXZlZFdvcmtzcGFjZS5iaW5kKHRoaXMpLHRoaXMudXBkYXRlU2F2ZWRXb3Jrc3BhY2U9dGhpcy51cGRhdGVTYXZlZFdvcmtzcGFjZS5iaW5kKHRoaXMpLHRoaXMuZGVsZXRlU2F2ZWRXb3Jrc3BhY2U9dGhpcy5kZWxldGVTYXZlZFdvcmtzcGFjZS5iaW5kKHRoaXMpLHRoaXMuZ2V0Q3VycmVudFdvcmtzcGFjZT10aGlzLmdldEN1cnJlbnRXb3Jrc3BhY2UuYmluZCh0aGlzKSx0aGlzLmFwcGx5V29ya3NwYWNlPXRoaXMuYXBwbHlXb3Jrc3BhY2UuYmluZCh0aGlzKSx0aGlzLnNldEFjdGl2ZVdvcmtzcGFjZT10aGlzLnNldEFjdGl2ZVdvcmtzcGFjZS5iaW5kKHRoaXMpLHRoaXMub3BlblNhdmVCdXR0b25Db250ZXh0TWVudT10aGlzLm9wZW5TYXZlQnV0dG9uQ29udGV4dE1lbnUuYmluZCh0aGlzKSx0aGlzLm9wZW5TYXZlQnV0dG9uQ29udGV4dE1lbnVJbnRlcm5hbD10aGlzLm9wZW5TYXZlQnV0dG9uQ29udGV4dE1lbnVJbnRlcm5hbC5iaW5kKHRoaXMpfWFzeW5jIGdldFNuYXBzaG90KCl7Y29uc3QgZT1hd2FpdCBJYSgoYXN5bmMoKT0+b3QoYXdhaXQgc3VwZXIuZ2V0U25hcHNob3Qodm9pZCAwLGZpbi5tZS5pZGVudGl0eSkpKSk7cmV0dXJuey4uLmUsd2luZG93czplLndpbmRvd3MuZmlsdGVyKHZhKX19YXN5bmMgYXBwbHlTbmFwc2hvdCh7c25hcHNob3Q6ZSxvcHRpb25zOnR9KXt0Py5jbG9zZUV4aXN0aW5nV2luZG93cyYmYXdhaXQgYXN5bmMgZnVuY3Rpb24oKXtjb25zdCBlPWF3YWl0IE4oKTthd2FpdCBQcm9taXNlLmFsbChlLm1hcCgoZT0+ZS5jbG9zZSghMCkuY2F0Y2goKCgpPT57fSkpKSkpfSgpO2xldCBhPWU7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGEmJihhPWF3YWl0IHN1cGVyLmZldGNoTWFuaWZlc3Qoe21hbmlmZXN0VXJsOmF9LGZpbi5tZS5pZGVudGl0eSkpLGFzeW5jIGZ1bmN0aW9uKGUsdCl7Y29uc3QgYT1hd2FpdCBWZSgpLG49ZS5zbmFwc2hvdERldGFpbHM/Lm1vbml0b3JJbmZvfHxhd2FpdCBmaW4uU3lzdGVtLmdldE1vbml0b3JJbmZvKCksbz0oZS53aW5kb3dzfHxbXSkuZmlsdGVyKCgoe2xheW91dDplfSk9PiEhZSkpLGk9bmV3IE1hcDthLmZvckVhY2goKGU9Pmkuc2V0KGUucGFnZUlkLGUpKSk7Y29uc3Qgcj1bXSxzPW8ubWFwKChhc3luYyBlPT57Y29uc3QgdD1QYShlKSxhPVtdLG49KGU9PntsZXQgdD0hMTtjb25zdCBhPShlfHxbXSkubWFwKChlPT57Y29uc3QgYT1mdW5jdGlvbih7aWQ6ZSxuYW1lOnQsLi4uYX0pe3JldHVybntwYWdlSWQ6ZSx0aXRsZTp0LC4uLmF9fShlKTtyZXR1cm4gdCYmYS5pc0FjdGl2ZSYmKGEuaXNBY3RpdmU9ITEpLGEuaXNBY3RpdmUmJih0PSEwKSxhfSkpO3JldHVybiF0JiZhLmxlbmd0aCYmKGFbMF0uaXNBY3RpdmU9ITApLGF9KSh0Py53b3Jrc3BhY2VQbGF0Zm9ybT8ucGFnZXMpO2lmKCFuPy5sZW5ndGgpe2NvbnN0IGU9YXdhaXQgS2UoKTthLnB1c2goYXdhaXQga3QoZSx0LmxheW91dCkpfWxldCBvO24uZm9yRWFjaCgoZT0+e2NvbnN0IHQ9aS5nZXQoZS5wYWdlSWQpO3Q/bz10OmEucHVzaChlKX0pKSxvJiZhd2FpdCBQcm9taXNlLmFsbChbTmUoe2lkZW50aXR5Om8ucGFyZW50SWRlbnRpdHkscGFnZUlkOm8ucGFnZUlkfSksQ2Eoby5wYXJlbnRJZGVudGl0eSldKSxhLmxlbmd0aCYmci5wdXNoKHsuLi50LHdvcmtzcGFjZVBsYXRmb3JtOnsuLi50LndvcmtzcGFjZVBsYXRmb3JtLHBhZ2VzOmF9fSl9KSk7aWYoYXdhaXQgUHJvbWlzZS5hbGwocyksIXIubGVuZ3RoKXJldHVybjtjb25zdCBjPWZpbi5QbGF0Zm9ybS5nZXRDdXJyZW50U3luYygpO3JldHVybih0fHxjLmFwcGx5U25hcHNob3QuYmluZChjKSkoey4uLmUsc25hcHNob3REZXRhaWxzOnsuLi5lLnNuYXBzaG90RGV0YWlscyxtb25pdG9ySW5mbzpufSx3aW5kb3dzOnJ9KX0oYSwoZT0+c3VwZXIuYXBwbHlTbmFwc2hvdCh7c25hcHNob3Q6ZSxvcHRpb25zOnsuLi50LGNsb3NlRXhpc3RpbmdXaW5kb3dzOiExfX0pKSl9YXN5bmMgY3JlYXRlV2luZG93KHQsYSl7bGV0IG49UGEodCk7Y29uc3Qgbz1hd2FpdCB0aGlzLmdldFRoZW1lcygpO249KChlLHQsYSk9PntsZXQgbj1lO2NvbnN0IG89bj8ud29ya3NwYWNlUGxhdGZvcm0/LnBhZ2VzO2lmKG8pe2NvbnN0IGU9by5maW5kKChlPT5lLmlzQWN0aXZlKSk7ZT9uLmxheW91dD1lLmxheW91dDoob1swXS5pc0FjdGl2ZT0hMCxuLmxheW91dD1vWzBdLmxheW91dCl9aWYobi5sYXlvdXQpe2lmKG49aGEoe30sdC5kZWZhdWx0V2luZG93T3B0aW9ucyxuLGJhKSxuLmxheW91dD1oYShuLmxheW91dCxrYSksKG4uaWNvbnx8bi50YXNrYmFySWNvbikmJihuLnRhc2tiYXJJY29uR3JvdXA9bi50YXNrYmFySWNvbkdyb3VwfHxmaW4ubWUuaWRlbnRpdHkudXVpZCksIW4uYmFja2dyb3VuZENvbG9yKXtjb25zdCBlPWE/LnBhbGV0dGU7bi5iYWNrZ3JvdW5kQ29sb3I9ZT8uYmFja2dyb3VuZDJ8fGU/LmJhY2tncm91bmRQcmltYXJ5fWNvbnN0IGU9bi53b3Jrc3BhY2VQbGF0Zm9ybS5uZXdUYWJVcmw7ZSYmKG4ubGF5b3V0LnNldHRpbmdzfHwobi5sYXlvdXQuc2V0dGluZ3M9e30pLG4ubGF5b3V0LnNldHRpbmdzLm5ld1RhYkJ1dHRvbj17dXJsOmV9KSxuPShlPT57Y29uc3QgdD1lO3JldHVybiB0LndvcmtzcGFjZVBsYXRmb3JtfHwodC53b3Jrc3BhY2VQbGF0Zm9ybT17fSksdC53b3Jrc3BhY2VQbGF0Zm9ybS5faW50ZXJuYWxEZWZlclNob3dFbmFibGVkPSEwLHQud29ya3NwYWNlUGxhdGZvcm0uX2ludGVybmFsQXV0b1Nob3c9dC53b3Jrc3BhY2VQbGF0Zm9ybT8uX2ludGVybmFsQXV0b1Nob3d8fHZvaWQgMD09PXQuYXV0b1Nob3d8fHQuYXV0b1Nob3csdC5hdXRvU2hvdz0hMSx0fSkobil9cmV0dXJuIG4ud29ya3NwYWNlUGxhdGZvcm0/LnBhZ2VzJiYobi53b3Jrc3BhY2VQbGF0Zm9ybS5wYWdlcz1XYShuLndvcmtzcGFjZVBsYXRmb3JtLnBhZ2VzLHQ/LmRlZmF1bHRQYWdlT3B0aW9ucykpLG4uY29ybmVyUm91bmRpbmcmJmRlbGV0ZSBuLmNvcm5lclJvdW5kaW5nLG59KShuLGUsb1swXSksbj1hd2FpdChhc3luYyBlPT57Y29uc3QgdD1hd2FpdCBmaW4uU3lzdGVtLmdldE1vbml0b3JJbmZvKCksYT10LnByaW1hcnlNb25pdG9yLmF2YWlsYWJsZVJlY3QuYm90dG9tLXQucHJpbWFyeU1vbml0b3IuYXZhaWxhYmxlUmVjdC50b3Asbj10LnByaW1hcnlNb25pdG9yLmF2YWlsYWJsZVJlY3QucmlnaHQtdC5wcmltYXJ5TW9uaXRvci5hdmFpbGFibGVSZWN0LmxlZnQ7cmV0dXJuIGUuZGVmYXVsdEhlaWdodD1lLmRlZmF1bHRIZWlnaHR8fFwiODAwXCIsZS5kZWZhdWx0V2lkdGg9ZS5kZWZhdWx0V2lkdGh8fFwiODAwXCIsYTxlLmRlZmF1bHRIZWlnaHQmJihlLmRlZmF1bHRIZWlnaHQ9YSksbjxlLmRlZmF1bHRXaWR0aCYmKGUuZGVmYXVsdFdpZHRoPW4pLGV9KShuKTtyZXR1cm4oZT0+YXN5bmModCxhKT0+e2NvbnN0IG49YXdhaXQgZSh0LGEpO3JldHVybiB0Py53b3Jrc3BhY2VQbGF0Zm9ybT8uX2ludGVybmFsRGVmZXJTaG93RW5hYmxlZD8oYXdhaXQgbi5hZGRMaXN0ZW5lcihfLlNob3dSZXF1ZXN0ZWQsKCgpPT57fSkpLG4pOm59KSgoKGUsdCk9PnN1cGVyLmNyZWF0ZVdpbmRvdyhlLHQpKSkobixhKX1hc3luYyBjcmVhdGVWaWV3KHQsYSl7cmV0dXJuIHQub3B0cz1TYSh0Lm9wdHMsZT8uZGVmYXVsdFZpZXdPcHRpb25zKSx0Lm9wdHM9YXdhaXQgbWEodC5vcHRzLHRoaXMuZmV0Y2hNYW5pZmVzdCxhKSxzdXBlci5jcmVhdGVWaWV3KHQsYSl9YXN5bmMgcmVwbGFjZVZpZXcodCxhKXtyZXR1cm4gdC5vcHRzLm5ld1ZpZXc9YXdhaXQgU2EodC5vcHRzLm5ld1ZpZXcsZT8uZGVmYXVsdFZpZXdPcHRpb25zKSx0Lm9wdHMubmV3Vmlldz1hd2FpdCBtYSh0Lm9wdHMubmV3Vmlldyx0aGlzLmZldGNoTWFuaWZlc3QsYSksc3VwZXIucmVwbGFjZVZpZXcodCxhKX1hc3luYyByZXBsYWNlTGF5b3V0KGUsdCl7cmV0dXJuIGUub3B0cy5sYXlvdXQ/LmRpbWVuc2lvbnMsc3VwZXIucmVwbGFjZUxheW91dChlLHQpfWFzeW5jIGNsb3NlVmlldyhlLHQpe2NvbnN0IGE9ZmluLlZpZXcud3JhcFN5bmMoZS52aWV3KTthd2FpdCBzdXBlci5jbG9zZVZpZXcoZSx0KSxhd2FpdCBhLmRlc3Ryb3koKS5jYXRjaCgoZT0+ZSkpfWFzeW5jIGdldFNhdmVkUGFnZSguLi5lKXtyZXR1cm4geXQuYXBwbHkodGhpcyxlKX1hc3luYyBnZXRTYXZlZFBhZ2VzKC4uLmUpe3JldHVybiBodC5hcHBseSh0aGlzLGUpfWFzeW5jIGNyZWF0ZVNhdmVkUGFnZSguLi5lKXtyZXR1cm4gZnQuYXBwbHkodGhpcyxlKX1hc3luYyBkZWxldGVTYXZlZFBhZ2UoLi4uZSl7cmV0dXJuIFN0LmFwcGx5KHRoaXMsZSl9YXN5bmMgdXBkYXRlU2F2ZWRQYWdlKC4uLmUpe3JldHVybiBtdC5hcHBseSh0aGlzLGUpfWFzeW5jIGdldFNhdmVkV29ya3NwYWNlKC4uLmUpe3JldHVybiBkYS5hcHBseSh0aGlzLGUpfWFzeW5jIGdldFNhdmVkV29ya3NwYWNlcyguLi5lKXtyZXR1cm4gcGEuYXBwbHkodGhpcyxlKX1hc3luYyBjcmVhdGVTYXZlZFdvcmtzcGFjZSguLi5lKXtyZXR1cm4gbGEuYXBwbHkodGhpcyxlKX1hc3luYyBkZWxldGVTYXZlZFdvcmtzcGFjZSguLi5lKXtyZXR1cm4gd2EuYXBwbHkodGhpcyxlKX1hc3luYyB1cGRhdGVTYXZlZFdvcmtzcGFjZSguLi5lKXtyZXR1cm4gdWEuYXBwbHkodGhpcyxlKX1hc3luYyBhdHRhY2hQYWdlc1RvV2luZG93KHQpe3QucGFnZXM9V2EodC5wYWdlcyxlPy5kZWZhdWx0UGFnZU9wdGlvbnMpLGF3YWl0IERlKHQpfWFzeW5jIG9wZW5HbG9iYWxDb250ZXh0TWVudUludGVybmFsKC4uLmUpe3JldHVybiBuYS5hcHBseSh0aGlzLGUpfWFzeW5jIG9wZW5HbG9iYWxDb250ZXh0TWVudSguLi5lKXtyZXR1cm4gb2EuYXBwbHkodGhpcyxlKX1hc3luYyBvcGVuVmlld1RhYkNvbnRleHRNZW51SW50ZXJuYWwoLi4uZSl7cmV0dXJuIGlhLmFwcGx5KHRoaXMsZSl9YXN5bmMgb3BlblZpZXdUYWJDb250ZXh0TWVudSguLi5lKXtyZXR1cm4gb2EuYXBwbHkodGhpcyxlKX1hc3luYyBvcGVuUGFnZVRhYkNvbnRleHRNZW51SW50ZXJuYWwoLi4uZSl7cmV0dXJuIHJhLmFwcGx5KHRoaXMsZSl9YXN5bmMgb3BlblBhZ2VUYWJDb250ZXh0TWVudSguLi5lKXtyZXR1cm4gb2EuYXBwbHkodGhpcyxlKX1hc3luYyBvcGVuU2F2ZUJ1dHRvbkNvbnRleHRNZW51KC4uLmUpe3JldHVybiBvYS5hcHBseSh0aGlzLGUpfWFzeW5jIG9wZW5TYXZlQnV0dG9uQ29udGV4dE1lbnVJbnRlcm5hbCguLi5lKXtyZXR1cm4gc2EuYXBwbHkodGhpcyxlKX19cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZT8ub3ZlcnJpZGVDYWxsYmFjaz9lLm92ZXJyaWRlQ2FsbGJhY2soYSk6bmV3IGF9O2FzeW5jIGZ1bmN0aW9uIEVhKCl7WGUoKSxhc3luYyBmdW5jdGlvbigpe2NvbnN0IGU9ZmluLkFwcGxpY2F0aW9uLmdldEN1cnJlbnRTeW5jKCk7YXdhaXQgZS5hZGRMaXN0ZW5lcihcIndpbmRvdy1mb2N1c2VkXCIsaGUpfSgpO3BlKGF3YWl0IGxlKCkpfWxldCBWYTtmdW5jdGlvbiBPYShlKXtpZighUyl0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYmUgdXNlZCBvdXRzaWRlIGFuIE9wZW5GaW4gZW52LlwiKTtpZighVmEpe2Zpbi5QbGF0Zm9ybS5nZXRDdXJyZW50U3luYygpLm9uY2UoXCJwbGF0Zm9ybS1hcGktcmVhZHlcIiwoKCk9PkVhKCkpKSxWYT1maW4uUGxhdGZvcm0uaW5pdCh7b3ZlcnJpZGVDYWxsYmFjazpNYShlKSxpbnRlcm9wT3ZlcnJpZGU6ZT8uaW50ZXJvcE92ZXJyaWRlfSksKGFzeW5jIGU9PntLKHEuUGxhdGZvcm0sZSl9KSh7YWxsb3dlZDohMH0pfXJldHVybiBWYX1jb25zdCB4YT1hc3luYyBlPT57Y29uc3QgdD1BLnNwbGl0KFwiLlwiKS5tYXAoKGU9PnBhcnNlSW50KGUpKSksYT1hd2FpdChhc3luYyBlPT5uZXcgUHJvbWlzZSgoYXN5bmMgdD0+e2NvbnN0IGE9KGF3YWl0IGZpbi5TeXN0ZW0uZ2V0VmVyc2lvbigpKS5zcGxpdChcIi5cIikubWFwKChlPT5wYXJzZUludChlKSkpO3QoZS5ldmVyeSgoKHQsbik9PiEobjwzKXx8YVtuXT09PWVbbl0pKSl9KSkpKHQpLG49ZT8udGhlbWU7dmFyIG87aWYobiYmKChvPW4pLmZvckVhY2goKGU9Pntjb25zdCB0PWUucGFsZXR0ZS5iYWNrZ3JvdW5kUHJpbWFyeTtpZighdC5pbmNsdWRlcyhcIiNcIikmJiF0LmluY2x1ZGVzKFwicmdiXCIpJiYhdC5pbmNsdWRlcyhcImhzbFwiKSl0aHJvdyBuZXcgRXJyb3IoXCJCYWNrZ3JvdW5kIHByaW1hcnkgY29sb3IgaXMgbm90IHRoZSByaWdodCBmb3JtYXQuXCIpfSkpLEFhPW8sKGFzeW5jIGU9PntLKHEuVGhlbWluZyxlKX0pKHthbGxvd2VkOiEwfSkpLGU/LmN1c3RvbUFjdGlvbnMmJihZZT1lPy5jdXN0b21BY3Rpb25zKSxhKXtyZXR1cm4gT2EoZT8uYnJvd3Nlcil9dGhyb3cgbmV3IEVycm9yKGBSdW50aW1lIHZlcnNpb24gaXMgbm90IHN1cHBvcnRlZC4gICR7dFswXX0uJHt0WzFdfS4ke3RbMl19LiogaXMgcmVxdWlyZWRgKX07bW9kdWxlLmV4cG9ydHM9Y30pKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiLCIoKCk9PntcInVzZSBzdHJpY3RcIjt2YXIgZT17MzEzMzooZSx0LG4pPT57bi5yKHQpLG4uZCh0LHtDTElBY3Rpb246KCk9PnplLlB0LENMSUZpbHRlck9wdGlvblR5cGU6KCk9PnplLmVsLENMSVRlbXBsYXRlOigpPT56ZS55VyxkZXJlZ2lzdGVyOigpPT5ZZSxoaWRlOigpPT50dCxyZWdpc3RlcjooKT0+UWUsc2hvdzooKT0+ZXR9KTt2YXIgcj17fTtuLnIociksbi5kKHIse3N1YnNjcmliZTooKT0+b2V9KTt2YXIgbz17fTtuLnIobyksbi5kKG8se2NyZWF0ZTooKT0+R2V9KTt2YXIgaT1uKDY1MzIpLHM9big3NDA1KTtjb25zdCBhPVwiaG9tZVwiO3ZhciBjOyFmdW5jdGlvbihlKXtlLkNvbW1hbmRzPVwiaG9tZS1jb21tYW5kc1wifShjfHwoYz17fSkpO3ZhciBkLHU9big1ODA2KTtuKDc1NjQpOyFmdW5jdGlvbihlKXtlW2UuSW5pdGlhbD0wXT1cIkluaXRpYWxcIixlW2UuT3Blbj0xXT1cIk9wZW5cIixlW2UuQ2xvc2U9Ml09XCJDbG9zZVwifShkfHwoZD17fSkpO2NvbnN0IGY9XCJhbGxcIixsPVwiMFwiLHA9XCI1XCIsZz1cIjZcIix3PSgpPT57fTtmdW5jdGlvbiBoKGUsdCl7cmV0dXJuIGU/YCR7ZX0tJHt0fWA6dH1mdW5jdGlvbiB5KGUpe3JldHVybmBfX3NlYXJjaC0ke2V9LXRvcGljX19gfWNvbnN0IHY9bmV3IE1hcDtmdW5jdGlvbiBtKGUsdCl7di5oYXMoZSl8fHYuc2V0KGUsbmV3IFNldCksdi5nZXQoZSkuYWRkKHQpfWZ1bmN0aW9uIFMoZSx0KXtjb25zdCBuPXYuZ2V0KGUpO24mJm4uZGVsZXRlKHQpfWNvbnN0IEM9bmV3IE1hcDtmdW5jdGlvbiBQKGUsdCl7Qy5oYXMoZSl8fEMuc2V0KGUsbmV3IFNldCksQy5nZXQoZSkuYWRkKHQpfWZ1bmN0aW9uIFIoZSx0KXtjb25zdCBuPUMuZ2V0KGUpO24mJm4uZGVsZXRlKHQpfWNvbnN0IGI9bmV3IE1hcDthc3luYyBmdW5jdGlvbiBUKGUsdCl7Yi5oYXMoZSl8fGIuc2V0KGUsbmV3IE1hcCksYi5nZXQoZSkuc2V0KHQuaWQsdCk7Y29uc3Qgbj12LmdldChlKTtpZighbilyZXR1cm47Y29uc3Qgcj1bLi4ubl0ubWFwKChlPT5lKCkpKTthd2FpdCBQcm9taXNlLmFsbChyKX1hc3luYyBmdW5jdGlvbiBJKGUsdCl7Y29uc3Qgbj1iLmdldChlKTtpZighbilyZXR1cm47bi5kZWxldGUodCk7Y29uc3Qgcj1DLmdldChlKTtpZighcilyZXR1cm47Y29uc3Qgbz1bLi4ucl0ubWFwKChlPT5lKCkpKTthd2FpdCBQcm9taXNlLmFsbChvKX1mdW5jdGlvbiBMKGUpe3JldHVybiBiLmdldChlKT9bLi4uYi5nZXQoZSkudmFsdWVzKCldOltdfWZ1bmN0aW9uIGsoZSl7Y29uc3QgdD1iLmdldChlKTt0JiZ0LmNsZWFyKCl9ZnVuY3Rpb24gTShlLHQpe2NvbnN0IG49Yi5nZXQoZSk7cmV0dXJuIG4/bi5nZXQodCk6bnVsbH1mdW5jdGlvbiBCKGUsdCxuKXtyZXR1cm57Li4uZSxhY3Rpb246bnx8ZS5hY3Rpb25zWzBdLGRpc3BhdGNoZXJJZGVudGl0eTp0fX1mdW5jdGlvbiBPKGUsdCxuPVwiYXNjZW5kaW5nXCIpe2NvbnN0IHI9ZXx8W107aWYoIXQ/Lmxlbmd0aClyZXR1cm4gcjtjb25zdCBvPVtdLGk9bmV3IE1hcDt0LmZvckVhY2goKGU9PntpZihlLmtleSlyZXR1cm4gaS5zZXQoZS5rZXksZSk7by5wdXNoKGUpfSkpO2xldCBzPXIubWFwKChlPT57Y29uc3R7a2V5OnR9PWU7aWYodCYmaS5oYXModCkpe2NvbnN0IGU9aS5nZXQodCk7cmV0dXJuIGkuZGVsZXRlKHQpLGV9cmV0dXJuIGV9KSk7cmV0dXJuIHMucHVzaCguLi5pLnZhbHVlcygpLC4uLm8pLHM9XCJhc2NlbmRpbmdcIj09PW4/cy5zb3J0KCgoZSx0KT0+KG51bGwhPT1lLnNjb3JlJiZ2b2lkIDAhPT1lLnNjb3JlP2Uuc2NvcmU6MS8wKS0obnVsbCE9PXQuc2NvcmUmJnZvaWQgMCE9PXQuc2NvcmU/dC5zY29yZToxLzApKSk6cy5zb3J0KCgoZSx0KT0+KG51bGwhPT10LnNjb3JlJiZ2b2lkIDAhPT10LnNjb3JlP3Quc2NvcmU6MS8wKS0obnVsbCE9PWUuc2NvcmUmJnZvaWQgMCE9PWUuc2NvcmU/ZS5zY29yZToxLzApKSksc31mdW5jdGlvbiBXKGUpe2NvbnN0IHQ9e307bGV0IG49W107bGV0IHI9W107bGV0IG89ZC5Jbml0aWFsO3QuZ2V0U3RhdHVzPSgpPT5vLHQuZ2V0UmVzdWx0QnVmZmVyPSgpPT5uLHQuc2V0UmVzdWx0QnVmZmVyPWU9PntuPWUsbj8ubGVuZ3RoJiZ0Lm9uQ2hhbmdlKCl9LHQuZ2V0UmV2b2tlZEJ1ZmZlcj0oKT0+cix0LnNldFJldm9rZWRCdWZmZXI9ZT0+e3I9ZSxyPy5sZW5ndGgmJnQub25DaGFuZ2UoKX0sdC5vbkNoYW5nZT13O2NvbnN0IGk9e307cmV0dXJuIHQucmVzPWksaS5jbG9zZT0oKT0+e28hPT1kLkNsb3NlJiYobz1kLkNsb3NlLHQub25DaGFuZ2UoKSl9LGkub3Blbj0oKT0+e28hPT1kLk9wZW4mJihvPWQuT3Blbix0Lm9uQ2hhbmdlKCkpfSxpLnJlc3BvbmQ9bj0+e2NvbnN0IHI9Tyh0LmdldFJlc3VsdEJ1ZmZlcigpLG4sZSk7dC5zZXRSZXN1bHRCdWZmZXIocil9LGkucmV2b2tlPSguLi5lKT0+e2NvbnN0IG49bmV3IFNldChlKSxyPXQuZ2V0UmVzdWx0QnVmZmVyKCkuZmlsdGVyKCgoe2tleTplfSk9Pntjb25zdCB0PW4uaGFzKGUpO3JldHVybiB0JiZuLmRlbGV0ZShlKSwhdH0pKTt0LnNldFJlc3VsdEJ1ZmZlcihyKSxuLnNpemUmJih0LmdldFJldm9rZWRCdWZmZXIoKS5mb3JFYWNoKChlPT5uLmFkZChlKSkpLHQuc2V0UmV2b2tlZEJ1ZmZlcihbLi4ubl0pKX0sdH1mdW5jdGlvbiBEKGUsdCxuKXtjb25zdCByPW5ldyBTZXQ7bGV0IG89ITE7cmV0dXJue2Nsb3NlOigpPT57bz0hMDtmb3IoY29uc3QgZSBvZiByKWUoKX0scmVxOntpZDp0LHRvcGljOmUsLi4ubixjb250ZXh0Om4/LmNvbnRleHR8fHt9LG9uQ2xvc2U6ZT0+e3IuYWRkKGUpLG8mJmUoKX0scmVtb3ZlTGlzdGVuZXI6ZT0+e3IuZGVsZXRlKGUpfX19fWZ1bmN0aW9uIHgoKXtyZXR1cm57bmFtZTpmaW4ubWUubmFtZSx1dWlkOmZpbi5tZS51dWlkfX1mdW5jdGlvbiBBKCl7bGV0IGU7dHJ5e2NvbnN0IHQ9ZmluLlBsYXRmb3JtLmdldEN1cnJlbnRTeW5jKCk7aWYoIXQ/LmlkZW50aXR5KXJldHVybjtlPXQuaWRlbnRpdHkudXVpZH1jYXRjaChlKXt9cmV0dXJuIGV9Y29uc3QgRT1cImRlcmVnaXN0ZXJlZCBvciBkb2VzIG5vdCBleGlzdFwiLEY9bmV3IEVycm9yKGBwcm92aWRlciAke0V9YCksXz1uZXcgRXJyb3IoXCJwcm92aWRlciB3aXRoIG5hbWUgYWxyZWFkeSBleGlzdHNcIiksJD1uZXcgRXJyb3IoXCJiYWQgcGF5bG9hZFwiKSxxPW5ldyBFcnJvcihcInN1YnNjcmlwdGlvbiByZWplY3RlZFwiKSxHPW5ldyBFcnJvcihgY2hhbm5lbCAke0V9YCksTj1uZXcgTWFwO2Z1bmN0aW9uIEgoZSl7Y29uc3QgdD1VKGUpO2lmKHQpcmV0dXJuIHQ7dGhyb3cgR31mdW5jdGlvbiBVKGUpe2NvbnN0IHQ9Ti5nZXQoZSk7aWYodClyZXR1cm4gdH1mdW5jdGlvbiBWKGUsdCl7Ti5zZXQoZSx0KX1jb25zdCBqPW5ldyBNYXA7ZnVuY3Rpb24gSyhlKXtqLmhhcyhlKXx8ai5zZXQoZSxuZXcgTWFwKTtjb25zdCB0PWouZ2V0KGUpO3JldHVybntnZXRSZXF1ZXN0c0ZvcklkZW50aXR5OmU9Pntjb25zdCBuPWZ1bmN0aW9uKGUpe3JldHVybmAke2UudXVpZH06JHtlLm5hbWV9YH0oZSk7cmV0dXJuIHQuaGFzKG4pfHx0LnNldChuLG5ldyBNYXApLHQuZ2V0KG4pfX19YXN5bmMgZnVuY3Rpb24gWChlLHQpe3JldHVybihhd2FpdCBIKGUpKS5kaXNwYXRjaChsLHQpfWZ1bmN0aW9uIEooe25hbWVzcGFjZWRUb3BpYzplLHRvcGljOnR9KXtjb25zdCBuPU0uYmluZChudWxsLGUpLHI9SyhlKSxvPVguYmluZChudWxsLGUpO3JldHVybiBhc3luYyhlLGkpPT57aWYoIWV8fCFlLmlkfHwhZS5wcm92aWRlcklkKXtjb25zdCBlPSQ7cmV0dXJue2Vycm9yOmUubWVzc2FnZX19Y29uc3R7aWQ6cyxwcm92aWRlcklkOmF9PWUsYz1uKGEpO2lmKCFjKXtjb25zdCBlPUY7cmV0dXJue2Vycm9yOmUubWVzc2FnZX19Y29uc3QgZD1yLmdldFJlcXVlc3RzRm9ySWRlbnRpdHkoaSk7bGV0IHU9ZC5nZXQoZS5pZCk7dXx8KHU9RCh0LHMsZSksZC5zZXQoZS5pZCx1KSk7Y29uc3QgZj1XKCksbD0oKT0+e2NvbnN0IGU9Zi5nZXRSZXN1bHRCdWZmZXIoKTtmLnNldFJlc3VsdEJ1ZmZlcihbXSk7Y29uc3QgdD1mLmdldFJldm9rZWRCdWZmZXIoKTtmLnNldFJldm9rZWRCdWZmZXIoW10pO2NvbnN0IG49Zi5nZXRTdGF0dXMoKTtvKHtpZDpzLHByb3ZpZGVySWQ6YSxyZXN1bHRzOmUscmV2b2tlZDp0LHN0YXR1czpufSl9O2xldCBwPSEwLGc9ITE7Zi5vbkNoYW5nZT0oKT0+e2lmKHApcmV0dXJuIHA9ITEsdm9pZCBsKCk7Z3x8KGc9ITAsc2V0VGltZW91dCgoKCk9PntnPSExLGwoKX0pLDEwMCkpfTt0cnl7Y29uc3R7cmVzdWx0czplLGNvbnRleHQ6dH09YXdhaXQgYy5vblVzZXJJbnB1dCh1LnJlcSxmLnJlcyksbj1mLmdldFN0YXR1cygpO3JldHVybntpZDpzLHByb3ZpZGVySWQ6YSxzdGF0dXM6bixyZXN1bHRzOmUsY29udGV4dDp0fX1jYXRjaChlKXtyZXR1cm57aWQ6cyxwcm92aWRlcklkOmEsZXJyb3I6ZS5tZXNzYWdlfX19fWFzeW5jIGZ1bmN0aW9uIFooZSx0LG4pe2NvbnN0IHI9bnx8YXdhaXQgSChlKSxvPXgoKSxpPXtpZGVudGl0eTpvLC4uLnQsb25Vc2VySW5wdXQ6dm9pZCAwLG9uUmVzdWx0RGlzcGF0Y2g6dm9pZCAwfTthd2FpdCByLmRpc3BhdGNoKFwiMlwiLGkpLGF3YWl0IFQoZSx7aWRlbnRpdHk6bywuLi50fSl9YXN5bmMgZnVuY3Rpb24geihlLHQpe2NvbnN0IG49YXdhaXQgSChlKTtyZXR1cm4gYXdhaXQgbi5kaXNwYXRjaChcIjNcIix0KSxJKGUsdCl9YXN5bmMgZnVuY3Rpb24gUShlLHQsbixyKXtjb25zdCBvPUIobix4KCksciksaT1NKGUsdCk7aWYoaSl7Y29uc3R7b25SZXN1bHREaXNwYXRjaDplfT1pO2lmKCFlKXJldHVybjtyZXR1cm4gZShvKX1jb25zdCBzPXtwcm92aWRlcklkOnQscmVzdWx0Om99O3JldHVybihhd2FpdCBIKGUpKS5kaXNwYXRjaChwLHMpfWFzeW5jIGZ1bmN0aW9uIFkoZSx0KXtjb25zdCBuPXsuLi50LGNvbnRleHQ6dD8uY29udGV4dHx8e319LHI9e30sbz1hc3luYyBmdW5jdGlvbiooZSx0LHtzZXRTdGF0ZTpufSl7Y29uc3Qgcj1hd2FpdCBIKGUpO2Zvcig7Oyl7Y29uc3QgZT1hd2FpdCByLmRpc3BhdGNoKFwiMVwiLHQpLG89ZS5lcnJvcjtpZihvKXRocm93IG5ldyBFcnJvcihvKTtjb25zdCBpPWU7aWYodC5pZD1pLmlkLG4oaS5zdGF0ZSksaS5kb25lKXJldHVybiBpLnZhbHVlO3lpZWxkIGkudmFsdWV9fShlLG4se3NldFN0YXRlOmU9PntyLnN0YXRlPWV9fSk7bGV0IGk9YXdhaXQgby5uZXh0KCk7cmV0dXJuIHIuaWQ9bi5pZCxyLmNsb3NlPSgpPT57IWFzeW5jIGZ1bmN0aW9uKGUsdCl7KGF3YWl0IEgoZSkpLmRpc3BhdGNoKGcse2lkOnR9KX0oZSxyLmlkKX0sci5uZXh0PSgpPT57aWYoaSl7Y29uc3QgZT1pO3JldHVybiBpPXZvaWQgMCxlfXJldHVybiBvLm5leHQoKX0scn1hc3luYyBmdW5jdGlvbiBlZShlKXtyZXR1cm4oYXdhaXQgSChlKSkuZGlzcGF0Y2goXCI0XCIsbnVsbCl9YXN5bmMgZnVuY3Rpb24gdGUoZSl7Y29uc3QgdD1hd2FpdCBIKGUpO3ZhciBuO249ZSxOLmRlbGV0ZShuKSxrKGUpLGF3YWl0IHQuZGlzY29ubmVjdCgpfWZ1bmN0aW9uIG5lKGUpe2NvbnN0e25hbWVzcGFjZWRUb3BpYzp0fT1lLG49Syh0KTtyZXR1cm4gYXN5bmMgcj0+e2lmKCFVKHQpKXJldHVybjtjb25zdCBvPW4uZ2V0UmVxdWVzdHNGb3JJZGVudGl0eShyKTtmb3IoY29uc3R7cmVxOmUsY2xvc2U6dH1vZiBvLnZhbHVlcygpKXQoKSxvLmRlbGV0ZShlLmlkKTtWKHQsKGFzeW5jIGU9Pntjb25zdHtuYW1lc3BhY2VkVG9waWM6dH09ZSxuPWF3YWl0IHJlKGUpO2Zvcihjb25zdCBlIG9mIEwodCkpYXdhaXQgWih0LGUsbik7cmV0dXJuIG59KShlKSl9fWFzeW5jIGZ1bmN0aW9uIHJlKGUpe2NvbnN0e25hbWVzcGFjZWRUb3BpYzp0fT1lLG49eSh0KSxyPWF3YWl0IGFzeW5jIGZ1bmN0aW9uKGUpe2ZvcihsZXQgdD0wO3Q8NTA7dCsrKXRyeXtyZXR1cm4gYXdhaXQgZmluLkludGVyQXBwbGljYXRpb25CdXMuQ2hhbm5lbC5jb25uZWN0KGUse3dhaXQ6ITF9KX1jYXRjaChlKXtpZig0OT09PXQpdGhyb3cgZTthd2FpdCBuZXcgUHJvbWlzZSgoZT0+c2V0VGltZW91dChlLDFlMykpKX19KG4pO3JldHVybiByLnJlZ2lzdGVyKGwsSihlKSksci5yZWdpc3RlcihnLGZ1bmN0aW9uKGUpe2NvbnN0IHQ9SyhlKTtyZXR1cm4oZSxuKT0+e2NvbnN0IHI9dC5nZXRSZXF1ZXN0c0ZvcklkZW50aXR5KG4pLG89ci5nZXQoZS5pZCk7byYmKG8uY2xvc2UoKSxyLmRlbGV0ZShlLmlkKSl9fSh0KSksci5yZWdpc3RlcihwLGZ1bmN0aW9uKGUpe3JldHVybiBhc3luYyh0LG4pPT57aWYoIXR8fCF0LnByb3ZpZGVySWR8fCF0LnJlc3VsdClyZXR1cm47Y29uc3Qgcj1NKGUsdC5wcm92aWRlcklkKTtpZighcilyZXR1cm47Y29uc3R7b25SZXN1bHREaXNwYXRjaDpvfT1yO3JldHVybiBvPyh0LnJlc3VsdC5kaXNwYXRjaGVySWRlbnRpdHk9bixvKHQucmVzdWx0KSk6dm9pZCAwfX0odCkpLHIub25EaXNjb25uZWN0aW9uKG5lKGUpKSxyfWFzeW5jIGZ1bmN0aW9uIG9lKGUpe2NvbnN0IHQ9KFwic3RyaW5nXCI9PXR5cGVvZiBlP2U6ZT8udG9waWMpfHxmLG49KFwic3RyaW5nXCI9PXR5cGVvZiBlP251bGw6ZT8udXVpZCl8fEEoKSxyPWgobix0KSxvPXt0b3BpYzp0LG5hbWVzcGFjZTpuLG5hbWVzcGFjZWRUb3BpYzpyfTtsZXQgaT1VKHIpO3JldHVybiBpfHwoaT1yZShvKSxWKHIsaSksYXdhaXQgaSkse2dldEFsbFByb3ZpZGVyczplZS5iaW5kKG51bGwscikscmVnaXN0ZXI6Wi5iaW5kKG51bGwsciksc2VhcmNoOlkuYmluZChudWxsLHIpLGRlcmVnaXN0ZXI6ei5iaW5kKG51bGwsciksZGlzcGF0Y2g6US5iaW5kKG51bGwsciksZGlzY29ubmVjdDp0ZS5iaW5kKG51bGwscil9fWNvbnN0IGllPW5ldyBNYXA7ZnVuY3Rpb24gc2UoZSl7Y29uc3QgdD1hZShlKTtpZih0KXJldHVybiB0O3Rocm93IEd9ZnVuY3Rpb24gYWUoZSl7Y29uc3QgdD1pZS5nZXQoZSk7aWYodClyZXR1cm4gdH1jb25zdCBjZT1uZXcgTWFwO2Z1bmN0aW9uIGRlKGUsdCl7Y2UuaGFzKGUpfHxjZS5zZXQoZSxuZXcgU2V0KSxjZS5nZXQoZSkuYWRkKHQpfWZ1bmN0aW9uIHVlKGUsdCl7Y29uc3Qgbj1jZS5nZXQoZSk7biYmbi5kZWxldGUodCl9dmFyIGZlPW4oNTMxNik7ZnVuY3Rpb24gbGUoZSl7cmV0dXJuWy4uLkwoZSldLm1hcCgoZT0+KHsuLi5lLG9uVXNlcklucHV0OnZvaWQgMCxvblJlc3VsdERpc3BhdGNoOnZvaWQgMH0pKSl9YXN5bmMgZnVuY3Rpb24gcGUoZSx0KXtpZihNKGUsdC5pZCkpdGhyb3cgbmV3IEVycm9yKFwicHJvdmlkZXIgd2l0aCBuYW1lIGFscmVhZHkgZXhpc3RzXCIpO2NvbnN0IG49eCgpO2F3YWl0IFQoZSx7aWRlbnRpdHk6biwuLi50fSl9ZnVuY3Rpb24gZ2UoZSx0KXtJKGUsdCl9YXN5bmMgZnVuY3Rpb24gd2UoZSx0LG4scil7Y29uc3Qgbz1NKGUsdCk7aWYoIW8pdGhyb3cgRjtjb25zdHtvblJlc3VsdERpc3BhdGNoOml9PW87aWYoIWkpcmV0dXJuO3JldHVybiBpKEIobix4KCkscikpfWFzeW5jIGZ1bmN0aW9uKmhlKGUsdCxuKXtjb25zdCByPWZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj1bXSxyPVtdLG89W10saT1bXTtmb3IoY29uc3QgcyBvZiBlKXtjb25zdCBlPVcocy5zY29yZU9yZGVyKSxhPXtyZXN1bHRzOltdLHByb3ZpZGVyOntpZDpzLmlkLGlkZW50aXR5OnMuaWRlbnRpdHksdGl0bGU6cy50aXRsZSxzY29yZU9yZGVyOnMuc2NvcmVPcmRlcixpY29uOnMuaWNvbn19O24ucHVzaChhKSxyLnB1c2goZSk7Y29uc3QgYz0oYXN5bmMoKT0+e3RyeXtjb25zdHtyZXN1bHRzOm4sY29udGV4dDpyfT1hd2FpdCBzLm9uVXNlcklucHV0KHQsZS5yZXMpO2EucmVzdWx0cz1PKGEucmVzdWx0cyxuKSxhLmNvbnRleHQ9ey4uLmEuY29udGV4dCwuLi5yfX1jYXRjaChlKXthLmVycm9yPWV9Yy5kb25lPSEwfSkoKTtpLnB1c2goYyksby5wdXNoKG8ubGVuZ3RoKX1yZXR1cm57cHJvdmlkZXJSZXNwb25zZXM6bixsaXN0ZW5lclJlc3BvbnNlczpyLG9wZW5MaXN0ZW5lclJlc3BvbnNlczpvLGluaXRpYWxSZXNwb25zZVByb21pc2VzOml9fSh0LnRhcmdldHM/dC50YXJnZXRzLm1hcCgodD0+TShlLHQpKSkuZmlsdGVyKChlPT4hIWUpKTpbLi4uTChlKS5maWx0ZXIoKGU9PiFlLmhpZGRlbikpXSx0KSx7cHJvdmlkZXJSZXNwb25zZXM6byxsaXN0ZW5lclJlc3BvbnNlczppfT1yO2xldHtvcGVuTGlzdGVuZXJSZXNwb25zZXM6cyxpbml0aWFsUmVzcG9uc2VQcm9taXNlczphfT1yLGM9ZmUuRC5GZXRjaGluZztjb25zdCB1PWU9PntjPWUsbi5zZXRTdGF0ZShjKX07bGV0IGYsbD0hMTt0Lm9uQ2xvc2UoKCgpPT57bD0hMCxmJiZmKCl9KSk7ZG97bGV0IGU9ITE7aWYoYS5sZW5ndGgpe2NvbnN0IHQ9W107Zm9yKGNvbnN0IG4gb2YgYSluLmRvbmU/ZT0hMDp0LnB1c2gobik7YT10LGEubGVuZ3RofHwodShmZS5ELkZldGNoZWQpLGU9ITApfWxldCB0LG49ITE7Y29uc3Qgcj0oKT0+e249ITAsdCYmdCgpfSxwPVtdO2Zvcihjb25zdCB0IG9mIHMpe2NvbnN0IG49aVt0XSxzPW9bdF0sYT1uLmdldFN0YXR1cygpOyhhPT09ZC5PcGVufHxjPT09ZmUuRC5GZXRjaGluZyYmYT09PWQuSW5pdGlhbCkmJihwLnB1c2godCksbi5vbkNoYW5nZT1yKTtjb25zdCB1PW4uZ2V0UmVzdWx0QnVmZmVyKCk7dS5sZW5ndGgmJihuLnNldFJlc3VsdEJ1ZmZlcihbXSkscy5yZXN1bHRzPU8ocy5yZXN1bHRzLHUpLGU9ITApO2NvbnN0IGY9bi5nZXRSZXZva2VkQnVmZmVyKCk7aWYoZi5sZW5ndGgpe24uc2V0UmV2b2tlZEJ1ZmZlcihbXSk7Y29uc3QgdD1uZXcgU2V0KGYpO3MucmVzdWx0cz1zLnJlc3VsdHMuZmlsdGVyKCgoe2tleTplfSk9PiF0LmhhcyhlKSkpLGU9ITB9fWlmKHM9cCxlJiYoeWllbGQgbyksbClicmVhaztufHwocy5sZW5ndGh8fGEubGVuZ3RoKSYmYXdhaXQgUHJvbWlzZS5yYWNlKFsuLi5hLG5ldyBQcm9taXNlKChlPT57dD1lfSkpLG5ldyBQcm9taXNlKChlPT57Zj1lfSkpXSl9d2hpbGUocy5sZW5ndGh8fGEubGVuZ3RoKTtyZXR1cm4gdShmZS5ELkNvbXBsZXRlKSxvfWxldCB5ZT0wO2Z1bmN0aW9uIHZlKHtuYW1lc3BhY2VkVG9waWM6ZSx0b3BpYzp0fSxuKXt5ZSs9MTtjb25zdCByPUQodCx5ZS50b1N0cmluZygpLG4pLG89aGUoZSxyLnJlcSx7c2V0U3RhdGU6ZT0+e28uc3RhdGU9ZX19KTtyZXR1cm4gby5pZD15ZS50b1N0cmluZygpLG8uY2xvc2U9ci5jbG9zZSxvLnN0YXRlPWZlLkQuRmV0Y2hpbmcsb31jb25zdCBtZT1uZXcgTWFwO2Z1bmN0aW9uIFNlKGUsdCl7cmV0dXJuYCR7ZX06JHt0fWB9ZnVuY3Rpb24gQ2UoZSl7cmV0dXJuIGFzeW5jKHQsLi4ubik9PntpZighdClyZXR1cm57ZXJyb3I6JC5tZXNzYWdlfTtsZXQgcjtpZih0LmlkKXI9U2UoZS5uYW1lc3BhY2VkVG9waWMsdC5pZCk7ZWxzZXtjb25zdCBuPXZlKGUsdCk7cj1TZShlLm5hbWVzcGFjZWRUb3BpYyxuLmlkKSx0LmlkPW4uaWQsbWUuc2V0KHIse2dlbmVyYXRvcjpufSl9Y29uc3Qgbz1tZS5nZXQocik7Y2xlYXJUaW1lb3V0KG8udGltZW91dCk7Y29uc3QgaT1hd2FpdCBvLmdlbmVyYXRvci5uZXh0KCk7cmV0dXJuIG8udGltZW91dD1mdW5jdGlvbihlKXtyZXR1cm4gd2luZG93LnNldFRpbWVvdXQoKCgpPT57bWUuZGVsZXRlKGUpfSksMWU0KX0ociksey4uLmksaWQ6dC5pZCxzdGF0ZTpvLmdlbmVyYXRvci5zdGF0ZX19fWZ1bmN0aW9uIFBlKGUsdCxuKXtyZXR1cm4gc2UoZSkuZGlzcGF0Y2godCxnLHtpZDpufSl9ZnVuY3Rpb24gUmUoZSl7cmV0dXJuIHQ9PmZ1bmN0aW9uKGUsdCl7Y29uc3Qgbj1TZShlLHQpLHI9bWUuZ2V0KG4pO3ImJnIuZ2VuZXJhdG9yLmNsb3NlKCl9KGUsdC5pZCl9YXN5bmMgZnVuY3Rpb24gYmUoZSx0LHtpZDpuLHF1ZXJ5OnIsY29udGV4dDpvLHRhcmdldHM6aX0pe2NvbnN0IHM9c2UoZSksYT17aWQ6bixxdWVyeTpyLGNvbnRleHQ6byx0YXJnZXRzOmkscHJvdmlkZXJJZDp0LmlkfSxjPWF3YWl0IHMuZGlzcGF0Y2godC5pZGVudGl0eSxsLGEpLGQ9Yy5lcnJvcjtpZihkKXRocm93IG5ldyBFcnJvcihkKTtyZXR1cm4gY31jb25zdCBUZT1uZXcgTWFwO2Z1bmN0aW9uIEllKGUsdCxuKXtyZXR1cm5gJHtlfToke3QubmFtZX06JHt0LnV1aWR9OiR7bn1gfWNvbnN0IExlPW5ldyBNYXA7ZnVuY3Rpb24ga2UoZSx0LG4pe3JldHVybmAke2V9OiR7dH06JHtufWB9ZnVuY3Rpb24gTWUoZSx0KXtjb25zdCBuPUllLmJpbmQobnVsbCxlLHQuaWRlbnRpdHkpLHI9UGUuYmluZChudWxsLGUsdC5pZGVudGl0eSksbz1iZS5iaW5kKG51bGwsZSx0KTtyZXR1cm4gYXN5bmMoaSxzKT0+e2NvbnN0IGE9bihpLmlkKTtpZighVGUuaGFzKGEpKXtjb25zdCBlPSgpPT57cihpLmlkKSxUZS5kZWxldGUoYSl9O1RlLnNldChhLGUpLGkub25DbG9zZShlKX1jb25zdCBjPWtlKGUsdC5pZCxpLmlkKSx1PSgpPT57TGUuZGVsZXRlKGMpLHMuY2xvc2UoKX07aS5vbkNsb3NlKHUpLExlLnNldChjLChlPT57ZS5yZXN1bHRzPy5sZW5ndGgmJnMucmVzcG9uZChlLnJlc3VsdHMpLGUucmV2b2tlZD8ubGVuZ3RoJiZzLnJldm9rZSguLi5lLnJldm9rZWQpLGUuc3RhdHVzPT09ZC5PcGVuJiZzLm9wZW4oKSxlLnN0YXR1cz09PWQuQ2xvc2UmJnUoKX0pKTtjb25zdCBmPWF3YWl0IG8oaSk7cmV0dXJuIGYuc3RhdHVzPT09ZC5PcGVuJiZzLm9wZW4oKSxmLnN0YXR1cyE9PWQuQ2xvc2UmJmYuc3RhdHVzIT09ZC5Jbml0aWFsfHx1KCksZn19ZnVuY3Rpb24gQmUoZSx0KXtyZXR1cm4gYXN5bmMgbj0+e2NvbnN0IHI9c2UoZSksbz17cHJvdmlkZXJJZDp0LmlkLHJlc3VsdDpufTtyZXR1cm4gci5kaXNwYXRjaCh0LmlkZW50aXR5LHAsbyl9fWNvbnN0IE9lPW5ldyBNYXA7ZnVuY3Rpb24gV2UoZSx0KXtyZXR1cm5gJHtlfS0ke3QubmFtZX0tJHt0LnV1aWR9YH1mdW5jdGlvbiBEZShlKXtyZXR1cm4gYXN5bmModCxuKT0+e2lmKCF0fHwhdC5pZClyZXR1cm4gdm9pZCBuZXcgRXJyb3IoSlNPTi5zdHJpbmdpZnkodCkpO2lmKE0oZSx0LmlkKSl0aHJvdyBfO3QuaWRlbnRpdHk9bixhd2FpdCBhc3luYyBmdW5jdGlvbihlLHQpe2NvbnN0IG49V2UoZSx0LmlkZW50aXR5KTtPZS5oYXMobil8fE9lLnNldChuLFtdKSxPZS5nZXQobikucHVzaCh0LmlkKSxhd2FpdCBUKGUsey4uLnQsb25Vc2VySW5wdXQ6TWUoZSx0KSxvblJlc3VsdERpc3BhdGNoOkJlKGUsdCl9KX0oZSx0KX19ZnVuY3Rpb24geGUoZSl7cmV0dXJuIHQ9Pnt0JiZmdW5jdGlvbihlLHQpe2NvbnN0IG49TShlLHQpO2lmKCFuKXJldHVybjtjb25zdCByPVdlKGUsbi5pZGVudGl0eSksbz1PZS5nZXQocik7aWYobyl7Y29uc3Qgbj1vLmZpbmRJbmRleCgoZT0+ZT09PXQpKTstMSE9PW4mJihvLnNwbGljZShuLDEpLEkoZSx0KSl9fShlLHQpfX1jb25zdCBBZT1uZXcgTWFwO2Z1bmN0aW9uIEVlKGUsdCl7QWUuaGFzKGUpfHxBZS5zZXQoZSxuZXcgU2V0KSxBZS5nZXQoZSkuYWRkKHQpfWZ1bmN0aW9uIEZlKGUsdCl7Y29uc3Qgbj1BZS5nZXQoZSk7biYmbi5kZWxldGUodCl9ZnVuY3Rpb24gX2UoZSl7cmV0dXJuIGFzeW5jIHQ9PnshZnVuY3Rpb24oZSx0KXtjb25zdCBuPVdlKGUsdCkscj1PZS5nZXQobik7aWYocil7Zm9yKGNvbnN0IHQgb2YgcilJKGUsdCk7T2UuZGVsZXRlKG4pfX0oZSx0KTtjb25zdCBuPUFlLmdldChlKTtuJiZuLmZvckVhY2goKGU9PmUodCkpKX19YXN5bmMgZnVuY3Rpb24gJGUoZSl7Y29uc3R7bmFtZXNwYWNlZFRvcGljOnR9PWUsbj15KGUubmFtZXNwYWNlZFRvcGljKSxyPWF3YWl0KG89bixmaW4uSW50ZXJBcHBsaWNhdGlvbkJ1cy5DaGFubmVsLmNyZWF0ZShvKSk7dmFyIG87cmV0dXJuIHIub25Db25uZWN0aW9uKGZ1bmN0aW9uKHtuYW1lc3BhY2VkVG9waWM6ZX0pe3JldHVybiBhc3luYyB0PT57Y29uc3Qgbj1jZS5nZXQoZSk7aWYobilmb3IoY29uc3QgZSBvZiBuKWlmKCFhd2FpdCBlKHQpKXRocm93IHF9fShlKSksci5vbkRpc2Nvbm5lY3Rpb24oX2UodCkpLHIucmVnaXN0ZXIoZyxSZSh0KSksci5yZWdpc3RlcihsLGZ1bmN0aW9uKGUpe3JldHVybiB0PT57Y29uc3Qgbj1rZShlLHQucHJvdmlkZXJJZCx0LmlkKSxyPUxlLmdldChuKTtyJiZyKHQpfX0odCkpLHIucmVnaXN0ZXIoXCIyXCIsRGUodCkpLHIucmVnaXN0ZXIoXCIzXCIseGUodCkpLHIucmVnaXN0ZXIoXCI0XCIsZnVuY3Rpb24oZSl7cmV0dXJuIGFzeW5jKCk9PmxlKGUpfSh0KSksci5yZWdpc3RlcihcIjFcIixDZShlKSksci5yZWdpc3RlcihwLGZ1bmN0aW9uKGUpe3JldHVybiBhc3luYyh0LG4pPT57aWYoIXR8fCF0LnByb3ZpZGVySWR8fCF0LnJlc3VsdClyZXR1cm47Y29uc3Qgcj1NKGUsdC5wcm92aWRlcklkKTtpZighcil0aHJvdyBGO2NvbnN0e29uUmVzdWx0RGlzcGF0Y2g6b309cjtyZXR1cm4gbz8odC5yZXN1bHQuZGlzcGF0Y2hlcklkZW50aXR5PW4sbyh0LnJlc3VsdCkpOnZvaWQgMH19KHQpKSxyfWFzeW5jIGZ1bmN0aW9uIHFlKGUpe2NvbnN0IHQ9c2UoZSk7dmFyIG47bj1lLGllLmRlbGV0ZShuKSxhd2FpdCB0LmRlc3Ryb3koKSxrKGUpfWFzeW5jIGZ1bmN0aW9uIEdlKGUpe2NvbnN0IHQ9KFwic3RyaW5nXCI9PXR5cGVvZiBlP2U6ZT8udG9waWMpfHxmLG49QSgpLHI9aChuLHQpLG89e3RvcGljOnQsbmFtZXNwYWNlOm4sbmFtZXNwYWNlZFRvcGljOnJ9O2xldCBpPWFlKHIpO2l8fChpPWF3YWl0ICRlKG8pLGZ1bmN0aW9uKGUsdCl7aWUuc2V0KGUsdCl9KHIsaSkpO2NvbnN0IHM9dWUuYmluZChudWxsLHIpLGE9RmUuYmluZChudWxsLHIpLGM9Uy5iaW5kKG51bGwsciksZD1SLmJpbmQobnVsbCxyKTtyZXR1cm57Z2V0QWxsUHJvdmlkZXJzOmxlLmJpbmQobnVsbCxyKSxzZWFyY2g6dmUuYmluZChudWxsLG8pLHJlZ2lzdGVyOnBlLmJpbmQobnVsbCxyKSxkZXJlZ2lzdGVyOmdlLmJpbmQobnVsbCxyKSxvblN1YnNjcmlwdGlvbjpkZS5iaW5kKG51bGwsciksb25EaXNjb25uZWN0OkVlLmJpbmQobnVsbCxyKSxvblJlZ2lzdGVyOm0uYmluZChudWxsLHIpLG9uRGVyZWdpc3RlcjpQLmJpbmQobnVsbCxyKSxkaXNwYXRjaDp3ZS5iaW5kKG51bGwsbyksZGlzY29ubmVjdDpxZS5iaW5kKG51bGwscikscmVtb3ZlTGlzdGVuZXI6ZT0+e3MoZSksYShlKSxjKGUpLGQoZSl9fX1jb25zdHtjcmVhdGU6TmV9PW8se3N1YnNjcmliZTpIZX09cixVZT17Y3JlYXRlOk5lLHN1YnNjcmliZTpIZSxkZWZhdWx0VG9waWM6XCJhbGxcIn0sVmU9KCk9Pntjb25zdCBlPXdpbmRvdztlLnNlYXJjaD1VZSxlLmZpbiYmKGUuZmluLlNlYXJjaD1VZSl9LGplPWU9Pntjb25zdCB0PSgpPT57VmUoKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihlLHQpfTtyZXR1cm4gdH07aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyl7VmUoKTtjb25zdCBlPVwibG9hZFwiLHQ9amUoZSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoZSx0KTtjb25zdCBuPVwiRE9NQ29udGVudExvYWRlZFwiLHI9amUobik7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIobixyKX1jb25zdCBLZT1uZXcgTWFwO2FzeW5jIGZ1bmN0aW9uIFhlKCl7YXdhaXQgYXN5bmMgZnVuY3Rpb24oZSl7S2Uuc2V0KGUsYXdhaXQgSGUoe3RvcGljOmUsdXVpZDp1LnE5LldvcmtzcGFjZX0pKX0oYSl9bGV0IEplO2FzeW5jIGZ1bmN0aW9uIFplKGUpe3JldHVybiBhd2FpdCBhc3luYyBmdW5jdGlvbigpe3JldHVybiBKZXx8KEplPVhlKCkpLEplfSgpLEtlLmdldChlKX12YXIgemU9bigzNzU4KTtjb25zdCBRZT1hc3luYyBlPT57aWYoIWUuaWNvbil0aHJvdyBuZXcgRXJyb3IoYCR7ZS5pZH0gcHJvdmlkZXIgbmVlZHMgdG8gaGF2ZSBpY29uIHByb3BlcnR5IGRlZmluZWQuYCk7YXdhaXQoMCxzLmFCKSgpO2NvbnN0IHQ9YXdhaXQgWmUoYSk7dHJ5e2NvbnN0IG49YXdhaXQgdC5yZWdpc3RlcihlKTtyZXR1cm4oMCxpLmNrKSh7YWxsb3dlZDohMH0pLG59Y2F0Y2goZSl7dGhyb3coMCxpLmNrKSh7YWxsb3dlZDohMSxyZWplY3Rpb25Db2RlOmUubWVzc2FnZX0pLGV9fSxZZT1hc3luYyBlPT57YXdhaXQoMCxzLmFCKSgpO3JldHVybihhd2FpdCBaZShhKSkuZGVyZWdpc3RlcihlKX07YXN5bmMgZnVuY3Rpb24gZXQoKXtyZXR1cm4oYXdhaXQoMCxzLlhsKSgpKS5kaXNwYXRjaChzLk1sLlNob3dIb21lLHZvaWQgMCl9YXN5bmMgZnVuY3Rpb24gdHQoKXtyZXR1cm4oYXdhaXQoMCxzLlhsKSgpKS5kaXNwYXRjaChzLk1sLkhpZGVIb21lLHZvaWQgMCl9fSwzMjk4OihlLHQsbik9PntuLmQodCx7dzooKT0+ci53fSk7dmFyIHI9big1MzE2KX0sMzc1ODooZSx0LG4pPT57dmFyIHIsbyxpO24uZCh0LHtQdDooKT0+cix5VzooKT0+byxlbDooKT0+aX0pLGZ1bmN0aW9uKGUpe2UuU3VnZ2VzdGlvbj1cInN1Z2dlc3Rpb25cIn0ocnx8KHI9e30pKSxmdW5jdGlvbihlKXtlLkNvbnRhY3Q9XCJDb250YWN0XCIsZS5DdXN0b209XCJDdXN0b21cIixlLkxpc3Q9XCJMaXN0XCIsZS5QbGFpbj1cIlBsYWluXCIsZS5TaW1wbGVUZXh0PVwiU2ltcGxlVGV4dFwifShvfHwobz17fSkpLGZ1bmN0aW9uKGUpe2UuTXVsdGlTZWxlY3Q9XCJNdWx0aVNlbGVjdFwifShpfHwoaT17fSkpfSw3NTY0OihlLHQsbik9PntuKDMyOTgpLG4oMzc1OCksbig2MTE0KSxuKDIxMDkpfSw2MTE0OihlLHQsbik9Pnt2YXIgcixvO24uZCh0LHtMOigpPT5yLFQ6KCk9Pm99KSxmdW5jdGlvbihlKXtlLlNuYXBzaG90PVwic25hcHNob3RcIixlLk1hbmlmZXN0PVwibWFuaWZlc3RcIixlLlZpZXc9XCJ2aWV3XCIsZS5FeHRlcm5hbD1cImV4dGVybmFsXCJ9KHJ8fChyPXt9KSksZnVuY3Rpb24oZSl7ZS5MYW5kaW5nUGFnZT1cImxhbmRpbmdQYWdlXCIsZS5BcHBHcmlkPVwiYXBwR3JpZFwifShvfHwobz17fSkpfSwyMTA5OihlLHQsbik9PntuLmQodCx7cDY6KCk9PnIsR286KCk9Pm8sYkk6KCk9PmksWko6KCk9PnN9KTtjb25zdCByPXtDb250YWluZXI6XCJDb250YWluZXJcIixCdXR0b246XCJCdXR0b25cIn0sbz17VGV4dDpcIlRleHRcIixJbWFnZTpcIkltYWdlXCIsTGlzdDpcIkxpc3RcIn0saT17Li4uciwuLi5vfTt2YXIgczshZnVuY3Rpb24oZSl7ZS5QcmltYXJ5PVwicHJpbWFyeVwiLGUuU2Vjb25kYXJ5PVwic2Vjb25kYXJ5XCIsZS5UZXh0T25seT1cInRleHRPbmx5XCJ9KHN8fChzPXt9KSl9LDMxNzooZSx0LG4pPT57bi5yKHQpLG4uZCh0LHtBcHBNYW5pZmVzdFR5cGU6KCk9PmkuTCxTdG9yZWZyb250VGVtcGxhdGU6KCk9PmkuVCxkZXJlZ2lzdGVyOigpPT5mLGhpZGU6KCk9PmwscmVnaXN0ZXI6KCk9PnUsc2hvdzooKT0+cH0pO3ZhciByPW4oNjUzMiksbz1uKDc0MDUpO24oNzU2NCk7dmFyIGk9big2MTE0KTtsZXQgcztjb25zdCBhPW5ldyBNYXAsYz1lPT57aWYoIWEuaGFzKGUpKXRocm93IG5ldyBFcnJvcihgU3RvcmVmcm9udCBQcm92aWRlciB3aXRoIGlkICR7ZX0gaXMgbm90IHJlZ2lzdGVyZWRgKTtyZXR1cm4gYS5nZXQoZSl9LGQ9YXN5bmMgZT0+e2NvbnN0IHQ9YXdhaXQoMCxvLlhsKSgpO2lmKGEuaGFzKGUuaWQpKXRocm93IG5ldyBFcnJvcihgU3RvcmVmcm9udCBwcm92aWRlciB3aXRoIGlkICR7ZS5pZH0gYWxyZWFkeSByZWdpc3RlcmVkYCk7cmV0dXJuIGEuc2V0KGUuaWQsZSksKGU9PntlLmlzU3RvcmVmcm9udEFjdGlvbnNSZWdpc3RlcmVkfHwoZS5pc1N0b3JlZnJvbnRBY3Rpb25zUmVnaXN0ZXJlZD0hMCxlLnJlZ2lzdGVyKG8uTWwuR2V0U3RvcmVmcm9udFByb3ZpZGVyQXBwcywoZT0+YyhlKS5nZXRBcHBzKCkpKSxlLnJlZ2lzdGVyKG8uTWwuR2V0U3RvcmVmcm9udFByb3ZpZGVyRm9vdGVyLChlPT5jKGUpLmdldEZvb3RlcigpKSksZS5yZWdpc3RlcihvLk1sLkdldFN0b3JlZnJvbnRQcm92aWRlckxhbmRpbmdQYWdlLChlPT5jKGUpLmdldExhbmRpbmdQYWdlKCkpKSxlLnJlZ2lzdGVyKG8uTWwuR2V0U3RvcmVmcm9udFByb3ZpZGVyTmF2aWdhdGlvbiwoZT0+YyhlKS5nZXROYXZpZ2F0aW9uKCkpKSxlLnJlZ2lzdGVyKG8uTWwuTGF1bmNoU3RvcmVmcm9udFByb3ZpZGVyQXBwLCgoe2lkOmUsYXBwOnR9KT0+YyhlKS5sYXVuY2hBcHAodCkpKSl9KSh0KSx0LmRpc3BhdGNoKG8uTWwuUmVnaXN0ZXJTdG9yZWZyb250UHJvdmlkZXIsZSl9LHU9ZT0+KHM9ZChlKSwoMCxyLmQ5KSh7YWxsb3dlZDohMH0pLHMpLGY9YXN5bmMgZT0+e2F3YWl0IHMsYS5kZWxldGUoZSk7cmV0dXJuKGF3YWl0KDAsby5YbCkoKSkuZGlzcGF0Y2goby5NbC5EZXJlZ2lzdGVyU3RvcmVmcm9udFByb3ZpZGVyLGUpfSxsPWFzeW5jKCk9Pnthd2FpdCBzLGF3YWl0KDAsby5hQikoKSxhd2FpdChhc3luYygpPT4oYXdhaXQoMCxvLkRtKSgpKS5kaXNwYXRjaChvLk1sLkhpZGVTdG9yZWZyb250LHZvaWQgMCkpKCl9LHA9YXN5bmMoKT0+e2F3YWl0IHMsYXdhaXQoMCxvLmFCKSgpLGF3YWl0KGFzeW5jKCk9Pihhd2FpdCgwLG8uRG0pKCkpLmRpc3BhdGNoKG8uTWwuU2hvd1N0b3JlZnJvbnQsbnVsbCkpKCl9fSw3NDA1OihlLHQsbik9PntuLmQodCx7TWw6KCk9PnMsRG06KCk9PmEsWGw6KCk9PmYsYUI6KCk9PnV9KTt2YXIgcj1uKDY2NzgpO2NvbnN0IG89ci5BeCYmXCJjb21wbGV0ZVwiIT09ZG9jdW1lbnQucmVhZHlTdGF0ZSYmbmV3IFByb21pc2UoKGU9PmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJyZWFkeXN0YXRlY2hhbmdlXCIsKCgpPT57XCJjb21wbGV0ZVwiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZSYmZSgpfSkpKSk7dmFyIGk9bigxMjEpO3ZhciBzOyFmdW5jdGlvbihlKXtlLlJlZ2lzdGVyU3RvcmVmcm9udFByb3ZpZGVyPVwicmVnaXN0ZXItc3RvcmVmcm9udC1wcm92aWRlclwiLGUuRGVyZWdpc3RlclN0b3JlZnJvbnRQcm92aWRlcj1cImRlcmVnaXN0ZXItc3RvcmVmcm9udC1wcm92aWRlclwiLGUuR2V0U3RvcmVmcm9udFByb3ZpZGVycz1cImdldC1zdG9yZWZyb250LXByb3ZpZGVyc1wiLGUuSGlkZVN0b3JlZnJvbnQ9XCJoaWRlLXN0b3JlZnJvbnRcIixlLkdldFN0b3JlZnJvbnRQcm92aWRlckFwcHM9XCJnZXQtc3RvcmVmcm9udC1wcm92aWRlci1hcHBzXCIsZS5HZXRTdG9yZWZyb250UHJvdmlkZXJMYW5kaW5nUGFnZT1cImdldC1zdG9yZWZyb250LXByb3ZpZGVyLWxhbmRpbmctcGFnZVwiLGUuR2V0U3RvcmVmcm9udFByb3ZpZGVyRm9vdGVyPVwiZ2V0LXN0b3JlZnJvbnQtcHJvdmlkZXItZm9vdGVyXCIsZS5HZXRTdG9yZWZyb250UHJvdmlkZXJOYXZpZ2F0aW9uPVwiZ2V0LXN0b3JlZnJvbnQtcHJvdmlkZXItbmF2aWdhdGlvblwiLGUuTGF1bmNoU3RvcmVmcm9udFByb3ZpZGVyQXBwPVwibGF1bmNoLXN0b3JlZnJvbnQtcHJvdmlkZXItYXBwXCIsZS5TaG93U3RvcmVmcm9udD1cInNob3ctc3RvcmVmcm9udFwiLGUuQ3JlYXRlU3RvcmVmcm9udFdpbmRvdz1cImNyZWF0ZS1zdG9yZWZyb250LXdpbmRvd1wiLGUuU2hvd0hvbWU9XCJzaG93LWhvbWVcIixlLkhpZGVIb21lPVwiaGlkZS1ob21lXCIsZS5Bc3NpZ25Ib21lU2VhcmNoQ29udGV4dD1cImFzc2lnbi1ob21lLXNlYXJjaC1jb250ZXh0XCIsZS5HZXRMZWdhY3lQYWdlcz1cImdldC1sZWdhY3ktcGFnZXNcIixlLkdldExlZ2FjeVdvcmtzcGFjZXM9XCJnZXQtbGVnYWN5LXdvcmtzcGFjZXNcIixlLkdldENvbXB1dGVkUGxhdGZvcm1UaGVtZT1cImdldC1jb21wdXRlZC1wbGF0Zm9ybS10aGVtZVwifShzfHwocz17fSkpO2NvbnN0IGE9ZnVuY3Rpb24oZSl7bGV0IHQ7cmV0dXJuKCk9PntpZighci5zUyl0aHJvdyBuZXcgRXJyb3IoXCJnZXRDaGFubmVsQ2xpZW50IGNhbm5vdCBiZSB1c2VkIG91dHNpZGUgYW4gT3BlbkZpbiBlbnYuIEF2b2lkIHVzaW5nIHRoaXMgbWV0aG9kIGR1cmluZyBwcmUtcmVuZGVyaW5nLlwiKTtyZXR1cm4gdHx8KHQ9KGFzeW5jKCk9Pnthd2FpdCBvO2NvbnN0IG49YXdhaXQgZmluLkludGVyQXBwbGljYXRpb25CdXMuQ2hhbm5lbC5jb25uZWN0KGUpO3JldHVybiBuLm9uRGlzY29ubmVjdGlvbigoYXN5bmMoKT0+e3Q9dm9pZCAwfSkpLG59KSgpLnRoZW4oKGU9PmUpKS5jYXRjaCgobj0+e3Rocm93IHQ9dm9pZCAwLG5ldyBFcnJvcihgZmFpbGVkIHRvIGNvbm5lY3QgdG8gY2hhbm5lbCBwcm92aWRlciAke2V9OiAke259YCl9KSkpLHR9fShcIl9fb2Zfd29ya3NwYWNlX3Byb3RvY29sX19cIiksYz1cImlzTGF1bmNoZWRWaWFMaWJcIixkPWU9Pntjb25zdCB0PW5ldyBVUkwoZSk7cmV0dXJuIHQuc2VhcmNoUGFyYW1zLmFwcGVuZChjLFwidHJ1ZVwiKSx0LnRvU3RyaW5nKCl9LHU9YXN5bmMoKT0+e2lmKCFhd2FpdCgwLGkuSlYpKGkuaVcpKXJldHVybihyLlpLfHwtMT09PW5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIldpblwiKSkmJmF3YWl0IGZpbi5BcHBsaWNhdGlvbi5zdGFydEZyb21NYW5pZmVzdChkKHIuYVcpKSxmaW4uU3lzdGVtLm9wZW5VcmxXaXRoQnJvd3NlcihkKHIuR1gpKX0sZj1hc3luYygpPT4oYXdhaXQgdSgpLGEoKSl9LDU4MDY6KGUsdCxuKT0+e24uZCh0LHtxOTooKT0+cn0pO3ZhciByLG8saSxzPW4oNjY3OCk7IWZ1bmN0aW9uKGUpe2UuV29ya3NwYWNlPVwib3BlbmZpbi1icm93c2VyXCJ9KHJ8fChyPXt9KSksZnVuY3Rpb24oZSl7ZS5SdW5SZXF1ZXN0ZWQ9XCJydW4tcmVxdWVzdGVkXCIsZS5XaW5kb3dPcHRpb25zQ2hhbmdlZD1cIndpbmRvdy1vcHRpb25zLWNoYW5nZWRcIixlLldpbmRvd0Nsb3NlZD1cIndpbmRvdy1jbG9zZWRcIixlLldpbmRvd0NyZWF0ZWQ9XCJ3aW5kb3ctY3JlYXRlZFwifShvfHwobz17fSkpLGZ1bmN0aW9uKGUpe2UuRmluUHJvdG9jb2w9XCJmaW4tcHJvdG9jb2xcIn0oaXx8KGk9e30pKTtzLkFCLHMuQUIsci5Xb3Jrc3BhY2Usci5Xb3Jrc3BhY2V9LDY2Nzg6KGUsdCxuKT0+e3ZhciByO24uZCh0LHtzUzooKT0+byxBeDooKT0+aSxBQjooKT0+YSxvQzooKT0+YyxaSzooKT0+ZCxHWDooKT0+dSxhVzooKT0+Zix1MDooKT0+cH0pLGZ1bmN0aW9uKGUpe2UuTG9jYWw9XCJsb2NhbFwiLGUuRGV2PVwiZGV2XCIsZS5TdGFnaW5nPVwic3RhZ2luZ1wiLGUuUHJvZD1cInByb2RcIn0ocnx8KHI9e30pKTtjb25zdCBvPVwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBmaW4saT0oXCJ1bmRlZmluZWRcIj09dHlwZW9mIHByb2Nlc3N8fHByb2Nlc3MuZW52Py5KRVNUX1dPUktFUl9JRCxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93KSxzPWk/d2luZG93Lm9yaWdpbjpyLkxvY2FsLGE9byYmZmluLm1lLnV1aWQsYz1vJiZmaW4ubWUubmFtZSxkPShvJiZmaW4ubWUuZW50aXR5VHlwZSxcInByb2RcIj09PXIuTG9jYWwpLHU9KHIuRGV2LHIuU3RhZ2luZyxyLlByb2QsXCJmaW5zOi8vc3lzdGVtLWFwcHMvd29ya3NwYWNlXCIpLGY9XCJodHRwczovL2Nkbi5vcGVuZmluLmNvL3dvcmtzcGFjZS83LjIuMi9hcHAuanNvblwiLGw9ZT0+ZS5zdGFydHNXaXRoKFwiaHR0cDovL1wiKXx8ZS5zdGFydHNXaXRoKFwiaHR0cHM6Ly9cIik/ZTpzK2UscD0obChcImh0dHBzOi8vY2RuLm9wZW5maW4uY28vd29ya3NwYWNlLzcuMi4yXCIpLGwoXCJodHRwczovL2Nkbi5vcGVuZmluLmNvL3dvcmtzcGFjZS83LjIuMlwiKSxcInVuZGVmaW5lZFwiIT10eXBlb2YgV09SS1NQQUNFX0RPQ1NfUExBVEZPUk1fVVJMJiZsKFdPUktTUEFDRV9ET0NTX1BMQVRGT1JNX1VSTCksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFdPUktTUEFDRV9ET0NTX0NMSUVOVF9VUkwmJmwoV09SS1NQQUNFX0RPQ1NfQ0xJRU5UX1VSTCksXCI3LjIuMlwiKX0sNjUzMjooZSx0LG4pPT57bi5kKHQse2NrOigpPT5hLGQ5OigpPT5jfSk7dmFyIHIsbz1uKDY2NzgpLGk9bigxMjEpOyFmdW5jdGlvbihlKXtlLkJyb3dzZXI9XCJCcm93c2VyXCIsZS5Ib21lPVwiSG9tZVwiLGUuTm90aWZpY2F0aW9uPVwiTm90aWZpY2F0aW9uXCIsZS5TdG9yZWZyb250PVwiU3RvcmVmcm9udFwiLGUuUGxhdGZvcm09XCJQbGF0Zm9ybVwiLGUuVGhlbWluZz1cIlRoZW1pbmdcIn0ocnx8KHI9e30pKTtjb25zdCBzPWFzeW5jKGUsdCk9Pntjb25zdCBuPXthcGlWZXJzaW9uOnQuYXBpVmVyc2lvbnx8by51MCxjb21wb25lbnROYW1lOmUsY29tcG9uZW50VmVyc2lvbjpvLnUwLC4uLnR9O2Zpbi5TeXN0ZW0ucmVnaXN0ZXJVc2FnZSh7dHlwZTpcIndvcmtzcGFjZS1saWNlbnNpbmdcIixkYXRhOm59KX0sYT1hc3luYyBlPT57aS5PSS51dWlkPT09aS5HaS51dWlkJiZpLk9JLm5hbWU9PT1pLkdpLm5hbWV8fHMoci5Ib21lLGUpfSxjPWFzeW5jIGU9PntzKHIuU3RvcmVmcm9udCxlKX19LDEyMTooZSx0LG4pPT57bi5kKHQse0dpOigpPT5jLE9JOigpPT5kLGlXOigpPT51LEpWOigpPT5mfSk7dmFyIHIsbyxpPW4oNTgwNikscz1uKDY2NzgpOyFmdW5jdGlvbihlKXtlLkhvbWU9XCJvcGVuZmluLWhvbWVcIixlLkRvY2s9XCJvcGVuZmluLWRvY2tcIixlLlN0b3JlZnJvbnQ9XCJvcGVuZmluLXN0b3JlZnJvbnRcIixlLkhvbWVJbnRlcm5hbD1cIm9wZW5maW4taG9tZS1pbnRlcm5hbFwiLGUuQnJvd3Nlck1lbnU9XCJvcGVuZmluLWJyb3dzZXItbWVudVwiLGUuQnJvd3NlckluZGljYXRvcj1cIm9wZW5maW4tYnJvd3Nlci1pbmRpY2F0b3JcIixlLkJyb3dzZXJXaW5kb3c9XCJpbnRlcm5hbC1nZW5lcmF0ZWQtd2luZG93XCJ9KHJ8fChyPXt9KSksZnVuY3Rpb24oZSl7ZS5TaG93bj1cInNob3duXCIsZS5Cb3VuZHNDaGFuZ2VkPVwiYm91bmRzLWNoYW5nZWRcIixlLkxheW91dFJlYWR5PVwibGF5b3V0LXJlYWR5XCIsZS5FbmRVc2VyQm91bmRzQ2hhbmdpbmc9XCJlbmQtdXNlci1ib3VuZHMtY2hhbmdpbmdcIixlLkJsdXJyZWQ9XCJibHVycmVkXCIsZS5DbG9zZVJlcXVlc3RlZD1cImNsb3NlLXJlcXVlc3RlZFwiLGUuRm9jdXNlZD1cImZvY3VzZWRcIixlLlNob3dSZXF1ZXN0ZWQ9XCJzaG93LXJlcXVlc3RlZFwiLGUuVmlld0NyYXNoZWQ9XCJ2aWV3LWNyYXNoZWRcIixlLlZpZXdBdHRhY2hlZD1cInZpZXctYXR0YWNoZWRcIixlLlZpZXdEZXRhY2hlZD1cInZpZXctZGV0YWNoZWRcIixlLlZpZXdQYWdlVGl0bGVVcGRhdGVkPVwidmlldy1wYWdlLXRpdGxlLXVwZGF0ZWRcIixlLlZpZXdEZXN0cm95ZWQ9XCJ2aWV3LWRlc3Ryb3llZFwiLGUuT3B0aW9uc0NoYW5nZWQ9XCJvcHRpb25zLWNoYW5nZWRcIn0ob3x8KG89e30pKTtmdW5jdGlvbiBhKGUpe2lmKCFzLnNTKXRocm93IG5ldyBFcnJvcihcImdldE9GV2luZG93IGNhbiBvbmx5IGJlIHVzZWQgaW4gYW4gT3BlbkZpbiBlbnYuIEF2b2lkIGNhbGxpbmcgdGhpcyBtZXRob2QgZHVyaW5nIHByZS1yZW5kZXJpbmcuXCIpO3JldHVybiBmaW4uV2luZG93LndyYXBTeW5jKGUpfWNvbnN0IGM9e25hbWU6cy5vQyx1dWlkOnMuQUJ9O2NvbnN0IGQ9e25hbWU6ci5Ib21lLHV1aWQ6aS5xOS5Xb3Jrc3BhY2V9LHU9KHIuRG9jayxpLnE5LldvcmtzcGFjZSxyLlN0b3JlZnJvbnQsaS5xOS5Xb3Jrc3BhY2Use25hbWU6aS5xOS5Xb3Jrc3BhY2UsdXVpZDppLnE5LldvcmtzcGFjZX0pO2NvbnN0IGY9ZT0+YShlKS5nZXRPcHRpb25zKCkudGhlbigoKCk9PiEwKSkuY2F0Y2goKCgpPT4hMSkpfSw1MzE2OihlLHQsbik9Pnt2YXIgcixvO24uZCh0LHtEOigpPT5yLHc6KCk9Pm99KSxmdW5jdGlvbihlKXtlLkZldGNoaW5nPVwiZmV0Y2hpbmdcIixlLkZldGNoZWQ9XCJmZXRjaGVkXCIsZS5Db21wbGV0ZT1cImNvbXBsZXRlXCJ9KHJ8fChyPXt9KSksZnVuY3Rpb24oZSl7ZS5BY3RpdmU9XCJhY3RpdmVcIixlLkRlZmF1bHQ9XCJkZWZhdWx0XCJ9KG98fChvPXt9KSl9fSx0PXt9O2Z1bmN0aW9uIG4ocil7dmFyIG89dFtyXTtpZih2b2lkIDAhPT1vKXJldHVybiBvLmV4cG9ydHM7dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07cmV0dXJuIGVbcl0oaSxpLmV4cG9ydHMsbiksaS5leHBvcnRzfW4uZD0oZSx0KT0+e2Zvcih2YXIgciBpbiB0KW4ubyh0LHIpJiYhbi5vKGUscikmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIse2VudW1lcmFibGU6ITAsZ2V0OnRbcl19KX0sbi5vPShlLHQpPT5PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KSxuLnI9ZT0+e1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9O3ZhciByPXt9OygoKT0+e24ucihyKSxuLmQocix7QXBwTWFuaWZlc3RUeXBlOigpPT5wLkwsQnV0dG9uU3R5bGU6KCk9PmYuWkosQ0xJQWN0aW9uOigpPT5sLlB0LENMSUZpbHRlck9wdGlvblR5cGU6KCk9PmwuZWwsQ0xJVGVtcGxhdGU6KCk9PmwueVcsQ29udGFpbmVyVGVtcGxhdGVGcmFnbWVudE5hbWVzOigpPT5mLnA2LEhvbWU6KCk9Pm8sTGVnYWN5OigpPT5lLFByZXNlbnRhdGlvblRlbXBsYXRlRnJhZ21lbnROYW1lczooKT0+Zi5HbyxTZWFyY2hUYWdCYWNrZ3JvdW5kOigpPT51LncsU3RvcmVmcm9udDooKT0+ZCxTdG9yZWZyb250VGVtcGxhdGU6KCk9PnAuVCxUZW1wbGF0ZUZyYWdtZW50VHlwZXM6KCk9PmYuYkl9KTt2YXIgZT17fTtuLnIoZSksbi5kKGUse2dldFBhZ2VzOigpPT5hLGdldFdvcmtzcGFjZXM6KCk9PmN9KTt2YXIgdCxvPW4oMzEzMyk7big2Njc4KSxuKDEyMSk7IWZ1bmN0aW9uKGUpe2UuVGFiQ3JlYXRlZD1cInRhYi1jcmVhdGVkXCIsZS5Db250YWluZXJDcmVhdGVkPVwiY29udGFpbmVyLWNyZWF0ZWRcIixlLkNvbnRhaW5lclJlc2l6ZWQ9XCJjb250YWluZXItcmVzaXplZFwifSh0fHwodD17fSkpO25ldyBNYXA7dmFyIGk7IWZ1bmN0aW9uKGUpe2UuQ3VycmVudFdvcmtzcGFjZUlkPVwiY3VycmVudFdvcmtzcGFjZUlkXCIsZS5MYXN0Rm9jdXNlZEJyb3dzZXJXaW5kb3c9XCJsYXN0Rm9jdXNlZEJyb3dzZXJXaW5kb3dcIixlLk1hY2hpbmVOYW1lPVwibWFjaGluZU5hbWVcIixlLk5ld1RhYlBhZ2VMYXlvdXQ9XCJOZXdUYWJQYWdlTGF5b3V0XCIsZS5OZXdUYWJQYWdlU29ydD1cIk5ld1RhYlBhZ2VTb3J0XCJ9KGl8fChpPXt9KSk7dmFyIHM9big3NDA1KTtjb25zdCBhPSgpPT5hc3luYyBmdW5jdGlvbigpe3JldHVybihhd2FpdCgwLHMuRG0pKCkpLmRpc3BhdGNoKHMuTWwuR2V0TGVnYWN5UGFnZXMsdm9pZCAwKX0oKSxjPSgpPT4oYXN5bmMoKT0+KGF3YWl0KDAscy5EbSkoKSkuZGlzcGF0Y2gocy5NbC5HZXRMZWdhY3lXb3Jrc3BhY2VzLHZvaWQgMCkpKCk7dmFyIGQ9bigzMTcpLHU9bigzMjk4KSxmPW4oMjEwOSksbD1uKDM3NTgpLHA9big2MTE0KX0pKCksbW9kdWxlLmV4cG9ydHM9cn0pKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiLCJpbXBvcnQgeyBBcHAgfSBmcm9tIFwiQG9wZW5maW4vd29ya3NwYWNlXCI7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QXBwcygpOiBQcm9taXNlPEFwcFtdPiB7XHJcbiAgICByZXR1cm4gW2V4cGVyb0FwcCwgbm90aWZpY2F0aW9uU3R1ZGlvLCBwcm9jZXNzTWFuYWdlciwgZGV2ZWxvcGVyQ29udGVudF07XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBleHBlcm9BcHA6QXBwID0ge1xyXG4gICAgYXBwSWQ6IFwiZXhwZXJvLWNvbXBhbnktbmV3c1wiLFxyXG4gICAgdGl0bGU6IFwiR2F0ZXdheSAtIENvbXBhbnkgTmV3c1wiLFxyXG4gICAgbWFuaWZlc3Q6IFwiaHR0cHM6Ly9vcGVuZmluLWlleC5leHBlcm9sYWJzLmNvbS9vcGVuZmluL21hbmlmZXN0cy9jb21wYW55LW5ld3MuanNvblwiLFxyXG4gICAgbWFuaWZlc3RUeXBlOiBcInZpZXdcIixcclxuICAgIGljb25zOiBbXHJcbiAgICAgIHtcclxuICAgICAgICBzcmM6IFwiaHR0cHM6Ly9vcGVuZmluLWlleC5leHBlcm9sYWJzLmNvbS9mYXZpY29uLmljb1wiXHJcbiAgICAgIH1cclxuICAgIF0sXHJcbiAgICBjb250YWN0RW1haWw6IFwiY29udGFjdEBleGFtcGxlLmNvbVwiLFxyXG4gICAgc3VwcG9ydEVtYWlsOiBcInN1cHBvcnRAZXhhbXBsZS5jb21cIixcclxuICAgIHB1Ymxpc2hlcjogXCJFeHBlcm9cIixcclxuICAgIGludGVudHM6IFtdLFxyXG4gICAgaW1hZ2VzOiBbe1xyXG4gICAgICBzcmM6XCJodHRwOi8vbG9jYWxob3N0OjgwODAvaW1hZ2VzL3ByZXZpZXdzL2V4cGVyby1uZXdzLXZpZXcucG5nXCJcclxuICAgIH1dLFxyXG4gICAgdGFnczpbXCJleHBlcm9cIiwgXCJ2aWV3XCIsIFwiaW50ZXJvcFwiXVxyXG4gIH07XHJcblxyXG4gIGV4cG9ydCBjb25zdCBub3RpZmljYXRpb25TdHVkaW86QXBwID0gIHtcclxuICAgIGFwcElkOiBcIm5vdGlmaWNhdGlvbnMtZ2VuZXJhdG9yXCIsXHJcbiAgICB0aXRsZTogXCJPcGVuRmluIE5vdGlmaWNhdGlvbnMgU3R1ZGlvXCIsXHJcbiAgICBtYW5pZmVzdFR5cGU6IFwibWFuaWZlc3RcIixcclxuICAgIGRlc2NyaXB0aW9uOiBcIk5vdGlmaWNhdGlvbnMgU3R1ZGlvOiBUaGlzIGlzIE9wZW5GaW4ncyB0b29sIGZvciBkZW1vbnN0cmF0aW5nIHRoZSBwb3dlciBvZiBvdXIgTm90aWZpY2F0aW9uIENlbnRlci4gVXNlIGl0IHRvIGNyZWF0ZSBsb2NhbCBub3RpZmljYXRpb25zIG9yIHVzZSBzb21lIG9mIHRoZSBleGFtcGxlcyBzaG93biBpbiBvdXIgQ2F0YWxvZy4gRXhwZXJpbWVudCB3aXRoIG91ciBmZWF0dXJlcyBhbmQgc2VlIHRoZSBwb3dlciB0aGF0IE9wZW5GaW4gTm90aWZpY2F0aW9uIENlbnRlciBjYW4gYnJpbmcgdG8geW91ciBhcHBsaWNhdGlvbnMuXCIsXHJcbiAgICBtYW5pZmVzdDogXCJodHRwczovL2Nkbi5vcGVuZmluLmNvL3N0dWRpby9ub3RpZmljYXRpb24vYXBwLmpzb25cIixcclxuICAgIGljb25zOiBbXHJcbiAgICAgIHsgc3JjOiBcImh0dHBzOi8vY2RuLm9wZW5maW4uY28vZGVtb3Mvbm90aWZpY2F0aW9ucy9nZW5lcmF0b3IvaW1hZ2VzL2ljb24tYmx1ZS5wbmdcIn1cclxuICAgIF0sXHJcbiAgICBjb250YWN0RW1haWw6IFwiY29udGFjdEBleGFtcGxlLmNvbVwiLFxyXG4gICAgc3VwcG9ydEVtYWlsOiBcInN1cHBvcnRAZXhhbXBsZS5jb21cIixcclxuICAgIHB1Ymxpc2hlcjogXCJPcGVuRmluXCIsXHJcbiAgICBpbnRlbnRzOiBbXSxcclxuICAgIGltYWdlczogW3tcclxuICAgICAgc3JjOlwiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2ltYWdlcy9wcmV2aWV3cy9vcGVuZmluLW5vdGlmaWNhdGlvbi1zdHVkaW8ucG5nXCJcclxuICAgIH1dLFxyXG4gICAgdGFnczpbXCJoZXJvXCIsIFwibWFuaWZlc3RcIiwgXCJ0b29sc1wiXVxyXG4gIH07XHJcblxyXG4gIGV4cG9ydCBjb25zdCBwcm9jZXNzTWFuYWdlcjpBcHAgPSB7XHJcbiAgICBhcHBJZDogXCJvcGVuZmluLXByb2Nlc3MtbWFuYWdlclwiLFxyXG4gICAgdGl0bGU6IFwiT3BlbkZpbiBQcm9jZXNzIE1hbmFnZXJcIixcclxuICAgIG1hbmlmZXN0VHlwZTogXCJtYW5pZmVzdFwiLFxyXG4gICAgZGVzY3JpcHRpb246IFwiUHJvY2VzcyBNYW5hZ2VyOiBUaGlzIGlzIE9wZW5GaW4ncyB0b29sIGZvciBoZWxwaW5nIGRldmVsb3BlcnMgYnVpbGQgT3BlbkZpbiBBcHBsaWNhdGlvbnMuIEl0IGxldHMgeW91IHNlZSB0aGUgT3BlbkZpbiBhcHBsaWNhdGlvbnMgdGhhdCBhcmUgcnVubmluZywgdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBhcHBsaWNhdGlvbnMgKG1lbW9yeSBhbmQgY3B1KSBhbmQgZWFzeSBhY2Nlc3MgdG8gdGhlIGRldiB0b29scyBmb3IgdGhlIFdpbmRvd3Mgb2YgeW91ciBhcHBsaWNhdGlvbi5cIixcclxuICAgIG1hbmlmZXN0OiBcImh0dHBzOi8vY2RuLm9wZW5maW4uY28vcHJvY2Vzcy1tYW5hZ2VyL2FwcC5qc29uXCIsXHJcbiAgICBpY29uczogW1xyXG4gICAgICB7IHNyYzogXCJodHRwczovL2Nkbi5vcGVuZmluLmNvL3Byb2Nlc3MtbWFuYWdlci9pbWcvcHJvYy1tZ3ItaWNvbi5wbmdcIiB9XHJcbiAgICBdLFxyXG4gICAgY29udGFjdEVtYWlsOiBcImNvbnRhY3RAZXhhbXBsZS5jb21cIixcclxuICAgIHN1cHBvcnRFbWFpbDogXCJzdXBwb3J0QGV4YW1wbGUuY29tXCIsXHJcbiAgICBwdWJsaXNoZXI6IFwiT3BlbkZpblwiLFxyXG4gICAgaW50ZW50czogW10sXHJcbiAgICBpbWFnZXM6IFt7XHJcbiAgICAgIHNyYzpcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9pbWFnZXMvcHJldmlld3Mvb3BlbmZpbi1wcm9jZXNzLW1hbmFnZXIucG5nXCJcclxuICAgIH1dLFxyXG4gICAgdGFnczpbXCJoZXJvXCIsIFwibWFuaWZlc3RcIiwgXCJ0b29sc1wiXVxyXG4gIH07XHJcblxyXG4gIGV4cG9ydCBjb25zdCBkZXZlbG9wZXJDb250ZW50OiBBcHAgPSB7XHJcbiAgICBhcHBJZDogXCJvcGVuZmluLWRldmVsb3Blci1wYWdlXCIsXHJcbiAgICB0aXRsZTogXCJPcGVuRmluIERldmVsb3BlciBEb2NzXCIsXHJcbiAgICBtYW5pZmVzdFR5cGU6IFwic25hcHNob3RcIixcclxuICAgIGRlc2NyaXB0aW9uOiBcIlNob3dzIGEgY29sbGVjdGlvbiBvZiBPcGVuRmluIGRldmVsb3BlciBwYWdlcyBhbmQgcHJvdmlkZXMgYW4gZXhhbXBsZSBvZiBob3cgeW91IGNhbiBwcmVzZW50IGEgcHJlLWJ1aWx0IHBhZ2UgYXMgYSBsYXVuY2ggdGFyZ2V0IGluIE9wZW5GaW4gSG9tZS4gVGhpcyBlbnRyeSBoYXMgYSBtYW5pZmVzdCB0eXBlIG9mICdzbmFwc2hvdCcuXCIsXHJcbiAgICBtYW5pZmVzdDogXCJodHRwOi8vbG9jYWxob3N0OjgwODAvc25hcHNob3QuanNvblwiLFxyXG4gICAgaWNvbnM6IFtcclxuICAgICAgeyBzcmM6IFwiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2ltYWdlcy9pY29uLWJsdWUucG5nXCIgfVxyXG4gICAgXSxcclxuICAgIGNvbnRhY3RFbWFpbDogXCJjb250YWN0QGV4YW1wbGUuY29tXCIsXHJcbiAgICBzdXBwb3J0RW1haWw6IFwic3VwcG9ydEBleGFtcGxlLmNvbVwiLFxyXG4gICAgcHVibGlzaGVyOiBcIk9wZW5GaW5cIixcclxuICAgIGludGVudHM6IFtdLFxyXG4gICAgaW1hZ2VzOiBbe1xyXG4gICAgICBzcmM6XCJodHRwOi8vbG9jYWxob3N0OjgwODAvaW1hZ2VzL3ByZXZpZXdzL29wZW5maW4tcGFnZS1kb2NzLnBuZ1wiXHJcbiAgICB9XSxcclxuICAgIHRhZ3M6W1wicGFnZVwiXVxyXG4gIH07IiwiaW1wb3J0IHtcclxuICBTdG9yZWZyb250LCBcclxuICBBcHAsXHJcbiAgU3RvcmVmcm9udExhbmRpbmdQYWdlLFxyXG4gIFN0b3JlZnJvbnROYXZpZ2F0aW9uU2VjdGlvbixcclxuICBTdG9yZWZyb250Rm9vdGVyLFxyXG4gIFN0b3JlZnJvbnRQcm92aWRlcixcclxuICBTdG9yZWZyb250VGVtcGxhdGUsXHJcbn0gZnJvbSBcIkBvcGVuZmluL3dvcmtzcGFjZVwiO1xyXG5pbXBvcnQgeyBnZXRDdXJyZW50U3luYyB9IGZyb20gJ0BvcGVuZmluL3dvcmtzcGFjZS1wbGF0Zm9ybSc7XHJcbmltcG9ydCB7XHJcbiAgZ2V0QXBwcyxcclxuICBleHBlcm9BcHAsXHJcbiAgbm90aWZpY2F0aW9uU3R1ZGlvLFxyXG4gIHByb2Nlc3NNYW5hZ2VyLFxyXG4gIGRldmVsb3BlckNvbnRlbnQsXHJcbn0gZnJvbSBcIi4vYXBwc1wiO1xyXG5cclxuY29uc3QgcHJvdmlkZXJJZCA9IFwicmVnaXN0ZXItd2l0aC1zdG9yZS1iYXNpY1wiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyKCkge1xyXG4gIGNvbnNvbGUubG9nKFwiSW5pdGlhbGlzaW5nIHRoZSBzdG9yZWZyb250IHByb3ZpZGVyLlwiKTtcclxuICBsZXQgcHJvdmlkZXIgPSBhd2FpdCBnZXRTdG9yZVByb3ZpZGVyKCk7XHJcbiAgdHJ5IHtcclxuICAgIGF3YWl0IFN0b3JlZnJvbnQucmVnaXN0ZXIocHJvdmlkZXIpO1xyXG4gICAgY29uc29sZS5sb2coXCJTdG9yZWZyb250IHByb3ZpZGVyIGluaXRpYWxpc2VkLlwiKTtcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgIFwiQW4gZXJyb3Igd2FzIGVuY291bnRlcmVkIHdoaWxlIHRyeWluZyB0byByZWdpc3RlciB0aGUgY29udGVudCBzdG9yZSBwcm92aWRlclwiLFxyXG4gICAgICBlcnJcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVyZWdpc3RlcigpIHtcclxuICByZXR1cm4gU3RvcmVmcm9udC5kZXJlZ2lzdGVyKHByb3ZpZGVySWQpO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2hvdygpIHtcclxuICBjb25zb2xlLmxvZyhcIlNob3dpbmcgdGhlIHN0b3JlLlwiKTtcclxuICByZXR1cm4gU3RvcmVmcm9udC5zaG93KCk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBoaWRlKCkge1xyXG4gIGNvbnNvbGUubG9nKFwiSGlkaW5nIHRoZSBzdG9yZS5cIik7XHJcbiAgcmV0dXJuIFN0b3JlZnJvbnQuaGlkZSgpO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBnZXRTdG9yZVByb3ZpZGVyKCk6IFByb21pc2U8U3RvcmVmcm9udFByb3ZpZGVyPiB7XHJcbiAgY29uc29sZS5sb2coXCJHZXR0aW5nIHRoZSBzdG9yZSBwcm92aWRlci5cIik7XHJcbiAgXHJcbiAgcmV0dXJuIHtcclxuICAgIGlkOiBwcm92aWRlcklkLFxyXG4gICAgdGl0bGU6IFwiQmFzaWMgU3RvcmVcIixcclxuICAgIGljb246IFwiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2Zhdmljb24uaWNvXCIsXHJcbiAgICBnZXROYXZpZ2F0aW9uOiBnZXROYXZpZ2F0aW9uLFxyXG4gICAgZ2V0TGFuZGluZ1BhZ2U6IGdldExhbmRpbmdQYWdlLFxyXG4gICAgZ2V0Rm9vdGVyOiBnZXRGb290ZXIsXHJcbiAgICBnZXRBcHBzLFxyXG4gICAgbGF1bmNoQXBwOiBhc3luYyAoYXBwOkFwcCk9PiB7XHJcbiAgICAgIGxldCBwbGF0Zm9ybSA9IGdldEN1cnJlbnRTeW5jKCk7XHJcbiAgICAgIGF3YWl0IHBsYXRmb3JtLmxhdW5jaEFwcCh7YXBwfSk7XHJcbiAgICB9LFxyXG4gIH07XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldE5hdmlnYXRpb24oKTogUHJvbWlzZTxcclxuICBbU3RvcmVmcm9udE5hdmlnYXRpb25TZWN0aW9uPywgU3RvcmVmcm9udE5hdmlnYXRpb25TZWN0aW9uP11cclxuPiB7XHJcbiAgY29uc29sZS5sb2coXCJTaG93aW5nIHRoZSBzdG9yZSBuYXZpZ2F0aW9uLlwiKTtcclxuXHJcbiAgbGV0IG5hdmlnYXRpb25TZWN0aW9uczogW1xyXG4gICAgU3RvcmVmcm9udE5hdmlnYXRpb25TZWN0aW9uPyxcclxuICAgIFN0b3JlZnJvbnROYXZpZ2F0aW9uU2VjdGlvbj9cclxuICBdID0gW1xyXG4gICAge1xyXG4gICAgICBpZDogXCJhcHBzXCIsXHJcbiAgICAgIHRpdGxlOiBcIkFwcHNcIixcclxuICAgICAgaXRlbXM6IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICBpZDogXCJ2aWV3XCIsXHJcbiAgICAgICAgICB0aXRsZTogXCJWaWV3c1wiLFxyXG4gICAgICAgICAgdGVtcGxhdGVJZDogU3RvcmVmcm9udFRlbXBsYXRlLkFwcEdyaWQsXHJcbiAgICAgICAgICB0ZW1wbGF0ZURhdGE6IHtcclxuICAgICAgICAgICAgYXBwczogW2V4cGVyb0FwcF0sXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgaWQ6IFwicGFnZVwiLFxyXG4gICAgICAgICAgdGl0bGU6IFwiUGFnZXNcIixcclxuICAgICAgICAgIHRlbXBsYXRlSWQ6IFN0b3JlZnJvbnRUZW1wbGF0ZS5BcHBHcmlkLFxyXG4gICAgICAgICAgdGVtcGxhdGVEYXRhOiB7XHJcbiAgICAgICAgICAgIGFwcHM6IFtkZXZlbG9wZXJDb250ZW50XSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBpZDogXCJtYW5pZmVzdFwiLFxyXG4gICAgICAgICAgdGl0bGU6IFwiV2ViIEFwcHNcIixcclxuICAgICAgICAgIHRlbXBsYXRlSWQ6IFN0b3JlZnJvbnRUZW1wbGF0ZS5BcHBHcmlkLFxyXG4gICAgICAgICAgdGVtcGxhdGVEYXRhOiB7XHJcbiAgICAgICAgICAgIGFwcHM6IFtub3RpZmljYXRpb25TdHVkaW8sIHByb2Nlc3NNYW5hZ2VyXSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgXSxcclxuICAgIH0sXHJcbiAgXTtcclxuXHJcbiAgcmV0dXJuIG5hdmlnYXRpb25TZWN0aW9ucztcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2V0TGFuZGluZ1BhZ2UoKTogUHJvbWlzZTxTdG9yZWZyb250TGFuZGluZ1BhZ2U+IHtcclxuICBjb25zb2xlLmxvZyhcIkdldHRpbmcgdGhlIHN0b3JlIGxhbmRpbmcgcGFnZS5cIik7XHJcblxyXG4gIGxldCBsYW5kaW5nUGFnZTogU3RvcmVmcm9udExhbmRpbmdQYWdlID0ge1xyXG4gICAgaGVybzoge1xyXG4gICAgICB0aXRsZTogXCJDdXN0b20gSGVybyBUaXRsZVwiLFxyXG4gICAgICBkZXNjcmlwdGlvbjpcclxuICAgICAgICBcIlRoaXMgaXMgYSBkZW1vbnN0cmF0aW9uIG9mIHRoZSBoZXJvIHNlY3Rpb24gdGhhdCB5b3UgY2FuIGNvbmZpZ3VyZSBmb3IgeW91ciBzdG9yZS5cIixcclxuICAgICAgY3RhOiB7XHJcbiAgICAgICAgaWQ6IFwiaGVyby0xXCIsXHJcbiAgICAgICAgdGl0bGU6IFwiSGVybyBBcHBzIVwiLFxyXG4gICAgICAgIHRlbXBsYXRlSWQ6IFN0b3JlZnJvbnRUZW1wbGF0ZS5BcHBHcmlkLFxyXG4gICAgICAgIHRlbXBsYXRlRGF0YToge1xyXG4gICAgICAgICAgYXBwczogW25vdGlmaWNhdGlvblN0dWRpbywgcHJvY2Vzc01hbmFnZXJdLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0sXHJcbiAgICAgIGltYWdlOiB7XHJcbiAgICAgICAgc3JjOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9pbWFnZXMvc3VwZXJoZXJvLXVuc3BsYXNoLmpwZ1wiLFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIHRvcFJvdzoge1xyXG4gICAgICB0aXRsZTogXCJDdXN0b20gVG9wIFJvdyBDb250ZW50XCIsXHJcbiAgICAgIGl0ZW1zOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgaWQ6IFwidG9wLXJvdy1pdGVtLTFcIixcclxuICAgICAgICAgIHRpdGxlOiBcIkV4cGVyb1wiLFxyXG4gICAgICAgICAgZGVzY3JpcHRpb246XHJcbiAgICAgICAgICAgIFwiQSBjb2xsZWN0aW9uIG9mIGV4YW1wbGUgdmlld3MgZnJvbSBFeHBlcm8gc2hvd2luZyB0aGUgcG93ZXIgb2YgaW50ZXJvcCBhbmQgY29udGV4dCBzaGFyaW5nLlwiLFxyXG4gICAgICAgICAgaW1hZ2U6IHtcclxuICAgICAgICAgICAgc3JjOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9pbWFnZXMvY29kaW5nLTEtdW5zcGxhc2guanBnXCIsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgdGVtcGxhdGVJZDogU3RvcmVmcm9udFRlbXBsYXRlLkFwcEdyaWQsXHJcbiAgICAgICAgICB0ZW1wbGF0ZURhdGE6IHtcclxuICAgICAgICAgICAgYXBwczogW2V4cGVyb0FwcF0sXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgaWQ6IFwidG9wLXJvdy1pdGVtLTJcIixcclxuICAgICAgICAgIHRpdGxlOiBcIkRldiBUb29sc1wiLFxyXG4gICAgICAgICAgZGVzY3JpcHRpb246XHJcbiAgICAgICAgICAgIFwiQSBjb2xsZWN0aW9uIG9mIGRldmVsb3BlciB0b29scyB0aGF0IGNhbiBhaWQgd2l0aCBidWlsZGluZyBhbmQgZGVidWdnaW5nIE9wZW5GaW4gYXBwbGljYXRpb25zLlwiLFxyXG4gICAgICAgICAgaW1hZ2U6IHtcclxuICAgICAgICAgICAgc3JjOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9pbWFnZXMvY29kaW5nLTItdW5zcGxhc2guanBnXCIsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgdGVtcGxhdGVJZDogU3RvcmVmcm9udFRlbXBsYXRlLkFwcEdyaWQsXHJcbiAgICAgICAgICB0ZW1wbGF0ZURhdGE6IHtcclxuICAgICAgICAgICAgYXBwczogW25vdGlmaWNhdGlvblN0dWRpbywgcHJvY2Vzc01hbmFnZXJdLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICBdLFxyXG4gICAgfSxcclxuICAgIG1pZGRsZVJvdzoge1xyXG4gICAgICB0aXRsZTpcclxuICAgICAgICBcIkEgY29sbGVjdGlvbiBvZiBzaW1wbGUgdmlld3MgdGhhdCBzaG93IGhvdyB0byBzaGFyZSBjb250ZXh0IHVzaW5nIHRoZSBJbnRlcm9wIEFQSS5cIixcclxuICAgICAgYXBwczogW2V4cGVyb0FwcF0sXHJcbiAgICB9LFxyXG4gICAgYm90dG9tUm93OiB7XHJcbiAgICAgIHRpdGxlOiBcIlF1aWNrIEFjY2Vzc1wiLFxyXG4gICAgICBpdGVtczogW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgIGlkOiBcImJvdHRvbS1yb3ctaXRlbS0xXCIsXHJcbiAgICAgICAgICB0aXRsZTogXCJWaWV3c1wiLFxyXG4gICAgICAgICAgZGVzY3JpcHRpb246XHJcbiAgICAgICAgICAgIFwiQSBjb2xsZWN0aW9uIG9mIHZpZXdzIG1hZGUgYXZhaWxhYmxlIHRocm91Z2ggb3VyIGNhdGFsb2cuXCIsXHJcbiAgICAgICAgICBpbWFnZToge1xyXG4gICAgICAgICAgICBzcmM6IFwiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2ltYWdlcy9jb2RpbmctNC11bnNwbGFzaC5qcGdcIixcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgICB0ZW1wbGF0ZUlkOiBTdG9yZWZyb250VGVtcGxhdGUuQXBwR3JpZCxcclxuICAgICAgICAgIHRlbXBsYXRlRGF0YToge1xyXG4gICAgICAgICAgICBhcHBzOiBbZXhwZXJvQXBwXSxcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBpZDogXCJib3R0b20tcm93LWl0ZW0tMlwiLFxyXG4gICAgICAgICAgdGl0bGU6IFwiV2ViIEFwcHNcIixcclxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkEgY29sbGVjdGlvbiBvZiB3ZWIgYXBwcyBidWlsdCB1c2luZyBPcGVuRmluLlwiLFxyXG4gICAgICAgICAgaW1hZ2U6IHtcclxuICAgICAgICAgICAgc3JjOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9pbWFnZXMvY29kaW5nLTUtdW5zcGxhc2guanBnXCIsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgdGVtcGxhdGVJZDogU3RvcmVmcm9udFRlbXBsYXRlLkFwcEdyaWQsXHJcbiAgICAgICAgICB0ZW1wbGF0ZURhdGE6IHtcclxuICAgICAgICAgICAgYXBwczogW25vdGlmaWNhdGlvblN0dWRpbywgcHJvY2Vzc01hbmFnZXJdLFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICBdLFxyXG4gICAgfSxcclxuICB9O1xyXG5cclxuICByZXR1cm4gbGFuZGluZ1BhZ2U7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldEZvb3RlcigpOiBQcm9taXNlPFN0b3JlZnJvbnRGb290ZXI+IHtcclxuICBjb25zb2xlLmxvZyhcIkdldHRpbmcgdGhlIHN0b3JlIGZvb3Rlci5cIik7XHJcbiAgcmV0dXJuIHtcclxuICAgIGxvZ286IHsgc3JjOiBcImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9mYXZpY29uLmljb1wiLCBzaXplOiBcIjMyXCIgfSxcclxuICAgIHRleHQ6IFwiV2VsY29tZSB0byB0aGUgT3BlbkZpbiBTYW1wbGUgRm9vdGVyXCIsXHJcbiAgICBsaW5rczogW1xyXG4gICAgICB7XHJcbiAgICAgICAgdGl0bGU6IFwiR2l0aHViXCIsXHJcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vZ2l0aHViLmNvbS9idWlsdC1vbi1vcGVuZmluL3dvcmtzcGFjZS1zdGFydGVyXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIHtcclxuICAgICAgICB0aXRsZTogXCJZb3VUdWJlXCIsXHJcbiAgICAgICAgdXJsOiBcImh0dHBzOi8vd3d3LnlvdXR1YmUuY29tL3VzZXIvT3BlbkZpblRlY2hcIixcclxuICAgICAgfSxcclxuICAgIF0sXHJcbiAgfTtcclxufVxyXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiXHJcbmltcG9ydCB7IGluaXQgYXMgd29ya3NwYWNlUGxhdGZvcm1Jbml0IH0gZnJvbSAnQG9wZW5maW4vd29ya3NwYWNlLXBsYXRmb3JtJztcclxuaW1wb3J0IHsgcmVnaXN0ZXIsIGRlcmVnaXN0ZXIsIHNob3csIGhpZGUgfSBmcm9tICcuL3N0b3JlJztcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGluaXQoKSB7XHJcbiAgYXdhaXQgd29ya3NwYWNlUGxhdGZvcm1Jbml0KHtcclxuICAgIGJyb3dzZXI6IHt9XHJcbiAgfSk7XHJcbiAgbGV0IHJlZ2lzdGVyU3RvcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlZ2lzdGVyXCIpO1xyXG4gIGxldCBzaG93U3RvcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNob3dcIik7XHJcbiAgbGV0IGhpZGVTdG9yZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaGlkZVwiKTtcclxuICBsZXQgZGVyZWdpc3RlclN0b3JlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZXJlZ2lzdGVyXCIpO1xyXG5cclxuICByZWdpc3RlclN0b3JlLm9uY2xpY2sgPSBhc3luYyAoKT0+IHtcclxuICAgIGF3YWl0IHJlZ2lzdGVyKCk7XHJcbiAgICBzaG93U3RvcmUuc3R5bGUuZGlzcGxheSA9IFwidW5zZXRcIjtcclxuICAgIGhpZGVTdG9yZS5zdHlsZS5kaXNwbGF5ID0gXCJ1bnNldFwiO1xyXG4gICAgZGVyZWdpc3RlclN0b3JlLnN0eWxlLmRpc3BsYXkgPSBcInVuc2V0XCI7XHJcbiAgICByZWdpc3RlclN0b3JlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICB9O1xyXG5cclxuICBkZXJlZ2lzdGVyU3RvcmUub25jbGljayA9IGFzeW5jICgpPT4ge1xyXG4gICAgc2hvd1N0b3JlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIGhpZGVTdG9yZS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICBkZXJlZ2lzdGVyU3RvcmUuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgcmVnaXN0ZXJTdG9yZS5zdHlsZS5kaXNwbGF5ID0gXCJ1bnNldFwiO1xyXG4gICAgYXdhaXQgZGVyZWdpc3RlcigpO1xyXG4gIH07XHJcblxyXG4gIHNob3dTdG9yZS5vbmNsaWNrID0gYXN5bmMgKCk9PiB7XHJcbiAgICBhd2FpdCBzaG93KCk7XHJcbiAgfTtcclxuXHJcbiAgaGlkZVN0b3JlLm9uY2xpY2sgPSBhc3luYyAoKT0+IHtcclxuICAgIGF3YWl0IGhpZGUoKTtcclxuICB9O1xyXG59XHJcblxyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGFzeW5jICgpID0+IHtcclxuICBhd2FpdCBpbml0KCk7XHJcbn0pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==