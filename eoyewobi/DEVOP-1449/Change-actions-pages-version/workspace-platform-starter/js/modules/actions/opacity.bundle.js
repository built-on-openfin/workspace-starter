var t;function o(t){return null==t}!function(t){t.CustomButton="CustomButton",t.StoreCustomButton="StoreCustomButton",t.CustomDropdownItem="CustomDropdownItem",t.GlobalContextMenu="GlobalContextMenu",t.ViewTabContextMenu="ViewTabContextMenu",t.PageTabContextMenu="PageTabContextMenu",t.SaveButtonContextMenu="SaveButtonContextMenu",t.API="API"}(t||(t={}));const e={actions:new class{async initialize(t,o,e){this._logger=o("OpacityActions"),this._helpers=e}async get(e){const n={};return n["change-opacity"]=async n=>{if(this._helpers&&n.callerType===t.CustomButton){this._logger?.info("Change Opacity Triggered");const t=e.Browser.wrapSync(n.windowIdentity),a=await t.openfinWindow.getOptions();if("platform"!==a.workspacePlatform.windowType){const e=a.workspacePlatform.toolbarOptions;if(await t.openfinWindow.updateOptions({opacity:.7}),!o(e)){const o=await this._helpers.updateToolbarButtons(e.buttons,n.customData.sourceId,n.customData.replacementId);await t.replaceToolbarOptions({buttons:o})}}}},n["restore-opacity"]=async n=>{if(this._helpers&&n.callerType===t.CustomButton){this._logger?.info("Restore Opacity Triggered");const t=e.Browser.wrapSync(n.windowIdentity),a=await t.openfinWindow.getOptions();if("platform"!==a.workspacePlatform.windowType){const e=a.workspacePlatform.toolbarOptions;if(await t.openfinWindow.updateOptions({opacity:1}),!o(e)){const o=await this._helpers.updateToolbarButtons(e.buttons,n.customData.sourceId,n.customData.replacementId);await t.replaceToolbarOptions({buttons:o})}}}},n}}};export{e as entryPoints};
//# sourceMappingURL=opacity.bundle.js.map