{"version":3,"file":"console.bundle.js","mappings":"AAGO,MAAMA,EAAgE,CAC5EC,IAAK,ICGC,MAkBC,gBAAMC,CACZC,EACAC,EACAC,GAEAC,KAAKC,eAAiBJ,EAAWK,MAAMC,eAAiB,CAAC,OAAQ,OAAQ,QAAS,QAAS,QAC5F,CAUO,GAAAR,CACNS,EACAC,EACAC,EACAC,KACGC,GAECR,KAAKC,gBAAgBQ,SAASH,KACjCN,KAAKU,YAAYL,EAAOD,GACxBO,QAAQL,GAAOC,KAAYC,GAE7B,CAOQ,aAAAI,CAAcC,GAGrB,MAAO,OADkB,IAAIA,GAAKC,OAAO,CAACC,EAAKC,IAASA,EAAKC,WAAW,KAAOF,GAAO,GAAKA,GAAM,GAChE,gBAClC,CAOQ,WAAAL,CAAYL,EAAeD,GAClC,MAAMc,EAAmB,GAAGb,KAASD,IACjCJ,KAAKmB,qBAAuBD,IAC/BlB,KAAKmB,mBAAqBD,EACtBlB,KAAKmB,oBACRR,QAAQS,WAELf,EAAMgB,OAAS,GAClBV,QAAQN,MACP,KAAKA,MAAUD,IACf,+BAA+BJ,KAAKY,cACnCP,+EAED,+BAA+BL,KAAKY,cACnCR,kGAKL,W","sources":["webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/log/console/index.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/log/console/log.ts"],"sourcesContent":["import type { ModuleImplementation, ModuleTypes } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { ConsoleLogProvider } from \"./log\";\n\nexport const entryPoints: { [type in ModuleTypes]?: ModuleImplementation } = {\n\tlog: new ConsoleLogProvider()\n};\n","import type { LoggerCreator, LogLevel, LogProvider } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type { ModuleDefinition, ModuleHelpers } from \"workspace-platform-starter/shapes/module-shapes\";\nimport type { ConsoleLogOptions } from \"./shapes\";\n\n/**\n * Implement the log provider using the console.\n */\nexport class ConsoleLogProvider implements LogProvider<ConsoleLogOptions> {\n\t/**\n\t * The levels of logging to include.\n\t */\n\tprivate _includeLevels?: LogLevel[];\n\n\t/**\n\t * The last group identity output.\n\t */\n\tprivate _lastGroupIdentity?: string;\n\n\t/**\n\t * Initialize the module.\n\t * @param definition The definition of the module from configuration include custom options.\n\t * @param loggerCreator For logging entries.\n\t * @param helpers Helper methods for the module to interact with the application core.\n\t * @returns Nothing.\n\t */\n\tpublic async initialize(\n\t\tdefinition: ModuleDefinition<ConsoleLogOptions>,\n\t\tloggerCreator: LoggerCreator,\n\t\thelpers: ModuleHelpers\n\t): Promise<void> {\n\t\tthis._includeLevels = definition.data?.includeLevels ?? [\"info\", \"warn\", \"error\", \"debug\", \"trace\"];\n\t}\n\n\t/**\n\t * Log data.\n\t * @param identity The identity sending the message.\n\t * @param group The group sending the log message.\n\t * @param level The level of the message to log.\n\t * @param message The message to log.\n\t * @param optionalParams Optional parameters for details.\n\t */\n\tpublic log(\n\t\tidentity: string,\n\t\tgroup: string,\n\t\tlevel: LogLevel,\n\t\tmessage: unknown,\n\t\t...optionalParams: unknown[]\n\t): void {\n\t\tif (this._includeLevels?.includes(level)) {\n\t\t\tthis.handleGroup(group, identity);\n\t\t\tconsole[level](message, ...optionalParams);\n\t\t}\n\t}\n\n\t/**\n\t * Convert a string to a color.\n\t * @param str The string to convert.\n\t * @returns The color.\n\t */\n\tprivate stringToColor(str: string): string {\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst stringUniqueHash = [...str].reduce((acc, char) => char.charCodeAt(0) + ((acc << 5) - acc), 0);\n\t\treturn `hsl(${stringUniqueHash % 360}, 95%, 35%)`;\n\t}\n\n\t/**\n\t * Handle a group.\n\t * @param group The group.\n\t * @param identity The identity.\n\t */\n\tprivate handleGroup(group: string, identity: string): void {\n\t\tconst newGroupIdentity = `${group} ${identity}`;\n\t\tif (this._lastGroupIdentity !== newGroupIdentity) {\n\t\t\tthis._lastGroupIdentity = newGroupIdentity;\n\t\t\tif (this._lastGroupIdentity) {\n\t\t\t\tconsole.groupEnd();\n\t\t\t}\n\t\t\tif (group.length > 0) {\n\t\t\t\tconsole.group(\n\t\t\t\t\t`%c${group}%c${identity}`,\n\t\t\t\t\t`color: #ffffff; background: ${this.stringToColor(\n\t\t\t\t\t\tgroup\n\t\t\t\t\t)}; font-size: 10px; font-weight: bold; padding: 2px 4px; border-radius: 5px`,\n\t\t\t\t\t`color: #ffffff; background: ${this.stringToColor(\n\t\t\t\t\t\tidentity\n\t\t\t\t\t)}; font-size: 10px; font-weight: bold; padding: 2px 4px; margin-left: 4px; border-radius: 5px`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n"],"names":["entryPoints","log","initialize","definition","loggerCreator","helpers","this","_includeLevels","data","includeLevels","identity","group","level","message","optionalParams","includes","handleGroup","console","stringToColor","str","reduce","acc","char","charCodeAt","newGroupIdentity","_lastGroupIdentity","groupEnd","length"],"sourceRoot":""}