function t(t){return function(t){return null!=t&&"string"==typeof t}(t)&&t.trim().length>0}function e(t){return void 0===t?void 0:JSON.parse(JSON.stringify(t))}const o={endpoint:new class{async initialize(t,e,o){this._logger=e("ExampleContextProcessorEndpoint"),this._logger.info("Was passed the following options",t.data)}async requestResponse(o,n){if("module"!==o.type)return this._logger?.warn(`We only expect endpoints of type module. Unable to action request/response for: ${o.id}`),{context:e(n?.context)};const s={context:e(n?.context)};if(this._logger?.info("This is an example of an endpoint that can process a context object that was passed to the broker and needs processing."),"org.dayofinterest"===n?.context?.type){o?.options?.logContext&&this._logger?.info(`Context Type ${n.context.type} matched. Incoming context:`,n.context);const e=n.context.id;if(e&&null!=e.date){const n=new Date(e.date);t(e.day)||(e.day=`${n.getDate()}`),t(e.month)||(e.month=`${n.getMonth()+1}`),t(e.year)||(e.year=`${n.getFullYear()}`),t(e.epoch)||(e.epoch=""+n.getTime()/1e3),t(e.utc)||(e.utc=`${n.toUTCString()}`),t(e.iso)||(e.iso=`${n.toISOString()}`),o?.options?.logContext&&this._logger?.info(`Context Type ${s.context.type} matched. Processed context:`,s.context)}else this._logger?.warn(`Unable to process ${n.context.type} as it did not have date as part of the id`)}return s}}};export{o as entryPoints};
//# sourceMappingURL=example.context.processor.bundle.js.map