var e={d:(o,r)=>{for(var t in r)e.o(r,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:r[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o)},o={};function r(e){return null==e}e.d(o,{k:()=>t});const t={initOptions:new class{async initialize(e,o,r){this._logger=o("InitOptionsLaunchWorkspaceHandler"),this._helpers=r,this._definition=e,this._logger.info("The handler has been loaded")}async action(e,o,t){if(r(o))this._logger?.warn(`Actions passed to the module require a payload to be passed. Requested action: ${e} can not be fulfilled.`);else try{if("launch-workspace"===e){const e=o?.workspaceId;if(this._logger?.info(`The following workspaceId was passed and requested to launch: ${e}`),!(function(e){return null!=e&&"string"==typeof e}(n=e)&&n.trim().length>0))return void this._logger?.error("The init handler received a workspaceId in the wrong format and is unable to launch it");if(r(this._helpers?.launchWorkspace))return void this._logger?.warn(`Unable to launch workspace with workspaceId: ${e} as a launchWorkspace function was not passed to this module via the module helpers.`);this._logger?.info(`Requesting the launch of workspace with workspaceId: ${e}`),await(this._helpers?.launchWorkspace(e,this._logger))}}catch(o){this._logger?.error(`Error trying to perform action ${e}.`,o)}var n}}};var n=o.k;export{n as entryPoints};
//# sourceMappingURL=launch-workspace.bundle.js.map