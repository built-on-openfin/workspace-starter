{"version":3,"file":"wps-platform-override.bundle.js","mappings":"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","sources":["webpack://openfin-workspace--workspace-platform-starter/webpack/bootstrap","webpack://openfin-workspace--workspace-platform-starter/./client/src/framework/shapes/theme-shapes.ts","webpack://openfin-workspace--workspace-platform-starter/webpack/runtime/define property getters","webpack://openfin-workspace--workspace-platform-starter/webpack/runtime/hasOwnProperty shorthand","webpack://openfin-workspace--workspace-platform-starter/./client/src/framework/utils.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/platform-override/wps-platform-override/platform/platform-mapper.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/platform-override/wps-platform-override/platform/util.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/platform-override/wps-platform-override/platform/wps-platform-override.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/platform-override/wps-platform-override/index.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/platform-override/wps-platform-override/platform-override.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","import type {\n\tCustomPaletteSet,\n\tCustomThemeOptions,\n\tCustomThemeOptionsWithScheme\n} from \"@openfin/workspace-platform\";\n\n/**\n * Platform theme configuration\n */\nexport interface ThemeProviderOptions {\n\t/**\n\t * The Themes you wish your platform to support\n\t */\n\tthemes: PlatformCustomThemes;\n\n\t/**\n\t * If providing the palette through css variables would you like a specific custom prefix?\n\t */\n\tcssVarPrefix?: string;\n\n\t/**\n\t * If providing a class at the root document for content providers to indicate light/dark would you like to provide\n\t * something other than the default.\n\t */\n\tschemaNames?: {\n\t\tdark?: string;\n\t\tlight?: string;\n\t};\n}\n\n/**\n * Color schemes, light or dark.\n */\nexport enum ColorSchemeMode {\n\tLight = \"light\",\n\tDark = \"dark\"\n}\n\n/**\n * Extended properties for a custom theme.\n */\nexport interface PlatformCustomThemeExtended {\n\t/**\n\t * An id to help identify this theme as labels can change over time and are used for display\n\t */\n\tid: string;\n\n\t/**\n\t * If there is a shared folder across themes that have light and dark icons you can specify a folder name to use\n\t * instead of the theme id (or label if there is no id)\n\t */\n\ticonFolder?: string;\n\n\t/**\n\t * If you are specifying a single palette in your theme and it is a light palette then you can indicate that by\n\t * specifying the default of light (otherwise we will assume it is dark) If you specify palettes and have a light\n\t * and a dark palette then this setting specifies a default preference (it defaults to picking the dark palette if a\n\t * default is not specified)\n\t */\n\tdefault?: \"light\" | \"dark\";\n}\n\n/**\n * Platform custom theme with options using extended types.\n */\nexport type PlatformCustomThemeOptions = CustomThemeOptions & PlatformCustomThemeExtended;\n\n/**\n * Platform custom theme with options and scheme using extended types.\n */\nexport type PlatformCustomThemeOptionsWithScheme = CustomThemeOptionsWithScheme & PlatformCustomThemeExtended;\n\n/**\n * Platform custom theme either with or without options.\n */\nexport type PlatformCustomTheme = PlatformCustomThemeOptions | PlatformCustomThemeOptionsWithScheme;\n\n/**\n * List of extended custom themes.\n */\nexport type PlatformCustomThemes = PlatformCustomTheme[];\n\n/**\n * The client providing theming methods\n */\nexport interface ThemeClient {\n\t/**\n\t * Get the current theme id.\n\t * @returns The current theme id.\n\t */\n\tgetThemeId(): Promise<string>;\n\n\t/**\n\t * Get the current icon folder.\n\t * @returns the platform icon folder.\n\t */\n\tgetIconFolder(): Promise<string>;\n\n\t/**\n\t * Get the current palette.\n\t * @returns The current palette.\n\t */\n\tgetPalette(): Promise<CustomPaletteSet>;\n\n\t/**\n\t * Get the current color scheme.\n\t * @returns The current color scheme.\n\t */\n\tgetColorSchemeMode(): Promise<ColorSchemeMode>;\n\n\t/**\n\t * Apply theming to an icon url.\n\t * @param url The url to theme.\n\t * @returns The themed url.\n\t */\n\tthemeUrl(url: string | undefined): Promise<string | undefined>;\n}\n\n/**\n * An extended client with additional functions for platform modules\n */\nexport interface PlatformThemeClient extends ThemeClient {\n\t/**\n\t * Set the color scheme mode and notify anybody listening to the change.\n\t * This is used by platform overrides to let the platform know of the change.\n\t * @param colorScheme The color scheme to set.\n\t * @returns returns nothing.\n\t */\n\tsetCurrentColorSchemeMode?(colorScheme?: ColorSchemeMode): Promise<void>;\n}\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Test if a value is a undefined or null.\n * @param value The value to test.\n * @returns True if the value is null or undefined.\n */\nexport function isEmpty(value: unknown): value is null | undefined {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value === undefined || value === null;\n}\n\n/**\n * Test if a value is an object.\n * @param value The value to test.\n * @returns True if the value is an object.\n */\nexport function isObject(value: unknown): value is object {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n/**\n * Test if a value is a string.\n * @param value The value to test.\n * @returns True if the value is a string.\n */\nexport function isString(value: unknown): value is string {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"string\";\n}\n\n/**\n * Test if a value is a string that is not empty.\n * @param value The value to test.\n * @returns True if the value is a string that is not empty.\n */\nexport function isStringValue(value: unknown): value is string {\n\treturn isString(value) && value.trim().length > 0;\n}\n\n/**\n * Test if a value is a number.\n * @param value The value to test.\n * @returns True if the value is a number.\n */\nexport function isNumber(value: unknown): value is number {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"number\";\n}\n\n/**\n * Test if a value is a number with a real value i.e. not NaN or Infinite.\n * @param value The value to test.\n * @returns True if the value is a number.\n */\nexport function isNumberValue(value: unknown): value is number {\n\treturn isNumber(value) && !Number.isNaN(value) && Number.isFinite(value);\n}\n\n/**\n * Test if a value is a boolean.\n * @param value The value to test.\n * @returns True if the value is a boolean.\n */\nexport function isBoolean(value: unknown): value is boolean {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"boolean\";\n}\n\n/**\n * Test if a value is an integer.\n * @param value The value to test.\n * @returns True if the value is an integer.\n */\nexport function isInteger(value: unknown): value is number {\n\treturn isNumber(value) && Number.isInteger(value);\n}\n\n/**\n * Deep clone an object.\n * @param obj The object to clone.\n * @returns The clone of the object.\n */\nexport function objectClone<T>(obj: T): T {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn obj === undefined ? undefined : JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Do a deep comparison of the objects.\n * @param obj1 The first object to compare.\n * @param obj2 The second object to compare.\n * @param matchPropertyOrder If true the properties must be in the same order.\n * @returns True if the objects are the same.\n */\nexport function deepEqual(obj1: unknown, obj2: unknown, matchPropertyOrder: boolean = true): boolean {\n\tif (isObject(obj1) && isObject(obj2)) {\n\t\tconst objKeys1 = Object.keys(obj1);\n\t\tconst objKeys2 = Object.keys(obj2);\n\n\t\tif (objKeys1.length !== objKeys2.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (matchPropertyOrder && JSON.stringify(objKeys1) !== JSON.stringify(objKeys2)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const key of objKeys1) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst value1 = (obj1 as any)[key];\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst value2 = (obj2 as any)[key];\n\n\t\t\tif (!deepEqual(value1, value2, matchPropertyOrder)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else if (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\tif (obj1.length !== obj2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < obj1.length; i++) {\n\t\t\tif (!deepEqual(obj1[i], obj2[i], matchPropertyOrder)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn JSON.stringify(obj1) === JSON.stringify(obj2);\n}\n\n/**\n * Deep merge two objects.\n * @param target The object to be merged into.\n * @param sources The objects to merge into the target.\n * @returns The merged object.\n */\nexport function deepMerge<T = unknown>(target: T, ...sources: T[]): T {\n\tif (!Array.isArray(sources) || sources.length === 0) {\n\t\treturn target;\n\t}\n\n\tconst targetAsMap = target as { [id: string]: unknown };\n\tconst source = sources.shift();\n\n\tlet keys;\n\tif (isObject(targetAsMap) && isObject(source)) {\n\t\tkeys = Object.keys(source);\n\t} else if (Array.isArray(source)) {\n\t\tif (!Array.isArray(target)) {\n\t\t\treturn source;\n\t\t}\n\t\tkeys = Object.keys(source).map((k) => Number.parseInt(k, 10));\n\t}\n\n\tif (keys) {\n\t\tconst sourceAsMap = source as { [id: string]: unknown };\n\t\tfor (const key of keys) {\n\t\t\tconst value = sourceAsMap[key];\n\t\t\tif (isObject(value)) {\n\t\t\t\tif (isEmpty(targetAsMap[key])) {\n\t\t\t\t\ttargetAsMap[key] = {};\n\t\t\t\t}\n\t\t\t\tdeepMerge(targetAsMap[key], value);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tif (isEmpty(targetAsMap[key])) {\n\t\t\t\t\ttargetAsMap[key] = [];\n\t\t\t\t}\n\t\t\t\tdeepMerge(targetAsMap[key], value);\n\t\t\t} else {\n\t\t\t\ttargetAsMap[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn deepMerge(target, ...sources);\n}\n\n/**\n * Polyfills randomUUID if running in a non-secure context.\n * @returns The random UUID.\n */\nexport function randomUUID(): string {\n\tif (\"randomUUID\" in globalThis.crypto) {\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\treturn globalThis.crypto.randomUUID();\n\t}\n\t// Polyfill the window.crypto.randomUUID if we are running in a non secure context that doesn't have it\n\t// we are still using window.crypto.getRandomValues which is always available\n\t// https://stackoverflow.com/a/2117523/2800218\n\t/**\n\t * Get random hex value.\n\t * @param c The number to base the random value on.\n\t * @returns The random value.\n\t */\n\tfunction getRandomHex(c: string): string {\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst rnd = globalThis.crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (Number(c) / 4));\n\t\treturn (\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t(Number(c) ^ rnd).toString(16)\n\t\t);\n\t}\n\treturn \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, getRandomHex);\n}\n\n/**\n * Format an error to a readable string.\n * @param err The error to format.\n * @returns The formatted error.\n */\nexport function formatError(err: unknown): string {\n\tif (isEmpty(err)) {\n\t\treturn \"\";\n\t} else if (err instanceof Error) {\n\t\treturn err.message;\n\t} else if (isStringValue(err)) {\n\t\treturn err;\n\t} else if (isObject(err) && \"message\" in err && isString(err.message)) {\n\t\treturn err.message;\n\t}\n\treturn JSON.stringify(err);\n}\n\n/**\n * A basic string sanitize function that removes angle brackets <> from a string.\n * @param content the content to sanitize\n * @returns a string without angle brackets <>\n */\nexport function sanitizeString(content: unknown): string {\n\tif (isStringValue(content)) {\n\t\treturn content\n\t\t\t.replace(/<[^>]*>?/gm, \"\")\n\t\t\t.replace(/&gt;/g, \">\")\n\t\t\t.replace(/&lt;/g, \"<\")\n\t\t\t.replace(/&amp;/g, \"&\")\n\t\t\t.replace(/&nbsp;/g, \" \")\n\t\t\t.replace(/\\n\\s*\\n/g, \"\\n\");\n\t}\n\treturn \"\";\n}\n\n/**\n * Get the command line arguments from a command line string.\n * Examples of command line strings: arg1 key1=value1 key2=\"value with spaces\" key3='value3' key4='value with more spaces'`.\n * @param commandLine The command line string.\n * @returns The command line arguments or an empty array if none\n */\nexport function getCommandLineArgs(commandLine: string): string[] {\n\tif (!isStringValue(commandLine)) {\n\t\treturn [];\n\t}\n\tconst matches = commandLine.match(/(\\w+=)?(\"[^\"]*\"|'[^']*'|[^ ]+)/g);\n\tif (isEmpty(matches)) {\n\t\treturn [];\n\t}\n\treturn matches;\n}\n","import type OpenFin from \"@openfin/core\";\nimport type {\n\tBrowserCreateWindowRequest,\n\tBrowserSnapshotWindow,\n\tPage,\n\tPageLayout,\n\tWorkspace\n} from \"@openfin/workspace-platform\";\nimport { deepEqual, deepMerge, isEmpty, objectClone } from \"workspace-platform-starter/utils\";\n\n/**\n * All the workspace keys.\n */\ntype WorkspaceKeys = keyof Workspace;\n\n/**\n * All the workspace snapshot keys.\n */\ntype WorkspaceSnapshotKeys = \"windows\" | \"snapshotDetails\" | \"interopSnapshotDetails\";\n\n/**\n * All the browser window keys.\n */\ntype BrowserWindowKeys =\n\t| keyof BrowserSnapshotWindow\n\t| \"title\"\n\t| \"center\"\n\t| \"transparent\"\n\t| \"alwaysOnBottom\"\n\t| \"backgroundThrottling\"\n\t| \"draggable\"\n\t| \"resize\"\n\t| \"spellCheck\"\n\t| \"enableBeforeUnload\";\n\n/**\n * All the workspace platform keys.\n */\ntype WorkspacePlatformKeys =\n\t| \"pages\"\n\t| \"favicon\"\n\t| \"title\"\n\t| \"newTabUrl\"\n\t| \"newPageUrl\"\n\t| \"toolbarOptions\"\n\t| \"windowStateButtonOptions\"\n\t| \"disableMultiplePages\"\n\t| \"isLocked\"\n\t| \"preventPageDragIn\"\n\t| \"preventPageDragOut\"\n\t| \"preventPageDrag\"\n\t| \"preventPageClose\"\n\t| \"_internalDeferShowOptions\"\n\t| \"windowType\";\n\n/**\n * All the keys for page.\n */\ntype PageKeys =\n\t| \"pageId\"\n\t| \"title\"\n\t| \"layout\"\n\t| \"isReadOnly\"\n\t| \"isActive\"\n\t| \"panels\"\n\t| \"customData\"\n\t| \"hasUnsavedChanges\";\n\n/**\n * All the keys for page layout.\n */\ntype PageLayoutKeys =\n\t| \"settings\"\n\t| \"dimensions\"\n\t| \"labels\"\n\t| \"content\"\n\t| \"isClosable\"\n\t| \"reorderEnabled\"\n\t| \"title\"\n\t| \"openPopouts\"\n\t| \"layoutDetails\"\n\t| \"maximisedItemId\";\n\n/**\n * All the keys for page layout settings.\n */\ntype PageLayoutSettingsKeys =\n\t| \"constrainDragToContainer\"\n\t| \"constrainDragToHeaders\"\n\t| \"showPopoutIcon\"\n\t| \"showMaximiseIcon\"\n\t| \"showCloseIcon\"\n\t| \"hasHeaders\"\n\t| \"reorderEnabled\"\n\t| \"preventDragOut\"\n\t| \"preventDragIn\"\n\t| \"popoutWholeStack\"\n\t| \"selectionEnabled\"\n\t| \"blockedPopoutsThrowError\"\n\t| \"closePopoutsOnUnload\"\n\t| \"responsiveMode\"\n\t| \"tabOverlapAllowance\"\n\t| \"reorderOnTabMenuClick\"\n\t| \"tabControlOffset\"\n\t| \"newTabButton\";\n\n/**\n * All the component types.\n */\ntype ComponentType =\n\t| OpenFin.LayoutItemConfig\n\t| OpenFin.LayoutRow\n\t| OpenFin.LayoutColumn\n\t| OpenFin.LayoutComponent;\n\n/**\n * All the component keys\n */\ntype ComponentKey =\n\t| keyof OpenFin.LayoutItemConfig\n\t// eslint-disable-next-line @typescript-eslint/no-duplicate-type-constituents\n\t| keyof OpenFin.LayoutRow\n\t// eslint-disable-next-line @typescript-eslint/no-duplicate-type-constituents\n\t| keyof OpenFin.LayoutColumn\n\t| keyof OpenFin.LayoutComponent\n\t| \"reorderEnabled\"\n\t| \"activeItemIndex\";\n\n/**\n * All the keys for the component state.\n */\ntype ComponentStateKeys =\n\t| keyof OpenFin.ViewCreationOptions\n\t| \"backgroundThrottling\"\n\t| \"uuid\"\n\t| \"initialUrl\"\n\t| \"componentName\";\n\n/**\n * Map the platform workspace data to storage version.\n * @param workspace The workspace to map.\n * @param defaultOptions The default options.\n * @param defaultOptions.window The default window options.\n * @param defaultOptions.page The default page options.\n * @param defaultOptions.view The default view options.\n * @returns The storage workspace.\n */\nexport function mapPlatformWorkspaceToStorage(\n\tworkspace: Workspace | undefined,\n\tdefaultOptions?: {\n\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\tpage: Partial<Page> | undefined;\n\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t}\n): Workspace {\n\tif (isEmpty(workspace)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\treturn undefined as any as Workspace;\n\t}\n\n\tconst clone: Workspace = objectClone(workspace);\n\n\tfor (const win of clone.snapshot.windows) {\n\t\tplatformWorkspaceWindowToStorage(win, defaultOptions);\n\t}\n\n\t// Remove platform dependent information\n\tremoveProp<Workspace, WorkspaceKeys>(clone, \"metadata\");\n\n\tconst workspaceSnapshotDefaults: {\n\t\tpropName: WorkspaceSnapshotKeys;\n\t\tdefaultValue: unknown;\n\t}[] = [\n\t\t{\n\t\t\tpropName: \"interopSnapshotDetails\",\n\t\t\tdefaultValue: {\n\t\t\t\tcontextGroupStates: {\n\t\t\t\t\tgreen: {},\n\t\t\t\t\tpurple: {},\n\t\t\t\t\torange: {},\n\t\t\t\t\tred: {},\n\t\t\t\t\tpink: {},\n\t\t\t\t\tyellow: {}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Skip to make platform dependent and remove below\n\t\t// { propName: \"snapshotDetails\", defaultValue: \"\" },\n\t];\n\n\tfor (const workspaceSnapshotDefault of workspaceSnapshotDefaults) {\n\t\tremovePropIfNonDefault<unknown, WorkspaceSnapshotKeys>(\n\t\t\tclone.snapshot,\n\t\t\tworkspaceSnapshotDefault.propName,\n\t\t\tworkspaceSnapshotDefault.defaultValue\n\t\t);\n\t}\n\n\t// remove platform dependent props\n\tremoveProp<unknown, WorkspaceSnapshotKeys>(clone.snapshot, \"snapshotDetails\");\n\n\treturn clone;\n}\n\n/**\n * Map the platform page data to storage version.\n * @param page The page to map.\n * @param defaultOptions The default options.\n * @param defaultOptions.window The default window options.\n * @param defaultOptions.page The default page options.\n * @param defaultOptions.view The default view options.\n * @returns The mapped page.\n */\nexport function mapPlatformPageToStorage(\n\tpage: Page | undefined,\n\tdefaultOptions?: {\n\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\tpage: Partial<Page> | undefined;\n\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t}\n): Page {\n\tif (isEmpty(page)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\treturn undefined as any as Page;\n\t}\n\n\tconst clone = objectClone(page);\n\tplatformPageToStorage(clone, defaultOptions);\n\treturn clone;\n}\n\n/**\n * Map the platform window data to storage.\n * @param window The window to map.\n * @param defaultOptions The default options.\n * @param defaultOptions.window The default window options.\n * @param defaultOptions.page The default page options.\n * @param defaultOptions.view The default view options.\n */\nfunction platformWorkspaceWindowToStorage(\n\twindow: BrowserSnapshotWindow,\n\tdefaultOptions?: {\n\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\tpage: Partial<Page> | undefined;\n\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t}\n): void {\n\tconst windowDefaults: {\n\t\tpropName: BrowserWindowKeys;\n\t\tdefaultValue: unknown;\n\t}[] = [\n\t\t{ propName: \"uuid\", defaultValue: \"\" },\n\t\t{ propName: \"url\", defaultValue: \"\" },\n\t\t{ propName: \"title\", defaultValue: \"\" },\n\t\t{ propName: \"alwaysOnTop\", defaultValue: false },\n\t\t{ propName: \"frame\", defaultValue: false },\n\t\t{ propName: \"icon\", defaultValue: \"\" },\n\t\t{ propName: \"x\", defaultValue: -1 },\n\t\t{ propName: \"y\", defaultValue: -1 },\n\t\t{ propName: \"width\", defaultValue: -1 },\n\t\t{ propName: \"height\", defaultValue: -1 },\n\t\t{ propName: \"center\", defaultValue: false },\n\t\t{ propName: \"defaultLeft\", defaultValue: 0 },\n\t\t{ propName: \"defaultTop\", defaultValue: 0 },\n\t\t{ propName: \"defaultWidth\", defaultValue: -1 },\n\t\t{ propName: \"defaultHeight\", defaultValue: -1 },\n\t\t{ propName: \"minWidth\", defaultValue: 200 },\n\t\t{ propName: \"minHeight\", defaultValue: 200 },\n\t\t{ propName: \"maxWidth\", defaultValue: -1 },\n\t\t{ propName: \"maxHeight\", defaultValue: -1 },\n\t\t{ propName: \"minimizable\", defaultValue: true },\n\t\t{ propName: \"maximizable\", defaultValue: true },\n\t\t{ propName: \"state\", defaultValue: \"normal\" },\n\t\t{ propName: \"opacity\", defaultValue: 1 },\n\t\t{ propName: \"transparent\", defaultValue: false },\n\t\t{\n\t\t\tpropName: \"resizeRegion\",\n\t\t\tdefaultValue: {\n\t\t\t\tbottomRightCorner: 20,\n\t\t\t\tsize: 7,\n\t\t\t\tsides: {\n\t\t\t\t\ttop: true,\n\t\t\t\t\tright: true,\n\t\t\t\t\tbottom: true,\n\t\t\t\t\tleft: true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpropName: \"accelerator\",\n\t\t\tdefaultValue: {\n\t\t\t\tdevtools: false,\n\t\t\t\tzoom: false,\n\t\t\t\treload: false,\n\t\t\t\treloadIgnoringCache: false\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpropName: \"alphaMask\",\n\t\t\tdefaultValue: {\n\t\t\t\tblue: -1,\n\t\t\t\tgreen: -1,\n\t\t\t\tred: -1\n\t\t\t}\n\t\t},\n\t\t{ propName: \"alwaysOnBottom\", defaultValue: false },\n\t\t{\n\t\t\tpropName: \"api\",\n\t\t\tdefaultValue: {\n\t\t\t\tiframe: {\n\t\t\t\t\tcrossOriginInjection: false,\n\t\t\t\t\tsameOriginInjection: true,\n\t\t\t\t\tenableDeprecatedSharedName: false\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{ propName: \"applicationIcon\", defaultValue: \"\" },\n\t\t{ propName: \"aspectRatio\", defaultValue: 0 },\n\t\t{ propName: \"autoShow\", defaultValue: false },\n\t\t{ propName: \"backgroundThrottling\", defaultValue: true },\n\t\t{\n\t\t\tpropName: \"contentNavigation\",\n\t\t\tdefaultValue: {\n\t\t\t\tallowlist: [\"<all_urls>\"],\n\t\t\t\tdenylist: [],\n\t\t\t\twhitelist: [\"<all_urls>\"],\n\t\t\t\tblacklist: []\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpropName: \"contentRedirect\",\n\t\t\tdefaultValue: {\n\t\t\t\tallowlist: [\"<all_urls>\"],\n\t\t\t\tdenylist: [],\n\t\t\t\twhitelist: [\"<all_urls>\"],\n\t\t\t\tblacklist: []\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpropName: \"contentCreation\",\n\t\t\tdefaultValue: {\n\t\t\t\trules: []\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpropName: \"contextMenuSettings\",\n\t\t\tdefaultValue: {\n\t\t\t\tenable: true,\n\t\t\t\tdevtools: true,\n\t\t\t\treload: false\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpropName: \"cornerRounding\",\n\t\t\tdefaultValue: {\n\t\t\t\theight: 0,\n\t\t\t\twidth: 0\n\t\t\t}\n\t\t},\n\t\t{ propName: \"closeOnLastViewRemoved\", defaultValue: false },\n\t\t{ propName: \"draggable\", defaultValue: false },\n\t\t{ propName: \"includeInSnapshots\", defaultValue: true },\n\t\t{ propName: \"resizable\", defaultValue: true },\n\t\t{ propName: \"resize\", defaultValue: true },\n\t\t{ propName: \"saveWindowState\", defaultValue: false },\n\t\t{ propName: \"shadow\", defaultValue: false },\n\t\t{ propName: \"showTaskbarIcon\", defaultValue: true },\n\t\t{ propName: \"showBackgroundImages\", defaultValue: false },\n\t\t{ propName: \"smallWindow\", defaultValue: false },\n\t\t{ propName: \"spellCheck\", defaultValue: false },\n\t\t{ propName: \"taskbarIcon\", defaultValue: \"\" },\n\t\t{ propName: \"waitForPageLoad\", defaultValue: false },\n\t\t{ propName: \"backgroundColor\", defaultValue: \"\" },\n\t\t{ propName: \"fdc3InteropApi\", defaultValue: \"\" },\n\t\t{ propName: \"enableBeforeUnload\", defaultValue: false },\n\t\t// { propName: \"hotkeys\", defaultValue: [] },\n\t\t// { propName: \"taskbarIconGroup\", defaultValue: \"\" },\n\t\t{\n\t\t\tpropName: \"viewVisibility\",\n\t\t\tdefaultValue: {\n\t\t\t\tshowViewsOnSplitterDrag: {\n\t\t\t\t\tenabled: true\n\t\t\t\t},\n\t\t\t\tshowViewsOnWindowResize: {\n\t\t\t\t\tenabled: true\n\t\t\t\t},\n\t\t\t\tshowViewsOnTabDrag: {\n\t\t\t\t\tenabled: true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{ propName: \"autoplayPolicy\", defaultValue: \"no-user-gesture-required\" },\n\t\t{\n\t\t\tpropName: \"permissions\",\n\t\t\tdefaultValue: {}\n\t\t},\n\t\t{ propName: \"contextMenu\", defaultValue: true },\n\t\t{\n\t\t\tpropName: \"contextMenuOptions\",\n\t\t\tdefaultValue: {\n\t\t\t\ttemplate: [],\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t},\n\t\t{ propName: \"ignoreSavedWindowState\", defaultValue: true },\n\t\t{ propName: \"preloadScripts\", defaultValue: [] }\n\t];\n\n\tfor (const windowDefault of windowDefaults) {\n\t\tremovePropIfNonDefault<BrowserSnapshotWindow, BrowserWindowKeys>(\n\t\t\twindow,\n\t\t\twindowDefault.propName,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t(defaultOptions?.window as any)?.[windowDefault.propName] ?? windowDefault.defaultValue\n\t\t);\n\t}\n\n\t// remove platform dependent props\n\tremoveProp<BrowserSnapshotWindow, BrowserWindowKeys>(window, \"hotkeys\");\n\tremoveProp<BrowserSnapshotWindow, BrowserWindowKeys>(window, \"taskbarIconGroup\");\n\tremoveProp<BrowserSnapshotWindow, BrowserWindowKeys>(window, \"experimental\");\n\n\tif (window.workspacePlatform) {\n\t\t// If this is a workspace platform then remove the layout prop from the window\n\t\t// to avoid duplication\n\t\tremoveProp<BrowserSnapshotWindow, BrowserWindowKeys>(window, \"layout\");\n\n\t\tconst workspacePlatformDefaults: {\n\t\t\tpropName: WorkspacePlatformKeys;\n\t\t\tdefaultValue: unknown;\n\t\t}[] = [\n\t\t\t{ propName: \"favicon\", defaultValue: \"\" },\n\t\t\t{ propName: \"title\", defaultValue: \"\" },\n\t\t\t// Skip to make platform dependent and remove below\n\t\t\t// { propName: \"newTabUrl\", defaultValue: \"\" },\n\t\t\t// { propName: \"newPageUrl\", defaultValue: \"\" },\n\t\t\t// { propName: \"toolbarOptions\", defaultValue: { } },\n\t\t\t{ propName: \"windowStateButtonOptions\", defaultValue: undefined },\n\t\t\t{ propName: \"disableMultiplePages\", defaultValue: false },\n\t\t\t{ propName: \"isLocked\", defaultValue: false },\n\t\t\t{ propName: \"preventPageDragIn\", defaultValue: false },\n\t\t\t{ propName: \"preventPageDragOut\", defaultValue: false },\n\t\t\t{ propName: \"preventPageDrag\", defaultValue: false },\n\t\t\t{ propName: \"preventPageClose\", defaultValue: false },\n\t\t\t{ propName: \"windowType\", defaultValue: \"browser\" }\n\t\t];\n\n\t\tfor (const workspacePlatformDefault of workspacePlatformDefaults) {\n\t\t\tremovePropIfNonDefault<unknown, WorkspacePlatformKeys>(\n\t\t\t\twindow.workspacePlatform,\n\t\t\t\tworkspacePlatformDefault.propName,\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t(defaultOptions?.window?.workspacePlatform as any)?.[workspacePlatformDefault.propName] ??\n\t\t\t\t\tworkspacePlatformDefault.defaultValue\n\t\t\t);\n\t\t}\n\n\t\t// remove platform dependent props\n\t\tremoveProp<unknown, WorkspacePlatformKeys>(window.workspacePlatform, \"newTabUrl\");\n\t\tremoveProp<unknown, WorkspacePlatformKeys>(window.workspacePlatform, \"newPageUrl\");\n\t\tremoveProp<unknown, WorkspacePlatformKeys>(window.workspacePlatform, \"toolbarOptions\");\n\t\tremoveProp<unknown, WorkspacePlatformKeys>(window.workspacePlatform, \"_internalDeferShowOptions\");\n\n\t\tfor (const page of window.workspacePlatform.pages) {\n\t\t\tplatformPageToStorage(page, defaultOptions);\n\t\t}\n\t}\n}\n\n/**\n * Map the platform page data to storage.\n * @param page The page to map.\n * @param defaultOptions The default options.\n * @param defaultOptions.window The default window options.\n * @param defaultOptions.page The default page options.\n * @param defaultOptions.view The default view options.\n */\nexport function platformPageToStorage(\n\tpage: Page,\n\tdefaultOptions?: {\n\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\tpage: Partial<Page> | undefined;\n\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t}\n): void {\n\tconst pageDefaults: {\n\t\tpropName: PageKeys;\n\t\tdefaultValue: unknown;\n\t}[] = [\n\t\t{ propName: \"isActive\", defaultValue: false },\n\t\t{ propName: \"isReadOnly\", defaultValue: false },\n\t\t// Always store with no unsaved changes\n\t\t// { propName: \"hasUnsavedChanges\", defaultValue: false },\n\t\t{ propName: \"panels\", defaultValue: [] }\n\t];\n\n\tfor (const pageDefault of pageDefaults) {\n\t\tremovePropIfNonDefault<unknown, PageKeys>(\n\t\t\tpage,\n\t\t\tpageDefault.propName,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t(defaultOptions?.page as any)?.[pageDefault.propName] ?? pageDefault.defaultValue\n\t\t);\n\t}\n\n\t// Always remove this key, if we are saving we don't want it to reload saying something is unsaved\n\tremoveProp<unknown, PageKeys>(page, \"hasUnsavedChanges\");\n\n\tplatformPageLayoutToStorage(page.layout, defaultOptions);\n}\n\n/**\n * Map the page layout to storage.\n * @param pageLayout The page layout to map.\n * @param defaultOptions The default options.\n * @param defaultOptions.window The default window options.\n * @param defaultOptions.page The default page options.\n * @param defaultOptions.view The default view options.\n */\nexport function platformPageLayoutToStorage(\n\tpageLayout: PageLayout,\n\tdefaultOptions?: {\n\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\tpage: Partial<Page> | undefined;\n\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t}\n): void {\n\tconst pageLayoutDefaults: {\n\t\tpropName: PageLayoutKeys;\n\t\tdefaultValue: unknown;\n\t}[] = [\n\t\t{\n\t\t\tpropName: \"dimensions\",\n\t\t\tdefaultValue: {\n\t\t\t\tborderWidth: 3,\n\t\t\t\tborderGrabWidth: 15,\n\t\t\t\tminItemHeight: 10,\n\t\t\t\tminItemWidth: 10,\n\t\t\t\theaderHeight: 30,\n\t\t\t\tdragProxyWidth: 300,\n\t\t\t\tdragProxyHeight: 200\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpropName: \"labels\",\n\t\t\tdefaultValue: {\n\t\t\t\tclose: \"close\",\n\t\t\t\tmaximise: \"maximise\",\n\t\t\t\tminimise: \"minimise\",\n\t\t\t\tpopout: \"open in new window\",\n\t\t\t\tpopin: \"pop in\",\n\t\t\t\ttabDropdown: \"additional tabs\"\n\t\t\t}\n\t\t},\n\t\t{ propName: \"isClosable\", defaultValue: true },\n\t\t{ propName: \"reorderEnabled\", defaultValue: true },\n\t\t{ propName: \"title\", defaultValue: \"\" },\n\t\t{ propName: \"openPopouts\", defaultValue: [] },\n\t\t{ propName: \"maximisedItemId\", defaultValue: null }\n\t\t// Skip to make platform dependent and remove below\n\t\t// { propName: \"layoutDetails\", defaultValue: { } }\n\t];\n\n\tfor (const pageLayoutDefault of pageLayoutDefaults) {\n\t\tremovePropIfNonDefault<unknown, PageLayoutKeys>(\n\t\t\tpageLayout,\n\t\t\tpageLayoutDefault.propName,\n\t\t\tpageLayoutDefault.defaultValue\n\t\t);\n\t}\n\n\t// Remove Platform dependent props\n\tremoveProp<unknown, PageLayoutKeys>(pageLayout, \"layoutDetails\");\n\n\tif (pageLayout.settings) {\n\t\tconst pageSettingsDefaults: {\n\t\t\tpropName: PageLayoutSettingsKeys;\n\t\t\tdefaultValue: unknown;\n\t\t}[] = [\n\t\t\t{ propName: \"hasHeaders\", defaultValue: true },\n\t\t\t{ propName: \"reorderEnabled\", defaultValue: true },\n\t\t\t{ propName: \"selectionEnabled\", defaultValue: false },\n\t\t\t{ propName: \"popoutWholeStack\", defaultValue: false },\n\t\t\t{ propName: \"blockedPopoutsThrowError\", defaultValue: true },\n\t\t\t{ propName: \"closePopoutsOnUnload\", defaultValue: true },\n\t\t\t{ propName: \"showPopoutIcon\", defaultValue: false },\n\t\t\t{ propName: \"showMaximiseIcon\", defaultValue: false },\n\t\t\t{ propName: \"showCloseIcon\", defaultValue: false },\n\t\t\t{ propName: \"responsiveMode\", defaultValue: \"onload\" },\n\t\t\t{ propName: \"tabOverlapAllowance\", defaultValue: 0 },\n\t\t\t{ propName: \"reorderOnTabMenuClick\", defaultValue: true },\n\t\t\t{ propName: \"tabControlOffset\", defaultValue: 10 },\n\t\t\t{ propName: \"preventDragOut\", defaultValue: false },\n\t\t\t{ propName: \"preventDragIn\", defaultValue: false },\n\t\t\t{ propName: \"constrainDragToContainer\", defaultValue: true },\n\t\t\t{ propName: \"constrainDragToHeaders\", defaultValue: false }\n\t\t\t// Skip to make platform dependent and remove below\n\t\t\t// { propName: \"newTabButton\", defaultValue: false }\n\t\t];\n\n\t\tfor (const pageSettingsDefault of pageSettingsDefaults) {\n\t\t\tremovePropIfNonDefault<unknown, PageLayoutSettingsKeys>(\n\t\t\t\tpageLayout.settings,\n\t\t\t\tpageSettingsDefault.propName,\n\t\t\t\tpageSettingsDefault.defaultValue\n\t\t\t);\n\t\t}\n\n\t\t// Remove Platform dependent props\n\t\tremoveProp<unknown, PageLayoutSettingsKeys>(pageLayout.settings, \"newTabButton\");\n\n\t\tif (Object.keys(pageLayout.settings).length === 0) {\n\t\t\tdelete pageLayout.settings;\n\t\t}\n\t}\n\n\tif (pageLayout.content) {\n\t\tfor (const component of pageLayout.content) {\n\t\t\tplatformLayoutComponentToStorage(component, defaultOptions);\n\t\t}\n\t}\n}\n\n/**\n * Map the platform layout content data to storage.\n * @param component The layout content to map.\n * @param defaultOptions The default options.\n * @param defaultOptions.window The default window options.\n * @param defaultOptions.page The default page options.\n * @param defaultOptions.view The default view options.\n */\nfunction platformLayoutComponentToStorage(\n\tcomponent: ComponentType,\n\tdefaultOptions?: {\n\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\tpage: Partial<Page> | undefined;\n\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t}\n): void {\n\tconst componentDefaults: {\n\t\tpropName: ComponentKey;\n\t\tdefaultValue: unknown;\n\t}[] = [\n\t\t{ propName: \"title\", defaultValue: \"\" },\n\t\t{ propName: \"width\", defaultValue: 0 },\n\t\t{ propName: \"height\", defaultValue: 0 },\n\t\t{ propName: \"componentName\", defaultValue: \"\" },\n\t\t{ propName: \"isClosable\", defaultValue: true },\n\t\t{ propName: \"reorderEnabled\", defaultValue: true },\n\t\t{ propName: \"activeItemIndex\", defaultValue: 0 }\n\t];\n\n\tfor (const componentDefault of componentDefaults) {\n\t\tremovePropIfNonDefault<ComponentType, ComponentKey>(\n\t\t\tcomponent,\n\t\t\tcomponentDefault.propName,\n\t\t\tcomponentDefault.defaultValue\n\t\t);\n\t}\n\n\tif (\"componentState\" in component) {\n\t\tconst componentState: Partial<OpenFin.ViewCreationOptions> | undefined = component.componentState;\n\n\t\tif (componentState) {\n\t\t\tconst componentStateDefaults: { propName: ComponentStateKeys; defaultValue: unknown }[] = [\n\t\t\t\t{ propName: \"name\", defaultValue: \"\" },\n\t\t\t\t{ propName: \"url\", defaultValue: \"\" },\n\t\t\t\t{ propName: \"uuid\", defaultValue: \"\" },\n\t\t\t\t{ propName: \"componentName\", defaultValue: \"view\" },\n\t\t\t\t{ propName: \"initialUrl\", defaultValue: \"\" },\n\t\t\t\t{ propName: \"processAffinity\", defaultValue: fin.me.identity.uuid },\n\t\t\t\t{ propName: \"isClosable\", defaultValue: true },\n\t\t\t\t{ propName: \"bounds\", defaultValue: { x: 1, y: 1, width: 0, height: 0 } },\n\t\t\t\t{ propName: \"detachOnClose\", defaultValue: true },\n\t\t\t\t{ propName: \"isClosable\", defaultValue: true },\n\t\t\t\t{ propName: \"preventDragOut\", defaultValue: false },\n\t\t\t\t{ propName: \"accelerator\", defaultValue: { zoom: true } },\n\t\t\t\t{ propName: \"zoomLevel\", defaultValue: 0 },\n\t\t\t\t{ propName: \"permissions\", defaultValue: {} },\n\t\t\t\t{ propName: \"contextMenu\", defaultValue: true },\n\t\t\t\t{\n\t\t\t\t\tpropName: \"contextMenuOptions\",\n\t\t\t\t\tdefaultValue: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\ttemplate: [\n\t\t\t\t\t\t\t\"spellCheck\",\n\t\t\t\t\t\t\t\"separator\",\n\t\t\t\t\t\t\t\"print\",\n\t\t\t\t\t\t\t\"separator\",\n\t\t\t\t\t\t\t\"cut\",\n\t\t\t\t\t\t\t\"copy\",\n\t\t\t\t\t\t\t\"paste\",\n\t\t\t\t\t\t\t\"undo\",\n\t\t\t\t\t\t\t\"redo\",\n\t\t\t\t\t\t\t\"selectAll\",\n\t\t\t\t\t\t\t\"inspect\",\n\t\t\t\t\t\t\t\"reload\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ propName: \"preloadScripts\", defaultValue: [] },\n\t\t\t\t// Skip to make platform dependent and remove below\n\t\t\t\t// { propName: \"hotkeys\", defaultValue: [] },\n\t\t\t\t{ propName: \"enableBeforeUnload\", defaultValue: false },\n\t\t\t\t{ propName: \"backgroundThrottling\", defaultValue: true },\n\t\t\t\t{\n\t\t\t\t\tpropName: \"autoResize\",\n\t\t\t\t\tdefaultValue: {\n\t\t\t\t\t\twidth: false,\n\t\t\t\t\t\theight: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ propName: \"zoomLevel\", defaultValue: 0 },\n\t\t\t\t{ propName: \"fdc3InteropApi\", defaultValue: \"\" },\n\t\t\t\t{ propName: \"interop\", defaultValue: {} },\n\t\t\t\t{ propName: \"customData\", defaultValue: {} },\n\t\t\t\t{ propName: \"contentNavigation\", defaultValue: {} }\n\t\t\t];\n\n\t\t\tfor (const componentStateDefault of componentStateDefaults) {\n\t\t\t\tremovePropIfNonDefault<OpenFin.ViewCreationOptions, ComponentStateKeys>(\n\t\t\t\t\tcomponentState,\n\t\t\t\t\tcomponentStateDefault.propName,\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\t\t(defaultOptions?.view as any)?.[componentStateDefault.propName] ??\n\t\t\t\t\t\tcomponentStateDefault.defaultValue\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// remove platform dependent props\n\t\t\tremoveProp<OpenFin.ViewCreationOptions, ComponentStateKeys>(componentState, \"hotkeys\");\n\t\t}\n\t}\n\n\tif (component.content) {\n\t\tfor (const comp of component.content) {\n\t\t\tplatformLayoutComponentToStorage(comp, defaultOptions);\n\t\t}\n\t}\n}\n\n/**\n * Map the platform workspace data to storage version.\n * @param workspace The workspace to map.\n * @param defaultOptions The default options.\n * @param defaultOptions.window The default window options.\n * @param defaultOptions.page The default page options.\n * @param defaultOptions.view The default view options.\n * @returns The storage workspace.\n */\nexport function mapStorageToPlatformWorkspace(\n\tworkspace: Workspace | undefined,\n\tdefaultOptions?: {\n\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\tpage: Partial<Page> | undefined;\n\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t}\n): Workspace {\n\tif (isEmpty(workspace)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\treturn undefined as any as Workspace;\n\t}\n\n\tconst clone: Workspace = objectClone(workspace);\n\n\tif (Array.isArray(clone.snapshot.windows)) {\n\t\tconst newWins = [];\n\t\tfor (const win of clone.snapshot.windows) {\n\t\t\tnewWins.push(platformWorkspaceWindowFromStorage(win, defaultOptions));\n\t\t}\n\t\tclone.snapshot.windows = newWins;\n\t}\n\n\treturn clone;\n}\n\n/**\n * Map the window storage to platform.\n * @param window The window to map.\n * @param defaultOptions The default options.\n * @param defaultOptions.window The default window options.\n * @param defaultOptions.page The default page options.\n * @param defaultOptions.view The default view options.\n * @returns The window merged with default options.\n */\nfunction platformWorkspaceWindowFromStorage(\n\twindow: BrowserSnapshotWindow,\n\tdefaultOptions?: {\n\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\tpage: Partial<Page> | undefined;\n\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t}\n): BrowserSnapshotWindow {\n\tconst merged = deepMerge<BrowserSnapshotWindow>(window, defaultOptions?.window as BrowserSnapshotWindow);\n\n\tif (!isEmpty(window?.workspacePlatform?.pages)) {\n\t\tfor (const page of window.workspacePlatform.pages) {\n\t\t\tplatformPageFromStorage(page, defaultOptions);\n\t\t}\n\t}\n\n\treturn merged;\n}\n\n/**\n * Map the platform page data to storage version.\n * @param page The page to map.\n * @param defaultOptions The default options.\n * @param defaultOptions.window The default window options.\n * @param defaultOptions.page The default page options.\n * @param defaultOptions.view The default view options.\n * @returns The mapped page.\n */\nexport function mapPlatformPageFromStorage(\n\tpage: Page | undefined,\n\tdefaultOptions?: {\n\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\tpage: Partial<Page> | undefined;\n\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t}\n): Page {\n\tif (isEmpty(page)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\treturn undefined as any as Page;\n\t}\n\n\tconst clone = objectClone(page);\n\tplatformPageFromStorage(clone, defaultOptions);\n\treturn clone;\n}\n\n/**\n * Map the platform page data to storage.\n * @param page The page to map.\n * @param defaultOptions The default options.\n * @param defaultOptions.window The default window options.\n * @param defaultOptions.page The default page options.\n * @param defaultOptions.view The default view options.\n */\nexport function platformPageFromStorage(\n\tpage: Page,\n\tdefaultOptions?: {\n\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\tpage: Partial<Page> | undefined;\n\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t}\n): void {\n\tplatformPageLayoutToStorage(page.layout, defaultOptions);\n}\n\n/**\n * Remove a property for an object but if is different from default.\n * @param obj The object to update.\n * @param propName The name of the property to check.\n * @param defaultValue The default value for the property.\n */\nfunction removePropIfNonDefault<T, K extends keyof T | string>(\n\tobj: Partial<T>,\n\tpropName: K,\n\tdefaultValue: unknown\n): void {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tif (propName in obj && deepEqual((obj as any)[propName], defaultValue, false)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tdelete (obj as any)[propName];\n\t}\n}\n\n/**\n * Remove a property for an object.\n * @param obj The object to remove from.\n * @param propName The name of the property to copy.\n */\nfunction removeProp<T, K extends keyof T | string>(obj: Partial<T>, propName: K): void {\n\tif (propName in obj) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tdelete (obj as any)[propName];\n\t}\n}\n","import type { OpenFin } from \"@openfin/core\";\nimport type { BrowserCreateWindowRequest, Page, WorkspacePlatformModule } from \"@openfin/workspace-platform\";\nimport type { BrowserProviderOptions } from \"workspace-platform-starter/shapes/browser-shapes\";\nimport { deepMerge, isEmpty, isStringValue, randomUUID } from \"workspace-platform-starter/utils\";\n\nlet defaultOptions:\n\t| {\n\t\t\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\t\t\tpage: Partial<Page> | undefined;\n\t\t\tview: Partial<OpenFin.ViewOptions> | undefined;\n\t  }\n\t| undefined;\n\n/**\n * Takes a layout and walks through all the nodes and applies logic to nodes that have\n * a url and a name that matches a pattern. Updates the name to make it unique (if applicable)\n * while retaining information related to an application's identity if present.\n * @param layout The layout to duplicate\n * @returns The duplicated layout.\n */\nexport function duplicateLayout<T>(layout: T): T {\n\treturn JSON.parse(\n\t\tJSON.stringify(layout, (_, nestedValue) => {\n\t\t\t// check to ensure that we have a name field and that we also have a url field in this object (in case name was added to a random part of the layout)\n\t\t\tif (isStringValue(nestedValue?.name) && !isEmpty(nestedValue.url)) {\n\t\t\t\tif (/\\/[\\d,a-z-]{36}$/.test(nestedValue.name)) {\n\t\t\t\t\tnestedValue.name = nestedValue.name.replace(/([\\d,a-z-]{36}$)/, randomUUID());\n\t\t\t\t}\n\t\t\t\t// case: internal-generated-view-<uuid>\n\t\t\t\tif (/-[\\d,a-z-]{36}$/.test(nestedValue.name)) {\n\t\t\t\t\tnestedValue.name = nestedValue.name.replace(/(-[\\d,a-z-]{36}$)/, randomUUID());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn nestedValue as unknown;\n\t\t})\n\t);\n}\n\n/**\n * Build the default options for the window, page and view.\n * @param browserProvider The browser provider options.\n * @returns The default options.\n */\nexport async function buildDefaultOptions(browserProvider?: BrowserProviderOptions): Promise<{\n\twindow: Partial<BrowserCreateWindowRequest> | undefined;\n\tpage: Partial<Page> | undefined;\n\tview: Partial<OpenFin.ViewOptions> | undefined;\n}> {\n\tif (defaultOptions) {\n\t\treturn defaultOptions;\n\t}\n\tconst app = await fin.Application.getCurrent();\n\tconst manifest = await app.getManifest();\n\n\treturn {\n\t\twindow: deepMerge(\n\t\t\t{},\n\t\t\tmanifest.platform?.defaultWindowOptions as Partial<BrowserCreateWindowRequest>,\n\t\t\tbrowserProvider?.defaultWindowOptions\n\t\t),\n\t\tpage: deepMerge({}, browserProvider?.defaultPageOptions),\n\t\tview: deepMerge({}, manifest.platform?.defaultViewOptions, browserProvider?.defaultViewOptions)\n\t};\n}\n\n/**\n * Get the bounds of the specified page.\n * @param platform The platform to get the page bounds for.\n * @param pageId The if of the page to get the bounds for.\n * @param fromStorage Get the bounds from storage instead of the actual page if available.\n * @returns The bounds for the page.\n */\nexport async function getPageBoundsAndState(\n\tplatform: WorkspacePlatformModule,\n\tpageId: string,\n\tfromStorage = false\n): Promise<{ bounds?: OpenFin.Bounds; state?: \"maximized\" | \"minimized\" | \"normal\" } | undefined> {\n\tlet boundsAndState: { bounds?: OpenFin.Bounds; state?: \"maximized\" | \"minimized\" | \"normal\" } | undefined;\n\tif (fromStorage) {\n\t\tconst page = await platform.Storage.getPage(pageId);\n\t\tif (!isEmpty(page?.customData?.windowBounds)) {\n\t\t\treturn { bounds: page?.customData?.windowBounds, state: page?.customData?.windowState };\n\t\t}\n\t}\n\n\tconst pages = await platform.Browser.getAllAttachedPages();\n\tlet windowId: OpenFin.Identity | undefined;\n\n\tfor (const page of pages) {\n\t\tif (page.pageId === pageId) {\n\t\t\twindowId = page.parentIdentity;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (isEmpty(windowId)) {\n\t\t// check to see if we are talking about a saved page that isn't currently open\n\t\tconst savedPage = await platform.Storage.getPage(pageId);\n\t\tif (!isEmpty(savedPage)) {\n\t\t\t// the requested page is not currently open but is a saved page so try and fetch it from storage as a fallback\n\t\t\treturn { bounds: savedPage?.customData?.windowBounds, state: savedPage?.customData?.windowState };\n\t\t}\n\t\t// it is not an active page and it isn't saved so it is likely a new instance of an existing page (save as)\n\t\t// use the current windowId\n\t\twindowId = await platform.Browser.getLastFocusedWindow();\n\t}\n\n\tif (!isEmpty(windowId)) {\n\t\tconst hostWindow = platform.Browser.wrapSync(windowId);\n\t\tboundsAndState = {\n\t\t\tbounds: await hostWindow.openfinWindow.getBounds(),\n\t\t\tstate: await hostWindow.openfinWindow.getState()\n\t\t};\n\t}\n\n\treturn boundsAndState;\n}\n","import type OpenFin from \"@openfin/core\";\nimport type { LayoutClient } from \"@openfin/snap-sdk\";\nimport type {\n\tAnalyticsEvent,\n\tApplyWorkspacePayload,\n\tColorSchemeOptionType,\n\tCreateSavedPageRequest,\n\tCreateSavedWorkspaceRequest,\n\tGlobalContextMenuItemData,\n\tOpenGlobalContextMenuPayload,\n\tOpenPageTabContextMenuPayload,\n\tOpenViewTabContextMenuPayload,\n\tPage,\n\tPageTabContextMenuItemData,\n\tUpdateSavedPageRequest,\n\tUpdateSavedWorkspaceRequest,\n\tViewTabMenuData,\n\tWorkspace,\n\tWorkspacePlatformProvider,\n\tHandleSaveModalOnPageClosePayload,\n\tSaveModalOnPageCloseResult,\n\tCopyPagePayload,\n\tHandlePageChangesPayload,\n\tModifiedPageState,\n\tSetActivePageForWindowPayload,\n\tLocale\n} from \"@openfin/workspace-platform\";\nimport type { DockProviderConfigWithIdentity } from \"@openfin/workspace-platform/client-api/src\";\nimport type {\n\tAnalyticsClient,\n\tPlatformAnalyticsEvent\n} from \"workspace-platform-starter/shapes/analytics-shapes\";\nimport type { UnsavedPagePromptStrategy } from \"workspace-platform-starter/shapes/browser-shapes\";\nimport type { PlatformConnectionClient } from \"workspace-platform-starter/shapes/connection-shapes\";\nimport type { EndpointClient } from \"workspace-platform-starter/shapes/endpoint-shapes\";\nimport type {\n\tLanguageChangedLifecyclePayload,\n\tPageChangedLifecyclePayload,\n\tWorkspaceChangedLifecyclePayload\n} from \"workspace-platform-starter/shapes/lifecycle-shapes\";\nimport type { Logger } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type { PlatformMenuClient, PopupMenuStyles } from \"workspace-platform-starter/shapes/menu-shapes\";\nimport type {\n\tEndpointPageGetRequest,\n\tEndpointPageGetResponse,\n\tEndpointPageListRequest,\n\tEndpointPageListResponse,\n\tEndpointPageRemoveRequest,\n\tEndpointPageSetRequest,\n\tEndpointWorkspaceGetRequest,\n\tEndpointWorkspaceGetResponse,\n\tEndpointWorkspaceListRequest,\n\tEndpointWorkspaceListResponse,\n\tEndpointWorkspaceRemoveRequest,\n\tEndpointWorkspaceSetRequest,\n\tPlatformOverrideHelpers,\n\tPlatformOverrideOptions\n} from \"workspace-platform-starter/shapes/platform-shapes\";\n\nimport { ColorSchemeMode, type PlatformThemeClient } from \"workspace-platform-starter/shapes/theme-shapes\";\nimport { randomUUID, isEmpty } from \"workspace-platform-starter/utils\";\nimport {\n\tmapPlatformPageFromStorage,\n\tmapPlatformPageToStorage,\n\tmapPlatformWorkspaceToStorage,\n\tmapStorageToPlatformWorkspace\n} from \"./platform-mapper\";\nimport { buildDefaultOptions, duplicateLayout, getPageBoundsAndState } from \"./util\";\n\nconst WORKSPACE_ENDPOINT_ID_LIST = \"workspace-list\";\nconst WORKSPACE_ENDPOINT_ID_GET = \"workspace-get\";\nconst WORKSPACE_ENDPOINT_ID_SET = \"workspace-set\";\nconst WORKSPACE_ENDPOINT_ID_REMOVE = \"workspace-remove\";\n\nconst PAGE_ENDPOINT_ID_LIST = \"page-list\";\nconst PAGE_ENDPOINT_ID_GET = \"page-get\";\nconst PAGE_ENDPOINT_ID_REMOVE = \"page-remove\";\nconst PAGE_ENDPOINT_ID_SET = \"page-set\";\n\nlet unsavedPagePromptStrategy: UnsavedPagePromptStrategy | undefined;\nlet disableStorageMapping: boolean | undefined;\nlet globalMenuStyle: PopupMenuStyles | undefined;\nlet pageMenuStyle: PopupMenuStyles | undefined;\nlet viewMenuStyle: PopupMenuStyles | undefined;\nlet workspaceApplied: boolean;\n\n/**\n * Get the override constructor for the platform override (useful if you wish this implementation to be layered with other implementations and passed to the platform's initialization object as part of an array).\n * @param overrideOptions The options for the platform override defined as part of the platform.\n * @param logger The logger to use.\n * @param helpers A collection of helper methods.\n * @returns The override constructor to be used in an array.\n */\nexport async function getConstructorOverride(\n\toverrideOptions: PlatformOverrideOptions,\n\tlogger: Logger,\n\thelpers: PlatformOverrideHelpers\n): Promise<OpenFin.ConstructorOverride<WorkspacePlatformProvider>> {\n\tdisableStorageMapping = overrideOptions?.platformProviderOptions?.disableStorageMapping ?? false;\n\tglobalMenuStyle = overrideOptions?.browserProviderOptions?.menuOptions?.styles?.globalMenu;\n\tpageMenuStyle = overrideOptions?.browserProviderOptions?.menuOptions?.styles?.pageMenu;\n\tviewMenuStyle = overrideOptions?.browserProviderOptions?.menuOptions?.styles?.viewMenu;\n\tunsavedPagePromptStrategy = overrideOptions?.browserProviderOptions?.unsavedPagePromptStrategy ?? \"default\";\n\tworkspaceApplied = false;\n\tlet endpointProvider: EndpointClient | undefined;\n\tif (helpers?.getEndpointClient) {\n\t\tendpointProvider = await helpers.getEndpointClient();\n\t}\n\n\tlet analyticsClient: AnalyticsClient | undefined;\n\n\tif (helpers.getAnalyticsClient) {\n\t\tanalyticsClient = await helpers.getAnalyticsClient();\n\t}\n\n\tif (\n\t\t!endpointProvider ||\n\t\t!helpers.getThemeClient ||\n\t\t!helpers.getVersionInfo ||\n\t\t!helpers.getPlatform ||\n\t\t!helpers.getMenuClient ||\n\t\t!helpers.fireLifecycleEvent ||\n\t\t!helpers.getSnapClient ||\n\t\t!helpers.getConnectionClient\n\t) {\n\t\tthrow new Error(\n\t\t\t\"Platform Override Constructor is missing required helpers. The platform override will not function correctly so this error is to flag the issue.\"\n\t\t);\n\t}\n\tconst versionInfo = await helpers.getVersionInfo();\n\tconst getCurrentSync = helpers.getPlatform;\n\tconst menuClient = (await helpers.getMenuClient()) as PlatformMenuClient;\n\tconst fireLifecycleEvent = helpers.fireLifecycleEvent;\n\tconst utilClient = helpers.getUtilClient();\n\tconst snapClient = await helpers.getSnapClient();\n\tconst windowPositioningOptions = await utilClient.position.getWindowPositionOptions(\n\t\toverrideOptions?.browserProviderOptions\n\t);\n\tconst themeClient = (await helpers.getThemeClient()) as PlatformThemeClient;\n\tconst connectionClient: PlatformConnectionClient = await helpers.getConnectionClient();\n\tconst buttonClient = await helpers.getButtonClient();\n\tconst dockClient = await helpers.getDockClient();\n\t// eslint-disable-next-line func-style, @typescript-eslint/explicit-function-return-type\n\tconst notifyLanguageChange = async (locale: Locale) => {\n\t\tconst platform = getCurrentSync();\n\t\tawait fireLifecycleEvent<LanguageChangedLifecyclePayload>(platform, \"language-changed\", {\n\t\t\tlocale\n\t\t});\n\t\tconst appSessionContextGroup = await fin.me.interop.joinSessionContextGroup(\"platform/events\");\n\t\tawait appSessionContextGroup.setContext({\n\t\t\ttype: \"platform.language\",\n\t\t\tlocale\n\t\t} as OpenFin.Context);\n\t};\n\treturn (Base: OpenFin.Constructor<WorkspacePlatformProvider>) =>\n\t\t/**\n\t\t * Create a class which overrides the platform provider.\n\t\t */\n\t\tclass Override extends Base {\n\t\t\t/**\n\t\t\t * Supports launching a manifest into a platform.\n\t\t\t * @param payload The manifest to load into the platform\n\t\t\t * @returns nothing.\n\t\t\t */\n\t\t\tpublic async launchIntoPlatform(payload: OpenFin.LaunchIntoPlatformPayload): Promise<void> {\n\t\t\t\tlogger.debug(\n\t\t\t\t\t\"launchIntoPlatform called. Please use the initOptionsProvider for loading content into the platform. If triggered by clicking on the application icon then autoShow options from the bootstrapper are applied.\",\n\t\t\t\t\tpayload\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Gets the current state of windows and their views and returns a snapshot object containing that info.\n\t\t\t * @param payload Undefined unless you've defined a custom `getSnapshot` protocol.\n\t\t\t * @param identity Identity of the entity that called getSnapshot.\n\t\t\t * @returns Snapshot of current platform state.\n\t\t\t */\n\t\t\tpublic async getSnapshot(payload: undefined, identity: OpenFin.Identity): Promise<OpenFin.Snapshot> {\n\t\t\t\tlet snapshot = await super.getSnapshot(payload, identity);\n\n\t\t\t\tif (snapClient.isEnabled()) {\n\t\t\t\t\tsnapshot = await snapClient.decorateSnapshot(snapshot);\n\t\t\t\t}\n\n\t\t\t\tif (isEmpty(connectionClient?.decorateSnapshot)) {\n\t\t\t\t\treturn snapshot;\n\t\t\t\t}\n\t\t\t\t// Decorate the default snapshot with additional information for connection clients.\n\t\t\t\treturn connectionClient.decorateSnapshot(snapshot);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles requests to apply a snapshot to the current Platform.\n\t\t\t * @param payload Payload containing the snapshot to be applied, as well as any options.\n\t\t\t * @param identity Identity of the entity that called applySnapshot.\n\t\t\t * Undefined if called internally (e.g. when opening the initial snapshot).\n\t\t\t */\n\t\t\tpublic async applySnapshot(\n\t\t\t\tpayload: OpenFin.ApplySnapshotPayload,\n\t\t\t\tidentity?: OpenFin.Identity\n\t\t\t): Promise<void> {\n\t\t\t\tlet existingApps: LayoutClient[] | undefined;\n\t\t\t\tif (snapClient.isEnabled()) {\n\t\t\t\t\texistingApps = await snapClient.prepareToApplyDecoratedSnapshot();\n\t\t\t\t}\n\n\t\t\t\tawait super.applySnapshot(payload, identity);\n\n\t\t\t\tif (snapClient.isEnabled()) {\n\t\t\t\t\tawait snapClient.applyDecoratedSnapshot(payload.snapshot, existingApps ?? []);\n\t\t\t\t}\n\n\t\t\t\tif (!isEmpty(connectionClient?.applyClientSnapshot)) {\n\t\t\t\t\t// Use the decorated snapshot to open any connected clients\n\t\t\t\t\tawait connectionClient.applyClientSnapshot(payload.snapshot);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for getting a list of saved workspaces from persistent storage.\n\t\t\t * @param query an optional query.\n\t\t\t * @returns The list of saved workspaces.\n\t\t\t */\n\t\t\tpublic async getSavedWorkspaces(query?: string): Promise<Workspace[]> {\n\t\t\t\t// you can add your own custom implementation here if you are storing your workspaces\n\t\t\t\t// in non-default location (e.g. on the server instead of locally)\n\t\t\t\tif (!isEmpty(query)) {\n\t\t\t\t\tlogger.info(`Saved workspaces requested with query: ${query}`);\n\t\t\t\t}\n\t\t\t\tlogger.info(`Checking for custom workspace storage with endpoint id: ${WORKSPACE_ENDPOINT_ID_LIST}`);\n\t\t\t\tif (endpointProvider.hasEndpoint(WORKSPACE_ENDPOINT_ID_LIST)) {\n\t\t\t\t\tlogger.info(\"Requesting saved workspaces from custom storage\");\n\t\t\t\t\tconst workspacesResponse = await endpointProvider.requestResponse<\n\t\t\t\t\t\tEndpointWorkspaceListRequest,\n\t\t\t\t\t\tEndpointWorkspaceListResponse\n\t\t\t\t\t>(WORKSPACE_ENDPOINT_ID_LIST, { platform: fin.me.identity.uuid, query });\n\n\t\t\t\t\tif (workspacesResponse) {\n\t\t\t\t\t\tlogger.info(\"Returning saved workspaces from custom storage\");\n\t\t\t\t\t\treturn Object.values(workspacesResponse).map((response) => response.payload);\n\t\t\t\t\t}\n\t\t\t\t\tlogger.warn(\"No response getting saved workspaces from custom storage\");\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\tlogger.info(\"Requesting saved workspaces from default storage\");\n\t\t\t\tconst savedWorkspaces = await super.getSavedWorkspaces(query);\n\t\t\t\tlogger.info(\"Returning saved workspaces from default storage\");\n\t\t\t\treturn savedWorkspaces;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for getting a single workspace in persistent storage.\n\t\t\t * @param id The id of the workspace to get.\n\t\t\t * @returns The workspace.\n\t\t\t */\n\t\t\tpublic async getSavedWorkspace(id: string): Promise<Workspace | undefined> {\n\t\t\t\t// you can add your own custom implementation here if you are storing your workspaces\n\t\t\t\t// in non-default location (e.g. on the server instead of locally)\n\t\t\t\tlogger.info(`Checking for custom workspace storage with endpoint id: ${WORKSPACE_ENDPOINT_ID_GET}`);\n\t\t\t\tif (endpointProvider.hasEndpoint(WORKSPACE_ENDPOINT_ID_GET)) {\n\t\t\t\t\tlogger.info(`Requesting saved workspace from custom storage for workspace id: ${id}`);\n\t\t\t\t\tconst workspaceResponse = await endpointProvider.requestResponse<\n\t\t\t\t\t\tEndpointWorkspaceGetRequest,\n\t\t\t\t\t\tEndpointWorkspaceGetResponse\n\t\t\t\t\t>(WORKSPACE_ENDPOINT_ID_GET, { platform: fin.me.identity.uuid, id });\n\t\t\t\t\tif (workspaceResponse) {\n\t\t\t\t\t\tlogger.info(`Returning saved workspace from custom storage for workspace id: ${id}`);\n\t\t\t\t\t\tconst defaultOpts = await buildDefaultOptions();\n\t\t\t\t\t\treturn mapStorageToPlatformWorkspace(workspaceResponse.payload, defaultOpts);\n\t\t\t\t\t}\n\t\t\t\t\tlogger.warn(`No response getting saved workspace from custom storage for workspace id: ${id}`);\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tlogger.info(`Requesting saved workspace from default storage for workspace id: ${id}`);\n\t\t\t\tconst savedWorkspace = await super.getSavedWorkspace(id);\n\t\t\t\tlogger.info(`Returning saved workspace from default storage for workspace id: ${id}`);\n\t\t\t\treturn savedWorkspace;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for creating a saved workspace in persistent storage.\n\t\t\t * @param req the create saved workspace request.\n\t\t\t */\n\t\t\tpublic async createSavedWorkspace(req: CreateSavedWorkspaceRequest): Promise<void> {\n\t\t\t\t// you can add your own custom implementation here if you are storing your workspaces\n\t\t\t\t// in non-default location (e.g. on the server instead of locally)\n\t\t\t\tlogger.info(`Checking for custom workspace storage with endpoint id: ${WORKSPACE_ENDPOINT_ID_SET}`);\n\t\t\t\tif (endpointProvider.hasEndpoint(WORKSPACE_ENDPOINT_ID_SET)) {\n\t\t\t\t\tconst success = await endpointProvider.action<EndpointWorkspaceSetRequest>(\n\t\t\t\t\t\tWORKSPACE_ENDPOINT_ID_SET,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tplatform: fin.me.identity.uuid,\n\t\t\t\t\t\t\tid: req.workspace.workspaceId,\n\t\t\t\t\t\t\tmetaData: {\n\t\t\t\t\t\t\t\tversion: {\n\t\t\t\t\t\t\t\t\tworkspacePlatformClient: versionInfo.workspacePlatformClient,\n\t\t\t\t\t\t\t\t\tplatformClient: versionInfo.platformClient\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpayload: disableStorageMapping\n\t\t\t\t\t\t\t\t? req.workspace\n\t\t\t\t\t\t\t\t: mapPlatformWorkspaceToStorage(req.workspace, await buildDefaultOptions())\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tlogger.info(`Saved workspace with id: ${req.workspace.workspaceId} to custom storage`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.info(`Unable to save workspace with id: ${req.workspace.workspaceId} to custom storage`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info(`Saving workspace to default storage for workspace id: ${req.workspace.workspaceId}`);\n\t\t\t\t\tawait super.createSavedWorkspace(req);\n\t\t\t\t\tlogger.info(`Saved workspace to default storage for workspace id: ${req.workspace.workspaceId}`);\n\t\t\t\t}\n\n\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\tworkspaceApplied = true;\n\t\t\t\tawait fireLifecycleEvent<WorkspaceChangedLifecyclePayload>(platform, \"workspace-changed\", {\n\t\t\t\t\taction: \"create\",\n\t\t\t\t\tid: req.workspace.workspaceId,\n\t\t\t\t\tworkspace: req.workspace\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for updating a saved workspace in persistent storage.\n\t\t\t * @param req the update saved workspace request.\n\t\t\t */\n\t\t\tpublic async updateSavedWorkspace(req: UpdateSavedWorkspaceRequest): Promise<void> {\n\t\t\t\t// you can add your own custom implementation here if you are storing your workspaces\n\t\t\t\t// in non-default location (e.g. on the server instead of locally)\n\t\t\t\tlogger.info(`Checking for custom workspace storage with endpoint id: ${WORKSPACE_ENDPOINT_ID_SET}`);\n\t\t\t\tif (endpointProvider.hasEndpoint(WORKSPACE_ENDPOINT_ID_SET)) {\n\t\t\t\t\tconst success = await endpointProvider.action<EndpointWorkspaceSetRequest>(\n\t\t\t\t\t\tWORKSPACE_ENDPOINT_ID_SET,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tplatform: fin.me.identity.uuid,\n\t\t\t\t\t\t\tid: req.workspace.workspaceId,\n\t\t\t\t\t\t\tmetaData: {\n\t\t\t\t\t\t\t\tversion: {\n\t\t\t\t\t\t\t\t\tworkspacePlatformClient: versionInfo.workspacePlatformClient,\n\t\t\t\t\t\t\t\t\tplatformClient: versionInfo.platformClient\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpayload: disableStorageMapping\n\t\t\t\t\t\t\t\t? req.workspace\n\t\t\t\t\t\t\t\t: mapPlatformWorkspaceToStorage(req.workspace, await buildDefaultOptions())\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tlogger.info(`Updated workspace with id: ${req.workspace.workspaceId} against custom storage`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.info(\n\t\t\t\t\t\t\t`Unable to update workspace with id: ${req.workspace.workspaceId} against custom storage`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info(\n\t\t\t\t\t\t`Saving updated workspace to default storage for workspace id: ${req.workspace.workspaceId}.`\n\t\t\t\t\t);\n\t\t\t\t\tawait super.updateSavedWorkspace(req);\n\t\t\t\t\tlogger.info(\n\t\t\t\t\t\t`Saved updated workspace to default storage for workspace id: ${req.workspace.workspaceId}.`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\tworkspaceApplied = true;\n\t\t\t\tawait fireLifecycleEvent<WorkspaceChangedLifecyclePayload>(platform, \"workspace-changed\", {\n\t\t\t\t\taction: \"update\",\n\t\t\t\t\tid: req.workspace.workspaceId,\n\t\t\t\t\tworkspace: req.workspace\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for deleting a saved workspace in persistent storage.\n\t\t\t * @param id of the id of the workspace to delete.\n\t\t\t */\n\t\t\tpublic async deleteSavedWorkspace(id: string): Promise<void> {\n\t\t\t\t// you can add your own custom implementation here if you are storing your workspaces\n\t\t\t\t// in non-default location (e.g. on the server instead of locally)\n\t\t\t\tlogger.info(\n\t\t\t\t\t`Checking for custom workspace storage with endpoint id: ${WORKSPACE_ENDPOINT_ID_REMOVE}`\n\t\t\t\t);\n\t\t\t\tif (endpointProvider.hasEndpoint(WORKSPACE_ENDPOINT_ID_REMOVE)) {\n\t\t\t\t\tconst success = await endpointProvider.action<EndpointWorkspaceRemoveRequest>(\n\t\t\t\t\t\tWORKSPACE_ENDPOINT_ID_REMOVE,\n\t\t\t\t\t\t{ platform: fin.me.identity.uuid, id }\n\t\t\t\t\t);\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tlogger.info(`Removed workspace with id: ${id} from custom storage`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.info(`Unable to remove workspace with id: ${id} from custom storage`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info(`Deleting workspace from default storage for workspace id: ${id}`);\n\t\t\t\t\tawait super.deleteSavedWorkspace(id);\n\t\t\t\t\tlogger.info(`Deleted workspace from default storage for workspace id: ${id}`);\n\t\t\t\t}\n\n\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\tawait fireLifecycleEvent<WorkspaceChangedLifecyclePayload>(platform, \"workspace-changed\", {\n\t\t\t\t\taction: \"delete\",\n\t\t\t\t\tid\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Apply the workspace to the current platform.\n\t\t\t * @param payload The payload for the workspace details.\n\t\t\t * @returns True if the workspace was applied.\n\t\t\t */\n\t\t\tpublic async applyWorkspace(payload: ApplyWorkspacePayload): Promise<boolean> {\n\t\t\t\tif (!payload) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\tif (!workspaceApplied) {\n\t\t\t\t\tlet skipPrompt;\n\t\t\t\t\tconst currentLayout = await platform.getSnapshot();\n\t\t\t\t\tif (Array.isArray(currentLayout.windows) && currentLayout.windows.length === 0) {\n\t\t\t\t\t\tskipPrompt = true;\n\t\t\t\t\t\tif (isEmpty(payload.options)) {\n\t\t\t\t\t\t\tpayload.options = {\n\t\t\t\t\t\t\t\tskipPrompt\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (!isEmpty(payload.options) && isEmpty(payload.options.skipPrompt)) {\n\t\t\t\t\t\t\tpayload.options.skipPrompt = skipPrompt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst applied = await super.applyWorkspace({\n\t\t\t\t\t...payload,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\t...payload.options,\n\t\t\t\t\t\tapplySnapshotOptions: {\n\t\t\t\t\t\t\t...payload.options?.applySnapshotOptions,\n\t\t\t\t\t\t\tcloseExistingWindows: false,\n\t\t\t\t\t\t\tcloseSnapshotWindows: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (applied && !workspaceApplied) {\n\t\t\t\t\tworkspaceApplied = true;\n\t\t\t\t}\n\n\t\t\t\tawait fireLifecycleEvent<WorkspaceChangedLifecyclePayload>(platform, \"workspace-changed\", {\n\t\t\t\t\taction: \"apply\",\n\t\t\t\t\tid: payload.workspaceId,\n\t\t\t\t\tworkspace: payload\n\t\t\t\t});\n\n\t\t\t\treturn applied;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for getting a list of saved pages from persistent storage.\n\t\t\t * @param query an optional query.\n\t\t\t * @returns The list of pages.\n\t\t\t */\n\t\t\tpublic async getSavedPages(query?: string): Promise<Page[]> {\n\t\t\t\t// you can add your own custom implementation here if you are storing your pages\n\t\t\t\t// in non-default location (e.g. on the server instead of locally)\n\t\t\t\tif (!isEmpty(query)) {\n\t\t\t\t\tlogger.info(`Saved pages requested with query: ${query}`);\n\t\t\t\t}\n\t\t\t\tlogger.info(`Checking for custom page storage with endpoint id: ${PAGE_ENDPOINT_ID_LIST}`);\n\t\t\t\tif (endpointProvider.hasEndpoint(PAGE_ENDPOINT_ID_LIST)) {\n\t\t\t\t\tlogger.info(\"Getting saved pages from custom storage\");\n\t\t\t\t\tconst pagesResponse = await endpointProvider.requestResponse<\n\t\t\t\t\t\tEndpointPageListRequest,\n\t\t\t\t\t\tEndpointPageListResponse\n\t\t\t\t\t>(PAGE_ENDPOINT_ID_LIST, { platform: fin.me.identity.uuid, query });\n\t\t\t\t\tif (pagesResponse) {\n\t\t\t\t\t\tlogger.info(\"Returning saved pages from custom storage\");\n\t\t\t\t\t\treturn Object.values(pagesResponse).map((ws) => ws.payload);\n\t\t\t\t\t}\n\t\t\t\t\tlogger.warn(\"No response getting saved pages from custom storage\");\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t\tlogger.info(\"Getting saved pages from default storage\");\n\t\t\t\tconst pagesResponse = await super.getSavedPages(query);\n\t\t\t\tlogger.info(\"Returning saved pages from default storage\");\n\t\t\t\treturn pagesResponse;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for getting a single page in persistent storage.\n\t\t\t * @param id The id of the page to get.\n\t\t\t * @returns The page.\n\t\t\t */\n\t\t\tpublic async getSavedPage(id: string): Promise<Page | undefined> {\n\t\t\t\t// you can add your own custom implementation here if you are storing your pages\n\t\t\t\t// in non-default location (e.g. on the server instead of locally)\n\t\t\t\tlogger.info(`Checking for custom page storage with endpoint id: ${PAGE_ENDPOINT_ID_GET}`);\n\t\t\t\tif (endpointProvider.hasEndpoint(PAGE_ENDPOINT_ID_GET)) {\n\t\t\t\t\tlogger.info(`Getting saved page from custom storage for page id: ${id}`);\n\t\t\t\t\tconst pageResponse = await endpointProvider.requestResponse<\n\t\t\t\t\t\tEndpointPageGetRequest,\n\t\t\t\t\t\tEndpointPageGetResponse\n\t\t\t\t\t>(PAGE_ENDPOINT_ID_GET, {\n\t\t\t\t\t\tplatform: fin.me.identity.uuid,\n\t\t\t\t\t\tid\n\t\t\t\t\t});\n\t\t\t\t\tif (pageResponse) {\n\t\t\t\t\t\tlogger.info(`Returning saved page from custom storage for page id: ${id}`);\n\t\t\t\t\t\tconst defaultOpts = await buildDefaultOptions();\n\t\t\t\t\t\treturn mapPlatformPageFromStorage(pageResponse.payload, defaultOpts);\n\t\t\t\t\t}\n\n\t\t\t\t\tlogger.warn(`No response getting saved page from custom storage for page id: ${id}`);\n\t\t\t\t\treturn {} as Page;\n\t\t\t\t}\n\t\t\t\tlogger.info(`Getting saved page with id ${id} from default storage`);\n\t\t\t\tconst pageResponse = await super.getSavedPage(id);\n\t\t\t\tlogger.info(`Returning saved page with id ${id} from default storage`);\n\t\t\t\treturn pageResponse;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for creating a saved page in persistent storage.\n\t\t\t * @param req the create saved page request.\n\t\t\t */\n\t\t\tpublic async createSavedPage(req: CreateSavedPageRequest): Promise<void> {\n\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\tconst windowBoundsAndState = await getPageBoundsAndState(platform, req.page.pageId);\n\t\t\t\tif (!isEmpty(windowBoundsAndState)) {\n\t\t\t\t\tif (isEmpty(req.page.customData)) {\n\t\t\t\t\t\treq.page.customData = {};\n\t\t\t\t\t}\n\t\t\t\t\t// only set if it hasn't been provided by the caller\n\t\t\t\t\tif (isEmpty(req.page?.customData?.windowBounds)) {\n\t\t\t\t\t\treq.page.customData.windowBounds = windowBoundsAndState.bounds;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isEmpty(req.page?.customData?.windowState)) {\n\t\t\t\t\t\treq.page.customData.windowState = windowBoundsAndState.state;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// you can add your own custom implementation here if you are storing your pages\n\t\t\t\t// in non-default location (e.g. on the server instead of locally)\n\t\t\t\tlogger.info(`Checking for custom page storage with endpoint id: ${PAGE_ENDPOINT_ID_SET}`);\n\t\t\t\tif (endpointProvider.hasEndpoint(PAGE_ENDPOINT_ID_SET)) {\n\t\t\t\t\tlogger.info(`Saving page with id: ${req.page.pageId} to custom storage`);\n\t\t\t\t\tconst success = await endpointProvider.action<EndpointPageSetRequest>(PAGE_ENDPOINT_ID_SET, {\n\t\t\t\t\t\tplatform: fin.me.identity.uuid,\n\t\t\t\t\t\tid: req.page.pageId,\n\t\t\t\t\t\tmetaData: {\n\t\t\t\t\t\t\tversion: {\n\t\t\t\t\t\t\t\tworkspacePlatformClient: versionInfo.workspacePlatformClient,\n\t\t\t\t\t\t\t\tplatformClient: versionInfo.platformClient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpayload: disableStorageMapping\n\t\t\t\t\t\t\t? req.page\n\t\t\t\t\t\t\t: mapPlatformPageToStorage(req.page, await buildDefaultOptions())\n\t\t\t\t\t});\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tlogger.info(`Saved page with id: ${req.page.pageId} to custom storage`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.info(`Unable to save page with id: ${req.page.pageId} to custom storage`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info(`creating saved page and saving to default storage. PageId: ${req.page.pageId}`);\n\t\t\t\t\tawait super.createSavedPage(req);\n\t\t\t\t\tlogger.info(`Saved page with id: ${req.page.pageId} to default storage`);\n\t\t\t\t}\n\n\t\t\t\tawait fireLifecycleEvent<PageChangedLifecyclePayload>(platform, \"page-changed\", {\n\t\t\t\t\taction: \"create\",\n\t\t\t\t\tid: req.page.pageId,\n\t\t\t\t\tpage: req.page\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for updating a saved page in persistent storage.\n\t\t\t * @param req the update saved page request.\n\t\t\t */\n\t\t\tpublic async updateSavedPage(req: UpdateSavedPageRequest): Promise<void> {\n\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\tconst windowBoundsAndState = await getPageBoundsAndState(platform, req.page.pageId);\n\t\t\t\tif (!isEmpty(windowBoundsAndState)) {\n\t\t\t\t\tif (isEmpty(req.page.customData)) {\n\t\t\t\t\t\treq.page.customData = {};\n\t\t\t\t\t}\n\t\t\t\t\treq.page.customData.windowBounds = windowBoundsAndState.bounds;\n\t\t\t\t\treq.page.customData.windowState = windowBoundsAndState.state;\n\t\t\t\t}\n\t\t\t\t// you can add your own custom implementation here if you are storing your pages\n\t\t\t\t// in non-default location (e.g. on the server instead of locally)\n\t\t\t\tlogger.info(`Checking for custom page storage with endpoint id: ${PAGE_ENDPOINT_ID_SET}`);\n\t\t\t\tif (endpointProvider.hasEndpoint(PAGE_ENDPOINT_ID_SET)) {\n\t\t\t\t\tlogger.info(`Updating saved page and saving to custom storage with page id: ${req.page.pageId}`);\n\t\t\t\t\tconst success = await endpointProvider.action<EndpointPageSetRequest>(PAGE_ENDPOINT_ID_SET, {\n\t\t\t\t\t\tplatform: fin.me.identity.uuid,\n\t\t\t\t\t\tid: req.page.pageId,\n\t\t\t\t\t\tmetaData: {\n\t\t\t\t\t\t\tversion: {\n\t\t\t\t\t\t\t\tworkspacePlatformClient: versionInfo.workspacePlatformClient,\n\t\t\t\t\t\t\t\tplatformClient: versionInfo.platformClient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tpayload: disableStorageMapping\n\t\t\t\t\t\t\t? req.page\n\t\t\t\t\t\t\t: mapPlatformPageToStorage(req.page, await buildDefaultOptions())\n\t\t\t\t\t});\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tlogger.info(`Updated page with id: ${req.page.pageId} against custom storage`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.info(`Unable to save page with id: ${req.page.pageId} against custom storage`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info(`updating saved page and saving to default storage with page id: ${req.page.pageId}`);\n\t\t\t\t\tawait super.updateSavedPage(req);\n\t\t\t\t\tlogger.info(`Updated page with id: ${req.page.pageId} against default storage`);\n\t\t\t\t}\n\n\t\t\t\tawait fireLifecycleEvent<PageChangedLifecyclePayload>(platform, \"page-changed\", {\n\t\t\t\t\taction: \"update\",\n\t\t\t\t\tid: req.page.pageId,\n\t\t\t\t\tpage: req.page\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for deleting a saved page in persistent storage.\n\t\t\t * @param id of the id of the page to delete.\n\t\t\t */\n\t\t\tpublic async deleteSavedPage(id: string): Promise<void> {\n\t\t\t\t// you can add your own custom implementation here if you are storing your pages\n\t\t\t\t// in non-default location (e.g. on the server instead of locally)\n\t\t\t\tlogger.info(`Checking for custom page storage with endpoint id: ${PAGE_ENDPOINT_ID_REMOVE}`);\n\t\t\t\tif (endpointProvider.hasEndpoint(PAGE_ENDPOINT_ID_REMOVE)) {\n\t\t\t\t\tlogger.info(`deleting saved page from custom storage. PageId: ${id}`);\n\t\t\t\t\tconst success = await endpointProvider.action<EndpointPageRemoveRequest>(PAGE_ENDPOINT_ID_REMOVE, {\n\t\t\t\t\t\tplatform: fin.me.identity.uuid,\n\t\t\t\t\t\tid\n\t\t\t\t\t});\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tlogger.info(`Removed page with id: ${id} from custom storage`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.info(`Unable to remove page with id: ${id} from custom storage`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlogger.info(`deleting saved page from default storage. PageId: ${id}`);\n\t\t\t\t\tawait super.deleteSavedPage(id);\n\t\t\t\t\tlogger.info(`Removed page with id: ${id} from custom storage`);\n\t\t\t\t}\n\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\tawait fireLifecycleEvent<PageChangedLifecyclePayload>(platform, \"page-changed\", {\n\t\t\t\t\taction: \"delete\",\n\t\t\t\t\tid\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for showing a global context menu given a menu template,\n\t\t\t * handler callback, and screen coordinates.\n\t\t\t * @param req the payload received by the provider call\n\t\t\t * @param callerIdentity OF identity of the entity from which the request originated\n\t\t\t * @returns Nothing.\n\t\t\t */\n\t\t\tpublic async openGlobalContextMenu(\n\t\t\t\treq: OpenGlobalContextMenuPayload,\n\t\t\t\tcallerIdentity: OpenFin.Identity\n\t\t\t): Promise<void> {\n\t\t\t\tconst template = await menuClient.getGlobalMenu(req.template, { windowIdentity: req.identity });\n\n\t\t\t\tconst popupMenuStyle = globalMenuStyle ?? menuClient.getPopupMenuStyle();\n\n\t\t\t\tif (popupMenuStyle === \"platform\") {\n\t\t\t\t\treturn super.openGlobalContextMenu(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...req,\n\t\t\t\t\t\t\ttemplate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallerIdentity\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst result = await menuClient.showPopupMenu<GlobalContextMenuItemData>(\n\t\t\t\t\t{ x: req.x, y: req.y },\n\t\t\t\t\treq.identity,\n\t\t\t\t\t\"\",\n\t\t\t\t\ttemplate,\n\t\t\t\t\t{ popupMenuStyle }\n\t\t\t\t);\n\t\t\t\tif (result) {\n\t\t\t\t\treq.callback(result, req);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for showing a view tab context menu given a menu template,\n\t\t\t * handler callback, and screen coordinates.\n\t\t\t * @param req the payload received by the provider call\n\t\t\t * @param callerIdentity OF identity of the entity from which the request originated\n\t\t\t * @returns Nothing.\n\t\t\t */\n\t\t\tpublic async openViewTabContextMenu(\n\t\t\t\treq: OpenViewTabContextMenuPayload,\n\t\t\t\tcallerIdentity: OpenFin.Identity\n\t\t\t): Promise<void> {\n\t\t\t\tconst template = await menuClient.getViewMenu(req.template, {\n\t\t\t\t\twindowIdentity: req.identity,\n\t\t\t\t\tviews: req.selectedViews\n\t\t\t\t});\n\n\t\t\t\tconst popupMenuStyle = viewMenuStyle ?? menuClient.getPopupMenuStyle();\n\n\t\t\t\tif (popupMenuStyle === \"platform\") {\n\t\t\t\t\treturn super.openViewTabContextMenu(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...req,\n\t\t\t\t\t\t\ttemplate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallerIdentity\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst result = await menuClient.showPopupMenu<ViewTabMenuData>(\n\t\t\t\t\t{ x: req.x, y: req.y },\n\t\t\t\t\treq.identity,\n\t\t\t\t\t\"\",\n\t\t\t\t\ttemplate,\n\t\t\t\t\t{ popupMenuStyle }\n\t\t\t\t);\n\t\t\t\tif (result) {\n\t\t\t\t\treq.callback(result, req);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for showing a page tab context menu given a menu template,\n\t\t\t * handler callback, and screen coordinates.\n\t\t\t * @param req the payload received by the provider call\n\t\t\t * @param callerIdentity OF identity of the entity from which the request originated\n\t\t\t * @returns Nothing.\n\t\t\t */\n\t\t\tpublic async openPageTabContextMenu(\n\t\t\t\treq: OpenPageTabContextMenuPayload,\n\t\t\t\tcallerIdentity: OpenFin.Identity\n\t\t\t): Promise<void> {\n\t\t\t\tconst template = await menuClient.getPageMenu(req.template, {\n\t\t\t\t\twindowIdentity: req.identity,\n\t\t\t\t\tpageId: req.pageId\n\t\t\t\t});\n\n\t\t\t\tconst popupMenuStyle = pageMenuStyle ?? menuClient.getPopupMenuStyle();\n\n\t\t\t\tif (popupMenuStyle === \"platform\") {\n\t\t\t\t\treturn super.openPageTabContextMenu(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...req,\n\t\t\t\t\t\t\ttemplate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallerIdentity\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst result = await menuClient.showPopupMenu<PageTabContextMenuItemData>(\n\t\t\t\t\t{ x: req.x, y: req.y },\n\t\t\t\t\treq.identity,\n\t\t\t\t\t\"\",\n\t\t\t\t\ttemplate,\n\t\t\t\t\t{ popupMenuStyle }\n\t\t\t\t);\n\t\t\t\tif (result) {\n\t\t\t\t\treq.callback(result, req);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Closes the current Platform and all child windows and views.\n\t\t\t * @param payload Undefined unless you have implemented a custom quit protocol.\n\t\t\t * @param callerIdentity Identity of the entity that called quit.\n\t\t\t * @returns Nothing.\n\t\t\t */\n\t\t\tpublic async quit(payload: undefined, callerIdentity: OpenFin.Identity): Promise<void> {\n\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\tawait fireLifecycleEvent(platform, \"before-quit\");\n\n\t\t\t\treturn super.quit(payload, callerIdentity);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles requests to create a window in the current platform.\n\t\t\t * @param options Window options for the window to be created.\n\t\t\t * @param identity If createWindow was called, the identity of the caller will be here. If `createWindow` was\n\t\t\t * called as part of applying a snapshot or creating a view without a target window, `identity` will be\n\t\t\t * undefined.\n\t\t\t * @returns The created window.\n\t\t\t */\n\t\t\tpublic async createWindow(\n\t\t\t\toptions: OpenFin.PlatformWindowCreationOptions,\n\t\t\t\tidentity?: OpenFin.Identity\n\t\t\t): Promise<OpenFin.Window> {\n\t\t\t\t// AutoShow is not defined as optional, but it can be undefined\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unnecessary-boolean-literal-compare\n\t\t\t\tif (options.autoShow === false) {\n\t\t\t\t\t// We use this case to match modal windows\n\t\t\t\t\t// so we don't theme or position them\n\t\t\t\t\treturn super.createWindow(options, identity);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!isEmpty(windowPositioningOptions) &&\n\t\t\t\t\t!windowPositioningOptions?.disableWindowPositioningStrategy\n\t\t\t\t) {\n\t\t\t\t\tconst hasLeft = !isEmpty(options?.defaultLeft);\n\t\t\t\t\tconst hasTop = !isEmpty(options?.defaultTop);\n\n\t\t\t\t\tif (!hasLeft || !hasTop) {\n\t\t\t\t\t\tconst position =\n\t\t\t\t\t\t\tawait utilClient.position.getWindowPositionUsingStrategy(windowPositioningOptions);\n\n\t\t\t\t\t\tif (!hasLeft && !isEmpty(position?.left)) {\n\t\t\t\t\t\t\toptions.defaultLeft = position.left;\n\t\t\t\t\t\t\tlogger.debug(`Updating default left to ${position.left} using window positioning strategy`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!hasTop && !isEmpty(position?.top)) {\n\t\t\t\t\t\t\toptions.defaultTop = position.top;\n\t\t\t\t\t\t\tlogger.debug(`Updating default top to ${position.top} using window positioning strategy`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst overrideDefaultButtons = Array.isArray(options?.workspacePlatform?.toolbarOptions?.buttons);\n\n\t\t\t\tif (!overrideDefaultButtons) {\n\t\t\t\t\t// The window options don't override the toolbar buttons\n\t\t\t\t\t// so we assume we are using the workspace defaults\n\t\t\t\t\t// Since the defaults were created using the theme at startup\n\t\t\t\t\t// we need to replace them with the current set of default\n\t\t\t\t\t// buttons which are theme and condition aware\n\t\t\t\t\toptions.workspacePlatform = options.workspacePlatform ?? {};\n\t\t\t\t\toptions.workspacePlatform.toolbarOptions = options.workspacePlatform.toolbarOptions ?? {};\n\t\t\t\t\tconst buttons = await buttonClient.getToolbarButtons(options);\n\t\t\t\t\tif (!isEmpty(buttons)) {\n\t\t\t\t\t\toptions.workspacePlatform.toolbarOptions.buttons = buttons;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst window = await super.createWindow(options, identity);\n\n\t\t\t\ttry {\n\t\t\t\t\tlogger.info(\"After Create Window\", await window.getOptions());\n\t\t\t\t} catch {\n\t\t\t\t\t// the logging is for informational purposes during debugging. If it fails\n\t\t\t\t\t// the window may have closed straight after opening (e.g. automation testing)\n\t\t\t\t}\n\n\t\t\t\t// If the default buttons were overwritten then hopefully the creator\n\t\t\t\t// used correctly themed versions, but in case they didn't we send\n\t\t\t\t// an update for the colors.\n\t\t\t\tif (overrideDefaultButtons) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\t\t\tconst browserWindow = platform.Browser.wrapSync(window.identity);\n\t\t\t\t\t\tawait buttonClient.updateBrowserWindowButtonsColorScheme(browserWindow);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// Probably not a browser window\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn window;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for setting selected scheme.\n\t\t\t * @param schemeType Scheme to be set\n\t\t\t * @returns Nothing.\n\t\t\t */\n\t\t\tpublic async setSelectedScheme(schemeType: ColorSchemeOptionType): Promise<void> {\n\t\t\t\t// The color scheme has been updated, so update the theme\n\t\t\t\tif (isEmpty(themeClient.setCurrentColorSchemeMode)) {\n\t\t\t\t\tlogger.warn(\"setCurrentColorSchemeMode is not implemented in the theme client.\");\n\t\t\t\t\tawait super.setSelectedScheme(schemeType);\n\t\t\t\t} else {\n\t\t\t\t\tlet colorSchemeMode: ColorSchemeMode | undefined;\n\t\t\t\t\tswitch (schemeType) {\n\t\t\t\t\t\tcase \"dark\":\n\t\t\t\t\t\t\tcolorSchemeMode = ColorSchemeMode.Dark;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"light\":\n\t\t\t\t\t\t\tcolorSchemeMode = ColorSchemeMode.Light;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcolorSchemeMode = undefined;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tawait Promise.all([\n\t\t\t\t\t\tthemeClient.setCurrentColorSchemeMode(colorSchemeMode),\n\t\t\t\t\t\tsuper.setSelectedScheme(schemeType)\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for setting the language.\n\t\t\t * @param locale The locale in ISO language code format.\n\t\t\t */\n\t\t\tpublic async setLanguage(locale: Locale): Promise<void> {\n\t\t\t\tlogger.info(`Setting language to: ${locale}`);\n\t\t\t\tawait Promise.all([notifyLanguageChange(locale), super.setLanguage(locale)]);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for handling Workspace analytics events.\n\t\t\t * @param events The list of analytics events to process.\n\t\t\t * @returns Nothing.\n\t\t\t */\n\t\t\tpublic async handleAnalytics(events: AnalyticsEvent[]): Promise<void> {\n\t\t\t\tif (analyticsClient) {\n\t\t\t\t\tconst platformEvents: PlatformAnalyticsEvent[] = [];\n\t\t\t\t\tconst timestamp = new Date();\n\t\t\t\t\tfor (const analyticEvent of events) {\n\t\t\t\t\t\tplatformEvents.push({ timestamp, ...analyticEvent });\n\t\t\t\t\t}\n\t\t\t\t\tawait analyticsClient.handleAnalytics(platformEvents);\n\t\t\t\t}\n\n\t\t\t\treturn super.handleAnalytics(events);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for getting the dock provider from persistent storage.\n\t\t\t * @param id The id of the dock provider to get.\n\t\t\t * @returns The loaded dock provider config.\n\t\t\t */\n\t\t\tpublic async getDockProviderConfig(id: string): Promise<DockProviderConfigWithIdentity | undefined> {\n\t\t\t\treturn dockClient.loadConfig(id, async (providerId: string) =>\n\t\t\t\t\tsuper.getDockProviderConfig(providerId)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for saving a dock provider config to persistent storage.\n\t\t\t * @param config The new dock config to save to persistent storage.\n\t\t\t * @returns Nothing.\n\t\t\t */\n\t\t\tpublic async saveDockProviderConfig(config: DockProviderConfigWithIdentity): Promise<void> {\n\t\t\t\treturn dockClient.saveConfig(config, async (providerConfig: DockProviderConfigWithIdentity) =>\n\t\t\t\t\tsuper.saveDockProviderConfig(providerConfig)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Determine whether or not a dialog should be shown.\n\t\t\t * @param payload the page that is going to be closed.\n\t\t\t * @returns Whether or not a modal should be shown\n\t\t\t */\n\t\t\tpublic async handleSaveModalOnPageClose(\n\t\t\t\tpayload: HandleSaveModalOnPageClosePayload\n\t\t\t): Promise<SaveModalOnPageCloseResult> {\n\t\t\t\t// close confirmation modal will not be shown if the page is locked\n\t\t\t\tif (isEmpty(unsavedPagePromptStrategy) || unsavedPagePromptStrategy === \"default\") {\n\t\t\t\t\treturn super.handleSaveModalOnPageClose(payload);\n\t\t\t\t}\n\t\t\t\tif (unsavedPagePromptStrategy === \"never\") {\n\t\t\t\t\treturn { shouldShowModal: false };\n\t\t\t\t}\n\t\t\t\tif (unsavedPagePromptStrategy === \"skip-untitled\") {\n\t\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\t\tconst defaultPageTitle = await platform.Browser.getUniquePageTitle();\n\t\t\t\t\tconst defaultPagePrefix = defaultPageTitle.split(\" \")[0];\n\t\t\t\t\tif (payload.page.title.startsWith(defaultPagePrefix)) {\n\t\t\t\t\t\treturn { shouldShowModal: false };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlogger.warn(\"Unsaved page prompt strategy is not valid. Using default.\");\n\t\t\t\treturn super.handleSaveModalOnPageClose(payload);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Copies a page, respecting conventions for page and panel names.\n\t\t\t * @param payload The payload for the copy page request.\n\t\t\t * @returns The copied page.\n\t\t\t */\n\t\t\tpublic async copyPage(payload: CopyPagePayload): Promise<Page> {\n\t\t\t\tconst panels = isEmpty(payload?.page?.panels)\n\t\t\t\t\t? payload?.page?.panels\n\t\t\t\t\t: duplicateLayout(payload.page.panels);\n\n\t\t\t\tconst layout = duplicateLayout(payload.page.layout);\n\n\t\t\t\treturn {\n\t\t\t\t\t...payload.page,\n\t\t\t\t\tpanels,\n\t\t\t\t\tlayout,\n\t\t\t\t\tpageId: randomUUID(),\n\t\t\t\t\tisReadOnly: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for detecting if a page change qualifies as putting the page in an unsaved state.\n\t\t\t * @param payload the page with new changes and the identity of the OF window where the page change occured.\n\t\t\t * @returns modified page state\n\t\t\t */\n\t\t\tpublic async handlePageChanges(payload: HandlePageChangesPayload): Promise<ModifiedPageState> {\n\t\t\t\treturn super.handlePageChanges(payload);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Implementation for setting the active page in a browser window.\n\t\t\t * Called when the active page is changed and on browser window creation.\n\t\t\t * @param payload The page which is about to become active.\n\t\t\t * @returns nothing.\n\t\t\t */\n\t\t\tpublic async setActivePage(payload: SetActivePageForWindowPayload): Promise<void> {\n\t\t\t\tconst platform = getCurrentSync();\n\t\t\t\tawait Promise.all([\n\t\t\t\t\tsuper.setActivePage(payload),\n\t\t\t\t\tfireLifecycleEvent<PageChangedLifecyclePayload>(platform, \"page-changed\", {\n\t\t\t\t\t\taction: \"focus\",\n\t\t\t\t\t\tid: payload.pageId\n\t\t\t\t\t})\n\t\t\t\t]);\n\t\t\t}\n\t\t};\n}\n","import type { ModuleImplementation, ModuleTypes } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { WpsPlatformOverride } from \"./platform-override\";\n\n/**\n * Define the entry points for the module.\n */\nexport const entryPoints: { [type in ModuleTypes]?: ModuleImplementation } = {\n\tplatformOverride: new WpsPlatformOverride()\n};\n","// eslint-disable-next-line max-classes-per-file\nimport type OpenFin from \"@openfin/core\";\nimport type { WorkspacePlatformProvider } from \"@openfin/workspace-platform\";\nimport type { Logger, LoggerCreator } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type { ModuleDefinition } from \"workspace-platform-starter/shapes/module-shapes\";\nimport type {\n\tPlatformOverride,\n\tPlatformOverrideHelpers,\n\tPlatformOverrideOptions\n} from \"workspace-platform-starter/shapes/platform-shapes\";\nimport { getConstructorOverride as wpsConstructorOverride } from \"./platform/wps-platform-override\";\nimport type { WpsPlatformOverrideOptions } from \"./shapes\";\n\n/**\n * Implementation for the wps platform override.\n */\nexport class WpsPlatformOverride implements PlatformOverride<WpsPlatformOverrideOptions> {\n\t/**\n\t * The module definition including settings.\n\t * @internal\n\t */\n\tprivate _definition: ModuleDefinition<WpsPlatformOverrideOptions> | undefined;\n\n\t/**\n\t * The logger for displaying information from the module.\n\t * @internal\n\t */\n\tprivate _logger?: Logger;\n\n\t/**\n\t * Helper methods for the module.\n\t * @internal\n\t */\n\tprivate _helpers: PlatformOverrideHelpers | undefined;\n\n\t/**\n\t * Initialize the module.\n\t * @param definition The definition of the module from configuration include custom options.\n\t * @param loggerCreator For logging entries.\n\t * @param helpers Helper methods for the module to interact with the application core.\n\t * @returns Nothing.\n\t */\n\tpublic async initialize(\n\t\tdefinition: ModuleDefinition<WpsPlatformOverrideOptions>,\n\t\tloggerCreator: LoggerCreator,\n\t\thelpers: PlatformOverrideHelpers\n\t): Promise<void> {\n\t\tthis._definition = definition;\n\t\tconst loggerName = definition.data?.loggerName ?? \"WpsPlatformOverride\";\n\t\tthis._logger = loggerCreator(loggerName);\n\t\tthis._helpers = helpers;\n\n\t\tthis._logger.info(\"Initializing\");\n\t}\n\n\t/**\n\t * Close down any resources being used by the module.\n\t * @returns Nothing.\n\t */\n\tpublic async closedown(): Promise<void> {\n\t\tthis._logger?.info(\"Closedown\");\n\t}\n\n\t/**\n\t * Get the override constructor for the platform override (useful if you wish this implementation to be layered with other implementations and passed to the platform's initialization object as part of an array).\n\t * @param options The options for the platform override defined as part of the platform.\n\t * @returns The override constructor to be used in an array.\n\t */\n\tpublic async getConstructorOverride(\n\t\toptions: PlatformOverrideOptions\n\t): Promise<OpenFin.ConstructorOverride<WorkspacePlatformProvider>> {\n\t\tif (!this._helpers || !this._logger) {\n\t\t\tthrow new Error(\"Module not initialized\");\n\t\t}\n\t\treturn wpsConstructorOverride(options, this._logger, this._helpers);\n\t}\n}\n"],"names":["ColorSchemeMode","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","isEmpty","value","isObject","Array","isArray","objectClone","undefined","JSON","parse","stringify","deepEqual","obj1","obj2","matchPropertyOrder","objKeys1","keys","objKeys2","length","i","deepMerge","target","sources","targetAsMap","source","shift","map","k","Number","parseInt","sourceAsMap","randomUUID","globalThis","crypto","replace","c","rnd","getRandomValues","Uint8Array","toString","mapPlatformWorkspaceToStorage","workspace","defaultOptions","clone","win","snapshot","windows","platformWorkspaceWindowToStorage","removeProp","workspaceSnapshotDefaults","propName","defaultValue","contextGroupStates","green","purple","orange","red","pink","yellow","workspaceSnapshotDefault","removePropIfNonDefault","mapPlatformPageToStorage","page","platformPageToStorage","window","windowDefaults","bottomRightCorner","size","sides","top","right","bottom","left","devtools","zoom","reload","reloadIgnoringCache","blue","iframe","crossOriginInjection","sameOriginInjection","enableDeprecatedSharedName","allowlist","denylist","whitelist","blacklist","rules","enable","height","width","showViewsOnSplitterDrag","enabled","showViewsOnWindowResize","showViewsOnTabDrag","template","windowDefault","workspacePlatform","workspacePlatformDefaults","workspacePlatformDefault","pages","pageDefaults","pageDefault","platformPageLayoutToStorage","layout","pageLayout","pageLayoutDefaults","borderWidth","borderGrabWidth","minItemHeight","minItemWidth","headerHeight","dragProxyWidth","dragProxyHeight","close","maximise","minimise","popout","popin","tabDropdown","pageLayoutDefault","settings","pageSettingsDefaults","pageSettingsDefault","content","component","platformLayoutComponentToStorage","componentDefaults","componentDefault","componentState","componentStateDefaults","fin","me","identity","uuid","x","y","componentStateDefault","view","comp","platformWorkspaceWindowFromStorage","merged","platformPageFromStorage","duplicateLayout","_","nestedValue","name","isString","trim","url","test","async","buildDefaultOptions","browserProvider","app","Application","getCurrent","manifest","getManifest","platform","defaultWindowOptions","defaultPageOptions","defaultViewOptions","getPageBoundsAndState","pageId","fromStorage","boundsAndState","Storage","getPage","customData","windowBounds","bounds","state","windowState","Browser","getAllAttachedPages","windowId","parentIdentity","savedPage","getLastFocusedWindow","hostWindow","wrapSync","openfinWindow","getBounds","getState","WORKSPACE_ENDPOINT_ID_LIST","WORKSPACE_ENDPOINT_ID_GET","WORKSPACE_ENDPOINT_ID_SET","WORKSPACE_ENDPOINT_ID_REMOVE","PAGE_ENDPOINT_ID_LIST","PAGE_ENDPOINT_ID_GET","PAGE_ENDPOINT_ID_REMOVE","PAGE_ENDPOINT_ID_SET","unsavedPagePromptStrategy","disableStorageMapping","globalMenuStyle","pageMenuStyle","viewMenuStyle","workspaceApplied","entryPoints","platformOverride","initialize","loggerCreator","helpers","this","_definition","loggerName","data","_logger","_helpers","info","closedown","getConstructorOverride","options","Error","overrideOptions","logger","endpointProvider","analyticsClient","platformProviderOptions","browserProviderOptions","menuOptions","styles","globalMenu","pageMenu","viewMenu","getEndpointClient","getAnalyticsClient","getThemeClient","getVersionInfo","getPlatform","getMenuClient","fireLifecycleEvent","getSnapClient","getConnectionClient","versionInfo","getCurrentSync","menuClient","utilClient","getUtilClient","snapClient","windowPositioningOptions","position","getWindowPositionOptions","themeClient","connectionClient","buttonClient","getButtonClient","dockClient","getDockClient","notifyLanguageChange","locale","appSessionContextGroup","interop","joinSessionContextGroup","setContext","type","Base","launchIntoPlatform","payload","debug","getSnapshot","super","isEnabled","decorateSnapshot","applySnapshot","existingApps","prepareToApplyDecoratedSnapshot","applyDecoratedSnapshot","applyClientSnapshot","getSavedWorkspaces","query","hasEndpoint","workspacesResponse","requestResponse","values","response","warn","savedWorkspaces","getSavedWorkspace","id","workspaceResponse","defaultOpts","newWins","push","mapStorageToPlatformWorkspace","savedWorkspace","createSavedWorkspace","req","action","workspaceId","metaData","version","workspacePlatformClient","platformClient","updateSavedWorkspace","deleteSavedWorkspace","applyWorkspace","skipPrompt","currentLayout","applied","applySnapshotOptions","closeExistingWindows","closeSnapshotWindows","getSavedPages","pagesResponse","ws","getSavedPage","pageResponse","mapPlatformPageFromStorage","createSavedPage","windowBoundsAndState","updateSavedPage","deleteSavedPage","openGlobalContextMenu","callerIdentity","getGlobalMenu","windowIdentity","popupMenuStyle","getPopupMenuStyle","result","showPopupMenu","callback","openViewTabContextMenu","getViewMenu","views","selectedViews","openPageTabContextMenu","getPageMenu","quit","createWindow","autoShow","disableWindowPositioningStrategy","hasLeft","defaultLeft","hasTop","defaultTop","getWindowPositionUsingStrategy","overrideDefaultButtons","toolbarOptions","buttons","getToolbarButtons","getOptions","browserWindow","updateBrowserWindowButtonsColorScheme","setSelectedScheme","schemeType","setCurrentColorSchemeMode","colorSchemeMode","Dark","Light","Promise","all","setLanguage","handleAnalytics","events","platformEvents","timestamp","Date","analyticEvent","getDockProviderConfig","loadConfig","providerId","saveDockProviderConfig","config","saveConfig","providerConfig","handleSaveModalOnPageClose","shouldShowModal","defaultPagePrefix","getUniquePageTitle","split","title","startsWith","copyPage","panels","isReadOnly","handlePageChanges","setActivePage"],"sourceRoot":""}