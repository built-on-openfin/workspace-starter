var e;function t(e){return null==e}function n(e){return function(e){return null!=e&&"string"==typeof e}(e)&&e.trim().length>0}function o(){return"randomUUID"in globalThis.crypto?globalThis.crypto.randomUUID():"10000000-1000-4000-8000-100000000000".replace(/[018]/g,(function(e){const t=globalThis.crypto.getRandomValues(new Uint8Array(1))[0]&15>>Number(e)/4;return(Number(e)^t).toString(16)}))}!function(e){e.CustomButton="CustomButton",e.StoreCustomButton="StoreCustomButton",e.CustomDropdownItem="CustomDropdownItem",e.GlobalContextMenu="GlobalContextMenu",e.ViewTabContextMenu="ViewTabContextMenu",e.PageTabContextMenu="PageTabContextMenu",e.SaveButtonContextMenu="SaveButtonContextMenu",e.API="API"}(e||(e={}));const i="view",a="inline-view";function s(e,i){return n(i?.name)&&!t(i.url)&&(/\/[\d,a-z-]{36}$/.test(i.name)&&(i.name=i.name.replace(/([\d,a-z-]{36}$)/,o())),/-[\d,a-z-]{36}$/.test(i.name)&&(i.name=i.name.replace(/(-[\d,a-z-]{36}$)/,o()))),i}const r={actions:new class{async initialize(e,t,n){this._logger=t("DeveloperActions"),this._helpers=n}async get(t){const r={"developer-inspect":async t=>{if(t.callerType===e.ViewTabContextMenu)for(let e=0;e<t.selectedViews.length;e++){const n=t.selectedViews[e],o=fin.View.wrapSync(n);await o.showDeveloperTools()}else if(t.callerType===e.PageTabContextMenu){const e=t.windowIdentity,n=fin.Window.wrapSync(e);await n.showDeveloperTools()}else if(t.callerType===e.GlobalContextMenu){const e="window"==("platform"===t?.customData?.target?"platform":"window")?t.windowIdentity:{uuid:t.windowIdentity.uuid,name:t.windowIdentity.uuid},n=fin.Window.wrapSync(e);await n.showDeveloperTools()}}};return r["developer-get-snapshot"]=async t=>{if(t.callerType===e.PageTabContextMenu){const e=t.windowIdentity,n=fin.Window.wrapSync(e),i=await n.getOptions();let a=i.workspacePlatform.pages[0];if(i.workspacePlatform.pages.length>1&&(a=i.workspacePlatform.pages.find((e=>e.pageId===t.pageId))),a){const e=o();i.workspacePlatform.pages=[a],i.layout=a.layout;const t=a.layoutContainerKey;i.layoutSnapshot.layouts[t]=a.layout,i.layoutSnapshot.pages=i.workspacePlatform.pages;let n=JSON.stringify(i,s,2);n=n.replaceAll(a.pageId,e),n=n.replaceAll(t,o()),await fin.Clipboard.writeText({data:n}),this._logger?.info(`Copied page snapshot for page ${a.pageId} with new pageId ${e} to clipboard`,JSON.parse(n))}else this._logger?.warn(`No page found with id ${t.pageId} in window ${n.identity.name}`)}else if(t.callerType===e.GlobalContextMenu){const e=t.windowIdentity,n=fin.Window.wrapSync(e),i=await n.getOptions(),a={},r={};for(let e=0;e<i.workspacePlatform.pages.length;e++){const t=o(),n=o(),s=i.workspacePlatform.pages[e].layoutContainerKey;a[i.workspacePlatform.pages[e].pageId]=t,r[s]=n}let l=JSON.stringify(i,s,2);const p=Object.keys(a);for(let e=0;e<p.length;e++)l=l.replaceAll(p[e],a[p[e]]);const c=Object.keys(r);for(let e=0;e<c.length;e++)l=l.replaceAll(c[e],r[c[e]]);await fin.Clipboard.writeText({data:l}),this._logger?.info(`Copied page snapshot for window ${n.identity.name} to clipboard`,JSON.parse(l))}},r["raise-create-app-definition-intent"]=async t=>{if(t.callerType===e.ViewTabContextMenu){const e=fin.Interop.connectSync(fin.me.identity.uuid,{});for(let o=0;o<t.selectedViews.length;o++){const s=t.selectedViews[o],r="CreateAppDefinition";try{const t=fin.View.wrapSync(s),o=await t.getOptions(),l=await t.getInfo(),p=o.name,c=n(o.fdc3InteropApi)?o.fdc3InteropApi:"2.0",d=Array.isArray(o.preloadScripts)&&o.preloadScripts.length>0?o.preloadScripts:void 0,u={url:l.url,fdc3InteropApi:c,interop:o.interop,customData:o.customData,preloadScripts:d},y=[],f=l.favicons||[];for(let e=0;e<f.length;e++)y.push({src:f[e]});const g={name:r,context:{type:"openfin.app",app:{appId:p,name:p,title:l.title,description:l.title,manifestType:a,manifest:u,tags:[i],icons:y,images:[],publisher:"",contactEmail:"",supportEmail:"",intents:[]}}};await e.fireIntent(g)}catch(e){this._logger?.error(`Error while trying to raise intent ${r} for view ${s.name}`,e)}}}},r["copy-url"]=async t=>{if(t.callerType===e.ViewTabContextMenu){const e=[];for(let n=0;n<t.selectedViews.length;n++){const o=t.selectedViews[n];try{const t=fin.View.wrapSync(o),n=await t.getInfo();e.push(n.url)}catch(e){this._logger?.error(`Error while trying to capture view url for view ${o.name}`,e)}}if(e.length>0){const t=e.join("\n");await fin.Clipboard.writeText({data:t})}}},r}},analytics:new class{constructor(){this._cachedAnalyticEvents=[]}async initialize(e,n,o){this._logger=n("DeveloperAnalyticsModule"),this._logger.info("Initialized"),this._logger.info("Session Id: ",o.sessionId),this._helpers=o,this._contextType=e.data?.contextType??"fin.dev.platform.analytics";const i=e.data?.sessionContextGroupName??"dev/platform/analytics";if(this._logger.info(`Using channel name: ${i} and contextType: ${this._contextType}. These can be customized by passing data settings: sessionContextGroupName and contextType in the module settings.`),t(o.subscribeLifecycleEvent))this._logger.warn("This analytics module requires a session context group name, a context type, the ability to create an interop client and the ability to listen for lifecycle events. Unfortunately this criteria has not been met.");else{this._logger.info("Subscribing to the after bootstrap event.");const e=o.subscribeLifecycleEvent("after-bootstrap",(async n=>{t(o.getInteropClient)||(this._logger?.info("After bootstrap lifecycle event received. Getting interop client."),this._interopClient=await o.getInteropClient(),this._interopClient&&(this._channel=await this._interopClient.joinSessionContextGroup(i),t(this._helpers?.unsubscribeLifecycleEvent)||this._helpers?.unsubscribeLifecycleEvent(e,"after-bootstrap")))}))}}async handleAnalytics(e){if(Array.isArray(e))if(t(this._channel))this._cachedAnalyticEvents.push(...e);else{let t=[];this._cachedAnalyticEvents.length>0&&(this._logger?.info(`Adding ${this._cachedAnalyticEvents.length} analytic events.`),t.push(...this._cachedAnalyticEvents),this._cachedAnalyticEvents=[]),t.push(...e);const n=t.length;t=t.filter((e=>!("interop"===e.type.toLowerCase()&&"browser"!==e.source.toLowerCase())));const o=t.length;n!==o&&this._logger?.info(`Filtered out ${n-o} events as they were of type interop and not from the browser and we send events out over interop`);const i={type:this._contextType,name:"Analytic Events",events:t};await this._channel.setContext(i)}else this._logger?.warn("We were not passed an array of analytical events.")}async closedown(){this._logger?.info("closing down")}},menus:new class{async initialize(e,t,n){this._logger=t("DeveloperMenus")}async get(e,t){return"global"===e?[{include:!0,label:"Inspect Window",data:{type:"Custom",action:{id:"developer-inspect"}},position:{operation:"after",type:"Custom",customId:"notification-toggle"},separator:"before"},{include:!0,label:"Inspect Platform",data:{type:"Custom",action:{id:"developer-inspect",customData:{target:"platform"}}},position:{operation:"after",type:"Custom",customId:"developer-inspect"}},{include:!0,label:"Copy Window Snapshot",data:{type:"Custom",action:{id:"developer-get-snapshot"}},position:{operation:"after",type:"Custom",customId:"developer-inspect"}}]:"page"===e?[{include:!0,label:"Inspect Window",data:{type:"Custom",action:{id:"developer-inspect"}},position:{operation:"before",type:"Close"},separator:"after"},{include:!0,label:"Copy Page Snapshot",data:{type:"Custom",action:{id:"developer-get-snapshot"}},position:{operation:"before",type:"Close"},separator:"after"}]:"view"===e?[{include:!0,label:"Inspect View",data:{type:"Custom",action:{id:"developer-inspect"}},position:{operation:"before",type:"CloseTab"},separator:"before"},{include:!0,label:"Create App Definition",data:{type:"Custom",action:{id:"raise-create-app-definition-intent"}},position:{operation:"after",type:"Custom",customId:"developer-inspect"}},{include:!0,label:"Copy Url",data:{type:"Custom",action:{id:"copy-url"}},position:{operation:"after",type:"Custom",customId:"raise-create-app-definition-intent"},separator:"after"}]:void 0}}};export{r as entryPoints};
//# sourceMappingURL=developer.bundle.js.map