{"version":3,"file":"example.bundle.js","mappings":"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","sources":["webpack://openfin-workspace--workspace-platform-starter/./client/src/framework/utils.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/auth/example/util.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/auth/example/index.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/auth/example/auth.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/auth/example/endpoint.ts"],"sourcesContent":["/**\n * Test if a value is a undefined or null.\n * @param value The value to test.\n * @returns True if the value is null or undefined.\n */\nexport function isEmpty(value: unknown): value is null | undefined {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value === undefined || value === null;\n}\n\n/**\n * Test if a value is an object.\n * @param value The value to test.\n * @returns True if the value is an object.\n */\nexport function isObject(value: unknown): value is object {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n/**\n * Test if a value is a string.\n * @param value The value to test.\n * @returns True if the value is a string.\n */\nexport function isString(value: unknown): value is string {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"string\";\n}\n\n/**\n * Test if a value is a string that is not empty.\n * @param value The value to test.\n * @returns True if the value is a string that is not empty.\n */\nexport function isStringValue(value: unknown): value is string {\n\treturn isString(value) && value.trim().length > 0;\n}\n\n/**\n * Test if a value is a number.\n * @param value The value to test.\n * @returns True if the value is a number.\n */\nexport function isNumber(value: unknown): value is number {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"number\";\n}\n\n/**\n * Test if a value is a number with a real value i.e. not NaN or Infinite.\n * @param value The value to test.\n * @returns True if the value is a number.\n */\nexport function isNumberValue(value: unknown): value is number {\n\treturn isNumber(value) && !Number.isNaN(value) && Number.isFinite(value);\n}\n\n/**\n * Test if a value is a boolean.\n * @param value The value to test.\n * @returns True if the value is a boolean.\n */\nexport function isBoolean(value: unknown): value is boolean {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"boolean\";\n}\n\n/**\n * Test if a value is an integer.\n * @param value The value to test.\n * @returns True if the value is an integer.\n */\nexport function isInteger(value: unknown): value is number {\n\treturn isNumber(value) && Number.isInteger(value);\n}\n\n/**\n * Deep clone an object.\n * @param obj The object to clone.\n * @returns The clone of the object.\n */\nexport function objectClone<T>(obj: T): T {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn obj === undefined ? (undefined as T) : JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Do a deep comparison of the objects.\n * @param obj1 The first object to compare.\n * @param obj2 The second object to compare.\n * @param matchPropertyOrder If true the properties must be in the same order.\n * @returns True if the objects are the same.\n */\nexport function deepEqual(obj1: unknown, obj2: unknown, matchPropertyOrder: boolean = true): boolean {\n\tif (isObject(obj1) && isObject(obj2)) {\n\t\tconst objKeys1 = Object.keys(obj1);\n\t\tconst objKeys2 = Object.keys(obj2);\n\n\t\tif (objKeys1.length !== objKeys2.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (matchPropertyOrder && JSON.stringify(objKeys1) !== JSON.stringify(objKeys2)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const key of objKeys1) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst value1 = (obj1 as any)[key];\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst value2 = (obj2 as any)[key];\n\n\t\t\tif (!deepEqual(value1, value2, matchPropertyOrder)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else if (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\tif (obj1.length !== obj2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < obj1.length; i++) {\n\t\t\tif (!deepEqual(obj1[i], obj2[i], matchPropertyOrder)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn JSON.stringify(obj1) === JSON.stringify(obj2);\n}\n\n/**\n * Deep merge two objects.\n * @param target The object to be merged into.\n * @param sources The objects to merge into the target.\n * @returns The merged object.\n */\nexport function deepMerge<T = unknown>(target: T, ...sources: T[]): T {\n\tif (!Array.isArray(sources) || sources.length === 0) {\n\t\treturn target;\n\t}\n\n\tconst targetAsMap = target as { [id: string]: unknown };\n\tconst source = sources.shift();\n\n\tlet keys;\n\tif (isObject(targetAsMap) && isObject(source)) {\n\t\tkeys = Object.keys(source);\n\t} else if (Array.isArray(source)) {\n\t\tif (!Array.isArray(target)) {\n\t\t\treturn source;\n\t\t}\n\t\tkeys = Object.keys(source).map((k) => Number.parseInt(k, 10));\n\t}\n\n\tif (keys) {\n\t\tconst sourceAsMap = source as { [id: string]: unknown };\n\t\tfor (const key of keys) {\n\t\t\tconst value = sourceAsMap[key];\n\t\t\tif (isObject(value)) {\n\t\t\t\tif (isEmpty(targetAsMap[key])) {\n\t\t\t\t\ttargetAsMap[key] = {};\n\t\t\t\t}\n\t\t\t\tdeepMerge(targetAsMap[key], value);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tif (isEmpty(targetAsMap[key])) {\n\t\t\t\t\ttargetAsMap[key] = [];\n\t\t\t\t}\n\t\t\t\tdeepMerge(targetAsMap[key], value);\n\t\t\t} else {\n\t\t\t\ttargetAsMap[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn deepMerge(target, ...sources);\n}\n\n/**\n * Polyfills randomUUID if running in a non-secure context.\n * @returns The random UUID.\n */\nexport function randomUUID(): string {\n\tif (\"randomUUID\" in globalThis.crypto) {\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\treturn globalThis.crypto.randomUUID();\n\t}\n\t// Polyfill the window.crypto.randomUUID if we are running in a non secure context that doesn't have it\n\t// we are still using window.crypto.getRandomValues which is always available\n\t// https://stackoverflow.com/a/2117523/2800218\n\t/**\n\t * Get random hex value.\n\t * @param c The number to base the random value on.\n\t * @returns The random value.\n\t */\n\tfunction getRandomHex(c: string): string {\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst rnd = globalThis.crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (Number(c) / 4));\n\t\treturn (\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t(Number(c) ^ rnd).toString(16)\n\t\t);\n\t}\n\treturn \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, getRandomHex);\n}\n\n/**\n * Format an error to a readable string.\n * @param err The error to format.\n * @returns The formatted error.\n */\nexport function formatError(err: unknown): string {\n\tif (isEmpty(err)) {\n\t\treturn \"\";\n\t} else if (err instanceof Error) {\n\t\treturn err.message;\n\t} else if (isStringValue(err)) {\n\t\treturn err;\n\t} else if (isObject(err) && \"message\" in err && isString(err.message)) {\n\t\treturn err.message;\n\t}\n\treturn JSON.stringify(err);\n}\n\n/**\n * A basic string sanitize function that removes angle brackets <> from a string.\n * @param content the content to sanitize\n * @returns a string without angle brackets <>\n */\nexport function sanitizeString(content: unknown): string {\n\tif (isStringValue(content)) {\n\t\treturn content\n\t\t\t.replace(/<[^>]*>?/gm, \"\")\n\t\t\t.replace(/&gt;/g, \">\")\n\t\t\t.replace(/&lt;/g, \"<\")\n\t\t\t.replace(/&amp;/g, \"&\")\n\t\t\t.replace(/&nbsp;/g, \" \")\n\t\t\t.replace(/\\n\\s*\\n/g, \"\\n\");\n\t}\n\treturn \"\";\n}\n\n/**\n * Get the command line arguments from a command line string.\n * Examples of command line strings: arg1 key1=value1 key2=\"value with spaces\" key3='value3' key4='value with more spaces'`.\n * @param commandLine The command line string.\n * @returns The command line arguments or an empty array if none\n */\nexport function getCommandLineArgs(commandLine: string): string[] {\n\tif (!isStringValue(commandLine)) {\n\t\treturn [];\n\t}\n\tconst matches = commandLine.match(/(\\w+=)?(\"[^\"]*\"|'[^']*'|[^ ]+)/g);\n\tif (isEmpty(matches)) {\n\t\treturn [];\n\t}\n\treturn matches;\n}\n","import { isEmpty } from \"workspace-platform-starter/utils\";\nimport type { ExampleUser } from \"./shapes\";\n\nexport const EXAMPLE_AUTH_CURRENT_USER_KEY = `${fin.me.identity.uuid}-EXAMPLE_AUTH_CURRENT_USER`;\n\n/**\n * Get the current user from storage.\n * @returns The current user.\n */\nexport function getCurrentUser(): ExampleUser | undefined {\n\tconst storedUser = localStorage.getItem(EXAMPLE_AUTH_CURRENT_USER_KEY);\n\tif (isEmpty(storedUser)) {\n\t\treturn;\n\t}\n\treturn JSON.parse(storedUser) as ExampleUser;\n}\n\n/**\n * Set the current user in storage.\n * @param user The user to store.\n */\nexport function setCurrentUser(user: ExampleUser): void {\n\tlocalStorage.setItem(EXAMPLE_AUTH_CURRENT_USER_KEY, JSON.stringify(user));\n}\n\n/**\n * Remove the current user from storage.\n */\nexport function clearCurrentUser(): void {\n\tlocalStorage.removeItem(EXAMPLE_AUTH_CURRENT_USER_KEY);\n}\n","import type { ModuleImplementation, ModuleTypes } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { ExampleAuthProvider } from \"./auth\";\nimport { ExampleAuthEndpoint } from \"./endpoint\";\n\nexport const entryPoints: { [type in ModuleTypes]?: ModuleImplementation } = {\n\tauth: new ExampleAuthProvider(),\n\tendpoint: new ExampleAuthEndpoint()\n};\n","import type OpenFin from \"@openfin/core\";\nimport type { AuthEventTypes, AuthProvider } from \"workspace-platform-starter/shapes/auth-shapes\";\nimport type { Logger, LoggerCreator } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type { ModuleDefinition, ModuleHelpers } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { formatError, isEmpty, isNumber, isStringValue, randomUUID } from \"workspace-platform-starter/utils\";\nimport type { ExampleOptions, ExampleUser } from \"./shapes\";\nimport { EXAMPLE_AUTH_CURRENT_USER_KEY, clearCurrentUser, getCurrentUser } from \"./util\";\n\n/**\n * Example authentication provider.\n */\nexport class ExampleAuthProvider implements AuthProvider<ExampleOptions> {\n\t/**\n\t * The options for the provider.\n\t * @internal\n\t */\n\tprivate _authOptions?: ExampleOptions;\n\n\t/**\n\t * The logger for displaying information from the module.\n\t * @internal\n\t */\n\tprivate _logger?: Logger;\n\n\t/**\n\t * Map a subscription id to an event.\n\t * @internal\n\t */\n\tprivate readonly _subscribeIdMap: { [key: string]: AuthEventTypes };\n\n\t/**\n\t * Callbacks for event subscribers.\n\t * @internal\n\t */\n\tprivate readonly _eventSubscribers: { [event in AuthEventTypes]?: { [id: string]: () => Promise<void> } };\n\n\t/**\n\t * The key for the authenticated user.\n\t * @internal\n\t */\n\tprivate _authenticatedKey?: string;\n\n\t/**\n\t * The current user.\n\t * @internal\n\t */\n\tprivate _currentUser?: ExampleUser;\n\n\t/**\n\t * Are we authenticated.\n\t * @internal\n\t */\n\tprivate _authenticated?: boolean;\n\n\t/**\n\t * The id for the expiry check timer.\n\t * @internal\n\t */\n\tprivate _sessionExpiryCheckId?: number;\n\n\t/**\n\t * Create a new instance of ExampleAuthProvider.\n\t */\n\tconstructor() {\n\t\tthis._subscribeIdMap = {};\n\t\tthis._eventSubscribers = {};\n\t}\n\n\t/**\n\t * Initialize the module.\n\t * @param definition The definition of the module from configuration include custom options.\n\t * @param loggerCreator For logging entries.\n\t * @param helpers Helper methods for the module to interact with the application core.\n\t * @returns Nothing.\n\t */\n\tpublic async initialize(\n\t\tdefinition: ModuleDefinition<ExampleOptions>,\n\t\tloggerCreator: LoggerCreator,\n\t\thelpers: ModuleHelpers\n\t): Promise<void> {\n\t\tthis._logger = loggerCreator(\"AuthExample\");\n\t\tthis._authenticatedKey = `${fin.me.identity.uuid}-EXAMPLE_AUTH_IS_AUTHENTICATED`;\n\n\t\tif (isEmpty(this._authOptions)) {\n\t\t\tthis._logger.info(`Setting options: ${JSON.stringify(definition.data, null, 4)}`);\n\t\t\tthis._authOptions = definition.data;\n\t\t\tthis._authenticated = Boolean(localStorage.getItem(this._authenticatedKey));\n\t\t\tif (this._authenticated) {\n\t\t\t\tthis._currentUser = getCurrentUser();\n\t\t\t\tthis.checkForSessionExpiry();\n\t\t\t}\n\t\t} else {\n\t\t\tthis._logger.warn(\"Options have already been set as init has already been called\");\n\t\t}\n\t}\n\n\t/**\n\t * Subscribe to one of the auth events.\n\t * @param to The event to subscribe to.\n\t * @param callback The callback to fire when the event occurs.\n\t * @returns Subscription id for unsubscribing or undefined if event type is not available.\n\t */\n\tpublic subscribe(to: AuthEventTypes, callback: () => Promise<void>): string | undefined {\n\t\tconst subscriptionId = randomUUID();\n\n\t\tconst toMap = this._eventSubscribers[to] ?? {};\n\t\ttoMap[subscriptionId] = callback;\n\t\tthis._eventSubscribers[to] = toMap;\n\n\t\tthis._subscribeIdMap[subscriptionId] = to;\n\t\tthis._logger?.info(`Subscription to ${to} events registered. Subscription Id: ${subscriptionId}`);\n\n\t\treturn subscriptionId;\n\t}\n\n\t/**\n\t * Unsubscribe from an already subscribed event.\n\t * @param subscriptionId The id of the subscription returned from subscribe.\n\t * @returns True if the unsubscribe was successful.\n\t */\n\tpublic unsubscribe(subscriptionId: string): boolean {\n\t\tconst eventType = this._subscribeIdMap[subscriptionId];\n\t\tif (isEmpty(eventType)) {\n\t\t\tthis._logger?.warn(`You have tried to unsubscribe with a key ${subscriptionId} that is invalid`);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst eventSubscribers = this._eventSubscribers[eventType];\n\t\tif (!isEmpty(eventSubscribers)) {\n\t\t\tdelete eventSubscribers[subscriptionId];\n\t\t}\n\n\t\tif (this._subscribeIdMap[subscriptionId]) {\n\t\t\tdelete this._subscribeIdMap[subscriptionId];\n\t\t\tthis._logger?.info(\n\t\t\t\t`Subscription to ${eventType} events with subscription Id: ${subscriptionId} has been cleared`\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\n\t\tthis._logger?.warn(\n\t\t\t`Subscription to ${eventType} events with subscription Id: ${subscriptionId} could not be cleared as we do not have a register of that event type.`\n\t\t);\n\t\treturn false;\n\t}\n\n\t/**\n\t * Does the auth provider require authentication.\n\t * @returns True if authentication is required.\n\t */\n\tpublic async isAuthenticationRequired(): Promise<boolean> {\n\t\tif (isEmpty(this._authenticated)) {\n\t\t\tthis._authenticated = false;\n\t\t}\n\t\treturn !this._authenticated;\n\t}\n\n\t/**\n\t * Perform the login operation on the auth provider.\n\t * @returns True if the login was successful.\n\t */\n\tpublic async login(): Promise<boolean> {\n\t\tthis._logger?.info(\"login requested\");\n\t\tif (this._authenticated) {\n\t\t\tthis._logger?.info(\"User already authenticated\");\n\t\t\treturn this._authenticated;\n\t\t}\n\t\tif (this._authOptions?.autoLogin) {\n\t\t\tthis._logger?.info(\"autoLogin enabled in auth provide module settings. Fake logged in\");\n\t\t\tthis._authenticated = true;\n\t\t} else {\n\t\t\tthis._authenticated = await this.getAuthenticationFromUser();\n\t\t}\n\n\t\tif (this._authenticated) {\n\t\t\tif (this._authenticatedKey) {\n\t\t\t\tlocalStorage.setItem(this._authenticatedKey, this._authenticated.toString());\n\t\t\t}\n\t\t\tthis.checkForSessionExpiry();\n\t\t\tawait this.notifySubscribers(\"logged-in\");\n\t\t} else {\n\t\t\tclearCurrentUser();\n\t\t}\n\n\t\treturn this._authenticated;\n\t}\n\n\t/**\n\t * Perform the logout operation on the auth provider.\n\t * @returns True if the logout was successful.\n\t */\n\tpublic async logout(): Promise<boolean> {\n\t\treturn new Promise<boolean>((resolve, reject) => {\n\t\t\tthis.handleLogout(resolve)\n\t\t\t\t.then(async () => {\n\t\t\t\t\tthis._logger?.info(\"Log out called\");\n\t\t\t\t\treturn true;\n\t\t\t\t})\n\t\t\t\t.catch(async (error) => {\n\t\t\t\t\tthis._logger?.error(`Error while trying to log out ${error}`);\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get user information from the auth provider.\n\t * @returns The user information.\n\t */\n\tpublic async getUserInfo(): Promise<unknown> {\n\t\tif (isEmpty(this._authenticated) || !this._authenticated) {\n\t\t\tthis._logger?.warn(\"Unable to retrieve user info unless the user is authenticated\");\n\t\t\treturn;\n\t\t}\n\t\tthis._logger?.info(\"This example returns a user if it was provided to the example login\");\n\n\t\treturn this._currentUser;\n\t}\n\n\t/**\n\t * Get the authentication from the user.\n\t * @returns True if authenticated.\n\t */\n\tprivate async getAuthenticationFromUser(): Promise<boolean> {\n\t\treturn new Promise<boolean>((resolve, reject) => {\n\t\t\tif (this._authOptions) {\n\t\t\t\tthis.openLoginWindow(this._authOptions.loginUrl)\n\t\t\t\t\t.then(async (openedWin) => {\n\t\t\t\t\t\tlet win: OpenFin.Window | undefined = openedWin;\n\t\t\t\t\t\tif (this._authOptions) {\n\t\t\t\t\t\t\tconst authMatch = new RegExp(this._authOptions.authenticatedUrl, \"i\");\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (!isEmpty(win)) {\n\t\t\t\t\t\t\t\t\tconst info = await win.getInfo();\n\t\t\t\t\t\t\t\t\tif (authMatch.test(info.url)) {\n\t\t\t\t\t\t\t\t\t\tawait win.close(true);\n\t\t\t\t\t\t\t\t\t\treturn resolve(true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tawait win.show(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tthis._logger?.error(\n\t\t\t\t\t\t\t\t\t`Error while checking if login window automatically redirected. Error ${formatError(error)}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (!isEmpty(win)) {\n\t\t\t\t\t\t\t\t\tawait win.show(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet statusCheck: number | undefined;\n\n\t\t\t\t\t\t\tawait win.addListener(\"closed\", async () => {\n\t\t\t\t\t\t\t\tif (win) {\n\t\t\t\t\t\t\t\t\twindow.clearInterval(statusCheck);\n\t\t\t\t\t\t\t\t\tstatusCheck = undefined;\n\t\t\t\t\t\t\t\t\tthis._logger?.info(\"Auth Window cancelled by user\");\n\t\t\t\t\t\t\t\t\twin = undefined;\n\t\t\t\t\t\t\t\t\treturn resolve(false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tstatusCheck = window.setInterval(\n\t\t\t\t\t\t\t\tasync () => {\n\t\t\t\t\t\t\t\t\tif (!isEmpty(win)) {\n\t\t\t\t\t\t\t\t\t\tconst info = await win.getInfo();\n\t\t\t\t\t\t\t\t\t\tif (authMatch.test(info.url)) {\n\t\t\t\t\t\t\t\t\t\t\twindow.clearInterval(statusCheck);\n\t\t\t\t\t\t\t\t\t\t\tawait win.removeAllListeners();\n\t\t\t\t\t\t\t\t\t\t\tawait win.close(true);\n\t\t\t\t\t\t\t\t\t\t\treturn resolve(true);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn resolve(false);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tthis._authOptions.checkLoginStatusInSeconds ?? 1 * 1000\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tthis._logger?.error(\"Error while trying to authenticate the user\", error);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Check to see if a session has expired.\n\t */\n\tprivate checkForSessionExpiry(): void {\n\t\tconst validity = this._authOptions?.checkSessionValidityInSeconds;\n\t\tif (isNumber(validity) && validity > -1 && isEmpty(this._sessionExpiryCheckId)) {\n\t\t\tthis._sessionExpiryCheckId = window.setTimeout(async () => {\n\t\t\t\tif (this._authOptions) {\n\t\t\t\t\tthis._sessionExpiryCheckId = undefined;\n\t\t\t\t\tconst stillAuthenticated = await this.checkAuth(this._authOptions.loginUrl);\n\t\t\t\t\tif (stillAuthenticated) {\n\t\t\t\t\t\tthis._logger?.info(\"Session Still Active\");\n\t\t\t\t\t\tthis.checkForSessionExpiry();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._logger?.info(\n\t\t\t\t\t\t\t\"Session not valid. Killing session and notifying registered callback that authentication is required. This check is configured in the data for this example auth module. Set checkSessionValidityInSeconds to -1 in the authProvider module definition if you wish to disable this check\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis._authenticated = false;\n\t\t\t\t\t\tif (this._authenticatedKey) {\n\t\t\t\t\t\t\tlocalStorage.removeItem(this._authenticatedKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclearCurrentUser();\n\t\t\t\t\t\tawait this.notifySubscribers(\"session-expired\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, validity * 1000);\n\t\t}\n\t}\n\n\t/**\n\t * Notify subscribers of an event change.\n\t * @param authEventType The type of authentication event to send to.\n\t */\n\tprivate async notifySubscribers(authEventType: AuthEventTypes): Promise<void> {\n\t\tconst subscribers = this._eventSubscribers[authEventType];\n\n\t\tif (subscribers) {\n\t\t\tconst subscriberIds = Object.keys(subscribers);\n\t\t\tsubscriberIds.reverse();\n\n\t\t\tfor (const subscriberId of subscriberIds) {\n\t\t\t\tthis._logger?.info(\n\t\t\t\t\t`Notifying subscriber with subscription Id: ${subscriberId} of event type: ${authEventType}`\n\t\t\t\t);\n\t\t\t\tawait subscribers[subscriberId]();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handle logout.\n\t * @param resolve The resolve method to call after logout.\n\t * @returns Nothing.\n\t */\n\tprivate async handleLogout(resolve: (success: boolean) => void): Promise<void> {\n\t\tif (isEmpty(this._authenticated) || !this._authenticated) {\n\t\t\tthis._logger?.error(\"You have requested to log out but are not logged in\");\n\t\t\tresolve(false);\n\t\t\treturn;\n\t\t}\n\t\tthis._logger?.info(\"Log out requested\");\n\t\tawait this.notifySubscribers(\"before-logged-out\");\n\t\tthis._authenticated = false;\n\t\tif (this._authenticatedKey) {\n\t\t\tlocalStorage.removeItem(this._authenticatedKey);\n\t\t}\n\t\tclearCurrentUser();\n\t\tconst logoutUrl = this._authOptions?.logoutUrl;\n\t\tif (isStringValue(logoutUrl)) {\n\t\t\ttry {\n\t\t\t\tconst win = await this.openLogoutWindow(logoutUrl);\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tawait win.close();\n\t\t\t\t\tawait this.notifySubscribers(\"logged-out\");\n\t\t\t\t\tresolve(true);\n\t\t\t\t}, 2000);\n\t\t\t} catch (error) {\n\t\t\t\tthis._logger?.error(`Error while launching logout window. ${error}`);\n\t\t\t\treturn resolve(false);\n\t\t\t}\n\t\t} else {\n\t\t\tawait this.notifySubscribers(\"logged-out\");\n\t\t\tresolve(true);\n\t\t}\n\t}\n\n\t/**\n\t * Open the login window.\n\t * @param url The url to open for the login window.\n\t * @returns The window that was created.\n\t */\n\tprivate async openLoginWindow(url: string): Promise<OpenFin.Window> {\n\t\tconst enrichedCustomData = {\n\t\t\tcurrentUserKey: EXAMPLE_AUTH_CURRENT_USER_KEY,\n\t\t\t...this._authOptions?.customData\n\t\t};\n\t\treturn fin.Window.create({\n\t\t\tname: \"example-auth-log-in\",\n\t\t\talwaysOnTop: true,\n\t\t\tmaximizable: false,\n\t\t\tminimizable: false,\n\t\t\tautoShow: false,\n\t\t\tdefaultCentered: true,\n\t\t\tdefaultHeight: this._authOptions?.loginHeight ?? 325,\n\t\t\tdefaultWidth: this._authOptions?.loginWidth ?? 400,\n\t\t\tincludeInSnapshots: false,\n\t\t\tresizable: false,\n\t\t\tshowTaskbarIcon: false,\n\t\t\tsaveWindowState: false,\n\t\t\turl,\n\t\t\tcustomData: enrichedCustomData\n\t\t});\n\t}\n\n\t/**\n\t * Open the logout window.\n\t * @param url The url for the logout window.\n\t * @returns The window created.\n\t */\n\tprivate async openLogoutWindow(url: string): Promise<OpenFin.Window> {\n\t\treturn fin.Window.create({\n\t\t\tname: \"example-auth-log-out\",\n\t\t\tmaximizable: false,\n\t\t\tminimizable: false,\n\t\t\tautoShow: false,\n\t\t\tdefaultCentered: true,\n\t\t\tdefaultHeight: this._authOptions?.loginHeight ?? 325,\n\t\t\tdefaultWidth: this._authOptions?.loginWidth ?? 400,\n\t\t\tincludeInSnapshots: false,\n\t\t\tresizable: false,\n\t\t\tshowTaskbarIcon: false,\n\t\t\tsaveWindowState: false,\n\t\t\turl\n\t\t});\n\t}\n\n\t/**\n\t * Check the authentication status.\n\t * @param url The url to open to check.\n\t * @returns True if authenticated.\n\t */\n\tprivate async checkAuth(url: string): Promise<boolean> {\n\t\tconst windowToCheck = await fin.Window.create({\n\t\t\tname: \"example-auth-check-window\",\n\t\t\talwaysOnTop: true,\n\t\t\tmaximizable: false,\n\t\t\tminimizable: false,\n\t\t\tautoShow: false,\n\t\t\tdefaultHeight: this._authOptions?.loginHeight ?? 325,\n\t\t\tdefaultWidth: this._authOptions?.loginWidth ?? 400,\n\t\t\tincludeInSnapshots: false,\n\t\t\tresizable: false,\n\t\t\tshowTaskbarIcon: false,\n\t\t\tsaveWindowState: false,\n\t\t\turl\n\t\t});\n\t\tlet isAuthenticated = false;\n\t\ttry {\n\t\t\tconst info = await windowToCheck.getInfo();\n\t\t\tif (info.url === this._authOptions?.authenticatedUrl) {\n\t\t\t\tisAuthenticated = true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis._logger?.error(\"Error encountered while checking session\", error);\n\t\t} finally {\n\t\t\tif (!isEmpty(windowToCheck)) {\n\t\t\t\tawait windowToCheck.close(true);\n\t\t\t}\n\t\t}\n\t\treturn isAuthenticated;\n\t}\n}\n","import type {\n\tEndpoint,\n\tEndpointDefinition,\n\tFetchOptions\n} from \"workspace-platform-starter/shapes/endpoint-shapes\";\nimport type { Logger, LoggerCreator } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type { ModuleDefinition, ModuleHelpers } from \"workspace-platform-starter/shapes/module-shapes\";\nimport type { CustomSettings } from \"workspace-platform-starter/shapes/setting-shapes\";\nimport { isEmpty, isStringValue } from \"workspace-platform-starter/utils\";\nimport type { AppWithTagsOrCategories, ExampleEndpointOptions, ExampleUserRoleMapping } from \"./shapes\";\nimport { getCurrentUser } from \"./util\";\n\n/**\n * Example authentication endpoint.\n */\nexport class ExampleAuthEndpoint implements Endpoint<ExampleEndpointOptions> {\n\tprivate _definition?: ModuleDefinition<ExampleEndpointOptions>;\n\n\tprivate _logger?: Logger;\n\n\tprivate _roleMapping?: { [key: string]: ExampleUserRoleMapping };\n\n\t/**\n\t * Initialize the module.\n\t * @param definition The definition of the module from configuration include custom options.\n\t * @param loggerCreator For logging entries.\n\t * @param helpers Helper methods for the module to interact with the application core.\n\t * @returns Nothing.\n\t */\n\tpublic async initialize(\n\t\tdefinition: ModuleDefinition<ExampleEndpointOptions>,\n\t\tloggerCreator: LoggerCreator,\n\t\thelpers?: ModuleHelpers\n\t): Promise<void> {\n\t\tthis._logger = loggerCreator(\"ExampleAuthEndpoint\");\n\t\tthis._logger.info(\"Was passed the following options\", definition.data);\n\t\tthis._roleMapping = definition?.data?.roleMapping;\n\t\tthis._definition = definition;\n\t}\n\n\t/**\n\t * Handle a request response on an endpoint.\n\t * @param endpointDefinition The definition of the endpoint.\n\t * @param request The request to process.\n\t * @returns The response to the request, or null of not handled.\n\t */\n\tpublic async requestResponse(\n\t\tendpointDefinition: EndpointDefinition<FetchOptions>,\n\t\trequest?: unknown\n\t): Promise<\n\t\tCustomSettings | AppWithTagsOrCategories[] | { applications: AppWithTagsOrCategories[] } | null\n\t> {\n\t\tif (endpointDefinition.type !== \"module\") {\n\t\t\tthis._logger?.warn(\n\t\t\t\t`We only expect endpoints of type module. Unable to action request/response for: ${endpointDefinition.id}`\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\t\tif (!isEmpty(this._logger)) {\n\t\t\tthis._logger.info(\n\t\t\t\t\"This auth endpoint module is an example that that simulates requesting a http endpoint and manipulating it based on the current example user as if it was the server doing the manipulation. DO NOT USE THIS MODULE IN PRODUCTION.\"\n\t\t\t);\n\t\t}\n\n\t\tif (isEmpty(endpointDefinition.options) || isEmpty(endpointDefinition.options.url)) {\n\t\t\tthis._logger?.warn(\n\t\t\t\t`The endpoint definition for ${endpointDefinition.id} does not have a url defined. Unable to action request/response.`\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\t\tconst { url, ...options }: FetchOptions = endpointDefinition.options;\n\n\t\tconst req = this.getRequestOptions(url, options, request as { [id: string]: string });\n\t\tif (req.options.method !== \"GET\" && req.options.method !== \"POST\") {\n\t\t\tthis._logger?.warn(\n\t\t\t\t`${endpointDefinition.id} specifies a type: ${endpointDefinition.type} with a method ${req.options.method} that is not supported.`\n\t\t\t);\n\t\t\treturn null;\n\t\t}\n\n\t\tconst response = await fetch(req.url, req.options as RequestInit);\n\n\t\tif (response.ok) {\n\t\t\tconst json = await response.json();\n\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\t// returned apps\n\t\t\t\treturn this.applyCurrentUserToApps(json as AppWithTagsOrCategories[]);\n\t\t\t} else if (Array.isArray(json.applications)) {\n\t\t\t\treturn {\n\t\t\t\t\tapplications: this.applyCurrentUserToApps(json.applications as AppWithTagsOrCategories[])\n\t\t\t\t};\n\t\t\t}\n\t\t\t// settings\n\t\t\treturn this.applyCurrentUserToSettings(json as CustomSettings);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Convert the options to request data.\n\t * @param url The url.\n\t * @param options The options.\n\t * @param request The request object to convert.\n\t * @returns The converted options.\n\t */\n\tprivate getRequestOptions(\n\t\turl: string,\n\t\toptions: FetchOptions,\n\t\trequest: { [id: string]: string }\n\t): { url: string; options: FetchOptions } {\n\t\tif (options.method === \"GET\") {\n\t\t\tif (!isEmpty(request)) {\n\t\t\t\tconst keys = Object.keys(request);\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst length = keys.length;\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\turl = url.replace(`[${keys[i]}]`, encodeURIComponent(request[keys[i]]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (options.method === \"POST\" && !isEmpty(request)) {\n\t\t\toptions.body = JSON.stringify(request);\n\t\t}\n\n\t\treturn { url, options };\n\t}\n\n\t/**\n\t * Apply the current user settings to the applications.\n\t * @param apps The list of apps.\n\t * @returns The list of apps filtered for use by the user.\n\t */\n\tprivate applyCurrentUserToApps(apps: AppWithTagsOrCategories[]): AppWithTagsOrCategories[] {\n\t\tconst currentUser = getCurrentUser();\n\t\tif (\n\t\t\tisEmpty(currentUser) ||\n\t\t\tisEmpty(this._roleMapping) ||\n\t\t\tisEmpty(this._roleMapping[currentUser.role]) ||\n\t\t\tisEmpty(this._roleMapping[currentUser.role].excludeAppsWithTag)\n\t\t) {\n\t\t\treturn apps;\n\t\t}\n\t\tconst excludeTag = this._roleMapping[currentUser.role].excludeAppsWithTag;\n\n\t\tconst applications: AppWithTagsOrCategories[] = [];\n\t\tif (Array.isArray(apps)) {\n\t\t\tfor (const app of apps) {\n\t\t\t\tconst lookup: string[] | undefined = app.tags ?? app.categories;\n\t\t\t\tif (Array.isArray(lookup)) {\n\t\t\t\t\tif (this.includeInResponse(lookup, excludeTag)) {\n\t\t\t\t\t\tapplications.push(app);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tapplications.push(app);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn applications;\n\t}\n\n\t/**\n\t * Compare the tags with the exclude list to see if they should be used.\n\t * @param tags The tags to check.\n\t * @param excludeTags The exclude list to check against.\n\t * @returns True if the item should be included.\n\t */\n\tprivate includeInResponse(tags: string[], excludeTags: string[]): boolean {\n\t\tlet include = true;\n\t\tif (!Array.isArray(excludeTags)) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (const tag of tags) {\n\t\t\tconst currentTag: string = tag;\n\t\t\tif (excludeTags.includes(currentTag)) {\n\t\t\t\tinclude = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn include;\n\t}\n\n\t/**\n\t * Apply the user settings to the custom settings.\n\t * @param settings The settings to filter.\n\t * @returns The filtered settings.\n\t */\n\tprivate applyCurrentUserToSettings(settings: CustomSettings): CustomSettings {\n\t\tconst currentUser = getCurrentUser();\n\t\tif (\n\t\t\tisEmpty(currentUser) ||\n\t\t\tisEmpty(this._roleMapping) ||\n\t\t\tisEmpty(this._roleMapping[currentUser.role]) ||\n\t\t\tisEmpty(this._definition)\n\t\t) {\n\t\t\treturn settings;\n\t\t}\n\n\t\tconst modules = settings?.endpointProvider?.modules;\n\t\tif (Array.isArray(modules)) {\n\t\t\tmodules.push({\n\t\t\t\tdata: this._definition,\n\t\t\t\tenabled: this._definition.enabled,\n\t\t\t\tid: this._definition.id,\n\t\t\t\tdescription: this._definition.description,\n\t\t\t\ticon: this._definition.icon,\n\t\t\t\tinfo: this._definition.info,\n\t\t\t\ttitle: this._definition.title,\n\t\t\t\turl: this._definition.url\n\t\t\t});\n\t\t\tconst appEndpointProviders = settings?.endpointProvider?.endpoints;\n\t\t\tconst appEndpointIds = settings?.appProvider?.endpointIds;\n\t\t\tif (Array.isArray(appEndpointProviders) && Array.isArray(appEndpointIds)) {\n\t\t\t\tlet count = 0;\n\t\t\t\tconst updateEndpoints = [];\n\t\t\t\tfor (const endpoint of appEndpointIds) {\n\t\t\t\t\tif (isStringValue(endpoint)) {\n\t\t\t\t\t\tif (endpoint.startsWith(\"http\")) {\n\t\t\t\t\t\t\tupdateEndpoints.push({ position: count, url: endpoint });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst endpointToUpdate = appEndpointProviders.find(\n\t\t\t\t\t\t\t\t(endpointEntry) => endpointEntry.id === endpoint && endpointEntry.type === \"fetch\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (!isEmpty(endpointToUpdate)) {\n\t\t\t\t\t\t\t\tendpointToUpdate.type = \"module\";\n\t\t\t\t\t\t\t\t// this if condition check is here to make typescript happy with the endpoint so that typeId can be set\n\t\t\t\t\t\t\t\tif (endpointToUpdate.type === \"module\") {\n\t\t\t\t\t\t\t\t\tendpointToUpdate.typeId = this._definition.id;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\n\t\t\t\tif (updateEndpoints.length > 0) {\n\t\t\t\t\tif (isEmpty(settings.endpointProvider)) {\n\t\t\t\t\t\tsettings.endpointProvider = {\n\t\t\t\t\t\t\tendpoints: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tfor (const newEndpointEntry of updateEndpoints) {\n\t\t\t\t\t\tconst endpointId = `auth-example-endpoint-${newEndpointEntry.position}`;\n\t\t\t\t\t\tappEndpointIds[newEndpointEntry.position] = endpointId;\n\t\t\t\t\t\tappEndpointProviders.push({\n\t\t\t\t\t\t\tid: endpointId,\n\t\t\t\t\t\t\ttype: \"module\",\n\t\t\t\t\t\t\ttypeId: this._definition.id,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\t\turl: newEndpointEntry.url\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst themeProvider = settings.themeProvider;\n\n\t\tif (\n\t\t\t!isEmpty(themeProvider) &&\n\t\t\tArray.isArray(themeProvider.themes) &&\n\t\t\tthemeProvider.themes.length > 0 &&\n\t\t\t!isEmpty(this._roleMapping[currentUser.role].preferredScheme)\n\t\t) {\n\t\t\tthemeProvider.themes[0].default =\n\t\t\t\tthis._roleMapping[currentUser.role].preferredScheme === \"dark\" ? \"dark\" : \"light\";\n\t\t\tconst storedSchemePreference = `${fin.me.identity.uuid}-SelectedColorScheme`;\n\t\t\tthis._logger?.warn(\n\t\t\t\t\"This is a demo module where we are clearing the locally stored scheme preference in order to show different scheme's light/dark based on user selection. This means that it will always be set to what is in the role mapping initially and not what it is set to locally on restart.\"\n\t\t\t);\n\t\t\tlocalStorage.removeItem(storedSchemePreference);\n\t\t}\n\n\t\tconst excludeMenuActionIds = this._roleMapping[currentUser.role].excludeMenuAction;\n\t\tconst excludeMenuModuleIds = this._roleMapping[currentUser.role].excludeMenuModule;\n\n\t\tconst browserProviders = settings.browserProvider;\n\t\tif (!isEmpty(browserProviders) && Array.isArray(excludeMenuActionIds)) {\n\t\t\tif (Array.isArray(browserProviders.globalMenu) && browserProviders.globalMenu.length > 0) {\n\t\t\t\tfor (const globalMenuEntry of browserProviders.globalMenu) {\n\t\t\t\t\tconst globalMenuActionId: string | undefined = globalMenuEntry?.data?.action?.id;\n\t\t\t\t\tif (globalMenuActionId && excludeMenuActionIds.includes(globalMenuActionId)) {\n\t\t\t\t\t\tglobalMenuEntry.include = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Array.isArray(browserProviders.pageMenu) && browserProviders.pageMenu.length > 0) {\n\t\t\t\tfor (const pageMenuEntry of browserProviders.pageMenu) {\n\t\t\t\t\tconst pageMenuActionId: string | undefined = pageMenuEntry?.data?.action?.id;\n\t\t\t\t\tif (pageMenuActionId && excludeMenuActionIds.includes(pageMenuActionId)) {\n\t\t\t\t\t\tpageMenuEntry.include = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Array.isArray(browserProviders.viewMenu) && browserProviders.viewMenu.length > 0) {\n\t\t\t\tfor (const viewMenuEntry of browserProviders.viewMenu) {\n\t\t\t\t\tconst viewMenuActionId: string | undefined = viewMenuEntry?.data?.action?.id;\n\t\t\t\t\tif (viewMenuActionId && excludeMenuActionIds.includes(viewMenuActionId)) {\n\t\t\t\t\t\tviewMenuEntry.include = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst menusProvider = settings.menusProvider;\n\t\tif (\n\t\t\t!isEmpty(menusProvider) &&\n\t\t\tArray.isArray(excludeMenuModuleIds) &&\n\t\t\tArray.isArray(menusProvider.modules)\n\t\t) {\n\t\t\tfor (const menuModule of menusProvider.modules) {\n\t\t\t\tconst menuModuleId: string = menuModule.id;\n\t\t\t\tif (excludeMenuModuleIds.includes(menuModuleId)) {\n\t\t\t\t\tmenuModule.enabled = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn settings;\n\t}\n}\n"],"names":["isEmpty","value","isString","isStringValue","trim","length","EXAMPLE_AUTH_CURRENT_USER_KEY","fin","me","identity","uuid","getCurrentUser","storedUser","localStorage","getItem","JSON","parse","clearCurrentUser","removeItem","entryPoints","auth","constructor","this","_subscribeIdMap","_eventSubscribers","initialize","definition","loggerCreator","helpers","_logger","_authenticatedKey","_authOptions","info","stringify","data","_authenticated","Boolean","_currentUser","checkForSessionExpiry","warn","subscribe","to","callback","subscriptionId","globalThis","crypto","randomUUID","replace","c","rnd","getRandomValues","Uint8Array","Number","toString","toMap","unsubscribe","eventType","eventSubscribers","isAuthenticationRequired","login","autoLogin","getAuthenticationFromUser","setItem","notifySubscribers","logout","Promise","resolve","reject","handleLogout","then","async","catch","error","getUserInfo","openLoginWindow","loginUrl","openedWin","win","authMatch","RegExp","authenticatedUrl","getInfo","test","url","close","show","err","Error","message","Array","isArray","statusCheck","addListener","window","clearInterval","undefined","setInterval","removeAllListeners","checkLoginStatusInSeconds","validity","checkSessionValidityInSeconds","_sessionExpiryCheckId","setTimeout","checkAuth","authEventType","subscribers","subscriberIds","Object","keys","reverse","subscriberId","logoutUrl","openLogoutWindow","enrichedCustomData","currentUserKey","customData","Window","create","name","alwaysOnTop","maximizable","minimizable","autoShow","defaultCentered","defaultHeight","loginHeight","defaultWidth","loginWidth","includeInSnapshots","resizable","showTaskbarIcon","saveWindowState","windowToCheck","isAuthenticated","endpoint","_roleMapping","roleMapping","_definition","requestResponse","endpointDefinition","request","type","id","options","req","getRequestOptions","method","response","fetch","ok","json","applyCurrentUserToApps","applications","applyCurrentUserToSettings","i","encodeURIComponent","body","apps","currentUser","role","excludeAppsWithTag","excludeTag","app","lookup","tags","categories","includeInResponse","push","excludeTags","include","tag","currentTag","includes","settings","modules","endpointProvider","enabled","description","icon","title","appEndpointProviders","endpoints","appEndpointIds","appProvider","endpointIds","count","updateEndpoints","startsWith","position","endpointToUpdate","find","endpointEntry","typeId","newEndpointEntry","endpointId","themeProvider","themes","preferredScheme","default","storedSchemePreference","excludeMenuActionIds","excludeMenuAction","excludeMenuModuleIds","excludeMenuModule","browserProviders","browserProvider","globalMenu","globalMenuEntry","globalMenuActionId","action","pageMenu","pageMenuEntry","pageMenuActionId","viewMenu","viewMenuEntry","viewMenuActionId","menusProvider","menuModule","menuModuleId"],"sourceRoot":""}