function e(e){return null==e}const t={endpoint:new class{constructor(){this._favoritesKey=`${fin.me.identity.uuid}-favorites`}async initialize(e,t,s){this._logger=t("FavoriteLocalStorageProvider"),this._logger.info("Initializing")}async closedown(){this._logger?.info("Closedown")}async action(t,s){if("module"===t.type&&!e(s))return"payload"in s?this.requestResponseSetFavorite(s):this.requestResponseRemoveFavorite(s);throw new Error(`This endpoint module only supports the type 'module' and being passed a request. The following endpoint type was specified: ${t.type} and request passed: ${!e(s)}`)}async requestResponse(t,s){if("module"===t.type&&!e(s))return"id"in s?this.requestResponseGetFavorite(s):this.requestResponseFavorites(s);throw new Error(`This endpoint module only supports the type 'module' and being passed a request. The following endpoint type was specified: ${t.type} and request passed: ${!e(s)}`)}async requestResponseFavorites(t){const s=this.getFavorites();return e(t.favoriteType)?{entries:s.filter((e=>e.payload.type===t.favoriteType))}:{entries:s}}async requestResponseGetFavorite(t){const s=this.getFavorites();if(!e(t.id))return s.find((e=>e.payload.id===t.id))}async requestResponseSetFavorite(t){const s=this.getFavorites();if(!e(t.id)){const e=s.findIndex((e=>e.payload.id===t.id)),i={metaData:t.metaData,payload:t.payload};return-1===e?s.push(i):s[e]=i,this.saveFavorites(s),!0}return!1}async requestResponseRemoveFavorite(t){const s=this.getFavorites();if(!e(t.id)){const e=s.findIndex((e=>e.payload.id===t.id));return-1!==e&&(s.splice(e,1),this.saveFavorites(s),!0)}return!1}getFavorites(){const t=localStorage.getItem(this._favoritesKey);return e(t)?[]:JSON.parse(t)}saveFavorites(e){localStorage.setItem(this._favoritesKey,JSON.stringify(e))}}};export{t as entryPoints};
//# sourceMappingURL=favorite-local-storage.bundle.js.map