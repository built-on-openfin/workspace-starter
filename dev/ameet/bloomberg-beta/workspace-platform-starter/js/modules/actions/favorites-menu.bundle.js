var t;function e(t){return null==t}async function n(t){const n=await fin.System.getMonitorInfo(),i=t.x,a=t.y;if(!e(i)&&!e(a))for(const t of n.nonPrimaryMonitors)if(o({x:i,y:a},t.monitorRect))return t;return n.primaryMonitor}function o(t,e){return t.x>=e.left&&t.x<=e.right&&t.y>=e.top&&t.y<=e.bottom}async function i(t,o){if(!0===t?.disableWindowPositioningStrategy)return;let i;if(e(o))i=(await fin.System.getMonitorInfo()).primaryMonitor;else if(!e(o)&&"monitorRect"in o)i=o;else if(!e(o)&&"x"in o)i=await n(o);else{const t=await async function(t){let n,o;try{const e=fin.View.wrapSync(t);o=await e.getCurrentWindow()}catch{}if(e(n))try{const e=o??fin.Window.wrapSync(t);n=await e.getBounds()}catch{}if(e(n))try{n=await fin.me.getBounds()}catch{}return n}(o);i=e(t)?(await fin.System.getMonitorInfo()).primaryMonitor:await n({x:t.left,y:t.top})}const a=t?.defaults?.left??0,s=t?.defaults?.top??0,r=i.availableRect.left,l=i.availableRect.top,u=t?.windowPositioningStrategy?.x??30,c=t?.windowPositioningStrategy?.y??30,p=t?.windowPositioningStrategy?.maxIncrements??8,f=await async function(){const t=fin.Platform.getCurrentSync(),e=await t.Application.getChildWindows(),n=[];for(const t of e)try{await t.isShowing()&&n.push(t)}catch{}return n}(),h=await Promise.all(f.map(async t=>{try{const e=await t.getBounds();return{left:e.left,top:e.top,right:e.left+u,bottom:e.top+c}}catch{return{left:0,top:0,right:0,bottom:0}}}));let y=1e3,g=p;for(let t=0;t<p;t++){const e=a+t*u,n=s+t*c,o=h.filter(t=>t.left>=e+r&&t.right<=e+u+r&&t.top>=n+l&&t.bottom<=n+c+l);o.length<y&&(y=o.length,g=t)}return{left:a+g*u+r,top:s+g*c+l}}!function(t){t.CustomButton="CustomButton",t.StoreCustomButton="StoreCustomButton",t.CustomDropdownItem="CustomDropdownItem",t.GlobalContextMenu="GlobalContextMenu",t.ViewTabContextMenu="ViewTabContextMenu",t.PageTabContextMenu="PageTabContextMenu",t.SaveButtonContextMenu="SaveButtonContextMenu",t.API="API"}(t||(t={}));const a={actions:new class{async initialize(t,e,n){this._logger=e("FavoritesMenuProvider"),this._helpers=n,this._settings=t.data,this._logger.info("Initializing")}async get(n){const o={};return o["favorites-menu"]=async n=>{if(n.callerType===t.CustomButton&&this._helpers){const t=this._helpers?.getFavoriteClient;if(!e(t)){const o=await t();if(!e(o)){const t=o.getInfo(),a=[];if(t.enabledTypes){let e=!1;for(const n of t.enabledTypes){const t=await o.getSavedFavorites(n);if(t&&t.length>0){e&&a.push({type:"separator"}),t.sort((t,e)=>(t.label??"").localeCompare(e.label??""));for(const e of t)a.push({label:e.label??"",icon:e.icon,data:e});e=!0}}}const s=await this._helpers.getMenuClient(),r=this._settings?.popupMenuStyle??s.getPopupMenuStyle(),l=await s.showPopupMenu({x:n.x,y:48},n.windowIdentity,"There are no favorites",a,{popupMenuStyle:r});if(e(l))this._logger?.info("Favorites Menu Dismissed");else if(this._logger?.info("Favorites Menu Item Selected",l),"app"===l.type){if(!e(this._helpers?.launchApp)){let t;const o=await i(void 0,n.windowIdentity);e(o)||(t={bounds:o}),await(this._helpers?.launchApp(l.typeId,t))}}else"page"===l.type?e(this._helpers?.launchPage)||await(this._helpers?.launchPage(l.typeId,void 0,this._logger)):"workspace"===l.type?e(this._helpers?.launchWorkspace)||await(this._helpers?.launchWorkspace(l.typeId)):this._logger?.info(`Favorites Type ${l.type} no yet supported`,l)}}}},o}}};export{a as entryPoints};
//# sourceMappingURL=favorites-menu.bundle.js.map