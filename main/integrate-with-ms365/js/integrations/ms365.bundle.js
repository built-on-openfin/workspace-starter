/******/ var __webpack_modules__ = ({

/***/ "../../node_modules/@openfin/microsoft365/openfin.ms365.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/@openfin/microsoft365/openfin.ms365.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ApiError": () => (/* binding */ o),
/* harmony export */   "ApiRequestError": () => (/* binding */ i),
/* harmony export */   "AuthTokenExpiredError": () => (/* binding */ a),
/* harmony export */   "AuthorizationError": () => (/* binding */ s),
/* harmony export */   "InitializationError": () => (/* binding */ u),
/* harmony export */   "InteropError": () => (/* binding */ l),
/* harmony export */   "ParameterError": () => (/* binding */ c),
/* harmony export */   "TeamsConnection": () => (/* binding */ f),
/* harmony export */   "connect": () => (/* binding */ d),
/* harmony export */   "disableLogging": () => (/* binding */ h),
/* harmony export */   "enableLogging": () => (/* binding */ p)
/* harmony export */ });
/*! For license information please see openfin.ms365.js.LICENSE.txt */
var t={876:t=>{const{AbortController:e,AbortSignal:n}="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0;t.exports=e,t.exports.AbortSignal=n,t.exports.default=e},60:(t,e)=>{e.byteLength=function(t){var e=u(t),n=e[0],r=e[1];return 3*(n+r)/4-r},e.toByteArray=function(t){var e,n,i=u(t),a=i[0],s=i[1],l=new o(function(t,e,n){return 3*(e+n)/4-n}(0,a,s)),c=0,f=s>0?a-4:a;for(n=0;n<f;n+=4)e=r[t.charCodeAt(n)]<<18|r[t.charCodeAt(n+1)]<<12|r[t.charCodeAt(n+2)]<<6|r[t.charCodeAt(n+3)],l[c++]=e>>16&255,l[c++]=e>>8&255,l[c++]=255&e;2===s&&(e=r[t.charCodeAt(n)]<<2|r[t.charCodeAt(n+1)]>>4,l[c++]=255&e);1===s&&(e=r[t.charCodeAt(n)]<<10|r[t.charCodeAt(n+1)]<<4|r[t.charCodeAt(n+2)]>>2,l[c++]=e>>8&255,l[c++]=255&e);return l},e.fromByteArray=function(t){for(var e,r=t.length,o=r%3,i=[],a=16383,s=0,u=r-o;s<u;s+=a)i.push(l(t,s,s+a>u?u:s+a));1===o?(e=t[r-1],i.push(n[e>>2]+n[e<<4&63]+"==")):2===o&&(e=(t[r-2]<<8)+t[r-1],i.push(n[e>>10]+n[e>>4&63]+n[e<<2&63]+"="));return i.join("")};for(var n=[],r=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0,s=i.length;a<s;++a)n[a]=i[a],r[i.charCodeAt(a)]=a;function u(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function l(t,e,r){for(var o,i,a=[],s=e;s<r;s+=3)o=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),a.push(n[(i=o)>>18&63]+n[i>>12&63]+n[i>>6&63]+n[63&i]);return a.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},485:(t,e,n)=>{const r=n(60),o=n(215),i="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50;const a=2147483647;function s(t){if(t>a)throw new RangeError('The value "'+t+'" is invalid for option "size"');const e=new Uint8Array(t);return Object.setPrototypeOf(e,u.prototype),e}function u(t,e,n){if("number"==typeof t){if("string"==typeof e)throw new TypeError('The "string" argument must be of type string. Received type number');return f(t)}return l(t,e,n)}function l(t,e,n){if("string"==typeof t)return function(t,e){"string"==typeof e&&""!==e||(e="utf8");if(!u.isEncoding(e))throw new TypeError("Unknown encoding: "+e);const n=0|g(t,e);let r=s(n);const o=r.write(t,e);o!==n&&(r=r.slice(0,o));return r}(t,e);if(ArrayBuffer.isView(t))return function(t){if(Y(t,Uint8Array)){const e=new Uint8Array(t);return h(e.buffer,e.byteOffset,e.byteLength)}return d(t)}(t);if(null==t)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t);if(Y(t,ArrayBuffer)||t&&Y(t.buffer,ArrayBuffer))return h(t,e,n);if("undefined"!=typeof SharedArrayBuffer&&(Y(t,SharedArrayBuffer)||t&&Y(t.buffer,SharedArrayBuffer)))return h(t,e,n);if("number"==typeof t)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=t.valueOf&&t.valueOf();if(null!=r&&r!==t)return u.from(r,e,n);const o=function(t){if(u.isBuffer(t)){const e=0|p(t.length),n=s(e);return 0===n.length||t.copy(n,0,0,e),n}if(void 0!==t.length)return"number"!=typeof t.length||K(t.length)?s(0):d(t);if("Buffer"===t.type&&Array.isArray(t.data))return d(t.data)}(t);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof t[Symbol.toPrimitive])return u.from(t[Symbol.toPrimitive]("string"),e,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof t)}function c(t){if("number"!=typeof t)throw new TypeError('"size" argument must be of type number');if(t<0)throw new RangeError('The value "'+t+'" is invalid for option "size"')}function f(t){return c(t),s(t<0?0:0|p(t))}function d(t){const e=t.length<0?0:0|p(t.length),n=s(e);for(let r=0;r<e;r+=1)n[r]=255&t[r];return n}function h(t,e,n){if(e<0||t.byteLength<e)throw new RangeError('"offset" is outside of buffer bounds');if(t.byteLength<e+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===e&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,e):new Uint8Array(t,e,n),Object.setPrototypeOf(r,u.prototype),r}function p(t){if(t>=a)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a.toString(16)+" bytes");return 0|t}function g(t,e){if(u.isBuffer(t))return t.length;if(ArrayBuffer.isView(t)||Y(t,ArrayBuffer))return t.byteLength;if("string"!=typeof t)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof t);const n=t.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let o=!1;for(;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return V(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return G(t).length;default:if(o)return r?-1:V(t).length;e=(""+e).toLowerCase(),o=!0}}function y(t,e,n){let r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return B(this,e,n);case"utf8":case"utf-8":return T(this,e,n);case"ascii":return x(this,e,n);case"latin1":case"binary":return C(this,e,n);case"base64":return I(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return k(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function m(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function v(t,e,n,r,o){if(0===t.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),K(n=+n)&&(n=o?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(o)return-1;n=t.length-1}else if(n<0){if(!o)return-1;n=0}if("string"==typeof e&&(e=u.from(e,r)),u.isBuffer(e))return 0===e.length?-1:b(t,e,n,r,o);if("number"==typeof e)return e&=255,"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):b(t,[e],n,r,o);throw new TypeError("val must be string, number or Buffer")}function b(t,e,n,r,o){let i,a=1,s=t.length,u=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;a=2,s/=2,u/=2,n/=2}function l(t,e){return 1===a?t[e]:t.readUInt16BE(e*a)}if(o){let r=-1;for(i=n;i<s;i++)if(l(t,i)===l(e,-1===r?0:i-r)){if(-1===r&&(r=i),i-r+1===u)return r*a}else-1!==r&&(i-=i-r),r=-1}else for(n+u>s&&(n=s-u),i=n;i>=0;i--){let n=!0;for(let r=0;r<u;r++)if(l(t,i+r)!==l(e,r)){n=!1;break}if(n)return i}return-1}function w(t,e,n,r){n=Number(n)||0;const o=t.length-n;r?(r=Number(r))>o&&(r=o):r=o;const i=e.length;let a;for(r>i/2&&(r=i/2),a=0;a<r;++a){const r=parseInt(e.substr(2*a,2),16);if(K(r))return a;t[n+a]=r}return a}function _(t,e,n,r){return J(V(e,t.length-n),t,n,r)}function E(t,e,n,r){return J(function(t){const e=[];for(let n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function A(t,e,n,r){return J(G(e),t,n,r)}function S(t,e,n,r){return J(function(t,e){let n,r,o;const i=[];for(let a=0;a<t.length&&!((e-=2)<0);++a)n=t.charCodeAt(a),r=n>>8,o=n%256,i.push(o),i.push(r);return i}(e,t.length-n),t,n,r)}function I(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function T(t,e,n){n=Math.min(t.length,n);const r=[];let o=e;for(;o<n;){const e=t[o];let i=null,a=e>239?4:e>223?3:e>191?2:1;if(o+a<=n){let n,r,s,u;switch(a){case 1:e<128&&(i=e);break;case 2:n=t[o+1],128==(192&n)&&(u=(31&e)<<6|63&n,u>127&&(i=u));break;case 3:n=t[o+1],r=t[o+2],128==(192&n)&&128==(192&r)&&(u=(15&e)<<12|(63&n)<<6|63&r,u>2047&&(u<55296||u>57343)&&(i=u));break;case 4:n=t[o+1],r=t[o+2],s=t[o+3],128==(192&n)&&128==(192&r)&&128==(192&s)&&(u=(15&e)<<18|(63&n)<<12|(63&r)<<6|63&s,u>65535&&u<1114112&&(i=u))}}null===i?(i=65533,a=1):i>65535&&(i-=65536,r.push(i>>>10&1023|55296),i=56320|1023&i),r.push(i),o+=a}return function(t){const e=t.length;if(e<=R)return String.fromCharCode.apply(String,t);let n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=R));return n}(r)}e.kMaxLength=a,u.TYPED_ARRAY_SUPPORT=function(){try{const t=new Uint8Array(1),e={foo:function(){return 42}};return Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(t,e),42===t.foo()}catch(t){return!1}}(),u.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(u.prototype,"parent",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,"offset",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(t,e,n){return l(t,e,n)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(t,e,n){return function(t,e,n){return c(t),t<=0?s(t):void 0!==e?"string"==typeof n?s(t).fill(e,n):s(t).fill(e):s(t)}(t,e,n)},u.allocUnsafe=function(t){return f(t)},u.allocUnsafeSlow=function(t){return f(t)},u.isBuffer=function(t){return null!=t&&!0===t._isBuffer&&t!==u.prototype},u.compare=function(t,e){if(Y(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),Y(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(t===e)return 0;let n=t.length,r=e.length;for(let o=0,i=Math.min(n,r);o<i;++o)if(t[o]!==e[o]){n=t[o],r=e[o];break}return n<r?-1:r<n?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(t,e){if(!Array.isArray(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);let n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;const r=u.allocUnsafe(e);let o=0;for(n=0;n<t.length;++n){let e=t[n];if(Y(e,Uint8Array))o+e.length>r.length?(u.isBuffer(e)||(e=u.from(e)),e.copy(r,o)):Uint8Array.prototype.set.call(r,e,o);else{if(!u.isBuffer(e))throw new TypeError('"list" argument must be an Array of Buffers');e.copy(r,o)}o+=e.length}return r},u.byteLength=g,u.prototype._isBuffer=!0,u.prototype.swap16=function(){const t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let e=0;e<t;e+=2)m(this,e,e+1);return this},u.prototype.swap32=function(){const t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let e=0;e<t;e+=4)m(this,e,e+3),m(this,e+1,e+2);return this},u.prototype.swap64=function(){const t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let e=0;e<t;e+=8)m(this,e,e+7),m(this,e+1,e+6),m(this,e+2,e+5),m(this,e+3,e+4);return this},u.prototype.toString=function(){const t=this.length;return 0===t?"":0===arguments.length?T(this,0,t):y.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){let t="";const n=e.INSPECT_MAX_BYTES;return t=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(t+=" ... "),"<Buffer "+t+">"},i&&(u.prototype[i]=u.prototype.inspect),u.prototype.compare=function(t,e,n,r,o){if(Y(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(t))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof t);if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),e<0||n>t.length||r<0||o>this.length)throw new RangeError("out of range index");if(r>=o&&e>=n)return 0;if(r>=o)return-1;if(e>=n)return 1;if(this===t)return 0;let i=(o>>>=0)-(r>>>=0),a=(n>>>=0)-(e>>>=0);const s=Math.min(i,a),l=this.slice(r,o),c=t.slice(e,n);for(let t=0;t<s;++t)if(l[t]!==c[t]){i=l[t],a=c[t];break}return i<a?-1:a<i?1:0},u.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},u.prototype.indexOf=function(t,e,n){return v(this,t,e,n,!0)},u.prototype.lastIndexOf=function(t,e,n){return v(this,t,e,n,!1)},u.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const o=this.length-e;if((void 0===n||n>o)&&(n=o),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let i=!1;for(;;)switch(r){case"hex":return w(this,t,e,n);case"utf8":case"utf-8":return _(this,t,e,n);case"ascii":case"latin1":case"binary":return E(this,t,e,n);case"base64":return A(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,t,e,n);default:if(i)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),i=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const R=4096;function x(t,e,n){let r="";n=Math.min(t.length,n);for(let o=e;o<n;++o)r+=String.fromCharCode(127&t[o]);return r}function C(t,e,n){let r="";n=Math.min(t.length,n);for(let o=e;o<n;++o)r+=String.fromCharCode(t[o]);return r}function B(t,e,n){const r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);let o="";for(let r=e;r<n;++r)o+=X[t[r]];return o}function k(t,e,n){const r=t.slice(e,n);let o="";for(let t=0;t<r.length-1;t+=2)o+=String.fromCharCode(r[t]+256*r[t+1]);return o}function O(t,e,n){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function L(t,e,n,r,o,i){if(!u.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>o||e<i)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function U(t,e,n,r,o){F(e,r,o,t,n,7);let i=Number(e&BigInt(4294967295));t[n++]=i,i>>=8,t[n++]=i,i>>=8,t[n++]=i,i>>=8,t[n++]=i;let a=Number(e>>BigInt(32)&BigInt(4294967295));return t[n++]=a,a>>=8,t[n++]=a,a>>=8,t[n++]=a,a>>=8,t[n++]=a,n}function j(t,e,n,r,o){F(e,r,o,t,n,7);let i=Number(e&BigInt(4294967295));t[n+7]=i,i>>=8,t[n+6]=i,i>>=8,t[n+5]=i,i>>=8,t[n+4]=i;let a=Number(e>>BigInt(32)&BigInt(4294967295));return t[n+3]=a,a>>=8,t[n+2]=a,a>>=8,t[n+1]=a,a>>=8,t[n]=a,n+8}function N(t,e,n,r,o,i){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(t,e,n,r,i){return e=+e,n>>>=0,i||N(t,0,n,4),o.write(t,e,n,r,23,4),n+4}function P(t,e,n,r,i){return e=+e,n>>>=0,i||N(t,0,n,8),o.write(t,e,n,r,52,8),n+8}u.prototype.slice=function(t,e){const n=this.length;(t=~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),(e=void 0===e?n:~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),e<t&&(e=t);const r=this.subarray(t,e);return Object.setPrototypeOf(r,u.prototype),r},u.prototype.readUintLE=u.prototype.readUIntLE=function(t,e,n){t>>>=0,e>>>=0,n||O(t,e,this.length);let r=this[t],o=1,i=0;for(;++i<e&&(o*=256);)r+=this[t+i]*o;return r},u.prototype.readUintBE=u.prototype.readUIntBE=function(t,e,n){t>>>=0,e>>>=0,n||O(t,e,this.length);let r=this[t+--e],o=1;for(;e>0&&(o*=256);)r+=this[t+--e]*o;return r},u.prototype.readUint8=u.prototype.readUInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),this[t]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(t,e){return t>>>=0,e||O(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readBigUInt64LE=Z((function(t){z(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||q(t,this.length-8);const r=e+256*this[++t]+65536*this[++t]+this[++t]*2**24,o=this[++t]+256*this[++t]+65536*this[++t]+n*2**24;return BigInt(r)+(BigInt(o)<<BigInt(32))})),u.prototype.readBigUInt64BE=Z((function(t){z(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||q(t,this.length-8);const r=e*2**24+65536*this[++t]+256*this[++t]+this[++t],o=this[++t]*2**24+65536*this[++t]+256*this[++t]+n;return(BigInt(r)<<BigInt(32))+BigInt(o)})),u.prototype.readIntLE=function(t,e,n){t>>>=0,e>>>=0,n||O(t,e,this.length);let r=this[t],o=1,i=0;for(;++i<e&&(o*=256);)r+=this[t+i]*o;return o*=128,r>=o&&(r-=Math.pow(2,8*e)),r},u.prototype.readIntBE=function(t,e,n){t>>>=0,e>>>=0,n||O(t,e,this.length);let r=e,o=1,i=this[t+--r];for(;r>0&&(o*=256);)i+=this[t+--r]*o;return o*=128,i>=o&&(i-=Math.pow(2,8*e)),i},u.prototype.readInt8=function(t,e){return t>>>=0,e||O(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){t>>>=0,e||O(t,2,this.length);const n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(t,e){t>>>=0,e||O(t,2,this.length);const n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return t>>>=0,e||O(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readBigInt64LE=Z((function(t){z(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||q(t,this.length-8);const r=this[t+4]+256*this[t+5]+65536*this[t+6]+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(e+256*this[++t]+65536*this[++t]+this[++t]*2**24)})),u.prototype.readBigInt64BE=Z((function(t){z(t>>>=0,"offset");const e=this[t],n=this[t+7];void 0!==e&&void 0!==n||q(t,this.length-8);const r=(e<<24)+65536*this[++t]+256*this[++t]+this[++t];return(BigInt(r)<<BigInt(32))+BigInt(this[++t]*2**24+65536*this[++t]+256*this[++t]+n)})),u.prototype.readFloatLE=function(t,e){return t>>>=0,e||O(t,4,this.length),o.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return t>>>=0,e||O(t,4,this.length),o.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return t>>>=0,e||O(t,8,this.length),o.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return t>>>=0,e||O(t,8,this.length),o.read(this,t,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(t,e,n,r){if(t=+t,e>>>=0,n>>>=0,!r){L(this,t,e,n,Math.pow(2,8*n)-1,0)}let o=1,i=0;for(this[e]=255&t;++i<n&&(o*=256);)this[e+i]=t/o&255;return e+n},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(t,e,n,r){if(t=+t,e>>>=0,n>>>=0,!r){L(this,t,e,n,Math.pow(2,8*n)-1,0)}let o=n-1,i=1;for(this[e+o]=255&t;--o>=0&&(i*=256);)this[e+o]=t/i&255;return e+n},u.prototype.writeUint8=u.prototype.writeUInt8=function(t,e,n){return t=+t,e>>>=0,n||L(this,t,e,1,255,0),this[e]=255&t,e+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(t,e,n){return t=+t,e>>>=0,n||L(this,t,e,2,65535,0),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(t,e,n){return t=+t,e>>>=0,n||L(this,t,e,2,65535,0),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(t,e,n){return t=+t,e>>>=0,n||L(this,t,e,4,4294967295,0),this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t,e+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(t,e,n){return t=+t,e>>>=0,n||L(this,t,e,4,4294967295,0),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigUInt64LE=Z((function(t,e=0){return U(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))})),u.prototype.writeBigUInt64BE=Z((function(t,e=0){return j(this,t,e,BigInt(0),BigInt("0xffffffffffffffff"))})),u.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e>>>=0,!r){const r=Math.pow(2,8*n-1);L(this,t,e,n,r-1,-r)}let o=0,i=1,a=0;for(this[e]=255&t;++o<n&&(i*=256);)t<0&&0===a&&0!==this[e+o-1]&&(a=1),this[e+o]=(t/i>>0)-a&255;return e+n},u.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e>>>=0,!r){const r=Math.pow(2,8*n-1);L(this,t,e,n,r-1,-r)}let o=n-1,i=1,a=0;for(this[e+o]=255&t;--o>=0&&(i*=256);)t<0&&0===a&&0!==this[e+o+1]&&(a=1),this[e+o]=(t/i>>0)-a&255;return e+n},u.prototype.writeInt8=function(t,e,n){return t=+t,e>>>=0,n||L(this,t,e,1,127,-128),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,n){return t=+t,e>>>=0,n||L(this,t,e,2,32767,-32768),this[e]=255&t,this[e+1]=t>>>8,e+2},u.prototype.writeInt16BE=function(t,e,n){return t=+t,e>>>=0,n||L(this,t,e,2,32767,-32768),this[e]=t>>>8,this[e+1]=255&t,e+2},u.prototype.writeInt32LE=function(t,e,n){return t=+t,e>>>=0,n||L(this,t,e,4,2147483647,-2147483648),this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24,e+4},u.prototype.writeInt32BE=function(t,e,n){return t=+t,e>>>=0,n||L(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t,e+4},u.prototype.writeBigInt64LE=Z((function(t,e=0){return U(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),u.prototype.writeBigInt64BE=Z((function(t,e=0){return j(this,t,e,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),u.prototype.writeFloatLE=function(t,e,n){return M(this,t,e,!0,n)},u.prototype.writeFloatBE=function(t,e,n){return M(this,t,e,!1,n)},u.prototype.writeDoubleLE=function(t,e,n){return P(this,t,e,!0,n)},u.prototype.writeDoubleBE=function(t,e,n){return P(this,t,e,!1,n)},u.prototype.copy=function(t,e,n,r){if(!u.isBuffer(t))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);const o=r-n;return this===t&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(e,n,r):Uint8Array.prototype.set.call(t,this.subarray(n,r),e),o},u.prototype.fill=function(t,e,n,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===t.length){const e=t.charCodeAt(0);("utf8"===r&&e<128||"latin1"===r)&&(t=e)}}else"number"==typeof t?t&=255:"boolean"==typeof t&&(t=Number(t));if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;let o;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"==typeof t)for(o=e;o<n;++o)this[o]=t;else{const i=u.isBuffer(t)?t:u.from(t,r),a=i.length;if(0===a)throw new TypeError('The value "'+t+'" is invalid for argument "value"');for(o=0;o<n-e;++o)this[o+e]=i[o%a]}return this};const $={};function D(t,e,n){$[t]=class NodeError extends n{constructor(){super(),Object.defineProperty(this,"message",{value:e.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${t}]`,this.stack,delete this.name}get code(){return t}set code(t){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:t,writable:!0})}toString(){return`${this.name} [${t}]: ${this.message}`}}}function W(t){let e="",n=t.length;const r="-"===t[0]?1:0;for(;n>=r+4;n-=3)e=`_${t.slice(n-3,n)}${e}`;return`${t.slice(0,n)}${e}`}function F(t,e,n,r,o,i){if(t>n||t<e){const r="bigint"==typeof e?"n":"";let o;throw o=i>3?0===e||e===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(i+1)}${r}`:`>= -(2${r} ** ${8*(i+1)-1}${r}) and < 2 ** ${8*(i+1)-1}${r}`:`>= ${e}${r} and <= ${n}${r}`,new $.ERR_OUT_OF_RANGE("value",o,t)}!function(t,e,n){z(e,"offset"),void 0!==t[e]&&void 0!==t[e+n]||q(e,t.length-(n+1))}(r,o,i)}function z(t,e){if("number"!=typeof t)throw new $.ERR_INVALID_ARG_TYPE(e,"number",t)}function q(t,e,n){if(Math.floor(t)!==t)throw z(t,n),new $.ERR_OUT_OF_RANGE(n||"offset","an integer",t);if(e<0)throw new $.ERR_BUFFER_OUT_OF_BOUNDS;throw new $.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${e}`,t)}D("ERR_BUFFER_OUT_OF_BOUNDS",(function(t){return t?`${t} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),D("ERR_INVALID_ARG_TYPE",(function(t,e){return`The "${t}" argument must be of type number. Received type ${typeof e}`}),TypeError),D("ERR_OUT_OF_RANGE",(function(t,e,n){let r=`The value of "${t}" is out of range.`,o=n;return Number.isInteger(n)&&Math.abs(n)>2**32?o=W(String(n)):"bigint"==typeof n&&(o=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(o=W(o)),o+="n"),r+=` It must be ${e}. Received ${o}`,r}),RangeError);const H=/[^+/0-9A-Za-z-_]/g;function V(t,e){let n;e=e||1/0;const r=t.length;let o=null;const i=[];for(let a=0;a<r;++a){if(n=t.charCodeAt(a),n>55295&&n<57344){if(!o){if(n>56319){(e-=3)>-1&&i.push(239,191,189);continue}if(a+1===r){(e-=3)>-1&&i.push(239,191,189);continue}o=n;continue}if(n<56320){(e-=3)>-1&&i.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(e-=3)>-1&&i.push(239,191,189);if(o=null,n<128){if((e-=1)<0)break;i.push(n)}else if(n<2048){if((e-=2)<0)break;i.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function G(t){return r.toByteArray(function(t){if((t=(t=t.split("=")[0]).trim().replace(H,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function J(t,e,n,r){let o;for(o=0;o<r&&!(o+n>=e.length||o>=t.length);++o)e[o+n]=t[o];return o}function Y(t,e){return t instanceof e||null!=t&&null!=t.constructor&&null!=t.constructor.name&&t.constructor.name===e.name}function K(t){return t!=t}const X=function(){const t="0123456789abcdef",e=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let o=0;o<16;++o)e[r+o]=t[n]+t[o]}return e}();function Z(t){return"undefined"==typeof BigInt?Q:t}function Q(){throw new Error("BigInt not supported")}},465:t=>{var e,n="object"==typeof Reflect?Reflect:null,r=n&&"function"==typeof n.apply?n.apply:function(t,e,n){return Function.prototype.apply.call(t,e,n)};e=n&&"function"==typeof n.ownKeys?n.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var o=Number.isNaN||function(t){return t!=t};function i(){i.init.call(this)}t.exports=i,t.exports.once=function(t,e){return new Promise((function(n,r){function o(n){t.removeListener(e,i),r(n)}function i(){"function"==typeof t.removeListener&&t.removeListener("error",o),n([].slice.call(arguments))}g(t,e,i,{once:!0}),"error"!==e&&function(t,e,n){"function"==typeof t.on&&g(t,"error",e,n)}(t,o,{once:!0})}))},i.EventEmitter=i,i.prototype._events=void 0,i.prototype._eventsCount=0,i.prototype._maxListeners=void 0;var a=10;function s(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function u(t){return void 0===t._maxListeners?i.defaultMaxListeners:t._maxListeners}function l(t,e,n,r){var o,i,a,l;if(s(n),void 0===(i=t._events)?(i=t._events=Object.create(null),t._eventsCount=0):(void 0!==i.newListener&&(t.emit("newListener",e,n.listener?n.listener:n),i=t._events),a=i[e]),void 0===a)a=i[e]=n,++t._eventsCount;else if("function"==typeof a?a=i[e]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),(o=u(t))>0&&a.length>o&&!a.warned){a.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=t,c.type=e,c.count=a.length,l=c,console&&console.warn&&console.warn(l)}return t}function c(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function f(t,e,n){var r={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},o=c.bind(r);return o.listener=n,r.wrapFn=o,o}function d(t,e,n){var r=t._events;if(void 0===r)return[];var o=r[e];return void 0===o?[]:"function"==typeof o?n?[o.listener||o]:[o]:n?function(t){for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e}(o):p(o,o.length)}function h(t){var e=this._events;if(void 0!==e){var n=e[t];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function p(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t[r];return n}function g(t,e,n,r){if("function"==typeof t.on)r.once?t.once(e,n):t.on(e,n);else{if("function"!=typeof t.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,(function o(i){r.once&&t.removeEventListener(e,o),n(i)}))}}Object.defineProperty(i,"defaultMaxListeners",{enumerable:!0,get:function(){return a},set:function(t){if("number"!=typeof t||t<0||o(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");a=t}}),i.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},i.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||o(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},i.prototype.getMaxListeners=function(){return u(this)},i.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e.push(arguments[n]);var o="error"===t,i=this._events;if(void 0!==i)o=o&&void 0===i.error;else if(!o)return!1;if(o){var a;if(e.length>0&&(a=e[0]),a instanceof Error)throw a;var s=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw s.context=a,s}var u=i[t];if(void 0===u)return!1;if("function"==typeof u)r(u,this,e);else{var l=u.length,c=p(u,l);for(n=0;n<l;++n)r(c[n],this,e)}return!0},i.prototype.addListener=function(t,e){return l(this,t,e,!1)},i.prototype.on=i.prototype.addListener,i.prototype.prependListener=function(t,e){return l(this,t,e,!0)},i.prototype.once=function(t,e){return s(e),this.on(t,f(this,t,e)),this},i.prototype.prependOnceListener=function(t,e){return s(e),this.prependListener(t,f(this,t,e)),this},i.prototype.removeListener=function(t,e){var n,r,o,i,a;if(s(e),void 0===(r=this._events))return this;if(void 0===(n=r[t]))return this;if(n===e||n.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete r[t],r.removeListener&&this.emit("removeListener",t,n.listener||e));else if("function"!=typeof n){for(o=-1,i=n.length-1;i>=0;i--)if(n[i]===e||n[i].listener===e){a=n[i].listener,o=i;break}if(o<0)return this;0===o?n.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(n,o),1===n.length&&(r[t]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",t,a||e)}return this},i.prototype.off=i.prototype.removeListener,i.prototype.removeAllListeners=function(t){var e,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[t]),this;if(0===arguments.length){var o,i=Object.keys(n);for(r=0;r<i.length;++r)"removeListener"!==(o=i[r])&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(r=e.length-1;r>=0;r--)this.removeListener(t,e[r]);return this},i.prototype.listeners=function(t){return d(this,t,!0)},i.prototype.rawListeners=function(t){return d(this,t,!1)},i.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):h.call(t,e)},i.prototype.listenerCount=h,i.prototype.eventNames=function(){return this._eventsCount>0?e(this._events):[]}},215:(t,e)=>{e.read=function(t,e,n,r,o){var i,a,s=8*o-r-1,u=(1<<s)-1,l=u>>1,c=-7,f=n?o-1:0,d=n?-1:1,h=t[e+f];for(f+=d,i=h&(1<<-c)-1,h>>=-c,c+=s;c>0;i=256*i+t[e+f],f+=d,c-=8);for(a=i&(1<<-c)-1,i>>=-c,c+=r;c>0;a=256*a+t[e+f],f+=d,c-=8);if(0===i)i=1-l;else{if(i===u)return a?NaN:1/0*(h?-1:1);a+=Math.pow(2,r),i-=l}return(h?-1:1)*a*Math.pow(2,i-r)},e.write=function(t,e,n,r,o,i){var a,s,u,l=8*i-o-1,c=(1<<l)-1,f=c>>1,d=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:i-1,p=r?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,a=c):(a=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-a))<1&&(a--,u*=2),(e+=a+f>=1?d/u:d*Math.pow(2,1-f))*u>=2&&(a++,u/=2),a+f>=c?(s=0,a=c):a+f>=1?(s=(e*u-1)*Math.pow(2,o),a+=f):(s=e*Math.pow(2,f-1)*Math.pow(2,o),a=0));o>=8;t[n+h]=255&s,h+=p,s/=256,o-=8);for(a=a<<o|s,l+=o;l>0;t[n+h]=255&a,h+=p,a/=256,l-=8);t[n+h-p]|=128*g}},951:function(t,e,n){var r;t=n.nmd(t),function(){var o,i="Expected a function",a="__lodash_hash_undefined__",s="__lodash_placeholder__",u=16,l=32,c=64,f=128,d=256,h=1/0,p=9007199254740991,g=NaN,y=4294967295,m=[["ary",f],["bind",1],["bindKey",2],["curry",8],["curryRight",u],["flip",512],["partial",l],["partialRight",c],["rearg",d]],v="[object Arguments]",b="[object Array]",w="[object Boolean]",_="[object Date]",E="[object Error]",A="[object Function]",S="[object GeneratorFunction]",I="[object Map]",T="[object Number]",R="[object Object]",x="[object Promise]",C="[object RegExp]",B="[object Set]",k="[object String]",O="[object Symbol]",L="[object WeakMap]",U="[object ArrayBuffer]",j="[object DataView]",N="[object Float32Array]",M="[object Float64Array]",P="[object Int8Array]",$="[object Int16Array]",D="[object Int32Array]",W="[object Uint8Array]",F="[object Uint8ClampedArray]",z="[object Uint16Array]",q="[object Uint32Array]",H=/\b__p \+= '';/g,V=/\b(__p \+=) '' \+/g,G=/(__e\(.*?\)|\b__t\)) \+\n'';/g,J=/&(?:amp|lt|gt|quot|#39);/g,Y=/[&<>"']/g,K=RegExp(J.source),X=RegExp(Y.source),Z=/<%-([\s\S]+?)%>/g,Q=/<%([\s\S]+?)%>/g,tt=/<%=([\s\S]+?)%>/g,et=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,nt=/^\w*$/,rt=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,ot=/[\\^$.*+?()[\]{}|]/g,it=RegExp(ot.source),at=/^\s+/,st=/\s/,ut=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,lt=/\{\n\/\* \[wrapped with (.+)\] \*/,ct=/,? & /,ft=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,dt=/[()=,{}\[\]\/\s]/,ht=/\\(\\)?/g,pt=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,gt=/\w*$/,yt=/^[-+]0x[0-9a-f]+$/i,mt=/^0b[01]+$/i,vt=/^\[object .+?Constructor\]$/,bt=/^0o[0-7]+$/i,wt=/^(?:0|[1-9]\d*)$/,_t=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Et=/($^)/,At=/['\n\r\u2028\u2029\\]/g,St="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",It="\\u2700-\\u27bf",Tt="a-z\\xdf-\\xf6\\xf8-\\xff",Rt="A-Z\\xc0-\\xd6\\xd8-\\xde",xt="\\ufe0e\\ufe0f",Ct="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Bt="['’]",kt="[\\ud800-\\udfff]",Ot="["+Ct+"]",Lt="["+St+"]",Ut="\\d+",jt="[\\u2700-\\u27bf]",Nt="["+Tt+"]",Mt="[^\\ud800-\\udfff"+Ct+Ut+It+Tt+Rt+"]",Pt="\\ud83c[\\udffb-\\udfff]",$t="[^\\ud800-\\udfff]",Dt="(?:\\ud83c[\\udde6-\\uddff]){2}",Wt="[\\ud800-\\udbff][\\udc00-\\udfff]",Ft="["+Rt+"]",zt="(?:"+Nt+"|"+Mt+")",qt="(?:"+Ft+"|"+Mt+")",Ht="(?:['’](?:d|ll|m|re|s|t|ve))?",Vt="(?:['’](?:D|LL|M|RE|S|T|VE))?",Gt="(?:"+Lt+"|"+Pt+")"+"?",Jt="[\\ufe0e\\ufe0f]?",Yt=Jt+Gt+("(?:\\u200d(?:"+[$t,Dt,Wt].join("|")+")"+Jt+Gt+")*"),Kt="(?:"+[jt,Dt,Wt].join("|")+")"+Yt,Xt="(?:"+[$t+Lt+"?",Lt,Dt,Wt,kt].join("|")+")",Zt=RegExp(Bt,"g"),Qt=RegExp(Lt,"g"),te=RegExp(Pt+"(?="+Pt+")|"+Xt+Yt,"g"),ee=RegExp([Ft+"?"+Nt+"+"+Ht+"(?="+[Ot,Ft,"$"].join("|")+")",qt+"+"+Vt+"(?="+[Ot,Ft+zt,"$"].join("|")+")",Ft+"?"+zt+"+"+Ht,Ft+"+"+Vt,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Ut,Kt].join("|"),"g"),ne=RegExp("[\\u200d\\ud800-\\udfff"+St+xt+"]"),re=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,oe=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],ie=-1,ae={};ae[N]=ae[M]=ae[P]=ae[$]=ae[D]=ae[W]=ae[F]=ae[z]=ae[q]=!0,ae[v]=ae[b]=ae[U]=ae[w]=ae[j]=ae[_]=ae[E]=ae[A]=ae[I]=ae[T]=ae[R]=ae[C]=ae[B]=ae[k]=ae[L]=!1;var se={};se[v]=se[b]=se[U]=se[j]=se[w]=se[_]=se[N]=se[M]=se[P]=se[$]=se[D]=se[I]=se[T]=se[R]=se[C]=se[B]=se[k]=se[O]=se[W]=se[F]=se[z]=se[q]=!0,se[E]=se[A]=se[L]=!1;var ue={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},le=parseFloat,ce=parseInt,fe="object"==typeof n.g&&n.g&&n.g.Object===Object&&n.g,de="object"==typeof self&&self&&self.Object===Object&&self,he=fe||de||Function("return this")(),pe=e&&!e.nodeType&&e,ge=pe&&t&&!t.nodeType&&t,ye=ge&&ge.exports===pe,me=ye&&fe.process,ve=function(){try{var t=ge&&ge.require&&ge.require("util").types;return t||me&&me.binding&&me.binding("util")}catch(t){}}(),be=ve&&ve.isArrayBuffer,we=ve&&ve.isDate,_e=ve&&ve.isMap,Ee=ve&&ve.isRegExp,Ae=ve&&ve.isSet,Se=ve&&ve.isTypedArray;function Ie(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}function Te(t,e,n,r){for(var o=-1,i=null==t?0:t.length;++o<i;){var a=t[o];e(r,a,n(a),t)}return r}function Re(t,e){for(var n=-1,r=null==t?0:t.length;++n<r&&!1!==e(t[n],n,t););return t}function xe(t,e){for(var n=null==t?0:t.length;n--&&!1!==e(t[n],n,t););return t}function Ce(t,e){for(var n=-1,r=null==t?0:t.length;++n<r;)if(!e(t[n],n,t))return!1;return!0}function Be(t,e){for(var n=-1,r=null==t?0:t.length,o=0,i=[];++n<r;){var a=t[n];e(a,n,t)&&(i[o++]=a)}return i}function ke(t,e){return!!(null==t?0:t.length)&&We(t,e,0)>-1}function Oe(t,e,n){for(var r=-1,o=null==t?0:t.length;++r<o;)if(n(e,t[r]))return!0;return!1}function Le(t,e){for(var n=-1,r=null==t?0:t.length,o=Array(r);++n<r;)o[n]=e(t[n],n,t);return o}function Ue(t,e){for(var n=-1,r=e.length,o=t.length;++n<r;)t[o+n]=e[n];return t}function je(t,e,n,r){var o=-1,i=null==t?0:t.length;for(r&&i&&(n=t[++o]);++o<i;)n=e(n,t[o],o,t);return n}function Ne(t,e,n,r){var o=null==t?0:t.length;for(r&&o&&(n=t[--o]);o--;)n=e(n,t[o],o,t);return n}function Me(t,e){for(var n=-1,r=null==t?0:t.length;++n<r;)if(e(t[n],n,t))return!0;return!1}var Pe=He("length");function $e(t,e,n){var r;return n(t,(function(t,n,o){if(e(t,n,o))return r=n,!1})),r}function De(t,e,n,r){for(var o=t.length,i=n+(r?1:-1);r?i--:++i<o;)if(e(t[i],i,t))return i;return-1}function We(t,e,n){return e==e?function(t,e,n){var r=n-1,o=t.length;for(;++r<o;)if(t[r]===e)return r;return-1}(t,e,n):De(t,ze,n)}function Fe(t,e,n,r){for(var o=n-1,i=t.length;++o<i;)if(r(t[o],e))return o;return-1}function ze(t){return t!=t}function qe(t,e){var n=null==t?0:t.length;return n?Je(t,e)/n:g}function He(t){return function(e){return null==e?o:e[t]}}function Ve(t){return function(e){return null==t?o:t[e]}}function Ge(t,e,n,r,o){return o(t,(function(t,o,i){n=r?(r=!1,t):e(n,t,o,i)})),n}function Je(t,e){for(var n,r=-1,i=t.length;++r<i;){var a=e(t[r]);a!==o&&(n=n===o?a:n+a)}return n}function Ye(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}function Ke(t){return t?t.slice(0,gn(t)+1).replace(at,""):t}function Xe(t){return function(e){return t(e)}}function Ze(t,e){return Le(e,(function(e){return t[e]}))}function Qe(t,e){return t.has(e)}function tn(t,e){for(var n=-1,r=t.length;++n<r&&We(e,t[n],0)>-1;);return n}function en(t,e){for(var n=t.length;n--&&We(e,t[n],0)>-1;);return n}function nn(t,e){for(var n=t.length,r=0;n--;)t[n]===e&&++r;return r}var rn=Ve({À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"}),on=Ve({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function an(t){return"\\"+ue[t]}function sn(t){return ne.test(t)}function un(t){var e=-1,n=Array(t.size);return t.forEach((function(t,r){n[++e]=[r,t]})),n}function ln(t,e){return function(n){return t(e(n))}}function cn(t,e){for(var n=-1,r=t.length,o=0,i=[];++n<r;){var a=t[n];a!==e&&a!==s||(t[n]=s,i[o++]=n)}return i}function fn(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=t})),n}function dn(t){var e=-1,n=Array(t.size);return t.forEach((function(t){n[++e]=[t,t]})),n}function hn(t){return sn(t)?function(t){var e=te.lastIndex=0;for(;te.test(t);)++e;return e}(t):Pe(t)}function pn(t){return sn(t)?function(t){return t.match(te)||[]}(t):function(t){return t.split("")}(t)}function gn(t){for(var e=t.length;e--&&st.test(t.charAt(e)););return e}var yn=Ve({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var mn=function t(e){var n,r=(e=null==e?he:mn.defaults(he.Object(),e,mn.pick(he,oe))).Array,st=e.Date,St=e.Error,It=e.Function,Tt=e.Math,Rt=e.Object,xt=e.RegExp,Ct=e.String,Bt=e.TypeError,kt=r.prototype,Ot=It.prototype,Lt=Rt.prototype,Ut=e["__core-js_shared__"],jt=Ot.toString,Nt=Lt.hasOwnProperty,Mt=0,Pt=(n=/[^.]+$/.exec(Ut&&Ut.keys&&Ut.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"",$t=Lt.toString,Dt=jt.call(Rt),Wt=he._,Ft=xt("^"+jt.call(Nt).replace(ot,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),zt=ye?e.Buffer:o,qt=e.Symbol,Ht=e.Uint8Array,Vt=zt?zt.allocUnsafe:o,Gt=ln(Rt.getPrototypeOf,Rt),Jt=Rt.create,Yt=Lt.propertyIsEnumerable,Kt=kt.splice,Xt=qt?qt.isConcatSpreadable:o,te=qt?qt.iterator:o,ne=qt?qt.toStringTag:o,ue=function(){try{var t=pi(Rt,"defineProperty");return t({},"",{}),t}catch(t){}}(),fe=e.clearTimeout!==he.clearTimeout&&e.clearTimeout,de=st&&st.now!==he.Date.now&&st.now,pe=e.setTimeout!==he.setTimeout&&e.setTimeout,ge=Tt.ceil,me=Tt.floor,ve=Rt.getOwnPropertySymbols,Pe=zt?zt.isBuffer:o,Ve=e.isFinite,vn=kt.join,bn=ln(Rt.keys,Rt),wn=Tt.max,_n=Tt.min,En=st.now,An=e.parseInt,Sn=Tt.random,In=kt.reverse,Tn=pi(e,"DataView"),Rn=pi(e,"Map"),xn=pi(e,"Promise"),Cn=pi(e,"Set"),Bn=pi(e,"WeakMap"),kn=pi(Rt,"create"),On=Bn&&new Bn,Ln={},Un=Wi(Tn),jn=Wi(Rn),Nn=Wi(xn),Mn=Wi(Cn),Pn=Wi(Bn),$n=qt?qt.prototype:o,Dn=$n?$n.valueOf:o,Wn=$n?$n.toString:o;function Fn(t){if(os(t)&&!Ga(t)&&!(t instanceof Vn)){if(t instanceof Hn)return t;if(Nt.call(t,"__wrapped__"))return Fi(t)}return new Hn(t)}var zn=function(){function t(){}return function(e){if(!rs(e))return{};if(Jt)return Jt(e);t.prototype=e;var n=new t;return t.prototype=o,n}}();function qn(){}function Hn(t,e){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!e,this.__index__=0,this.__values__=o}function Vn(t){this.__wrapped__=t,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=y,this.__views__=[]}function Gn(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function Jn(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function Yn(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}function Kn(t){var e=-1,n=null==t?0:t.length;for(this.__data__=new Yn;++e<n;)this.add(t[e])}function Xn(t){var e=this.__data__=new Jn(t);this.size=e.size}function Zn(t,e){var n=Ga(t),r=!n&&Va(t),o=!n&&!r&&Xa(t),i=!n&&!r&&!o&&ds(t),a=n||r||o||i,s=a?Ye(t.length,Ct):[],u=s.length;for(var l in t)!e&&!Nt.call(t,l)||a&&("length"==l||o&&("offset"==l||"parent"==l)||i&&("buffer"==l||"byteLength"==l||"byteOffset"==l)||_i(l,u))||s.push(l);return s}function Qn(t){var e=t.length;return e?t[Kr(0,e-1)]:o}function tr(t,e){return Pi(Oo(t),lr(e,0,t.length))}function er(t){return Pi(Oo(t))}function nr(t,e,n){(n!==o&&!za(t[e],n)||n===o&&!(e in t))&&sr(t,e,n)}function rr(t,e,n){var r=t[e];Nt.call(t,e)&&za(r,n)&&(n!==o||e in t)||sr(t,e,n)}function or(t,e){for(var n=t.length;n--;)if(za(t[n][0],e))return n;return-1}function ir(t,e,n,r){return pr(t,(function(t,o,i){e(r,t,n(t),i)})),r}function ar(t,e){return t&&Lo(e,Us(e),t)}function sr(t,e,n){"__proto__"==e&&ue?ue(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}function ur(t,e){for(var n=-1,i=e.length,a=r(i),s=null==t;++n<i;)a[n]=s?o:Cs(t,e[n]);return a}function lr(t,e,n){return t==t&&(n!==o&&(t=t<=n?t:n),e!==o&&(t=t>=e?t:e)),t}function cr(t,e,n,r,i,a){var s,u=1&e,l=2&e,c=4&e;if(n&&(s=i?n(t,r,i,a):n(t)),s!==o)return s;if(!rs(t))return t;var f=Ga(t);if(f){if(s=function(t){var e=t.length,n=new t.constructor(e);e&&"string"==typeof t[0]&&Nt.call(t,"index")&&(n.index=t.index,n.input=t.input);return n}(t),!u)return Oo(t,s)}else{var d=mi(t),h=d==A||d==S;if(Xa(t))return To(t,u);if(d==R||d==v||h&&!i){if(s=l||h?{}:bi(t),!u)return l?function(t,e){return Lo(t,yi(t),e)}(t,function(t,e){return t&&Lo(e,js(e),t)}(s,t)):function(t,e){return Lo(t,gi(t),e)}(t,ar(s,t))}else{if(!se[d])return i?t:{};s=function(t,e,n){var r=t.constructor;switch(e){case U:return Ro(t);case w:case _:return new r(+t);case j:return function(t,e){var n=e?Ro(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}(t,n);case N:case M:case P:case $:case D:case W:case F:case z:case q:return xo(t,n);case I:return new r;case T:case k:return new r(t);case C:return function(t){var e=new t.constructor(t.source,gt.exec(t));return e.lastIndex=t.lastIndex,e}(t);case B:return new r;case O:return o=t,Dn?Rt(Dn.call(o)):{}}var o}(t,d,u)}}a||(a=new Xn);var p=a.get(t);if(p)return p;a.set(t,s),ls(t)?t.forEach((function(r){s.add(cr(r,e,n,r,t,a))})):is(t)&&t.forEach((function(r,o){s.set(o,cr(r,e,n,o,t,a))}));var g=f?o:(c?l?si:ai:l?js:Us)(t);return Re(g||t,(function(r,o){g&&(r=t[o=r]),rr(s,o,cr(r,e,n,o,t,a))})),s}function fr(t,e,n){var r=n.length;if(null==t)return!r;for(t=Rt(t);r--;){var i=n[r],a=e[i],s=t[i];if(s===o&&!(i in t)||!a(s))return!1}return!0}function dr(t,e,n){if("function"!=typeof t)throw new Bt(i);return Ui((function(){t.apply(o,n)}),e)}function hr(t,e,n,r){var o=-1,i=ke,a=!0,s=t.length,u=[],l=e.length;if(!s)return u;n&&(e=Le(e,Xe(n))),r?(i=Oe,a=!1):e.length>=200&&(i=Qe,a=!1,e=new Kn(e));t:for(;++o<s;){var c=t[o],f=null==n?c:n(c);if(c=r||0!==c?c:0,a&&f==f){for(var d=l;d--;)if(e[d]===f)continue t;u.push(c)}else i(e,f,r)||u.push(c)}return u}Fn.templateSettings={escape:Z,evaluate:Q,interpolate:tt,variable:"",imports:{_:Fn}},Fn.prototype=qn.prototype,Fn.prototype.constructor=Fn,Hn.prototype=zn(qn.prototype),Hn.prototype.constructor=Hn,Vn.prototype=zn(qn.prototype),Vn.prototype.constructor=Vn,Gn.prototype.clear=function(){this.__data__=kn?kn(null):{},this.size=0},Gn.prototype.delete=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e},Gn.prototype.get=function(t){var e=this.__data__;if(kn){var n=e[t];return n===a?o:n}return Nt.call(e,t)?e[t]:o},Gn.prototype.has=function(t){var e=this.__data__;return kn?e[t]!==o:Nt.call(e,t)},Gn.prototype.set=function(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=kn&&e===o?a:e,this},Jn.prototype.clear=function(){this.__data__=[],this.size=0},Jn.prototype.delete=function(t){var e=this.__data__,n=or(e,t);return!(n<0)&&(n==e.length-1?e.pop():Kt.call(e,n,1),--this.size,!0)},Jn.prototype.get=function(t){var e=this.__data__,n=or(e,t);return n<0?o:e[n][1]},Jn.prototype.has=function(t){return or(this.__data__,t)>-1},Jn.prototype.set=function(t,e){var n=this.__data__,r=or(n,t);return r<0?(++this.size,n.push([t,e])):n[r][1]=e,this},Yn.prototype.clear=function(){this.size=0,this.__data__={hash:new Gn,map:new(Rn||Jn),string:new Gn}},Yn.prototype.delete=function(t){var e=di(this,t).delete(t);return this.size-=e?1:0,e},Yn.prototype.get=function(t){return di(this,t).get(t)},Yn.prototype.has=function(t){return di(this,t).has(t)},Yn.prototype.set=function(t,e){var n=di(this,t),r=n.size;return n.set(t,e),this.size+=n.size==r?0:1,this},Kn.prototype.add=Kn.prototype.push=function(t){return this.__data__.set(t,a),this},Kn.prototype.has=function(t){return this.__data__.has(t)},Xn.prototype.clear=function(){this.__data__=new Jn,this.size=0},Xn.prototype.delete=function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n},Xn.prototype.get=function(t){return this.__data__.get(t)},Xn.prototype.has=function(t){return this.__data__.has(t)},Xn.prototype.set=function(t,e){var n=this.__data__;if(n instanceof Jn){var r=n.__data__;if(!Rn||r.length<199)return r.push([t,e]),this.size=++n.size,this;n=this.__data__=new Yn(r)}return n.set(t,e),this.size=n.size,this};var pr=No(Er),gr=No(Ar,!0);function yr(t,e){var n=!0;return pr(t,(function(t,r,o){return n=!!e(t,r,o)})),n}function mr(t,e,n){for(var r=-1,i=t.length;++r<i;){var a=t[r],s=e(a);if(null!=s&&(u===o?s==s&&!fs(s):n(s,u)))var u=s,l=a}return l}function vr(t,e){var n=[];return pr(t,(function(t,r,o){e(t,r,o)&&n.push(t)})),n}function br(t,e,n,r,o){var i=-1,a=t.length;for(n||(n=wi),o||(o=[]);++i<a;){var s=t[i];e>0&&n(s)?e>1?br(s,e-1,n,r,o):Ue(o,s):r||(o[o.length]=s)}return o}var wr=Mo(),_r=Mo(!0);function Er(t,e){return t&&wr(t,e,Us)}function Ar(t,e){return t&&_r(t,e,Us)}function Sr(t,e){return Be(e,(function(e){return ts(t[e])}))}function Ir(t,e){for(var n=0,r=(e=Eo(e,t)).length;null!=t&&n<r;)t=t[Di(e[n++])];return n&&n==r?t:o}function Tr(t,e,n){var r=e(t);return Ga(t)?r:Ue(r,n(t))}function Rr(t){return null==t?t===o?"[object Undefined]":"[object Null]":ne&&ne in Rt(t)?function(t){var e=Nt.call(t,ne),n=t[ne];try{t[ne]=o;var r=!0}catch(t){}var i=$t.call(t);r&&(e?t[ne]=n:delete t[ne]);return i}(t):function(t){return $t.call(t)}(t)}function xr(t,e){return t>e}function Cr(t,e){return null!=t&&Nt.call(t,e)}function Br(t,e){return null!=t&&e in Rt(t)}function kr(t,e,n){for(var i=n?Oe:ke,a=t[0].length,s=t.length,u=s,l=r(s),c=1/0,f=[];u--;){var d=t[u];u&&e&&(d=Le(d,Xe(e))),c=_n(d.length,c),l[u]=!n&&(e||a>=120&&d.length>=120)?new Kn(u&&d):o}d=t[0];var h=-1,p=l[0];t:for(;++h<a&&f.length<c;){var g=d[h],y=e?e(g):g;if(g=n||0!==g?g:0,!(p?Qe(p,y):i(f,y,n))){for(u=s;--u;){var m=l[u];if(!(m?Qe(m,y):i(t[u],y,n)))continue t}p&&p.push(y),f.push(g)}}return f}function Or(t,e,n){var r=null==(t=Bi(t,e=Eo(e,t)))?t:t[Di(Qi(e))];return null==r?o:Ie(r,t,n)}function Lr(t){return os(t)&&Rr(t)==v}function Ur(t,e,n,r,i){return t===e||(null==t||null==e||!os(t)&&!os(e)?t!=t&&e!=e:function(t,e,n,r,i,a){var s=Ga(t),u=Ga(e),l=s?b:mi(t),c=u?b:mi(e),f=(l=l==v?R:l)==R,d=(c=c==v?R:c)==R,h=l==c;if(h&&Xa(t)){if(!Xa(e))return!1;s=!0,f=!1}if(h&&!f)return a||(a=new Xn),s||ds(t)?oi(t,e,n,r,i,a):function(t,e,n,r,o,i,a){switch(n){case j:if(t.byteLength!=e.byteLength||t.byteOffset!=e.byteOffset)return!1;t=t.buffer,e=e.buffer;case U:return!(t.byteLength!=e.byteLength||!i(new Ht(t),new Ht(e)));case w:case _:case T:return za(+t,+e);case E:return t.name==e.name&&t.message==e.message;case C:case k:return t==e+"";case I:var s=un;case B:var u=1&r;if(s||(s=fn),t.size!=e.size&&!u)return!1;var l=a.get(t);if(l)return l==e;r|=2,a.set(t,e);var c=oi(s(t),s(e),r,o,i,a);return a.delete(t),c;case O:if(Dn)return Dn.call(t)==Dn.call(e)}return!1}(t,e,l,n,r,i,a);if(!(1&n)){var p=f&&Nt.call(t,"__wrapped__"),g=d&&Nt.call(e,"__wrapped__");if(p||g){var y=p?t.value():t,m=g?e.value():e;return a||(a=new Xn),i(y,m,n,r,a)}}if(!h)return!1;return a||(a=new Xn),function(t,e,n,r,i,a){var s=1&n,u=ai(t),l=u.length,c=ai(e).length;if(l!=c&&!s)return!1;var f=l;for(;f--;){var d=u[f];if(!(s?d in e:Nt.call(e,d)))return!1}var h=a.get(t),p=a.get(e);if(h&&p)return h==e&&p==t;var g=!0;a.set(t,e),a.set(e,t);var y=s;for(;++f<l;){var m=t[d=u[f]],v=e[d];if(r)var b=s?r(v,m,d,e,t,a):r(m,v,d,t,e,a);if(!(b===o?m===v||i(m,v,n,r,a):b)){g=!1;break}y||(y="constructor"==d)}if(g&&!y){var w=t.constructor,_=e.constructor;w==_||!("constructor"in t)||!("constructor"in e)||"function"==typeof w&&w instanceof w&&"function"==typeof _&&_ instanceof _||(g=!1)}return a.delete(t),a.delete(e),g}(t,e,n,r,i,a)}(t,e,n,r,Ur,i))}function jr(t,e,n,r){var i=n.length,a=i,s=!r;if(null==t)return!a;for(t=Rt(t);i--;){var u=n[i];if(s&&u[2]?u[1]!==t[u[0]]:!(u[0]in t))return!1}for(;++i<a;){var l=(u=n[i])[0],c=t[l],f=u[1];if(s&&u[2]){if(c===o&&!(l in t))return!1}else{var d=new Xn;if(r)var h=r(c,f,l,t,e,d);if(!(h===o?Ur(f,c,3,r,d):h))return!1}}return!0}function Nr(t){return!(!rs(t)||(e=t,Pt&&Pt in e))&&(ts(t)?Ft:vt).test(Wi(t));var e}function Mr(t){return"function"==typeof t?t:null==t?au:"object"==typeof t?Ga(t)?zr(t[0],t[1]):Fr(t):gu(t)}function Pr(t){if(!Ti(t))return bn(t);var e=[];for(var n in Rt(t))Nt.call(t,n)&&"constructor"!=n&&e.push(n);return e}function $r(t){if(!rs(t))return function(t){var e=[];if(null!=t)for(var n in Rt(t))e.push(n);return e}(t);var e=Ti(t),n=[];for(var r in t)("constructor"!=r||!e&&Nt.call(t,r))&&n.push(r);return n}function Dr(t,e){return t<e}function Wr(t,e){var n=-1,o=Ya(t)?r(t.length):[];return pr(t,(function(t,r,i){o[++n]=e(t,r,i)})),o}function Fr(t){var e=hi(t);return 1==e.length&&e[0][2]?xi(e[0][0],e[0][1]):function(n){return n===t||jr(n,t,e)}}function zr(t,e){return Ai(t)&&Ri(e)?xi(Di(t),e):function(n){var r=Cs(n,t);return r===o&&r===e?Bs(n,t):Ur(e,r,3)}}function qr(t,e,n,r,i){t!==e&&wr(e,(function(a,s){if(i||(i=new Xn),rs(a))!function(t,e,n,r,i,a,s){var u=Oi(t,n),l=Oi(e,n),c=s.get(l);if(c)return void nr(t,n,c);var f=a?a(u,l,n+"",t,e,s):o,d=f===o;if(d){var h=Ga(l),p=!h&&Xa(l),g=!h&&!p&&ds(l);f=l,h||p||g?Ga(u)?f=u:Ka(u)?f=Oo(u):p?(d=!1,f=To(l,!0)):g?(d=!1,f=xo(l,!0)):f=[]:ss(l)||Va(l)?(f=u,Va(u)?f=ws(u):rs(u)&&!ts(u)||(f=bi(l))):d=!1}d&&(s.set(l,f),i(f,l,r,a,s),s.delete(l));nr(t,n,f)}(t,e,s,n,qr,r,i);else{var u=r?r(Oi(t,s),a,s+"",t,e,i):o;u===o&&(u=a),nr(t,s,u)}}),js)}function Hr(t,e){var n=t.length;if(n)return _i(e+=e<0?n:0,n)?t[e]:o}function Vr(t,e,n){e=e.length?Le(e,(function(t){return Ga(t)?function(e){return Ir(e,1===t.length?t[0]:t)}:t})):[au];var r=-1;e=Le(e,Xe(fi()));var o=Wr(t,(function(t,n,o){var i=Le(e,(function(e){return e(t)}));return{criteria:i,index:++r,value:t}}));return function(t,e){var n=t.length;for(t.sort(e);n--;)t[n]=t[n].value;return t}(o,(function(t,e){return function(t,e,n){var r=-1,o=t.criteria,i=e.criteria,a=o.length,s=n.length;for(;++r<a;){var u=Co(o[r],i[r]);if(u)return r>=s?u:u*("desc"==n[r]?-1:1)}return t.index-e.index}(t,e,n)}))}function Gr(t,e,n){for(var r=-1,o=e.length,i={};++r<o;){var a=e[r],s=Ir(t,a);n(s,a)&&eo(i,Eo(a,t),s)}return i}function Jr(t,e,n,r){var o=r?Fe:We,i=-1,a=e.length,s=t;for(t===e&&(e=Oo(e)),n&&(s=Le(t,Xe(n)));++i<a;)for(var u=0,l=e[i],c=n?n(l):l;(u=o(s,c,u,r))>-1;)s!==t&&Kt.call(s,u,1),Kt.call(t,u,1);return t}function Yr(t,e){for(var n=t?e.length:0,r=n-1;n--;){var o=e[n];if(n==r||o!==i){var i=o;_i(o)?Kt.call(t,o,1):po(t,o)}}return t}function Kr(t,e){return t+me(Sn()*(e-t+1))}function Xr(t,e){var n="";if(!t||e<1||e>p)return n;do{e%2&&(n+=t),(e=me(e/2))&&(t+=t)}while(e);return n}function Zr(t,e){return ji(Ci(t,e,au),t+"")}function Qr(t){return Qn(zs(t))}function to(t,e){var n=zs(t);return Pi(n,lr(e,0,n.length))}function eo(t,e,n,r){if(!rs(t))return t;for(var i=-1,a=(e=Eo(e,t)).length,s=a-1,u=t;null!=u&&++i<a;){var l=Di(e[i]),c=n;if("__proto__"===l||"constructor"===l||"prototype"===l)return t;if(i!=s){var f=u[l];(c=r?r(f,l,u):o)===o&&(c=rs(f)?f:_i(e[i+1])?[]:{})}rr(u,l,c),u=u[l]}return t}var no=On?function(t,e){return On.set(t,e),t}:au,ro=ue?function(t,e){return ue(t,"toString",{configurable:!0,enumerable:!1,value:ru(e),writable:!0})}:au;function oo(t){return Pi(zs(t))}function io(t,e,n){var o=-1,i=t.length;e<0&&(e=-e>i?0:i+e),(n=n>i?i:n)<0&&(n+=i),i=e>n?0:n-e>>>0,e>>>=0;for(var a=r(i);++o<i;)a[o]=t[o+e];return a}function ao(t,e){var n;return pr(t,(function(t,r,o){return!(n=e(t,r,o))})),!!n}function so(t,e,n){var r=0,o=null==t?r:t.length;if("number"==typeof e&&e==e&&o<=2147483647){for(;r<o;){var i=r+o>>>1,a=t[i];null!==a&&!fs(a)&&(n?a<=e:a<e)?r=i+1:o=i}return o}return uo(t,e,au,n)}function uo(t,e,n,r){var i=0,a=null==t?0:t.length;if(0===a)return 0;for(var s=(e=n(e))!=e,u=null===e,l=fs(e),c=e===o;i<a;){var f=me((i+a)/2),d=n(t[f]),h=d!==o,p=null===d,g=d==d,y=fs(d);if(s)var m=r||g;else m=c?g&&(r||h):u?g&&h&&(r||!p):l?g&&h&&!p&&(r||!y):!p&&!y&&(r?d<=e:d<e);m?i=f+1:a=f}return _n(a,4294967294)}function lo(t,e){for(var n=-1,r=t.length,o=0,i=[];++n<r;){var a=t[n],s=e?e(a):a;if(!n||!za(s,u)){var u=s;i[o++]=0===a?0:a}}return i}function co(t){return"number"==typeof t?t:fs(t)?g:+t}function fo(t){if("string"==typeof t)return t;if(Ga(t))return Le(t,fo)+"";if(fs(t))return Wn?Wn.call(t):"";var e=t+"";return"0"==e&&1/t==-1/0?"-0":e}function ho(t,e,n){var r=-1,o=ke,i=t.length,a=!0,s=[],u=s;if(n)a=!1,o=Oe;else if(i>=200){var l=e?null:Zo(t);if(l)return fn(l);a=!1,o=Qe,u=new Kn}else u=e?[]:s;t:for(;++r<i;){var c=t[r],f=e?e(c):c;if(c=n||0!==c?c:0,a&&f==f){for(var d=u.length;d--;)if(u[d]===f)continue t;e&&u.push(f),s.push(c)}else o(u,f,n)||(u!==s&&u.push(f),s.push(c))}return s}function po(t,e){return null==(t=Bi(t,e=Eo(e,t)))||delete t[Di(Qi(e))]}function go(t,e,n,r){return eo(t,e,n(Ir(t,e)),r)}function yo(t,e,n,r){for(var o=t.length,i=r?o:-1;(r?i--:++i<o)&&e(t[i],i,t););return n?io(t,r?0:i,r?i+1:o):io(t,r?i+1:0,r?o:i)}function mo(t,e){var n=t;return n instanceof Vn&&(n=n.value()),je(e,(function(t,e){return e.func.apply(e.thisArg,Ue([t],e.args))}),n)}function vo(t,e,n){var o=t.length;if(o<2)return o?ho(t[0]):[];for(var i=-1,a=r(o);++i<o;)for(var s=t[i],u=-1;++u<o;)u!=i&&(a[i]=hr(a[i]||s,t[u],e,n));return ho(br(a,1),e,n)}function bo(t,e,n){for(var r=-1,i=t.length,a=e.length,s={};++r<i;){var u=r<a?e[r]:o;n(s,t[r],u)}return s}function wo(t){return Ka(t)?t:[]}function _o(t){return"function"==typeof t?t:au}function Eo(t,e){return Ga(t)?t:Ai(t,e)?[t]:$i(_s(t))}var Ao=Zr;function So(t,e,n){var r=t.length;return n=n===o?r:n,!e&&n>=r?t:io(t,e,n)}var Io=fe||function(t){return he.clearTimeout(t)};function To(t,e){if(e)return t.slice();var n=t.length,r=Vt?Vt(n):new t.constructor(n);return t.copy(r),r}function Ro(t){var e=new t.constructor(t.byteLength);return new Ht(e).set(new Ht(t)),e}function xo(t,e){var n=e?Ro(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}function Co(t,e){if(t!==e){var n=t!==o,r=null===t,i=t==t,a=fs(t),s=e!==o,u=null===e,l=e==e,c=fs(e);if(!u&&!c&&!a&&t>e||a&&s&&l&&!u&&!c||r&&s&&l||!n&&l||!i)return 1;if(!r&&!a&&!c&&t<e||c&&n&&i&&!r&&!a||u&&n&&i||!s&&i||!l)return-1}return 0}function Bo(t,e,n,o){for(var i=-1,a=t.length,s=n.length,u=-1,l=e.length,c=wn(a-s,0),f=r(l+c),d=!o;++u<l;)f[u]=e[u];for(;++i<s;)(d||i<a)&&(f[n[i]]=t[i]);for(;c--;)f[u++]=t[i++];return f}function ko(t,e,n,o){for(var i=-1,a=t.length,s=-1,u=n.length,l=-1,c=e.length,f=wn(a-u,0),d=r(f+c),h=!o;++i<f;)d[i]=t[i];for(var p=i;++l<c;)d[p+l]=e[l];for(;++s<u;)(h||i<a)&&(d[p+n[s]]=t[i++]);return d}function Oo(t,e){var n=-1,o=t.length;for(e||(e=r(o));++n<o;)e[n]=t[n];return e}function Lo(t,e,n,r){var i=!n;n||(n={});for(var a=-1,s=e.length;++a<s;){var u=e[a],l=r?r(n[u],t[u],u,n,t):o;l===o&&(l=t[u]),i?sr(n,u,l):rr(n,u,l)}return n}function Uo(t,e){return function(n,r){var o=Ga(n)?Te:ir,i=e?e():{};return o(n,t,fi(r,2),i)}}function jo(t){return Zr((function(e,n){var r=-1,i=n.length,a=i>1?n[i-1]:o,s=i>2?n[2]:o;for(a=t.length>3&&"function"==typeof a?(i--,a):o,s&&Ei(n[0],n[1],s)&&(a=i<3?o:a,i=1),e=Rt(e);++r<i;){var u=n[r];u&&t(e,u,r,a)}return e}))}function No(t,e){return function(n,r){if(null==n)return n;if(!Ya(n))return t(n,r);for(var o=n.length,i=e?o:-1,a=Rt(n);(e?i--:++i<o)&&!1!==r(a[i],i,a););return n}}function Mo(t){return function(e,n,r){for(var o=-1,i=Rt(e),a=r(e),s=a.length;s--;){var u=a[t?s:++o];if(!1===n(i[u],u,i))break}return e}}function Po(t){return function(e){var n=sn(e=_s(e))?pn(e):o,r=n?n[0]:e.charAt(0),i=n?So(n,1).join(""):e.slice(1);return r[t]()+i}}function $o(t){return function(e){return je(tu(Vs(e).replace(Zt,"")),t,"")}}function Do(t){return function(){var e=arguments;switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3]);case 5:return new t(e[0],e[1],e[2],e[3],e[4]);case 6:return new t(e[0],e[1],e[2],e[3],e[4],e[5]);case 7:return new t(e[0],e[1],e[2],e[3],e[4],e[5],e[6])}var n=zn(t.prototype),r=t.apply(n,e);return rs(r)?r:n}}function Wo(t){return function(e,n,r){var i=Rt(e);if(!Ya(e)){var a=fi(n,3);e=Us(e),n=function(t){return a(i[t],t,i)}}var s=t(e,n,r);return s>-1?i[a?e[s]:s]:o}}function Fo(t){return ii((function(e){var n=e.length,r=n,a=Hn.prototype.thru;for(t&&e.reverse();r--;){var s=e[r];if("function"!=typeof s)throw new Bt(i);if(a&&!u&&"wrapper"==li(s))var u=new Hn([],!0)}for(r=u?r:n;++r<n;){var l=li(s=e[r]),c="wrapper"==l?ui(s):o;u=c&&Si(c[0])&&424==c[1]&&!c[4].length&&1==c[9]?u[li(c[0])].apply(u,c[3]):1==s.length&&Si(s)?u[l]():u.thru(s)}return function(){var t=arguments,r=t[0];if(u&&1==t.length&&Ga(r))return u.plant(r).value();for(var o=0,i=n?e[o].apply(this,t):r;++o<n;)i=e[o].call(this,i);return i}}))}function zo(t,e,n,i,a,s,u,l,c,d){var h=e&f,p=1&e,g=2&e,y=24&e,m=512&e,v=g?o:Do(t);return function o(){for(var f=arguments.length,b=r(f),w=f;w--;)b[w]=arguments[w];if(y)var _=ci(o),E=nn(b,_);if(i&&(b=Bo(b,i,a,y)),s&&(b=ko(b,s,u,y)),f-=E,y&&f<d){var A=cn(b,_);return Ko(t,e,zo,o.placeholder,n,b,A,l,c,d-f)}var S=p?n:this,I=g?S[t]:t;return f=b.length,l?b=ki(b,l):m&&f>1&&b.reverse(),h&&c<f&&(b.length=c),this&&this!==he&&this instanceof o&&(I=v||Do(I)),I.apply(S,b)}}function qo(t,e){return function(n,r){return function(t,e,n,r){return Er(t,(function(t,o,i){e(r,n(t),o,i)})),r}(n,t,e(r),{})}}function Ho(t,e){return function(n,r){var i;if(n===o&&r===o)return e;if(n!==o&&(i=n),r!==o){if(i===o)return r;"string"==typeof n||"string"==typeof r?(n=fo(n),r=fo(r)):(n=co(n),r=co(r)),i=t(n,r)}return i}}function Vo(t){return ii((function(e){return e=Le(e,Xe(fi())),Zr((function(n){var r=this;return t(e,(function(t){return Ie(t,r,n)}))}))}))}function Go(t,e){var n=(e=e===o?" ":fo(e)).length;if(n<2)return n?Xr(e,t):e;var r=Xr(e,ge(t/hn(e)));return sn(e)?So(pn(r),0,t).join(""):r.slice(0,t)}function Jo(t){return function(e,n,i){return i&&"number"!=typeof i&&Ei(e,n,i)&&(n=i=o),e=ys(e),n===o?(n=e,e=0):n=ys(n),function(t,e,n,o){for(var i=-1,a=wn(ge((e-t)/(n||1)),0),s=r(a);a--;)s[o?a:++i]=t,t+=n;return s}(e,n,i=i===o?e<n?1:-1:ys(i),t)}}function Yo(t){return function(e,n){return"string"==typeof e&&"string"==typeof n||(e=bs(e),n=bs(n)),t(e,n)}}function Ko(t,e,n,r,i,a,s,u,f,d){var h=8&e;e|=h?l:c,4&(e&=~(h?c:l))||(e&=-4);var p=[t,e,i,h?a:o,h?s:o,h?o:a,h?o:s,u,f,d],g=n.apply(o,p);return Si(t)&&Li(g,p),g.placeholder=r,Ni(g,t,e)}function Xo(t){var e=Tt[t];return function(t,n){if(t=bs(t),(n=null==n?0:_n(ms(n),292))&&Ve(t)){var r=(_s(t)+"e").split("e");return+((r=(_s(e(r[0]+"e"+(+r[1]+n)))+"e").split("e"))[0]+"e"+(+r[1]-n))}return e(t)}}var Zo=Cn&&1/fn(new Cn([,-0]))[1]==h?function(t){return new Cn(t)}:fu;function Qo(t){return function(e){var n=mi(e);return n==I?un(e):n==B?dn(e):function(t,e){return Le(e,(function(e){return[e,t[e]]}))}(e,t(e))}}function ti(t,e,n,a,h,p,g,y){var m=2&e;if(!m&&"function"!=typeof t)throw new Bt(i);var v=a?a.length:0;if(v||(e&=-97,a=h=o),g=g===o?g:wn(ms(g),0),y=y===o?y:ms(y),v-=h?h.length:0,e&c){var b=a,w=h;a=h=o}var _=m?o:ui(t),E=[t,e,n,a,h,b,w,p,g,y];if(_&&function(t,e){var n=t[1],r=e[1],o=n|r,i=o<131,a=r==f&&8==n||r==f&&n==d&&t[7].length<=e[8]||384==r&&e[7].length<=e[8]&&8==n;if(!i&&!a)return t;1&r&&(t[2]=e[2],o|=1&n?0:4);var u=e[3];if(u){var l=t[3];t[3]=l?Bo(l,u,e[4]):u,t[4]=l?cn(t[3],s):e[4]}(u=e[5])&&(l=t[5],t[5]=l?ko(l,u,e[6]):u,t[6]=l?cn(t[5],s):e[6]);(u=e[7])&&(t[7]=u);r&f&&(t[8]=null==t[8]?e[8]:_n(t[8],e[8]));null==t[9]&&(t[9]=e[9]);t[0]=e[0],t[1]=o}(E,_),t=E[0],e=E[1],n=E[2],a=E[3],h=E[4],!(y=E[9]=E[9]===o?m?0:t.length:wn(E[9]-v,0))&&24&e&&(e&=-25),e&&1!=e)A=8==e||e==u?function(t,e,n){var i=Do(t);return function a(){for(var s=arguments.length,u=r(s),l=s,c=ci(a);l--;)u[l]=arguments[l];var f=s<3&&u[0]!==c&&u[s-1]!==c?[]:cn(u,c);return(s-=f.length)<n?Ko(t,e,zo,a.placeholder,o,u,f,o,o,n-s):Ie(this&&this!==he&&this instanceof a?i:t,this,u)}}(t,e,y):e!=l&&33!=e||h.length?zo.apply(o,E):function(t,e,n,o){var i=1&e,a=Do(t);return function e(){for(var s=-1,u=arguments.length,l=-1,c=o.length,f=r(c+u),d=this&&this!==he&&this instanceof e?a:t;++l<c;)f[l]=o[l];for(;u--;)f[l++]=arguments[++s];return Ie(d,i?n:this,f)}}(t,e,n,a);else var A=function(t,e,n){var r=1&e,o=Do(t);return function e(){return(this&&this!==he&&this instanceof e?o:t).apply(r?n:this,arguments)}}(t,e,n);return Ni((_?no:Li)(A,E),t,e)}function ei(t,e,n,r){return t===o||za(t,Lt[n])&&!Nt.call(r,n)?e:t}function ni(t,e,n,r,i,a){return rs(t)&&rs(e)&&(a.set(e,t),qr(t,e,o,ni,a),a.delete(e)),t}function ri(t){return ss(t)?o:t}function oi(t,e,n,r,i,a){var s=1&n,u=t.length,l=e.length;if(u!=l&&!(s&&l>u))return!1;var c=a.get(t),f=a.get(e);if(c&&f)return c==e&&f==t;var d=-1,h=!0,p=2&n?new Kn:o;for(a.set(t,e),a.set(e,t);++d<u;){var g=t[d],y=e[d];if(r)var m=s?r(y,g,d,e,t,a):r(g,y,d,t,e,a);if(m!==o){if(m)continue;h=!1;break}if(p){if(!Me(e,(function(t,e){if(!Qe(p,e)&&(g===t||i(g,t,n,r,a)))return p.push(e)}))){h=!1;break}}else if(g!==y&&!i(g,y,n,r,a)){h=!1;break}}return a.delete(t),a.delete(e),h}function ii(t){return ji(Ci(t,o,Ji),t+"")}function ai(t){return Tr(t,Us,gi)}function si(t){return Tr(t,js,yi)}var ui=On?function(t){return On.get(t)}:fu;function li(t){for(var e=t.name+"",n=Ln[e],r=Nt.call(Ln,e)?n.length:0;r--;){var o=n[r],i=o.func;if(null==i||i==t)return o.name}return e}function ci(t){return(Nt.call(Fn,"placeholder")?Fn:t).placeholder}function fi(){var t=Fn.iteratee||su;return t=t===su?Mr:t,arguments.length?t(arguments[0],arguments[1]):t}function di(t,e){var n,r,o=t.__data__;return("string"==(r=typeof(n=e))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?o["string"==typeof e?"string":"hash"]:o.map}function hi(t){for(var e=Us(t),n=e.length;n--;){var r=e[n],o=t[r];e[n]=[r,o,Ri(o)]}return e}function pi(t,e){var n=function(t,e){return null==t?o:t[e]}(t,e);return Nr(n)?n:o}var gi=ve?function(t){return null==t?[]:(t=Rt(t),Be(ve(t),(function(e){return Yt.call(t,e)})))}:vu,yi=ve?function(t){for(var e=[];t;)Ue(e,gi(t)),t=Gt(t);return e}:vu,mi=Rr;function vi(t,e,n){for(var r=-1,o=(e=Eo(e,t)).length,i=!1;++r<o;){var a=Di(e[r]);if(!(i=null!=t&&n(t,a)))break;t=t[a]}return i||++r!=o?i:!!(o=null==t?0:t.length)&&ns(o)&&_i(a,o)&&(Ga(t)||Va(t))}function bi(t){return"function"!=typeof t.constructor||Ti(t)?{}:zn(Gt(t))}function wi(t){return Ga(t)||Va(t)||!!(Xt&&t&&t[Xt])}function _i(t,e){var n=typeof t;return!!(e=null==e?p:e)&&("number"==n||"symbol"!=n&&wt.test(t))&&t>-1&&t%1==0&&t<e}function Ei(t,e,n){if(!rs(n))return!1;var r=typeof e;return!!("number"==r?Ya(n)&&_i(e,n.length):"string"==r&&e in n)&&za(n[e],t)}function Ai(t,e){if(Ga(t))return!1;var n=typeof t;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=t&&!fs(t))||(nt.test(t)||!et.test(t)||null!=e&&t in Rt(e))}function Si(t){var e=li(t),n=Fn[e];if("function"!=typeof n||!(e in Vn.prototype))return!1;if(t===n)return!0;var r=ui(n);return!!r&&t===r[0]}(Tn&&mi(new Tn(new ArrayBuffer(1)))!=j||Rn&&mi(new Rn)!=I||xn&&mi(xn.resolve())!=x||Cn&&mi(new Cn)!=B||Bn&&mi(new Bn)!=L)&&(mi=function(t){var e=Rr(t),n=e==R?t.constructor:o,r=n?Wi(n):"";if(r)switch(r){case Un:return j;case jn:return I;case Nn:return x;case Mn:return B;case Pn:return L}return e});var Ii=Ut?ts:bu;function Ti(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||Lt)}function Ri(t){return t==t&&!rs(t)}function xi(t,e){return function(n){return null!=n&&(n[t]===e&&(e!==o||t in Rt(n)))}}function Ci(t,e,n){return e=wn(e===o?t.length-1:e,0),function(){for(var o=arguments,i=-1,a=wn(o.length-e,0),s=r(a);++i<a;)s[i]=o[e+i];i=-1;for(var u=r(e+1);++i<e;)u[i]=o[i];return u[e]=n(s),Ie(t,this,u)}}function Bi(t,e){return e.length<2?t:Ir(t,io(e,0,-1))}function ki(t,e){for(var n=t.length,r=_n(e.length,n),i=Oo(t);r--;){var a=e[r];t[r]=_i(a,n)?i[a]:o}return t}function Oi(t,e){if(("constructor"!==e||"function"!=typeof t[e])&&"__proto__"!=e)return t[e]}var Li=Mi(no),Ui=pe||function(t,e){return he.setTimeout(t,e)},ji=Mi(ro);function Ni(t,e,n){var r=e+"";return ji(t,function(t,e){var n=e.length;if(!n)return t;var r=n-1;return e[r]=(n>1?"& ":"")+e[r],e=e.join(n>2?", ":" "),t.replace(ut,"{\n/* [wrapped with "+e+"] */\n")}(r,function(t,e){return Re(m,(function(n){var r="_."+n[0];e&n[1]&&!ke(t,r)&&t.push(r)})),t.sort()}(function(t){var e=t.match(lt);return e?e[1].split(ct):[]}(r),n)))}function Mi(t){var e=0,n=0;return function(){var r=En(),i=16-(r-n);if(n=r,i>0){if(++e>=800)return arguments[0]}else e=0;return t.apply(o,arguments)}}function Pi(t,e){var n=-1,r=t.length,i=r-1;for(e=e===o?r:e;++n<e;){var a=Kr(n,i),s=t[a];t[a]=t[n],t[n]=s}return t.length=e,t}var $i=function(t){var e=Ma(t,(function(t){return 500===n.size&&n.clear(),t})),n=e.cache;return e}((function(t){var e=[];return 46===t.charCodeAt(0)&&e.push(""),t.replace(rt,(function(t,n,r,o){e.push(r?o.replace(ht,"$1"):n||t)})),e}));function Di(t){if("string"==typeof t||fs(t))return t;var e=t+"";return"0"==e&&1/t==-1/0?"-0":e}function Wi(t){if(null!=t){try{return jt.call(t)}catch(t){}try{return t+""}catch(t){}}return""}function Fi(t){if(t instanceof Vn)return t.clone();var e=new Hn(t.__wrapped__,t.__chain__);return e.__actions__=Oo(t.__actions__),e.__index__=t.__index__,e.__values__=t.__values__,e}var zi=Zr((function(t,e){return Ka(t)?hr(t,br(e,1,Ka,!0)):[]})),qi=Zr((function(t,e){var n=Qi(e);return Ka(n)&&(n=o),Ka(t)?hr(t,br(e,1,Ka,!0),fi(n,2)):[]})),Hi=Zr((function(t,e){var n=Qi(e);return Ka(n)&&(n=o),Ka(t)?hr(t,br(e,1,Ka,!0),o,n):[]}));function Vi(t,e,n){var r=null==t?0:t.length;if(!r)return-1;var o=null==n?0:ms(n);return o<0&&(o=wn(r+o,0)),De(t,fi(e,3),o)}function Gi(t,e,n){var r=null==t?0:t.length;if(!r)return-1;var i=r-1;return n!==o&&(i=ms(n),i=n<0?wn(r+i,0):_n(i,r-1)),De(t,fi(e,3),i,!0)}function Ji(t){return(null==t?0:t.length)?br(t,1):[]}function Yi(t){return t&&t.length?t[0]:o}var Ki=Zr((function(t){var e=Le(t,wo);return e.length&&e[0]===t[0]?kr(e):[]})),Xi=Zr((function(t){var e=Qi(t),n=Le(t,wo);return e===Qi(n)?e=o:n.pop(),n.length&&n[0]===t[0]?kr(n,fi(e,2)):[]})),Zi=Zr((function(t){var e=Qi(t),n=Le(t,wo);return(e="function"==typeof e?e:o)&&n.pop(),n.length&&n[0]===t[0]?kr(n,o,e):[]}));function Qi(t){var e=null==t?0:t.length;return e?t[e-1]:o}var ta=Zr(ea);function ea(t,e){return t&&t.length&&e&&e.length?Jr(t,e):t}var na=ii((function(t,e){var n=null==t?0:t.length,r=ur(t,e);return Yr(t,Le(e,(function(t){return _i(t,n)?+t:t})).sort(Co)),r}));function ra(t){return null==t?t:In.call(t)}var oa=Zr((function(t){return ho(br(t,1,Ka,!0))})),ia=Zr((function(t){var e=Qi(t);return Ka(e)&&(e=o),ho(br(t,1,Ka,!0),fi(e,2))})),aa=Zr((function(t){var e=Qi(t);return e="function"==typeof e?e:o,ho(br(t,1,Ka,!0),o,e)}));function sa(t){if(!t||!t.length)return[];var e=0;return t=Be(t,(function(t){if(Ka(t))return e=wn(t.length,e),!0})),Ye(e,(function(e){return Le(t,He(e))}))}function ua(t,e){if(!t||!t.length)return[];var n=sa(t);return null==e?n:Le(n,(function(t){return Ie(e,o,t)}))}var la=Zr((function(t,e){return Ka(t)?hr(t,e):[]})),ca=Zr((function(t){return vo(Be(t,Ka))})),fa=Zr((function(t){var e=Qi(t);return Ka(e)&&(e=o),vo(Be(t,Ka),fi(e,2))})),da=Zr((function(t){var e=Qi(t);return e="function"==typeof e?e:o,vo(Be(t,Ka),o,e)})),ha=Zr(sa);var pa=Zr((function(t){var e=t.length,n=e>1?t[e-1]:o;return n="function"==typeof n?(t.pop(),n):o,ua(t,n)}));function ga(t){var e=Fn(t);return e.__chain__=!0,e}function ya(t,e){return e(t)}var ma=ii((function(t){var e=t.length,n=e?t[0]:0,r=this.__wrapped__,i=function(e){return ur(e,t)};return!(e>1||this.__actions__.length)&&r instanceof Vn&&_i(n)?((r=r.slice(n,+n+(e?1:0))).__actions__.push({func:ya,args:[i],thisArg:o}),new Hn(r,this.__chain__).thru((function(t){return e&&!t.length&&t.push(o),t}))):this.thru(i)}));var va=Uo((function(t,e,n){Nt.call(t,n)?++t[n]:sr(t,n,1)}));var ba=Wo(Vi),wa=Wo(Gi);function _a(t,e){return(Ga(t)?Re:pr)(t,fi(e,3))}function Ea(t,e){return(Ga(t)?xe:gr)(t,fi(e,3))}var Aa=Uo((function(t,e,n){Nt.call(t,n)?t[n].push(e):sr(t,n,[e])}));var Sa=Zr((function(t,e,n){var o=-1,i="function"==typeof e,a=Ya(t)?r(t.length):[];return pr(t,(function(t){a[++o]=i?Ie(e,t,n):Or(t,e,n)})),a})),Ia=Uo((function(t,e,n){sr(t,n,e)}));function Ta(t,e){return(Ga(t)?Le:Wr)(t,fi(e,3))}var Ra=Uo((function(t,e,n){t[n?0:1].push(e)}),(function(){return[[],[]]}));var xa=Zr((function(t,e){if(null==t)return[];var n=e.length;return n>1&&Ei(t,e[0],e[1])?e=[]:n>2&&Ei(e[0],e[1],e[2])&&(e=[e[0]]),Vr(t,br(e,1),[])})),Ca=de||function(){return he.Date.now()};function Ba(t,e,n){return e=n?o:e,e=t&&null==e?t.length:e,ti(t,f,o,o,o,o,e)}function ka(t,e){var n;if("function"!=typeof e)throw new Bt(i);return t=ms(t),function(){return--t>0&&(n=e.apply(this,arguments)),t<=1&&(e=o),n}}var Oa=Zr((function(t,e,n){var r=1;if(n.length){var o=cn(n,ci(Oa));r|=l}return ti(t,r,e,n,o)})),La=Zr((function(t,e,n){var r=3;if(n.length){var o=cn(n,ci(La));r|=l}return ti(e,r,t,n,o)}));function Ua(t,e,n){var r,a,s,u,l,c,f=0,d=!1,h=!1,p=!0;if("function"!=typeof t)throw new Bt(i);function g(e){var n=r,i=a;return r=a=o,f=e,u=t.apply(i,n)}function y(t){return f=t,l=Ui(v,e),d?g(t):u}function m(t){var n=t-c;return c===o||n>=e||n<0||h&&t-f>=s}function v(){var t=Ca();if(m(t))return b(t);l=Ui(v,function(t){var n=e-(t-c);return h?_n(n,s-(t-f)):n}(t))}function b(t){return l=o,p&&r?g(t):(r=a=o,u)}function w(){var t=Ca(),n=m(t);if(r=arguments,a=this,c=t,n){if(l===o)return y(c);if(h)return Io(l),l=Ui(v,e),g(c)}return l===o&&(l=Ui(v,e)),u}return e=bs(e)||0,rs(n)&&(d=!!n.leading,s=(h="maxWait"in n)?wn(bs(n.maxWait)||0,e):s,p="trailing"in n?!!n.trailing:p),w.cancel=function(){l!==o&&Io(l),f=0,r=c=a=l=o},w.flush=function(){return l===o?u:b(Ca())},w}var ja=Zr((function(t,e){return dr(t,1,e)})),Na=Zr((function(t,e,n){return dr(t,bs(e)||0,n)}));function Ma(t,e){if("function"!=typeof t||null!=e&&"function"!=typeof e)throw new Bt(i);var n=function(){var r=arguments,o=e?e.apply(this,r):r[0],i=n.cache;if(i.has(o))return i.get(o);var a=t.apply(this,r);return n.cache=i.set(o,a)||i,a};return n.cache=new(Ma.Cache||Yn),n}function Pa(t){if("function"!=typeof t)throw new Bt(i);return function(){var e=arguments;switch(e.length){case 0:return!t.call(this);case 1:return!t.call(this,e[0]);case 2:return!t.call(this,e[0],e[1]);case 3:return!t.call(this,e[0],e[1],e[2])}return!t.apply(this,e)}}Ma.Cache=Yn;var $a=Ao((function(t,e){var n=(e=1==e.length&&Ga(e[0])?Le(e[0],Xe(fi())):Le(br(e,1),Xe(fi()))).length;return Zr((function(r){for(var o=-1,i=_n(r.length,n);++o<i;)r[o]=e[o].call(this,r[o]);return Ie(t,this,r)}))})),Da=Zr((function(t,e){var n=cn(e,ci(Da));return ti(t,l,o,e,n)})),Wa=Zr((function(t,e){var n=cn(e,ci(Wa));return ti(t,c,o,e,n)})),Fa=ii((function(t,e){return ti(t,d,o,o,o,e)}));function za(t,e){return t===e||t!=t&&e!=e}var qa=Yo(xr),Ha=Yo((function(t,e){return t>=e})),Va=Lr(function(){return arguments}())?Lr:function(t){return os(t)&&Nt.call(t,"callee")&&!Yt.call(t,"callee")},Ga=r.isArray,Ja=be?Xe(be):function(t){return os(t)&&Rr(t)==U};function Ya(t){return null!=t&&ns(t.length)&&!ts(t)}function Ka(t){return os(t)&&Ya(t)}var Xa=Pe||bu,Za=we?Xe(we):function(t){return os(t)&&Rr(t)==_};function Qa(t){if(!os(t))return!1;var e=Rr(t);return e==E||"[object DOMException]"==e||"string"==typeof t.message&&"string"==typeof t.name&&!ss(t)}function ts(t){if(!rs(t))return!1;var e=Rr(t);return e==A||e==S||"[object AsyncFunction]"==e||"[object Proxy]"==e}function es(t){return"number"==typeof t&&t==ms(t)}function ns(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=p}function rs(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}function os(t){return null!=t&&"object"==typeof t}var is=_e?Xe(_e):function(t){return os(t)&&mi(t)==I};function as(t){return"number"==typeof t||os(t)&&Rr(t)==T}function ss(t){if(!os(t)||Rr(t)!=R)return!1;var e=Gt(t);if(null===e)return!0;var n=Nt.call(e,"constructor")&&e.constructor;return"function"==typeof n&&n instanceof n&&jt.call(n)==Dt}var us=Ee?Xe(Ee):function(t){return os(t)&&Rr(t)==C};var ls=Ae?Xe(Ae):function(t){return os(t)&&mi(t)==B};function cs(t){return"string"==typeof t||!Ga(t)&&os(t)&&Rr(t)==k}function fs(t){return"symbol"==typeof t||os(t)&&Rr(t)==O}var ds=Se?Xe(Se):function(t){return os(t)&&ns(t.length)&&!!ae[Rr(t)]};var hs=Yo(Dr),ps=Yo((function(t,e){return t<=e}));function gs(t){if(!t)return[];if(Ya(t))return cs(t)?pn(t):Oo(t);if(te&&t[te])return function(t){for(var e,n=[];!(e=t.next()).done;)n.push(e.value);return n}(t[te]());var e=mi(t);return(e==I?un:e==B?fn:zs)(t)}function ys(t){return t?(t=bs(t))===h||t===-1/0?17976931348623157e292*(t<0?-1:1):t==t?t:0:0===t?t:0}function ms(t){var e=ys(t),n=e%1;return e==e?n?e-n:e:0}function vs(t){return t?lr(ms(t),0,y):0}function bs(t){if("number"==typeof t)return t;if(fs(t))return g;if(rs(t)){var e="function"==typeof t.valueOf?t.valueOf():t;t=rs(e)?e+"":e}if("string"!=typeof t)return 0===t?t:+t;t=Ke(t);var n=mt.test(t);return n||bt.test(t)?ce(t.slice(2),n?2:8):yt.test(t)?g:+t}function ws(t){return Lo(t,js(t))}function _s(t){return null==t?"":fo(t)}var Es=jo((function(t,e){if(Ti(e)||Ya(e))Lo(e,Us(e),t);else for(var n in e)Nt.call(e,n)&&rr(t,n,e[n])})),As=jo((function(t,e){Lo(e,js(e),t)})),Ss=jo((function(t,e,n,r){Lo(e,js(e),t,r)})),Is=jo((function(t,e,n,r){Lo(e,Us(e),t,r)})),Ts=ii(ur);var Rs=Zr((function(t,e){t=Rt(t);var n=-1,r=e.length,i=r>2?e[2]:o;for(i&&Ei(e[0],e[1],i)&&(r=1);++n<r;)for(var a=e[n],s=js(a),u=-1,l=s.length;++u<l;){var c=s[u],f=t[c];(f===o||za(f,Lt[c])&&!Nt.call(t,c))&&(t[c]=a[c])}return t})),xs=Zr((function(t){return t.push(o,ni),Ie(Ms,o,t)}));function Cs(t,e,n){var r=null==t?o:Ir(t,e);return r===o?n:r}function Bs(t,e){return null!=t&&vi(t,e,Br)}var ks=qo((function(t,e,n){null!=e&&"function"!=typeof e.toString&&(e=$t.call(e)),t[e]=n}),ru(au)),Os=qo((function(t,e,n){null!=e&&"function"!=typeof e.toString&&(e=$t.call(e)),Nt.call(t,e)?t[e].push(n):t[e]=[n]}),fi),Ls=Zr(Or);function Us(t){return Ya(t)?Zn(t):Pr(t)}function js(t){return Ya(t)?Zn(t,!0):$r(t)}var Ns=jo((function(t,e,n){qr(t,e,n)})),Ms=jo((function(t,e,n,r){qr(t,e,n,r)})),Ps=ii((function(t,e){var n={};if(null==t)return n;var r=!1;e=Le(e,(function(e){return e=Eo(e,t),r||(r=e.length>1),e})),Lo(t,si(t),n),r&&(n=cr(n,7,ri));for(var o=e.length;o--;)po(n,e[o]);return n}));var $s=ii((function(t,e){return null==t?{}:function(t,e){return Gr(t,e,(function(e,n){return Bs(t,n)}))}(t,e)}));function Ds(t,e){if(null==t)return{};var n=Le(si(t),(function(t){return[t]}));return e=fi(e),Gr(t,n,(function(t,n){return e(t,n[0])}))}var Ws=Qo(Us),Fs=Qo(js);function zs(t){return null==t?[]:Ze(t,Us(t))}var qs=$o((function(t,e,n){return e=e.toLowerCase(),t+(n?Hs(e):e)}));function Hs(t){return Qs(_s(t).toLowerCase())}function Vs(t){return(t=_s(t))&&t.replace(_t,rn).replace(Qt,"")}var Gs=$o((function(t,e,n){return t+(n?"-":"")+e.toLowerCase()})),Js=$o((function(t,e,n){return t+(n?" ":"")+e.toLowerCase()})),Ys=Po("toLowerCase");var Ks=$o((function(t,e,n){return t+(n?"_":"")+e.toLowerCase()}));var Xs=$o((function(t,e,n){return t+(n?" ":"")+Qs(e)}));var Zs=$o((function(t,e,n){return t+(n?" ":"")+e.toUpperCase()})),Qs=Po("toUpperCase");function tu(t,e,n){return t=_s(t),(e=n?o:e)===o?function(t){return re.test(t)}(t)?function(t){return t.match(ee)||[]}(t):function(t){return t.match(ft)||[]}(t):t.match(e)||[]}var eu=Zr((function(t,e){try{return Ie(t,o,e)}catch(t){return Qa(t)?t:new St(t)}})),nu=ii((function(t,e){return Re(e,(function(e){e=Di(e),sr(t,e,Oa(t[e],t))})),t}));function ru(t){return function(){return t}}var ou=Fo(),iu=Fo(!0);function au(t){return t}function su(t){return Mr("function"==typeof t?t:cr(t,1))}var uu=Zr((function(t,e){return function(n){return Or(n,t,e)}})),lu=Zr((function(t,e){return function(n){return Or(t,n,e)}}));function cu(t,e,n){var r=Us(e),o=Sr(e,r);null!=n||rs(e)&&(o.length||!r.length)||(n=e,e=t,t=this,o=Sr(e,Us(e)));var i=!(rs(n)&&"chain"in n&&!n.chain),a=ts(t);return Re(o,(function(n){var r=e[n];t[n]=r,a&&(t.prototype[n]=function(){var e=this.__chain__;if(i||e){var n=t(this.__wrapped__),o=n.__actions__=Oo(this.__actions__);return o.push({func:r,args:arguments,thisArg:t}),n.__chain__=e,n}return r.apply(t,Ue([this.value()],arguments))})})),t}function fu(){}var du=Vo(Le),hu=Vo(Ce),pu=Vo(Me);function gu(t){return Ai(t)?He(Di(t)):function(t){return function(e){return Ir(e,t)}}(t)}var yu=Jo(),mu=Jo(!0);function vu(){return[]}function bu(){return!1}var wu=Ho((function(t,e){return t+e}),0),_u=Xo("ceil"),Eu=Ho((function(t,e){return t/e}),1),Au=Xo("floor");var Su,Iu=Ho((function(t,e){return t*e}),1),Tu=Xo("round"),Ru=Ho((function(t,e){return t-e}),0);return Fn.after=function(t,e){if("function"!=typeof e)throw new Bt(i);return t=ms(t),function(){if(--t<1)return e.apply(this,arguments)}},Fn.ary=Ba,Fn.assign=Es,Fn.assignIn=As,Fn.assignInWith=Ss,Fn.assignWith=Is,Fn.at=Ts,Fn.before=ka,Fn.bind=Oa,Fn.bindAll=nu,Fn.bindKey=La,Fn.castArray=function(){if(!arguments.length)return[];var t=arguments[0];return Ga(t)?t:[t]},Fn.chain=ga,Fn.chunk=function(t,e,n){e=(n?Ei(t,e,n):e===o)?1:wn(ms(e),0);var i=null==t?0:t.length;if(!i||e<1)return[];for(var a=0,s=0,u=r(ge(i/e));a<i;)u[s++]=io(t,a,a+=e);return u},Fn.compact=function(t){for(var e=-1,n=null==t?0:t.length,r=0,o=[];++e<n;){var i=t[e];i&&(o[r++]=i)}return o},Fn.concat=function(){var t=arguments.length;if(!t)return[];for(var e=r(t-1),n=arguments[0],o=t;o--;)e[o-1]=arguments[o];return Ue(Ga(n)?Oo(n):[n],br(e,1))},Fn.cond=function(t){var e=null==t?0:t.length,n=fi();return t=e?Le(t,(function(t){if("function"!=typeof t[1])throw new Bt(i);return[n(t[0]),t[1]]})):[],Zr((function(n){for(var r=-1;++r<e;){var o=t[r];if(Ie(o[0],this,n))return Ie(o[1],this,n)}}))},Fn.conforms=function(t){return function(t){var e=Us(t);return function(n){return fr(n,t,e)}}(cr(t,1))},Fn.constant=ru,Fn.countBy=va,Fn.create=function(t,e){var n=zn(t);return null==e?n:ar(n,e)},Fn.curry=function t(e,n,r){var i=ti(e,8,o,o,o,o,o,n=r?o:n);return i.placeholder=t.placeholder,i},Fn.curryRight=function t(e,n,r){var i=ti(e,u,o,o,o,o,o,n=r?o:n);return i.placeholder=t.placeholder,i},Fn.debounce=Ua,Fn.defaults=Rs,Fn.defaultsDeep=xs,Fn.defer=ja,Fn.delay=Na,Fn.difference=zi,Fn.differenceBy=qi,Fn.differenceWith=Hi,Fn.drop=function(t,e,n){var r=null==t?0:t.length;return r?io(t,(e=n||e===o?1:ms(e))<0?0:e,r):[]},Fn.dropRight=function(t,e,n){var r=null==t?0:t.length;return r?io(t,0,(e=r-(e=n||e===o?1:ms(e)))<0?0:e):[]},Fn.dropRightWhile=function(t,e){return t&&t.length?yo(t,fi(e,3),!0,!0):[]},Fn.dropWhile=function(t,e){return t&&t.length?yo(t,fi(e,3),!0):[]},Fn.fill=function(t,e,n,r){var i=null==t?0:t.length;return i?(n&&"number"!=typeof n&&Ei(t,e,n)&&(n=0,r=i),function(t,e,n,r){var i=t.length;for((n=ms(n))<0&&(n=-n>i?0:i+n),(r=r===o||r>i?i:ms(r))<0&&(r+=i),r=n>r?0:vs(r);n<r;)t[n++]=e;return t}(t,e,n,r)):[]},Fn.filter=function(t,e){return(Ga(t)?Be:vr)(t,fi(e,3))},Fn.flatMap=function(t,e){return br(Ta(t,e),1)},Fn.flatMapDeep=function(t,e){return br(Ta(t,e),h)},Fn.flatMapDepth=function(t,e,n){return n=n===o?1:ms(n),br(Ta(t,e),n)},Fn.flatten=Ji,Fn.flattenDeep=function(t){return(null==t?0:t.length)?br(t,h):[]},Fn.flattenDepth=function(t,e){return(null==t?0:t.length)?br(t,e=e===o?1:ms(e)):[]},Fn.flip=function(t){return ti(t,512)},Fn.flow=ou,Fn.flowRight=iu,Fn.fromPairs=function(t){for(var e=-1,n=null==t?0:t.length,r={};++e<n;){var o=t[e];r[o[0]]=o[1]}return r},Fn.functions=function(t){return null==t?[]:Sr(t,Us(t))},Fn.functionsIn=function(t){return null==t?[]:Sr(t,js(t))},Fn.groupBy=Aa,Fn.initial=function(t){return(null==t?0:t.length)?io(t,0,-1):[]},Fn.intersection=Ki,Fn.intersectionBy=Xi,Fn.intersectionWith=Zi,Fn.invert=ks,Fn.invertBy=Os,Fn.invokeMap=Sa,Fn.iteratee=su,Fn.keyBy=Ia,Fn.keys=Us,Fn.keysIn=js,Fn.map=Ta,Fn.mapKeys=function(t,e){var n={};return e=fi(e,3),Er(t,(function(t,r,o){sr(n,e(t,r,o),t)})),n},Fn.mapValues=function(t,e){var n={};return e=fi(e,3),Er(t,(function(t,r,o){sr(n,r,e(t,r,o))})),n},Fn.matches=function(t){return Fr(cr(t,1))},Fn.matchesProperty=function(t,e){return zr(t,cr(e,1))},Fn.memoize=Ma,Fn.merge=Ns,Fn.mergeWith=Ms,Fn.method=uu,Fn.methodOf=lu,Fn.mixin=cu,Fn.negate=Pa,Fn.nthArg=function(t){return t=ms(t),Zr((function(e){return Hr(e,t)}))},Fn.omit=Ps,Fn.omitBy=function(t,e){return Ds(t,Pa(fi(e)))},Fn.once=function(t){return ka(2,t)},Fn.orderBy=function(t,e,n,r){return null==t?[]:(Ga(e)||(e=null==e?[]:[e]),Ga(n=r?o:n)||(n=null==n?[]:[n]),Vr(t,e,n))},Fn.over=du,Fn.overArgs=$a,Fn.overEvery=hu,Fn.overSome=pu,Fn.partial=Da,Fn.partialRight=Wa,Fn.partition=Ra,Fn.pick=$s,Fn.pickBy=Ds,Fn.property=gu,Fn.propertyOf=function(t){return function(e){return null==t?o:Ir(t,e)}},Fn.pull=ta,Fn.pullAll=ea,Fn.pullAllBy=function(t,e,n){return t&&t.length&&e&&e.length?Jr(t,e,fi(n,2)):t},Fn.pullAllWith=function(t,e,n){return t&&t.length&&e&&e.length?Jr(t,e,o,n):t},Fn.pullAt=na,Fn.range=yu,Fn.rangeRight=mu,Fn.rearg=Fa,Fn.reject=function(t,e){return(Ga(t)?Be:vr)(t,Pa(fi(e,3)))},Fn.remove=function(t,e){var n=[];if(!t||!t.length)return n;var r=-1,o=[],i=t.length;for(e=fi(e,3);++r<i;){var a=t[r];e(a,r,t)&&(n.push(a),o.push(r))}return Yr(t,o),n},Fn.rest=function(t,e){if("function"!=typeof t)throw new Bt(i);return Zr(t,e=e===o?e:ms(e))},Fn.reverse=ra,Fn.sampleSize=function(t,e,n){return e=(n?Ei(t,e,n):e===o)?1:ms(e),(Ga(t)?tr:to)(t,e)},Fn.set=function(t,e,n){return null==t?t:eo(t,e,n)},Fn.setWith=function(t,e,n,r){return r="function"==typeof r?r:o,null==t?t:eo(t,e,n,r)},Fn.shuffle=function(t){return(Ga(t)?er:oo)(t)},Fn.slice=function(t,e,n){var r=null==t?0:t.length;return r?(n&&"number"!=typeof n&&Ei(t,e,n)?(e=0,n=r):(e=null==e?0:ms(e),n=n===o?r:ms(n)),io(t,e,n)):[]},Fn.sortBy=xa,Fn.sortedUniq=function(t){return t&&t.length?lo(t):[]},Fn.sortedUniqBy=function(t,e){return t&&t.length?lo(t,fi(e,2)):[]},Fn.split=function(t,e,n){return n&&"number"!=typeof n&&Ei(t,e,n)&&(e=n=o),(n=n===o?y:n>>>0)?(t=_s(t))&&("string"==typeof e||null!=e&&!us(e))&&!(e=fo(e))&&sn(t)?So(pn(t),0,n):t.split(e,n):[]},Fn.spread=function(t,e){if("function"!=typeof t)throw new Bt(i);return e=null==e?0:wn(ms(e),0),Zr((function(n){var r=n[e],o=So(n,0,e);return r&&Ue(o,r),Ie(t,this,o)}))},Fn.tail=function(t){var e=null==t?0:t.length;return e?io(t,1,e):[]},Fn.take=function(t,e,n){return t&&t.length?io(t,0,(e=n||e===o?1:ms(e))<0?0:e):[]},Fn.takeRight=function(t,e,n){var r=null==t?0:t.length;return r?io(t,(e=r-(e=n||e===o?1:ms(e)))<0?0:e,r):[]},Fn.takeRightWhile=function(t,e){return t&&t.length?yo(t,fi(e,3),!1,!0):[]},Fn.takeWhile=function(t,e){return t&&t.length?yo(t,fi(e,3)):[]},Fn.tap=function(t,e){return e(t),t},Fn.throttle=function(t,e,n){var r=!0,o=!0;if("function"!=typeof t)throw new Bt(i);return rs(n)&&(r="leading"in n?!!n.leading:r,o="trailing"in n?!!n.trailing:o),Ua(t,e,{leading:r,maxWait:e,trailing:o})},Fn.thru=ya,Fn.toArray=gs,Fn.toPairs=Ws,Fn.toPairsIn=Fs,Fn.toPath=function(t){return Ga(t)?Le(t,Di):fs(t)?[t]:Oo($i(_s(t)))},Fn.toPlainObject=ws,Fn.transform=function(t,e,n){var r=Ga(t),o=r||Xa(t)||ds(t);if(e=fi(e,4),null==n){var i=t&&t.constructor;n=o?r?new i:[]:rs(t)&&ts(i)?zn(Gt(t)):{}}return(o?Re:Er)(t,(function(t,r,o){return e(n,t,r,o)})),n},Fn.unary=function(t){return Ba(t,1)},Fn.union=oa,Fn.unionBy=ia,Fn.unionWith=aa,Fn.uniq=function(t){return t&&t.length?ho(t):[]},Fn.uniqBy=function(t,e){return t&&t.length?ho(t,fi(e,2)):[]},Fn.uniqWith=function(t,e){return e="function"==typeof e?e:o,t&&t.length?ho(t,o,e):[]},Fn.unset=function(t,e){return null==t||po(t,e)},Fn.unzip=sa,Fn.unzipWith=ua,Fn.update=function(t,e,n){return null==t?t:go(t,e,_o(n))},Fn.updateWith=function(t,e,n,r){return r="function"==typeof r?r:o,null==t?t:go(t,e,_o(n),r)},Fn.values=zs,Fn.valuesIn=function(t){return null==t?[]:Ze(t,js(t))},Fn.without=la,Fn.words=tu,Fn.wrap=function(t,e){return Da(_o(e),t)},Fn.xor=ca,Fn.xorBy=fa,Fn.xorWith=da,Fn.zip=ha,Fn.zipObject=function(t,e){return bo(t||[],e||[],rr)},Fn.zipObjectDeep=function(t,e){return bo(t||[],e||[],eo)},Fn.zipWith=pa,Fn.entries=Ws,Fn.entriesIn=Fs,Fn.extend=As,Fn.extendWith=Ss,cu(Fn,Fn),Fn.add=wu,Fn.attempt=eu,Fn.camelCase=qs,Fn.capitalize=Hs,Fn.ceil=_u,Fn.clamp=function(t,e,n){return n===o&&(n=e,e=o),n!==o&&(n=(n=bs(n))==n?n:0),e!==o&&(e=(e=bs(e))==e?e:0),lr(bs(t),e,n)},Fn.clone=function(t){return cr(t,4)},Fn.cloneDeep=function(t){return cr(t,5)},Fn.cloneDeepWith=function(t,e){return cr(t,5,e="function"==typeof e?e:o)},Fn.cloneWith=function(t,e){return cr(t,4,e="function"==typeof e?e:o)},Fn.conformsTo=function(t,e){return null==e||fr(t,e,Us(e))},Fn.deburr=Vs,Fn.defaultTo=function(t,e){return null==t||t!=t?e:t},Fn.divide=Eu,Fn.endsWith=function(t,e,n){t=_s(t),e=fo(e);var r=t.length,i=n=n===o?r:lr(ms(n),0,r);return(n-=e.length)>=0&&t.slice(n,i)==e},Fn.eq=za,Fn.escape=function(t){return(t=_s(t))&&X.test(t)?t.replace(Y,on):t},Fn.escapeRegExp=function(t){return(t=_s(t))&&it.test(t)?t.replace(ot,"\\$&"):t},Fn.every=function(t,e,n){var r=Ga(t)?Ce:yr;return n&&Ei(t,e,n)&&(e=o),r(t,fi(e,3))},Fn.find=ba,Fn.findIndex=Vi,Fn.findKey=function(t,e){return $e(t,fi(e,3),Er)},Fn.findLast=wa,Fn.findLastIndex=Gi,Fn.findLastKey=function(t,e){return $e(t,fi(e,3),Ar)},Fn.floor=Au,Fn.forEach=_a,Fn.forEachRight=Ea,Fn.forIn=function(t,e){return null==t?t:wr(t,fi(e,3),js)},Fn.forInRight=function(t,e){return null==t?t:_r(t,fi(e,3),js)},Fn.forOwn=function(t,e){return t&&Er(t,fi(e,3))},Fn.forOwnRight=function(t,e){return t&&Ar(t,fi(e,3))},Fn.get=Cs,Fn.gt=qa,Fn.gte=Ha,Fn.has=function(t,e){return null!=t&&vi(t,e,Cr)},Fn.hasIn=Bs,Fn.head=Yi,Fn.identity=au,Fn.includes=function(t,e,n,r){t=Ya(t)?t:zs(t),n=n&&!r?ms(n):0;var o=t.length;return n<0&&(n=wn(o+n,0)),cs(t)?n<=o&&t.indexOf(e,n)>-1:!!o&&We(t,e,n)>-1},Fn.indexOf=function(t,e,n){var r=null==t?0:t.length;if(!r)return-1;var o=null==n?0:ms(n);return o<0&&(o=wn(r+o,0)),We(t,e,o)},Fn.inRange=function(t,e,n){return e=ys(e),n===o?(n=e,e=0):n=ys(n),function(t,e,n){return t>=_n(e,n)&&t<wn(e,n)}(t=bs(t),e,n)},Fn.invoke=Ls,Fn.isArguments=Va,Fn.isArray=Ga,Fn.isArrayBuffer=Ja,Fn.isArrayLike=Ya,Fn.isArrayLikeObject=Ka,Fn.isBoolean=function(t){return!0===t||!1===t||os(t)&&Rr(t)==w},Fn.isBuffer=Xa,Fn.isDate=Za,Fn.isElement=function(t){return os(t)&&1===t.nodeType&&!ss(t)},Fn.isEmpty=function(t){if(null==t)return!0;if(Ya(t)&&(Ga(t)||"string"==typeof t||"function"==typeof t.splice||Xa(t)||ds(t)||Va(t)))return!t.length;var e=mi(t);if(e==I||e==B)return!t.size;if(Ti(t))return!Pr(t).length;for(var n in t)if(Nt.call(t,n))return!1;return!0},Fn.isEqual=function(t,e){return Ur(t,e)},Fn.isEqualWith=function(t,e,n){var r=(n="function"==typeof n?n:o)?n(t,e):o;return r===o?Ur(t,e,o,n):!!r},Fn.isError=Qa,Fn.isFinite=function(t){return"number"==typeof t&&Ve(t)},Fn.isFunction=ts,Fn.isInteger=es,Fn.isLength=ns,Fn.isMap=is,Fn.isMatch=function(t,e){return t===e||jr(t,e,hi(e))},Fn.isMatchWith=function(t,e,n){return n="function"==typeof n?n:o,jr(t,e,hi(e),n)},Fn.isNaN=function(t){return as(t)&&t!=+t},Fn.isNative=function(t){if(Ii(t))throw new St("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Nr(t)},Fn.isNil=function(t){return null==t},Fn.isNull=function(t){return null===t},Fn.isNumber=as,Fn.isObject=rs,Fn.isObjectLike=os,Fn.isPlainObject=ss,Fn.isRegExp=us,Fn.isSafeInteger=function(t){return es(t)&&t>=-9007199254740991&&t<=p},Fn.isSet=ls,Fn.isString=cs,Fn.isSymbol=fs,Fn.isTypedArray=ds,Fn.isUndefined=function(t){return t===o},Fn.isWeakMap=function(t){return os(t)&&mi(t)==L},Fn.isWeakSet=function(t){return os(t)&&"[object WeakSet]"==Rr(t)},Fn.join=function(t,e){return null==t?"":vn.call(t,e)},Fn.kebabCase=Gs,Fn.last=Qi,Fn.lastIndexOf=function(t,e,n){var r=null==t?0:t.length;if(!r)return-1;var i=r;return n!==o&&(i=(i=ms(n))<0?wn(r+i,0):_n(i,r-1)),e==e?function(t,e,n){for(var r=n+1;r--;)if(t[r]===e)return r;return r}(t,e,i):De(t,ze,i,!0)},Fn.lowerCase=Js,Fn.lowerFirst=Ys,Fn.lt=hs,Fn.lte=ps,Fn.max=function(t){return t&&t.length?mr(t,au,xr):o},Fn.maxBy=function(t,e){return t&&t.length?mr(t,fi(e,2),xr):o},Fn.mean=function(t){return qe(t,au)},Fn.meanBy=function(t,e){return qe(t,fi(e,2))},Fn.min=function(t){return t&&t.length?mr(t,au,Dr):o},Fn.minBy=function(t,e){return t&&t.length?mr(t,fi(e,2),Dr):o},Fn.stubArray=vu,Fn.stubFalse=bu,Fn.stubObject=function(){return{}},Fn.stubString=function(){return""},Fn.stubTrue=function(){return!0},Fn.multiply=Iu,Fn.nth=function(t,e){return t&&t.length?Hr(t,ms(e)):o},Fn.noConflict=function(){return he._===this&&(he._=Wt),this},Fn.noop=fu,Fn.now=Ca,Fn.pad=function(t,e,n){t=_s(t);var r=(e=ms(e))?hn(t):0;if(!e||r>=e)return t;var o=(e-r)/2;return Go(me(o),n)+t+Go(ge(o),n)},Fn.padEnd=function(t,e,n){t=_s(t);var r=(e=ms(e))?hn(t):0;return e&&r<e?t+Go(e-r,n):t},Fn.padStart=function(t,e,n){t=_s(t);var r=(e=ms(e))?hn(t):0;return e&&r<e?Go(e-r,n)+t:t},Fn.parseInt=function(t,e,n){return n||null==e?e=0:e&&(e=+e),An(_s(t).replace(at,""),e||0)},Fn.random=function(t,e,n){if(n&&"boolean"!=typeof n&&Ei(t,e,n)&&(e=n=o),n===o&&("boolean"==typeof e?(n=e,e=o):"boolean"==typeof t&&(n=t,t=o)),t===o&&e===o?(t=0,e=1):(t=ys(t),e===o?(e=t,t=0):e=ys(e)),t>e){var r=t;t=e,e=r}if(n||t%1||e%1){var i=Sn();return _n(t+i*(e-t+le("1e-"+((i+"").length-1))),e)}return Kr(t,e)},Fn.reduce=function(t,e,n){var r=Ga(t)?je:Ge,o=arguments.length<3;return r(t,fi(e,4),n,o,pr)},Fn.reduceRight=function(t,e,n){var r=Ga(t)?Ne:Ge,o=arguments.length<3;return r(t,fi(e,4),n,o,gr)},Fn.repeat=function(t,e,n){return e=(n?Ei(t,e,n):e===o)?1:ms(e),Xr(_s(t),e)},Fn.replace=function(){var t=arguments,e=_s(t[0]);return t.length<3?e:e.replace(t[1],t[2])},Fn.result=function(t,e,n){var r=-1,i=(e=Eo(e,t)).length;for(i||(i=1,t=o);++r<i;){var a=null==t?o:t[Di(e[r])];a===o&&(r=i,a=n),t=ts(a)?a.call(t):a}return t},Fn.round=Tu,Fn.runInContext=t,Fn.sample=function(t){return(Ga(t)?Qn:Qr)(t)},Fn.size=function(t){if(null==t)return 0;if(Ya(t))return cs(t)?hn(t):t.length;var e=mi(t);return e==I||e==B?t.size:Pr(t).length},Fn.snakeCase=Ks,Fn.some=function(t,e,n){var r=Ga(t)?Me:ao;return n&&Ei(t,e,n)&&(e=o),r(t,fi(e,3))},Fn.sortedIndex=function(t,e){return so(t,e)},Fn.sortedIndexBy=function(t,e,n){return uo(t,e,fi(n,2))},Fn.sortedIndexOf=function(t,e){var n=null==t?0:t.length;if(n){var r=so(t,e);if(r<n&&za(t[r],e))return r}return-1},Fn.sortedLastIndex=function(t,e){return so(t,e,!0)},Fn.sortedLastIndexBy=function(t,e,n){return uo(t,e,fi(n,2),!0)},Fn.sortedLastIndexOf=function(t,e){if(null==t?0:t.length){var n=so(t,e,!0)-1;if(za(t[n],e))return n}return-1},Fn.startCase=Xs,Fn.startsWith=function(t,e,n){return t=_s(t),n=null==n?0:lr(ms(n),0,t.length),e=fo(e),t.slice(n,n+e.length)==e},Fn.subtract=Ru,Fn.sum=function(t){return t&&t.length?Je(t,au):0},Fn.sumBy=function(t,e){return t&&t.length?Je(t,fi(e,2)):0},Fn.template=function(t,e,n){var r=Fn.templateSettings;n&&Ei(t,e,n)&&(e=o),t=_s(t),e=Ss({},e,r,ei);var i,a,s=Ss({},e.imports,r.imports,ei),u=Us(s),l=Ze(s,u),c=0,f=e.interpolate||Et,d="__p += '",h=xt((e.escape||Et).source+"|"+f.source+"|"+(f===tt?pt:Et).source+"|"+(e.evaluate||Et).source+"|$","g"),p="//# sourceURL="+(Nt.call(e,"sourceURL")?(e.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++ie+"]")+"\n";t.replace(h,(function(e,n,r,o,s,u){return r||(r=o),d+=t.slice(c,u).replace(At,an),n&&(i=!0,d+="' +\n__e("+n+") +\n'"),s&&(a=!0,d+="';\n"+s+";\n__p += '"),r&&(d+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),c=u+e.length,e})),d+="';\n";var g=Nt.call(e,"variable")&&e.variable;if(g){if(dt.test(g))throw new St("Invalid `variable` option passed into `_.template`")}else d="with (obj) {\n"+d+"\n}\n";d=(a?d.replace(H,""):d).replace(V,"$1").replace(G,"$1;"),d="function("+(g||"obj")+") {\n"+(g?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(i?", __e = _.escape":"")+(a?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+d+"return __p\n}";var y=eu((function(){return It(u,p+"return "+d).apply(o,l)}));if(y.source=d,Qa(y))throw y;return y},Fn.times=function(t,e){if((t=ms(t))<1||t>p)return[];var n=y,r=_n(t,y);e=fi(e),t-=y;for(var o=Ye(r,e);++n<t;)e(n);return o},Fn.toFinite=ys,Fn.toInteger=ms,Fn.toLength=vs,Fn.toLower=function(t){return _s(t).toLowerCase()},Fn.toNumber=bs,Fn.toSafeInteger=function(t){return t?lr(ms(t),-9007199254740991,p):0===t?t:0},Fn.toString=_s,Fn.toUpper=function(t){return _s(t).toUpperCase()},Fn.trim=function(t,e,n){if((t=_s(t))&&(n||e===o))return Ke(t);if(!t||!(e=fo(e)))return t;var r=pn(t),i=pn(e);return So(r,tn(r,i),en(r,i)+1).join("")},Fn.trimEnd=function(t,e,n){if((t=_s(t))&&(n||e===o))return t.slice(0,gn(t)+1);if(!t||!(e=fo(e)))return t;var r=pn(t);return So(r,0,en(r,pn(e))+1).join("")},Fn.trimStart=function(t,e,n){if((t=_s(t))&&(n||e===o))return t.replace(at,"");if(!t||!(e=fo(e)))return t;var r=pn(t);return So(r,tn(r,pn(e))).join("")},Fn.truncate=function(t,e){var n=30,r="...";if(rs(e)){var i="separator"in e?e.separator:i;n="length"in e?ms(e.length):n,r="omission"in e?fo(e.omission):r}var a=(t=_s(t)).length;if(sn(t)){var s=pn(t);a=s.length}if(n>=a)return t;var u=n-hn(r);if(u<1)return r;var l=s?So(s,0,u).join(""):t.slice(0,u);if(i===o)return l+r;if(s&&(u+=l.length-u),us(i)){if(t.slice(u).search(i)){var c,f=l;for(i.global||(i=xt(i.source,_s(gt.exec(i))+"g")),i.lastIndex=0;c=i.exec(f);)var d=c.index;l=l.slice(0,d===o?u:d)}}else if(t.indexOf(fo(i),u)!=u){var h=l.lastIndexOf(i);h>-1&&(l=l.slice(0,h))}return l+r},Fn.unescape=function(t){return(t=_s(t))&&K.test(t)?t.replace(J,yn):t},Fn.uniqueId=function(t){var e=++Mt;return _s(t)+e},Fn.upperCase=Zs,Fn.upperFirst=Qs,Fn.each=_a,Fn.eachRight=Ea,Fn.first=Yi,cu(Fn,(Su={},Er(Fn,(function(t,e){Nt.call(Fn.prototype,e)||(Su[e]=t)})),Su),{chain:!1}),Fn.VERSION="4.17.21",Re(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(t){Fn[t].placeholder=Fn})),Re(["drop","take"],(function(t,e){Vn.prototype[t]=function(n){n=n===o?1:wn(ms(n),0);var r=this.__filtered__&&!e?new Vn(this):this.clone();return r.__filtered__?r.__takeCount__=_n(n,r.__takeCount__):r.__views__.push({size:_n(n,y),type:t+(r.__dir__<0?"Right":"")}),r},Vn.prototype[t+"Right"]=function(e){return this.reverse()[t](e).reverse()}})),Re(["filter","map","takeWhile"],(function(t,e){var n=e+1,r=1==n||3==n;Vn.prototype[t]=function(t){var e=this.clone();return e.__iteratees__.push({iteratee:fi(t,3),type:n}),e.__filtered__=e.__filtered__||r,e}})),Re(["head","last"],(function(t,e){var n="take"+(e?"Right":"");Vn.prototype[t]=function(){return this[n](1).value()[0]}})),Re(["initial","tail"],(function(t,e){var n="drop"+(e?"":"Right");Vn.prototype[t]=function(){return this.__filtered__?new Vn(this):this[n](1)}})),Vn.prototype.compact=function(){return this.filter(au)},Vn.prototype.find=function(t){return this.filter(t).head()},Vn.prototype.findLast=function(t){return this.reverse().find(t)},Vn.prototype.invokeMap=Zr((function(t,e){return"function"==typeof t?new Vn(this):this.map((function(n){return Or(n,t,e)}))})),Vn.prototype.reject=function(t){return this.filter(Pa(fi(t)))},Vn.prototype.slice=function(t,e){t=ms(t);var n=this;return n.__filtered__&&(t>0||e<0)?new Vn(n):(t<0?n=n.takeRight(-t):t&&(n=n.drop(t)),e!==o&&(n=(e=ms(e))<0?n.dropRight(-e):n.take(e-t)),n)},Vn.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},Vn.prototype.toArray=function(){return this.take(y)},Er(Vn.prototype,(function(t,e){var n=/^(?:filter|find|map|reject)|While$/.test(e),r=/^(?:head|last)$/.test(e),i=Fn[r?"take"+("last"==e?"Right":""):e],a=r||/^find/.test(e);i&&(Fn.prototype[e]=function(){var e=this.__wrapped__,s=r?[1]:arguments,u=e instanceof Vn,l=s[0],c=u||Ga(e),f=function(t){var e=i.apply(Fn,Ue([t],s));return r&&d?e[0]:e};c&&n&&"function"==typeof l&&1!=l.length&&(u=c=!1);var d=this.__chain__,h=!!this.__actions__.length,p=a&&!d,g=u&&!h;if(!a&&c){e=g?e:new Vn(this);var y=t.apply(e,s);return y.__actions__.push({func:ya,args:[f],thisArg:o}),new Hn(y,d)}return p&&g?t.apply(this,s):(y=this.thru(f),p?r?y.value()[0]:y.value():y)})})),Re(["pop","push","shift","sort","splice","unshift"],(function(t){var e=kt[t],n=/^(?:push|sort|unshift)$/.test(t)?"tap":"thru",r=/^(?:pop|shift)$/.test(t);Fn.prototype[t]=function(){var t=arguments;if(r&&!this.__chain__){var o=this.value();return e.apply(Ga(o)?o:[],t)}return this[n]((function(n){return e.apply(Ga(n)?n:[],t)}))}})),Er(Vn.prototype,(function(t,e){var n=Fn[e];if(n){var r=n.name+"";Nt.call(Ln,r)||(Ln[r]=[]),Ln[r].push({name:e,func:n})}})),Ln[zo(o,2).name]=[{name:"wrapper",func:o}],Vn.prototype.clone=function(){var t=new Vn(this.__wrapped__);return t.__actions__=Oo(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=Oo(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=Oo(this.__views__),t},Vn.prototype.reverse=function(){if(this.__filtered__){var t=new Vn(this);t.__dir__=-1,t.__filtered__=!0}else(t=this.clone()).__dir__*=-1;return t},Vn.prototype.value=function(){var t=this.__wrapped__.value(),e=this.__dir__,n=Ga(t),r=e<0,o=n?t.length:0,i=function(t,e,n){var r=-1,o=n.length;for(;++r<o;){var i=n[r],a=i.size;switch(i.type){case"drop":t+=a;break;case"dropRight":e-=a;break;case"take":e=_n(e,t+a);break;case"takeRight":t=wn(t,e-a)}}return{start:t,end:e}}(0,o,this.__views__),a=i.start,s=i.end,u=s-a,l=r?s:a-1,c=this.__iteratees__,f=c.length,d=0,h=_n(u,this.__takeCount__);if(!n||!r&&o==u&&h==u)return mo(t,this.__actions__);var p=[];t:for(;u--&&d<h;){for(var g=-1,y=t[l+=e];++g<f;){var m=c[g],v=m.iteratee,b=m.type,w=v(y);if(2==b)y=w;else if(!w){if(1==b)continue t;break t}}p[d++]=y}return p},Fn.prototype.at=ma,Fn.prototype.chain=function(){return ga(this)},Fn.prototype.commit=function(){return new Hn(this.value(),this.__chain__)},Fn.prototype.next=function(){this.__values__===o&&(this.__values__=gs(this.value()));var t=this.__index__>=this.__values__.length;return{done:t,value:t?o:this.__values__[this.__index__++]}},Fn.prototype.plant=function(t){for(var e,n=this;n instanceof qn;){var r=Fi(n);r.__index__=0,r.__values__=o,e?i.__wrapped__=r:e=r;var i=r;n=n.__wrapped__}return i.__wrapped__=t,e},Fn.prototype.reverse=function(){var t=this.__wrapped__;if(t instanceof Vn){var e=t;return this.__actions__.length&&(e=new Vn(this)),(e=e.reverse()).__actions__.push({func:ya,args:[ra],thisArg:o}),new Hn(e,this.__chain__)}return this.thru(ra)},Fn.prototype.toJSON=Fn.prototype.valueOf=Fn.prototype.value=function(){return mo(this.__wrapped__,this.__actions__)},Fn.prototype.first=Fn.prototype.head,te&&(Fn.prototype[te]=function(){return this}),Fn}();he._=mn,(r=function(){return mn}.call(e,n,e,t))===o||(t.exports=r)}.call(this)},300:(t,e,n)=>{var r,o;t=n.nmd(t),function(e){e.runningInNodeJS=function(){return"object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node},e.runningInMainNodeJSModule=function(){return e.runningInNodeJS()&&n.c[n.s]===t},e.commonJSAvailable=function(){return"object"==typeof t.exports},e.runningInWebWorker=function(){return"undefined"==typeof window&&"object"==typeof self&&"function"==typeof self.addEventListener&&"function"==typeof self.close},e.runningInNodeChildProcess=function(){return e.runningInNodeJS()&&"function"==typeof process.send},e.runningInNullOrigin=function(){return"object"==typeof window&&"object"==typeof window.location&&"object"==typeof document&&("http:"!==document.location.protocol&&"https:"!==document.location.protocol)},e.webWorkersAvailable=function(){return"function"==typeof Worker&&!e.runningInNullOrigin()&&(!e.runningInNodeJS()&&!(navigator&&navigator.userAgent&&navigator.userAgent.indexOf("Android 4.3")>=0))},e.log=function(t,e){void 0===e&&(e=!1),"object"==typeof console&&(console.log(t),e&&"object"==typeof document&&(document.body.innerHTML+=t+"<br/>"))},e.createErrorMessage=function(t,n){if(void 0===n&&(n="Unhandled exception"),null==t)return n;if(n+=": ","object"==typeof t.content){if(e.runningInNodeJS())return n+t.content.stack;var r=JSON.stringify(t.content);return"{}"!==r?n+r:n+t.content}return"string"==typeof t.content?n+t.content:n+t},e.printExceptionAndStackTraceToConsole=function(t,n){void 0===n&&(n="Unhandled exception"),e.log(e.createErrorMessage(t,n))},e.getGlobalObject=function(){return"object"==typeof n.g?n.g:"object"==typeof window?window:"object"==typeof self?self:{}},e.toString=Object.prototype.toString,e.commonJSAvailable()&&(t.exports=e)}(o||(o={})),function(t){if("function"==typeof Uint8Array&&0!==new Uint8Array(1).subarray(1).byteLength){var e=function(t,e){var n=function(t,e,n){return t<e?e:t>n?n:t};t|=0,e|=0,arguments.length<1&&(t=0),arguments.length<2&&(e=this.length),t<0&&(t=this.length+t),e<0&&(e=this.length+e),t=n(t,0,this.length);var r=(e=n(e,0,this.length))-t;return r<0&&(r=0),new this.constructor(this.buffer,this.byteOffset+t*this.BYTES_PER_ELEMENT,r)},n=["Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array"],r=void 0;if("object"==typeof window?r=window:"object"==typeof self&&(r=self),void 0!==r)for(var o=0;o<n.length;o++)r[n[o]]&&(r[n[o]].prototype.subarray=e)}}(r||(r={})),function(t){var e=function(){function e(){}return e.compressAsync=function(e,n,r){var o=new t.Timer,i=new t.Compressor;if(!r)throw new TypeError("compressAsync: No callback argument given");if("string"==typeof e)e=t.encodeUTF8(e);else if(null==e||!(e instanceof Uint8Array))return void r(void 0,new TypeError("compressAsync: Invalid input argument, only 'string' and 'Uint8Array' are supported"));var a=t.ArrayTools.splitByteArray(e,n.blockSize),s=[],u=function(e){if(e<a.length){var l=void 0;try{l=i.compressBlock(a[e])}catch(t){return void r(void 0,t)}s.push(l),o.getElapsedTime()<=20?u(e+1):(t.enqueueImmediate((function(){return u(e+1)})),o.restart())}else{var c=t.ArrayTools.concatUint8Arrays(s);t.enqueueImmediate((function(){var e;try{e=t.CompressionCommon.encodeCompressedBytes(c,n.outputEncoding)}catch(t){return void r(void 0,t)}t.enqueueImmediate((function(){return r(e)}))}))}};t.enqueueImmediate((function(){return u(0)}))},e.createCompressionStream=function(){var e=new t.Compressor,r=new(n(99).Transform)({decodeStrings:!0,highWaterMark:65536});return r._transform=function(n,o,i){var a;try{a=t.BufferTools.uint8ArrayToBuffer(e.compressBlock(t.BufferTools.bufferToUint8Array(n)))}catch(t){return void r.emit("error",t)}r.push(a),i()},r},e}();t.AsyncCompressor=e}(o||(o={})),function(t){var e=function(){function e(){}return e.decompressAsync=function(e,n,r){if(!r)throw new TypeError("decompressAsync: No callback argument given");var o=new t.Timer;try{e=t.CompressionCommon.decodeCompressedBytes(e,n.inputEncoding)}catch(t){return void r(void 0,t)}var i=new t.Decompressor,a=t.ArrayTools.splitByteArray(e,n.blockSize),s=[],u=function(e){if(e<a.length){var l=void 0;try{l=i.decompressBlock(a[e])}catch(t){return void r(void 0,t)}s.push(l),o.getElapsedTime()<=20?u(e+1):(t.enqueueImmediate((function(){return u(e+1)})),o.restart())}else{var c=t.ArrayTools.concatUint8Arrays(s);t.enqueueImmediate((function(){var e;try{e=t.CompressionCommon.encodeDecompressedBytes(c,n.outputEncoding)}catch(t){return void r(void 0,t)}t.enqueueImmediate((function(){return r(e)}))}))}};t.enqueueImmediate((function(){return u(0)}))},e.createDecompressionStream=function(){var e=new t.Decompressor,r=new(n(99).Transform)({decodeStrings:!0,highWaterMark:65536});return r._transform=function(n,o,i){var a;try{a=t.BufferTools.uint8ArrayToBuffer(e.decompressBlock(t.BufferTools.bufferToUint8Array(n)))}catch(t){return void r.emit("error",t)}r.push(a),i()},r},e}();t.AsyncDecompressor=e}(o||(o={})),function(t){var e;!function(e){e.compressAsync=function(t,n,r){if("ByteArray"!=n.inputEncoding||t instanceof Uint8Array){var o={token:Math.random().toString(),type:"compress",data:t,inputEncoding:n.inputEncoding,outputEncoding:n.outputEncoding},i=function(t){var n=t.data;n&&n.token==o.token&&(e.globalWorker.removeEventListener("message",i),"error"==n.type?r(void 0,new Error(n.error)):r(n.data))};e.globalWorker.addEventListener("message",i),e.globalWorker.postMessage(o,[])}else r(void 0,new TypeError("compressAsync: input is not a Uint8Array"))},e.decompressAsync=function(t,n,r){var o={token:Math.random().toString(),type:"decompress",data:t,inputEncoding:n.inputEncoding,outputEncoding:n.outputEncoding},i=function(t){var n=t.data;n&&n.token==o.token&&(e.globalWorker.removeEventListener("message",i),"error"==n.type?r(void 0,new Error(n.error)):r(n.data))};e.globalWorker.addEventListener("message",i),e.globalWorker.postMessage(o,[])},e.installWebWorkerIfNeeded=function(){"object"==typeof self&&void 0===self.document&&null!=self.addEventListener&&(self.addEventListener("message",(function(e){var n=e.data;if("compress"==n.type){var r=void 0;try{r=t.compress(n.data,{outputEncoding:n.outputEncoding})}catch(e){return void self.postMessage({token:n.token,type:"error",error:t.createErrorMessage(e)},[])}(o={token:n.token,type:"compressionResult",data:r,encoding:n.outputEncoding}).data instanceof Uint8Array&&-1===navigator.appVersion.indexOf("MSIE 10")?self.postMessage(o,[o.data.buffer]):self.postMessage(o,[])}else if("decompress"==n.type){var o,i=void 0;try{i=t.decompress(n.data,{inputEncoding:n.inputEncoding,outputEncoding:n.outputEncoding})}catch(e){return void self.postMessage({token:n.token,type:"error",error:t.createErrorMessage(e)},[])}(o={token:n.token,type:"decompressionResult",data:i,encoding:n.outputEncoding}).data instanceof Uint8Array&&-1===navigator.appVersion.indexOf("MSIE 10")?self.postMessage(o,[o.data.buffer]):self.postMessage(o,[])}})),self.addEventListener("error",(function(e){t.log(t.createErrorMessage(e.error,"Unexpected LZUTF8 WebWorker exception"))})))},e.createGlobalWorkerIfNeeded=function(){if(e.globalWorker)return!0;if(!t.webWorkersAvailable())return!1;if(!e.scriptURI&&"object"==typeof document){var n=document.getElementById("lzutf8");null!=n&&(e.scriptURI=n.getAttribute("src")||void 0)}return!!e.scriptURI&&(e.globalWorker=new Worker(e.scriptURI),!0)},e.terminate=function(){e.globalWorker&&(e.globalWorker.terminate(),e.globalWorker=void 0)}}(e=t.WebWorker||(t.WebWorker={})),e.installWebWorkerIfNeeded()}(o||(o={})),function(t){var e=function(){function t(t,e,n){this.container=t,this.startPosition=e,this.length=n}return t.prototype.get=function(t){return this.container[this.startPosition+t]},t.prototype.getInReversedOrder=function(t){return this.container[this.startPosition+this.length-1-t]},t.prototype.set=function(t,e){this.container[this.startPosition+t]=e},t}();t.ArraySegment=e}(o||(o={})),function(t){!function(t){t.copyElements=function(t,e,n,r,o){for(;o--;)n[r++]=t[e++]},t.zeroElements=function(t,e,n){for(;n--;)t[e++]=0},t.countNonzeroValuesInArray=function(t){for(var e=0,n=0;n<t.length;n++)t[n]&&e++;return e},t.truncateStartingElements=function(t,e){if(t.length<=e)throw new RangeError("truncateStartingElements: Requested length should be smaller than array length");for(var n=t.length-e,r=0;r<e;r++)t[r]=t[n+r];t.length=e},t.doubleByteArrayCapacity=function(t){var e=new Uint8Array(2*t.length);return e.set(t),e},t.concatUint8Arrays=function(t){for(var e=0,n=0,r=t;n<r.length;n++){e+=(u=r[n]).length}for(var o=new Uint8Array(e),i=0,a=0,s=t;a<s.length;a++){var u=s[a];o.set(u,i),i+=u.length}return o},t.splitByteArray=function(t,e){for(var n=[],r=0;r<t.length;){var o=Math.min(e,t.length-r);n.push(t.subarray(r,r+o)),r+=o}return n}}(t.ArrayTools||(t.ArrayTools={}))}(o||(o={})),function(t){!function(t){t.convertToUint8ArrayIfNeeded=function(e){return"function"==typeof Buffer&&Buffer.isBuffer(e)?t.bufferToUint8Array(e):e},t.uint8ArrayToBuffer=function(t){if(Buffer.prototype instanceof Uint8Array){var e=new Uint8Array(t.buffer,t.byteOffset,t.byteLength);return Object.setPrototypeOf(e,Buffer.prototype),e}for(var n=t.length,r=new Buffer(n),o=0;o<n;o++)r[o]=t[o];return r},t.bufferToUint8Array=function(t){if(Buffer.prototype instanceof Uint8Array)return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);for(var e=t.length,n=new Uint8Array(e),r=0;r<e;r++)n[r]=t[r];return n}}(t.BufferTools||(t.BufferTools={}))}(o||(o={})),function(t){!function(e){e.getCroppedBuffer=function(t,e,n,r){void 0===r&&(r=0);var o=new Uint8Array(n+r);return o.set(t.subarray(e,e+n)),o},e.getCroppedAndAppendedByteArray=function(e,n,r,o){return t.ArrayTools.concatUint8Arrays([e.subarray(n,n+r),o])},e.detectCompressionSourceEncoding=function(t){if(null==t)throw new TypeError("detectCompressionSourceEncoding: input is null or undefined");if("string"==typeof t)return"String";if(t instanceof Uint8Array||"function"==typeof Buffer&&Buffer.isBuffer(t))return"ByteArray";throw new TypeError("detectCompressionSourceEncoding: input must be of type 'string', 'Uint8Array' or 'Buffer'")},e.encodeCompressedBytes=function(e,n){switch(n){case"ByteArray":return e;case"Buffer":return t.BufferTools.uint8ArrayToBuffer(e);case"Base64":return t.encodeBase64(e);case"BinaryString":return t.encodeBinaryString(e);case"StorageBinaryString":return t.encodeStorageBinaryString(e);default:throw new TypeError("encodeCompressedBytes: invalid output encoding requested")}},e.decodeCompressedBytes=function(e,n){if(null==n)throw new TypeError("decodeCompressedData: Input is null or undefined");switch(n){case"ByteArray":case"Buffer":var r=t.BufferTools.convertToUint8ArrayIfNeeded(e);if(!(r instanceof Uint8Array))throw new TypeError("decodeCompressedData: 'ByteArray' or 'Buffer' input type was specified but input is not a Uint8Array or Buffer");return r;case"Base64":if("string"!=typeof e)throw new TypeError("decodeCompressedData: 'Base64' input type was specified but input is not a string");return t.decodeBase64(e);case"BinaryString":if("string"!=typeof e)throw new TypeError("decodeCompressedData: 'BinaryString' input type was specified but input is not a string");return t.decodeBinaryString(e);case"StorageBinaryString":if("string"!=typeof e)throw new TypeError("decodeCompressedData: 'StorageBinaryString' input type was specified but input is not a string");return t.decodeStorageBinaryString(e);default:throw new TypeError("decodeCompressedData: invalid input encoding requested: '".concat(n,"'"))}},e.encodeDecompressedBytes=function(e,n){switch(n){case"String":return t.decodeUTF8(e);case"ByteArray":return e;case"Buffer":if("function"!=typeof Buffer)throw new TypeError("encodeDecompressedBytes: a 'Buffer' type was specified but is not supported at the current envirnment");return t.BufferTools.uint8ArrayToBuffer(e);default:throw new TypeError("encodeDecompressedBytes: invalid output encoding requested")}}}(t.CompressionCommon||(t.CompressionCommon={}))}(o||(o={})),function(t){var e;!function(e){var n,r=[];e.enqueueImmediate=function(t){r.push(t),1===r.length&&n()},e.initializeScheduler=function(){var e=function(){for(var e=0,n=r;e<n.length;e++){var o=n[e];try{o.call(void 0)}catch(e){t.printExceptionAndStackTraceToConsole(e,"enqueueImmediate exception")}}r.length=0};if(t.runningInNodeJS())n=function(){return setImmediate((function(){return e()}))};else if("object"==typeof window&&"function"==typeof window.addEventListener&&"function"==typeof window.postMessage){var o,i="enqueueImmediate-"+Math.random().toString();window.addEventListener("message",(function(t){t.data===i&&e()})),o=t.runningInNullOrigin()?"*":window.location.href,n=function(){return window.postMessage(i,o)}}else if("function"==typeof MessageChannel&&"function"==typeof MessagePort){var a=new MessageChannel;a.port1.onmessage=function(){return e()},n=function(){return a.port2.postMessage(0)}}else n=function(){return setTimeout((function(){return e()}),0)}},e.initializeScheduler()}(e=t.EventLoop||(t.EventLoop={})),t.enqueueImmediate=function(t){return e.enqueueImmediate(t)}}(o||(o={})),function(t){!function(t){t.override=function(e,n){return t.extend(e,n)},t.extend=function(t,e){if(null==t)throw new TypeError("obj is null or undefined");if("object"!=typeof t)throw new TypeError("obj is not an object");if(null==e&&(e={}),"object"!=typeof e)throw new TypeError("newProperties is not an object");if(null!=e)for(var n in e)t[n]=e[n];return t}}(t.ObjectTools||(t.ObjectTools={}))}(o||(o={})),function(t){t.getRandomIntegerInRange=function(t,e){return t+Math.floor(Math.random()*(e-t))},t.getRandomUTF16StringOfLength=function(e){for(var n="",r=0;r<e;r++){var o=void 0;do{o=t.getRandomIntegerInRange(0,1114112)}while(o>=55296&&o<=57343);n+=t.Encoding.CodePoint.decodeToString(o)}return n}}(o||(o={})),function(t){var e=function(){function t(t){void 0===t&&(t=1024),this.outputBufferCapacity=t,this.outputPosition=0,this.outputString="",this.outputBuffer=new Uint16Array(this.outputBufferCapacity)}return t.prototype.appendCharCode=function(t){this.outputBuffer[this.outputPosition++]=t,this.outputPosition===this.outputBufferCapacity&&this.flushBufferToOutputString()},t.prototype.appendCharCodes=function(t){for(var e=0,n=t.length;e<n;e++)this.appendCharCode(t[e])},t.prototype.appendString=function(t){for(var e=0,n=t.length;e<n;e++)this.appendCharCode(t.charCodeAt(e))},t.prototype.appendCodePoint=function(t){if(t<=65535)this.appendCharCode(t);else{if(!(t<=1114111))throw new Error("appendCodePoint: A code point of ".concat(t," cannot be encoded in UTF-16"));this.appendCharCode(55296+(t-65536>>>10)),this.appendCharCode(56320+(t-65536&1023))}},t.prototype.getOutputString=function(){return this.flushBufferToOutputString(),this.outputString},t.prototype.flushBufferToOutputString=function(){this.outputPosition===this.outputBufferCapacity?this.outputString+=String.fromCharCode.apply(null,this.outputBuffer):this.outputString+=String.fromCharCode.apply(null,this.outputBuffer.subarray(0,this.outputPosition)),this.outputPosition=0},t}();t.StringBuilder=e}(o||(o={})),function(t){var e=function(){function e(){this.restart()}return e.prototype.restart=function(){this.startTime=e.getTimestamp()},e.prototype.getElapsedTime=function(){return e.getTimestamp()-this.startTime},e.prototype.getElapsedTimeAndRestart=function(){var t=this.getElapsedTime();return this.restart(),t},e.prototype.logAndRestart=function(e,n){void 0===n&&(n=!0);var r=this.getElapsedTime(),o="".concat(e,": ").concat(r.toFixed(3),"ms");return t.log(o,n),this.restart(),r},e.getTimestamp=function(){return this.timestampFunc||this.createGlobalTimestampFunction(),this.timestampFunc()},e.getMicrosecondTimestamp=function(){return Math.floor(1e3*e.getTimestamp())},e.createGlobalTimestampFunction=function(){if("object"==typeof process&&"function"==typeof process.hrtime){var t=0;this.timestampFunc=function(){var e=process.hrtime(),n=1e3*e[0]+e[1]/1e6;return t+n},t=Date.now()-this.timestampFunc()}else if("object"==typeof chrome&&chrome.Interval){var e=Date.now(),n=new chrome.Interval;n.start(),this.timestampFunc=function(){return e+n.microseconds()/1e3}}else if("object"==typeof performance&&performance.now){var r=Date.now()-performance.now();this.timestampFunc=function(){return r+performance.now()}}else Date.now?this.timestampFunc=function(){return Date.now()}:this.timestampFunc=function(){return(new Date).getTime()}},e}();t.Timer=e}(o||(o={})),function(t){var e=function(){function e(e){void 0===e&&(e=!0),this.MinimumSequenceLength=4,this.MaximumSequenceLength=31,this.MaximumMatchDistance=32767,this.PrefixHashTableSize=65537,this.inputBufferStreamOffset=1,e&&"function"==typeof Uint32Array?this.prefixHashTable=new t.CompressorCustomHashTable(this.PrefixHashTableSize):this.prefixHashTable=new t.CompressorSimpleHashTable(this.PrefixHashTableSize)}return e.prototype.compressBlock=function(e){if(null==e)throw new TypeError("compressBlock: undefined or null input received");return"string"==typeof e&&(e=t.encodeUTF8(e)),e=t.BufferTools.convertToUint8ArrayIfNeeded(e),this.compressUtf8Block(e)},e.prototype.compressUtf8Block=function(t){if(!t||0==t.length)return new Uint8Array(0);var e=this.cropAndAddNewBytesToInputBuffer(t),n=this.inputBuffer,r=this.inputBuffer.length;this.outputBuffer=new Uint8Array(t.length),this.outputBufferPosition=0;for(var o=0,i=e;i<r;i++){var a=n[i],s=i<o;if(i>r-this.MinimumSequenceLength)s||this.outputRawByte(a);else{var u=this.getBucketIndexForPrefix(i);if(!s){var l=this.findLongestMatch(i,u);null!=l&&(this.outputPointerBytes(l.length,l.distance),o=i+l.length,s=!0)}s||this.outputRawByte(a);var c=this.inputBufferStreamOffset+i;this.prefixHashTable.addValueToBucket(u,c)}}return this.outputBuffer.subarray(0,this.outputBufferPosition)},e.prototype.findLongestMatch=function(t,e){var n=this.prefixHashTable.getArraySegmentForBucketIndex(e,this.reusableArraySegmentObject);if(null==n)return null;for(var r,o=this.inputBuffer,i=0,a=0;a<n.length;a++){var s=n.getInReversedOrder(a)-this.inputBufferStreamOffset,u=t-s,l=void 0;if(l=void 0===r?this.MinimumSequenceLength-1:r<128&&u>=128?i+(i>>>1):i,u>this.MaximumMatchDistance||l>=this.MaximumSequenceLength||t+l>=o.length)break;if(o[s+l]===o[t+l])for(var c=0;;c++){if(t+c===o.length||o[s+c]!==o[t+c]){c>l&&(r=u,i=c);break}if(c===this.MaximumSequenceLength)return{distance:u,length:this.MaximumSequenceLength}}}return void 0!==r?{distance:r,length:i}:null},e.prototype.getBucketIndexForPrefix=function(t){return(7880599*this.inputBuffer[t]+39601*this.inputBuffer[t+1]+199*this.inputBuffer[t+2]+this.inputBuffer[t+3])%this.PrefixHashTableSize},e.prototype.outputPointerBytes=function(t,e){e<128?(this.outputRawByte(192|t),this.outputRawByte(e)):(this.outputRawByte(224|t),this.outputRawByte(e>>>8),this.outputRawByte(255&e))},e.prototype.outputRawByte=function(t){this.outputBuffer[this.outputBufferPosition++]=t},e.prototype.cropAndAddNewBytesToInputBuffer=function(e){if(void 0===this.inputBuffer)return this.inputBuffer=e,0;var n=Math.min(this.inputBuffer.length,this.MaximumMatchDistance),r=this.inputBuffer.length-n;return this.inputBuffer=t.CompressionCommon.getCroppedAndAppendedByteArray(this.inputBuffer,r,n,e),this.inputBufferStreamOffset+=r,n},e}();t.Compressor=e}(o||(o={})),function(t){var e=function(){function e(t){this.minimumBucketCapacity=4,this.maximumBucketCapacity=64,this.bucketLocators=new Uint32Array(2*t),this.storage=new Uint32Array(2*t),this.storageIndex=1}return e.prototype.addValueToBucket=function(e,n){e<<=1,this.storageIndex>=this.storage.length>>>1&&this.compact();var r,o=this.bucketLocators[e];if(0===o)o=this.storageIndex,r=1,this.storage[this.storageIndex]=n,this.storageIndex+=this.minimumBucketCapacity;else{(r=this.bucketLocators[e+1])===this.maximumBucketCapacity-1&&(r=this.truncateBucketToNewerElements(o,r,this.maximumBucketCapacity/2));var i=o+r;0===this.storage[i]?(this.storage[i]=n,i===this.storageIndex&&(this.storageIndex+=r)):(t.ArrayTools.copyElements(this.storage,o,this.storage,this.storageIndex,r),o=this.storageIndex,this.storageIndex+=r,this.storage[this.storageIndex++]=n,this.storageIndex+=r),r++}this.bucketLocators[e]=o,this.bucketLocators[e+1]=r},e.prototype.truncateBucketToNewerElements=function(e,n,r){var o=e+n-r;return t.ArrayTools.copyElements(this.storage,o,this.storage,e,r),t.ArrayTools.zeroElements(this.storage,e+r,n-r),r},e.prototype.compact=function(){var e=this.bucketLocators,n=this.storage;this.bucketLocators=new Uint32Array(this.bucketLocators.length),this.storageIndex=1;for(var r=0;r<e.length;r+=2){var o=e[r+1];0!==o&&(this.bucketLocators[r]=this.storageIndex,this.bucketLocators[r+1]=o,this.storageIndex+=Math.max(Math.min(2*o,this.maximumBucketCapacity),this.minimumBucketCapacity))}this.storage=new Uint32Array(8*this.storageIndex);for(r=0;r<e.length;r+=2){var i=e[r];if(0!==i){var a=this.bucketLocators[r],s=this.bucketLocators[r+1];t.ArrayTools.copyElements(n,i,this.storage,a,s)}}},e.prototype.getArraySegmentForBucketIndex=function(e,n){e<<=1;var r=this.bucketLocators[e];return 0===r?null:(void 0===n&&(n=new t.ArraySegment(this.storage,r,this.bucketLocators[e+1])),n)},e.prototype.getUsedBucketCount=function(){return Math.floor(t.ArrayTools.countNonzeroValuesInArray(this.bucketLocators)/2)},e.prototype.getTotalElementCount=function(){for(var t=0,e=0;e<this.bucketLocators.length;e+=2)t+=this.bucketLocators[e+1];return t},e}();t.CompressorCustomHashTable=e}(o||(o={})),function(t){var e=function(){function e(t){this.maximumBucketCapacity=64,this.buckets=new Array(t)}return e.prototype.addValueToBucket=function(e,n){var r=this.buckets[e];void 0===r?this.buckets[e]=[n]:(r.length===this.maximumBucketCapacity-1&&t.ArrayTools.truncateStartingElements(r,this.maximumBucketCapacity/2),r.push(n))},e.prototype.getArraySegmentForBucketIndex=function(e,n){var r=this.buckets[e];return void 0===r?null:(void 0===n&&(n=new t.ArraySegment(r,0,r.length)),n)},e.prototype.getUsedBucketCount=function(){return t.ArrayTools.countNonzeroValuesInArray(this.buckets)},e.prototype.getTotalElementCount=function(){for(var t=0,e=0;e<this.buckets.length;e++)void 0!==this.buckets[e]&&(t+=this.buckets[e].length);return t},e}();t.CompressorSimpleHashTable=e}(o||(o={})),function(t){var e=function(){function e(){this.MaximumMatchDistance=32767,this.outputPosition=0}return e.prototype.decompressBlockToString=function(e){return e=t.BufferTools.convertToUint8ArrayIfNeeded(e),t.decodeUTF8(this.decompressBlock(e))},e.prototype.decompressBlock=function(e){this.inputBufferRemainder&&(e=t.ArrayTools.concatUint8Arrays([this.inputBufferRemainder,e]),this.inputBufferRemainder=void 0);for(var n=this.cropOutputBufferToWindowAndInitialize(Math.max(4*e.length,1024)),r=0,o=e.length;r<o;r++){var i=e[r];if(i>>>6==3){var a=i>>>5;if(r==o-1||r==o-2&&7==a){this.inputBufferRemainder=e.subarray(r);break}if(e[r+1]>>>7==1)this.outputByte(i);else{var s=31&i,u=void 0;6==a?(u=e[r+1],r+=1):(u=e[r+1]<<8|e[r+2],r+=2);for(var l=this.outputPosition-u,c=0;c<s;c++)this.outputByte(this.outputBuffer[l+c])}}else this.outputByte(i)}return this.rollBackIfOutputBufferEndsWithATruncatedMultibyteSequence(),t.CompressionCommon.getCroppedBuffer(this.outputBuffer,n,this.outputPosition-n)},e.prototype.outputByte=function(e){this.outputPosition===this.outputBuffer.length&&(this.outputBuffer=t.ArrayTools.doubleByteArrayCapacity(this.outputBuffer)),this.outputBuffer[this.outputPosition++]=e},e.prototype.cropOutputBufferToWindowAndInitialize=function(e){if(!this.outputBuffer)return this.outputBuffer=new Uint8Array(e),0;var n=Math.min(this.outputPosition,this.MaximumMatchDistance);if(this.outputBuffer=t.CompressionCommon.getCroppedBuffer(this.outputBuffer,this.outputPosition-n,n,e),this.outputPosition=n,this.outputBufferRemainder){for(var r=0;r<this.outputBufferRemainder.length;r++)this.outputByte(this.outputBufferRemainder[r]);this.outputBufferRemainder=void 0}return n},e.prototype.rollBackIfOutputBufferEndsWithATruncatedMultibyteSequence=function(){for(var t=1;t<=4&&this.outputPosition-t>=0;t++){var e=this.outputBuffer[this.outputPosition-t];if(t<4&&e>>>3==30||t<3&&e>>>4==14||t<2&&e>>>5==6)return this.outputBufferRemainder=this.outputBuffer.subarray(this.outputPosition-t,this.outputPosition),void(this.outputPosition-=t)}},e}();t.Decompressor=e}(o||(o={})),function(t){!function(e){!function(e){var n=new Uint8Array([65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47]),r=new Uint8Array([255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,62,255,255,255,63,52,53,54,55,56,57,58,59,60,61,255,255,255,0,255,255,255,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,255,255,255,255,255,255,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,255,255,255,255]);e.encode=function(n){return n&&0!=n.length?t.runningInNodeJS()?t.BufferTools.uint8ArrayToBuffer(n).toString("base64"):e.encodeWithJS(n):""},e.decode=function(n){return n?t.runningInNodeJS()?t.BufferTools.bufferToUint8Array(Buffer.from(n,"base64")):e.decodeWithJS(n):new Uint8Array(0)},e.encodeWithJS=function(e,r){if(void 0===r&&(r=!0),!e||0==e.length)return"";for(var o,i=n,a=new t.StringBuilder,s=0,u=e.length;s<u;s+=3)s<=u-3?(o=e[s]<<16|e[s+1]<<8|e[s+2],a.appendCharCode(i[o>>>18&63]),a.appendCharCode(i[o>>>12&63]),a.appendCharCode(i[o>>>6&63]),a.appendCharCode(i[63&o]),o=0):s===u-2?(o=e[s]<<16|e[s+1]<<8,a.appendCharCode(i[o>>>18&63]),a.appendCharCode(i[o>>>12&63]),a.appendCharCode(i[o>>>6&63]),r&&a.appendCharCode(61)):s===u-1&&(o=e[s]<<16,a.appendCharCode(i[o>>>18&63]),a.appendCharCode(i[o>>>12&63]),r&&(a.appendCharCode(61),a.appendCharCode(61)));return a.getOutputString()},e.decodeWithJS=function(t,e){if(!t||0==t.length)return new Uint8Array(0);var n=t.length%4;if(1===n)throw new Error("Invalid Base64 string: length % 4 == 1");2===n?t+="==":3===n&&(t+="="),e||(e=new Uint8Array(t.length));for(var o=0,i=t.length,a=0;a<i;a+=4){var s=r[t.charCodeAt(a)]<<18|r[t.charCodeAt(a+1)]<<12|r[t.charCodeAt(a+2)]<<6|r[t.charCodeAt(a+3)];e[o++]=s>>>16&255,e[o++]=s>>>8&255,e[o++]=255&s}return 61==t.charCodeAt(i-1)&&o--,61==t.charCodeAt(i-2)&&o--,e.subarray(0,o)}}(e.Base64||(e.Base64={}))}(t.Encoding||(t.Encoding={}))}(o||(o={})),function(t){!function(e){!function(e){e.encode=function(e){if(null==e)throw new TypeError("BinaryString.encode: undefined or null input received");if(0===e.length)return"";for(var n=e.length,r=new t.StringBuilder,o=0,i=1,a=0;a<n;a+=2){var s=void 0;s=a==n-1?e[a]<<8:e[a]<<8|e[a+1],r.appendCharCode(o<<16-i|s>>>i),o=s&(1<<i)-1,15===i?(r.appendCharCode(o),o=0,i=1):i+=1,a>=n-2&&r.appendCharCode(o<<16-i)}return r.appendCharCode(32768|n%2),r.getOutputString()},e.decode=function(t){if("string"!=typeof t)throw new TypeError("BinaryString.decode: invalid input type");if(""==t)return new Uint8Array(0);for(var e=new Uint8Array(3*t.length),n=0,r=function(t){e[n++]=t>>>8,e[n++]=255&t},o=0,i=0,a=0;a<t.length;a++){var s=t.charCodeAt(a);s>=32768?(32769==s&&n--,i=0):(0==i?o=s:(r(o<<i|s>>>15-i),o=s&(1<<15-i)-1),15==i?i=0:i+=1)}return e.subarray(0,n)}}(e.BinaryString||(e.BinaryString={}))}(t.Encoding||(t.Encoding={}))}(o||(o={})),function(t){!function(t){!function(t){t.encodeFromString=function(t,e){var n=t.charCodeAt(e);if(n<55296||n>56319)return n;var r=t.charCodeAt(e+1);if(r>=56320&&r<=57343)return r-56320+(n-55296<<10)+65536;throw new Error("getUnicodeCodePoint: Received a lead surrogate character, char code ".concat(n,", followed by ").concat(r,", which is not a trailing surrogate character code."))},t.decodeToString=function(t){if(t<=65535)return String.fromCharCode(t);if(t<=1114111)return String.fromCharCode(55296+(t-65536>>>10),56320+(t-65536&1023));throw new Error("getStringFromUnicodeCodePoint: A code point of ".concat(t," cannot be encoded in UTF-16"))}}(t.CodePoint||(t.CodePoint={}))}(t.Encoding||(t.Encoding={}))}(o||(o={})),function(t){!function(t){!function(t){var e=["000","001","002","003","004","005","006","007","008","009","010","011","012","013","014","015","016","017","018","019","020","021","022","023","024","025","026","027","028","029","030","031","032","033","034","035","036","037","038","039","040","041","042","043","044","045","046","047","048","049","050","051","052","053","054","055","056","057","058","059","060","061","062","063","064","065","066","067","068","069","070","071","072","073","074","075","076","077","078","079","080","081","082","083","084","085","086","087","088","089","090","091","092","093","094","095","096","097","098","099","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255"];t.encode=function(t){for(var n=[],r=0;r<t.length;r++)n.push(e[t[r]]);return n.join(" ")}}(t.DecimalString||(t.DecimalString={}))}(t.Encoding||(t.Encoding={}))}(o||(o={})),function(t){!function(t){!function(e){e.encode=function(e){return t.BinaryString.encode(e).replace(/\0/g,"耂")},e.decode=function(e){return t.BinaryString.decode(e.replace(/\u8002/g,"\0"))}}(t.StorageBinaryString||(t.StorageBinaryString={}))}(t.Encoding||(t.Encoding={}))}(o||(o={})),function(t){!function(e){!function(n){var r,o;n.encode=function(e){return e&&0!=e.length?t.runningInNodeJS()?t.BufferTools.bufferToUint8Array(Buffer.from(e,"utf8")):n.createNativeTextEncoderAndDecoderIfAvailable()?r.encode(e):n.encodeWithJS(e):new Uint8Array(0)},n.decode=function(e){return e&&0!=e.length?t.runningInNodeJS()?t.BufferTools.uint8ArrayToBuffer(e).toString("utf8"):n.createNativeTextEncoderAndDecoderIfAvailable()?o.decode(e):n.decodeWithJS(e):""},n.encodeWithJS=function(t,n){if(!t||0==t.length)return new Uint8Array(0);n||(n=new Uint8Array(4*t.length));for(var r=0,o=0;o<t.length;o++){var i=e.CodePoint.encodeFromString(t,o);if(i<=127)n[r++]=i;else if(i<=2047)n[r++]=192|i>>>6,n[r++]=128|63&i;else if(i<=65535)n[r++]=224|i>>>12,n[r++]=128|i>>>6&63,n[r++]=128|63&i;else{if(!(i<=1114111))throw new Error("Invalid UTF-16 string: Encountered a character unsupported by UTF-8/16 (RFC 3629)");n[r++]=240|i>>>18,n[r++]=128|i>>>12&63,n[r++]=128|i>>>6&63,n[r++]=128|63&i,o++}}return n.subarray(0,r)},n.decodeWithJS=function(e,n,r){if(void 0===n&&(n=0),!e||0==e.length)return"";void 0===r&&(r=e.length);for(var o,i,a=new t.StringBuilder,s=n,u=r;s<u;){if((i=e[s])>>>7==0)o=i,s+=1;else if(i>>>5==6){if(s+1>=r)throw new Error("Invalid UTF-8 stream: Truncated codepoint sequence encountered at position "+s);o=(31&i)<<6|63&e[s+1],s+=2}else if(i>>>4==14){if(s+2>=r)throw new Error("Invalid UTF-8 stream: Truncated codepoint sequence encountered at position "+s);o=(15&i)<<12|(63&e[s+1])<<6|63&e[s+2],s+=3}else{if(i>>>3!=30)throw new Error("Invalid UTF-8 stream: An invalid lead byte value encountered at position "+s);if(s+3>=r)throw new Error("Invalid UTF-8 stream: Truncated codepoint sequence encountered at position "+s);o=(7&i)<<18|(63&e[s+1])<<12|(63&e[s+2])<<6|63&e[s+3],s+=4}a.appendCodePoint(o)}return a.getOutputString()},n.createNativeTextEncoderAndDecoderIfAvailable=function(){return!!r||"function"==typeof TextEncoder&&(r=new TextEncoder("utf-8"),o=new TextDecoder("utf-8"),!0)}}(e.UTF8||(e.UTF8={}))}(t.Encoding||(t.Encoding={}))}(o||(o={})),function(t){t.compress=function(e,n){if(void 0===n&&(n={}),null==e)throw new TypeError("compress: undefined or null input received");var r=t.CompressionCommon.detectCompressionSourceEncoding(e);n=t.ObjectTools.override({inputEncoding:r,outputEncoding:"ByteArray"},n);var o=(new t.Compressor).compressBlock(e);return t.CompressionCommon.encodeCompressedBytes(o,n.outputEncoding)},t.decompress=function(e,n){if(void 0===n&&(n={}),null==e)throw new TypeError("decompress: undefined or null input received");n=t.ObjectTools.override({inputEncoding:"ByteArray",outputEncoding:"String"},n);var r=t.CompressionCommon.decodeCompressedBytes(e,n.inputEncoding),o=(new t.Decompressor).decompressBlock(r);return t.CompressionCommon.encodeDecompressedBytes(o,n.outputEncoding)},t.compressAsync=function(e,n,r){var o;null==r&&(r=function(){});try{o=t.CompressionCommon.detectCompressionSourceEncoding(e)}catch(t){return void r(void 0,t)}n=t.ObjectTools.override({inputEncoding:o,outputEncoding:"ByteArray",useWebWorker:!0,blockSize:65536},n),t.enqueueImmediate((function(){n.useWebWorker&&t.WebWorker.createGlobalWorkerIfNeeded()?t.WebWorker.compressAsync(e,n,r):t.AsyncCompressor.compressAsync(e,n,r)}))},t.decompressAsync=function(e,n,r){if(null==r&&(r=function(){}),null!=e){n=t.ObjectTools.override({inputEncoding:"ByteArray",outputEncoding:"String",useWebWorker:!0,blockSize:65536},n);var o=t.BufferTools.convertToUint8ArrayIfNeeded(e);t.EventLoop.enqueueImmediate((function(){n.useWebWorker&&t.WebWorker.createGlobalWorkerIfNeeded()?t.WebWorker.decompressAsync(o,n,r):t.AsyncDecompressor.decompressAsync(e,n,r)}))}else r(void 0,new TypeError("decompressAsync: undefined or null input received"))},t.createCompressionStream=function(){return t.AsyncCompressor.createCompressionStream()},t.createDecompressionStream=function(){return t.AsyncDecompressor.createDecompressionStream()},t.encodeUTF8=function(e){return t.Encoding.UTF8.encode(e)},t.decodeUTF8=function(e){return t.Encoding.UTF8.decode(e)},t.encodeBase64=function(e){return t.Encoding.Base64.encode(e)},t.decodeBase64=function(e){return t.Encoding.Base64.decode(e)},t.encodeBinaryString=function(e){return t.Encoding.BinaryString.encode(e)},t.decodeBinaryString=function(e){return t.Encoding.BinaryString.decode(e)},t.encodeStorageBinaryString=function(e){return t.Encoding.StorageBinaryString.encode(e)},t.decodeStorageBinaryString=function(e){return t.Encoding.StorageBinaryString.decode(e)}}(o||(o={}))},374:(t,e,n)=>{const{AbortError:r,codes:o}=n(141),i=n(86),{ERR_INVALID_ARG_TYPE:a}=o;t.exports.addAbortSignal=function(e,n){if(((t,e)=>{if("object"!=typeof t||!("aborted"in t))throw new a(e,"AbortSignal",t)})(e,"signal"),!(r=n)||"function"!=typeof r.pipe)throw new a("stream","stream.Stream",n);var r;return t.exports.addAbortSignalNoValidate(e,n)},t.exports.addAbortSignalNoValidate=function(t,e){if("object"!=typeof t||!("aborted"in t))return e;const n=()=>{e.destroy(new r(void 0,{cause:t.reason}))};return t.aborted?n():(t.addEventListener("abort",n),i(e,(()=>t.removeEventListener("abort",n)))),e}},616:(t,e,n)=>{const{StringPrototypeSlice:r,SymbolIterator:o,TypedArrayPrototypeSet:i,Uint8Array:a}=n(191),{Buffer:s}=n(485),{inspect:u}=n(775);t.exports=class{constructor(){this.head=null,this.tail=null,this.length=0}push(t){const e={data:t,next:null};this.length>0?this.tail.next=e:this.head=e,this.tail=e,++this.length}unshift(t){const e={data:t,next:this.head};0===this.length&&(this.tail=e),this.head=e,++this.length}shift(){if(0===this.length)return;const t=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,t}clear(){this.head=this.tail=null,this.length=0}join(t){if(0===this.length)return"";let e=this.head,n=""+e.data;for(;null!==(e=e.next);)n+=t+e.data;return n}concat(t){if(0===this.length)return s.alloc(0);const e=s.allocUnsafe(t>>>0);let n=this.head,r=0;for(;n;)i(e,n.data,r),r+=n.data.length,n=n.next;return e}consume(t,e){const n=this.head.data;if(t<n.length){const e=n.slice(0,t);return this.head.data=n.slice(t),e}return t===n.length?this.shift():e?this._getString(t):this._getBuffer(t)}first(){return this.head.data}*[o](){for(let t=this.head;t;t=t.next)yield t.data}_getString(t){let e="",n=this.head,o=0;do{const i=n.data;if(!(t>i.length)){t===i.length?(e+=i,++o,n.next?this.head=n.next:this.head=this.tail=null):(e+=r(i,0,t),this.head=n,n.data=r(i,t));break}e+=i,t-=i.length,++o}while(null!==(n=n.next));return this.length-=o,e}_getBuffer(t){const e=s.allocUnsafe(t),n=t;let r=this.head,o=0;do{const s=r.data;if(!(t>s.length)){t===s.length?(i(e,s,n-t),++o,r.next?this.head=r.next:this.head=this.tail=null):(i(e,new a(s.buffer,s.byteOffset,t),n-t),this.head=r,r.data=s.slice(t));break}i(e,s,n-t),t-=s.length,++o}while(null!==(r=r.next));return this.length-=o,e}[Symbol.for("nodejs.util.inspect.custom")](t,e){return u(this,{...e,depth:0,customInspect:!1})}}},818:(t,e,n)=>{const{pipeline:r}=n(754),o=n(182),{destroyer:i}=n(230),{isNodeStream:a,isReadable:s,isWritable:u}=n(132),{AbortError:l,codes:{ERR_INVALID_ARG_VALUE:c,ERR_MISSING_ARGS:f}}=n(141);t.exports=function(...t){if(0===t.length)throw new f("streams");if(1===t.length)return o.from(t[0]);const e=[...t];if("function"==typeof t[0]&&(t[0]=o.from(t[0])),"function"==typeof t[t.length-1]){const e=t.length-1;t[e]=o.from(t[e])}for(let n=0;n<t.length;++n)if(a(t[n])){if(n<t.length-1&&!s(t[n]))throw new c(`streams[${n}]`,e[n],"must be readable");if(n>0&&!u(t[n]))throw new c(`streams[${n}]`,e[n],"must be writable")}let n,d,h,p,g;const y=t[0],m=r(t,(function(t){const e=p;p=null,e?e(t):t?g.destroy(t):b||v||g.destroy()})),v=!!u(y),b=!!s(m);return g=new o({writableObjectMode:!(null==y||!y.writableObjectMode),readableObjectMode:!(null==m||!m.writableObjectMode),writable:v,readable:b}),v&&(g._write=function(t,e,r){y.write(t,e)?r():n=r},g._final=function(t){y.end(),d=t},y.on("drain",(function(){if(n){const t=n;n=null,t()}})),m.on("finish",(function(){if(d){const t=d;d=null,t()}}))),b&&(m.on("readable",(function(){if(h){const t=h;h=null,t()}})),m.on("end",(function(){g.push(null)})),g._read=function(){for(;;){const t=m.read();if(null===t)return void(h=g._read);if(!g.push(t))return}}),g._destroy=function(t,e){t||null===p||(t=new l),h=null,n=null,d=null,null===p?e(t):(p=e,i(m,t))},g}},230:(t,e,n)=>{const r=n(533),{aggregateTwoErrors:o,codes:{ERR_MULTIPLE_CALLBACK:i},AbortError:a}=n(141),{Symbol:s}=n(191),{kDestroyed:u,isDestroyed:l,isFinished:c,isServerRequest:f}=n(132),d=s("kDestroy"),h=s("kConstruct");function p(t,e,n){t&&(t.stack,e&&!e.errored&&(e.errored=t),n&&!n.errored&&(n.errored=t))}function g(t,e,n){let o=!1;function i(e){if(o)return;o=!0;const i=t._readableState,a=t._writableState;p(e,a,i),a&&(a.closed=!0),i&&(i.closed=!0),"function"==typeof n&&n(e),e?r.nextTick(y,t,e):r.nextTick(m,t)}try{t._destroy(e||null,i)}catch(e){i(e)}}function y(t,e){v(t,e),m(t)}function m(t){const e=t._readableState,n=t._writableState;n&&(n.closeEmitted=!0),e&&(e.closeEmitted=!0),(n&&n.emitClose||e&&e.emitClose)&&t.emit("close")}function v(t,e){const n=t._readableState,r=t._writableState;r&&r.errorEmitted||n&&n.errorEmitted||(r&&(r.errorEmitted=!0),n&&(n.errorEmitted=!0),t.emit("error",e))}function b(t,e,n){const o=t._readableState,i=t._writableState;if(i&&i.destroyed||o&&o.destroyed)return this;o&&o.autoDestroy||i&&i.autoDestroy?t.destroy(e):e&&(e.stack,i&&!i.errored&&(i.errored=e),o&&!o.errored&&(o.errored=e),n?r.nextTick(v,t,e):v(t,e))}function w(t){let e=!1;function n(n){if(e)return void b(t,null!=n?n:new i);e=!0;const o=t._readableState,a=t._writableState,s=a||o;o&&(o.constructed=!0),a&&(a.constructed=!0),s.destroyed?t.emit(d,n):n?b(t,n,!0):r.nextTick(_,t)}try{t._construct(n)}catch(t){n(t)}}function _(t){t.emit(h)}function E(t){return t&&t.setHeader&&"function"==typeof t.abort}function A(t){t.emit("close")}function S(t,e){t.emit("error",e),r.nextTick(A,t)}t.exports={construct:function(t,e){if("function"!=typeof t._construct)return;const n=t._readableState,o=t._writableState;n&&(n.constructed=!1),o&&(o.constructed=!1),t.once(h,e),t.listenerCount(h)>1||r.nextTick(w,t)},destroyer:function(t,e){t&&!l(t)&&(e||c(t)||(e=new a),f(t)?(t.socket=null,t.destroy(e)):E(t)?t.abort():E(t.req)?t.req.abort():"function"==typeof t.destroy?t.destroy(e):"function"==typeof t.close?t.close():e?r.nextTick(S,t,e):r.nextTick(A,t),t.destroyed||(t[u]=!0))},destroy:function(t,e){const n=this._readableState,r=this._writableState,i=r||n;return r&&r.destroyed||n&&n.destroyed?("function"==typeof e&&e(),this):(p(t,r,n),r&&(r.destroyed=!0),n&&(n.destroyed=!0),i.constructed?g(this,t,e):this.once(d,(function(n){g(this,o(n,t),e)})),this)},undestroy:function(){const t=this._readableState,e=this._writableState;t&&(t.constructed=!0,t.closed=!1,t.closeEmitted=!1,t.destroyed=!1,t.errored=null,t.errorEmitted=!1,t.reading=!1,t.ended=!1===t.readable,t.endEmitted=!1===t.readable),e&&(e.constructed=!0,e.destroyed=!1,e.closed=!1,e.closeEmitted=!1,e.errored=null,e.errorEmitted=!1,e.finalCalled=!1,e.prefinished=!1,e.ended=!1===e.writable,e.ending=!1===e.writable,e.finished=!1===e.writable)},errorOrDestroy:b}},182:(t,e,n)=>{const{ObjectDefineProperties:r,ObjectGetOwnPropertyDescriptor:o,ObjectKeys:i,ObjectSetPrototypeOf:a}=n(191);t.exports=l;const s=n(858),u=n(373);a(l.prototype,s.prototype),a(l,s);{const t=i(u.prototype);for(let e=0;e<t.length;e++){const n=t[e];l.prototype[n]||(l.prototype[n]=u.prototype[n])}}function l(t){if(!(this instanceof l))return new l(t);s.call(this,t),u.call(this,t),t?(this.allowHalfOpen=!1!==t.allowHalfOpen,!1===t.readable&&(this._readableState.readable=!1,this._readableState.ended=!0,this._readableState.endEmitted=!0),!1===t.writable&&(this._writableState.writable=!1,this._writableState.ending=!0,this._writableState.ended=!0,this._writableState.finished=!0)):this.allowHalfOpen=!0}let c,f;function d(){return void 0===c&&(c={}),c}r(l.prototype,{writable:{__proto__:null,...o(u.prototype,"writable")},writableHighWaterMark:{__proto__:null,...o(u.prototype,"writableHighWaterMark")},writableObjectMode:{__proto__:null,...o(u.prototype,"writableObjectMode")},writableBuffer:{__proto__:null,...o(u.prototype,"writableBuffer")},writableLength:{__proto__:null,...o(u.prototype,"writableLength")},writableFinished:{__proto__:null,...o(u.prototype,"writableFinished")},writableCorked:{__proto__:null,...o(u.prototype,"writableCorked")},writableEnded:{__proto__:null,...o(u.prototype,"writableEnded")},writableNeedDrain:{__proto__:null,...o(u.prototype,"writableNeedDrain")},destroyed:{__proto__:null,get(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set(t){this._readableState&&this._writableState&&(this._readableState.destroyed=t,this._writableState.destroyed=t)}}}),l.fromWeb=function(t,e){return d().newStreamDuplexFromReadableWritablePair(t,e)},l.toWeb=function(t){return d().newReadableWritablePairFromDuplex(t)},l.from=function(t){return f||(f=n(749)),f(t,"body")}},749:(t,e,n)=>{const r=n(533),o=n(485),{isReadable:i,isWritable:a,isIterable:s,isNodeStream:u,isReadableNodeStream:l,isWritableNodeStream:c,isDuplexNodeStream:f}=n(132),d=n(86),{AbortError:h,codes:{ERR_INVALID_ARG_TYPE:p,ERR_INVALID_RETURN_VALUE:g}}=n(141),{destroyer:y}=n(230),m=n(182),v=n(858),{createDeferredPromise:b}=n(775),w=n(913),_=globalThis.Blob||o.Blob,E=void 0!==_?function(t){return t instanceof _}:function(t){return!1},A=globalThis.AbortController||n(876).AbortController,{FunctionPrototypeCall:S}=n(191);class I extends m{constructor(t){super(t),!1===(null==t?void 0:t.readable)&&(this._readableState.readable=!1,this._readableState.ended=!0,this._readableState.endEmitted=!0),!1===(null==t?void 0:t.writable)&&(this._writableState.writable=!1,this._writableState.ending=!0,this._writableState.ended=!0,this._writableState.finished=!0)}}function T(t){const e=t.readable&&"function"!=typeof t.readable.read?v.wrap(t.readable):t.readable,n=t.writable;let r,o,s,u,l,c=!!i(e),f=!!a(n);function p(t){const e=u;u=null,e?e(t):t?l.destroy(t):c||f||l.destroy()}return l=new I({readableObjectMode:!(null==e||!e.readableObjectMode),writableObjectMode:!(null==n||!n.writableObjectMode),readable:c,writable:f}),f&&(d(n,(t=>{f=!1,t&&y(e,t),p(t)})),l._write=function(t,e,o){n.write(t,e)?o():r=o},l._final=function(t){n.end(),o=t},n.on("drain",(function(){if(r){const t=r;r=null,t()}})),n.on("finish",(function(){if(o){const t=o;o=null,t()}}))),c&&(d(e,(t=>{c=!1,t&&y(e,t),p(t)})),e.on("readable",(function(){if(s){const t=s;s=null,t()}})),e.on("end",(function(){l.push(null)})),l._read=function(){for(;;){const t=e.read();if(null===t)return void(s=l._read);if(!l.push(t))return}}),l._destroy=function(t,i){t||null===u||(t=new h),s=null,r=null,o=null,null===u?i(t):(u=i,y(n,t),y(e,t))},l}t.exports=function t(e,n){if(f(e))return e;if(l(e))return T({readable:e});if(c(e))return T({writable:e});if(u(e))return T({writable:!1,readable:!1});if("function"==typeof e){const{value:t,write:o,final:i,destroy:a}=function(t){let{promise:e,resolve:n}=b();const o=new A,i=o.signal;return{value:t(async function*(){for(;;){const t=e;e=null;const{chunk:o,done:a,cb:s}=await t;if(r.nextTick(s),a)return;if(i.aborted)throw new h(void 0,{cause:i.reason});({promise:e,resolve:n}=b()),yield o}}(),{signal:i}),write(t,e,r){const o=n;n=null,o({chunk:t,done:!1,cb:r})},final(t){const e=n;n=null,e({done:!0,cb:t})},destroy(t,e){o.abort(),e(t)}}}(e);if(s(t))return w(I,t,{objectMode:!0,write:o,final:i,destroy:a});const u=null==t?void 0:t.then;if("function"==typeof u){let e;const n=S(u,t,(t=>{if(null!=t)throw new g("nully","body",t)}),(t=>{y(e,t)}));return e=new I({objectMode:!0,readable:!1,write:o,final(t){i((async()=>{try{await n,r.nextTick(t,null)}catch(e){r.nextTick(t,e)}}))},destroy:a})}throw new g("Iterable, AsyncIterable or AsyncFunction",n,t)}if(E(e))return t(e.arrayBuffer());if(s(e))return w(I,e,{objectMode:!0,writable:!1});if("object"==typeof(null==e?void 0:e.writable)||"object"==typeof(null==e?void 0:e.readable)){return T({readable:null!=e&&e.readable?l(null==e?void 0:e.readable)?null==e?void 0:e.readable:t(e.readable):void 0,writable:null!=e&&e.writable?c(null==e?void 0:e.writable)?null==e?void 0:e.writable:t(e.writable):void 0})}const o=null==e?void 0:e.then;if("function"==typeof o){let t;return S(o,e,(e=>{null!=e&&t.push(e),t.push(null)}),(e=>{y(t,e)})),t=new I({objectMode:!0,writable:!1,read(){}})}throw new p(n,["Blob","ReadableStream","WritableStream","Stream","Iterable","AsyncIterable","Function","{ readable, writable } pair","Promise"],e)}},86:(t,e,n)=>{const r=n(533),{AbortError:o,codes:i}=n(141),{ERR_INVALID_ARG_TYPE:a,ERR_STREAM_PREMATURE_CLOSE:s}=i,{kEmptyObject:u,once:l}=n(775),{validateAbortSignal:c,validateFunction:f,validateObject:d}=n(904),{Promise:h}=n(191),{isClosed:p,isReadable:g,isReadableNodeStream:y,isReadableFinished:m,isReadableErrored:v,isWritable:b,isWritableNodeStream:w,isWritableFinished:_,isWritableErrored:E,isNodeStream:A,willEmitClose:S}=n(132);function I(t){return t.setHeader&&"function"==typeof t.abort}const T=()=>{};function R(t,e,n){var i,h;2===arguments.length?(n=e,e=u):null==e?e=u:d(e,"options"),f(n,"callback"),c(e.signal,"options.signal"),n=l(n);const R=null!==(i=e.readable)&&void 0!==i?i:y(t),x=null!==(h=e.writable)&&void 0!==h?h:w(t);if(!A(t))throw new a("stream","Stream",t);const C=t._writableState,B=t._readableState,k=()=>{t.writable||U()};let O=S(t)&&y(t)===R&&w(t)===x,L=_(t,!1);const U=()=>{L=!0,t.destroyed&&(O=!1),(!O||t.readable&&!R)&&(R&&!j||n.call(t))};let j=m(t,!1);const N=()=>{j=!0,t.destroyed&&(O=!1),(!O||t.writable&&!x)&&(x&&!L||n.call(t))},M=e=>{n.call(t,e)};let P=p(t);const $=()=>{P=!0;const e=E(t)||v(t);return e&&"boolean"!=typeof e?n.call(t,e):R&&!j&&y(t,!0)&&!m(t,!1)?n.call(t,new s):!x||L||_(t,!1)?void n.call(t):n.call(t,new s)},D=()=>{t.req.on("finish",U)};I(t)?(t.on("complete",U),O||t.on("abort",$),t.req?D():t.on("request",D)):x&&!C&&(t.on("end",k),t.on("close",k)),O||"boolean"!=typeof t.aborted||t.on("aborted",$),t.on("end",N),t.on("finish",U),!1!==e.error&&t.on("error",M),t.on("close",$),P?r.nextTick($):null!=C&&C.errorEmitted||null!=B&&B.errorEmitted?O||r.nextTick($):(R||O&&!g(t)||!L&&!1!==b(t))&&(x||O&&!b(t)||!j&&!1!==g(t))?B&&t.req&&t.aborted&&r.nextTick($):r.nextTick($);const W=()=>{n=T,t.removeListener("aborted",$),t.removeListener("complete",U),t.removeListener("abort",$),t.removeListener("request",D),t.req&&t.req.removeListener("finish",U),t.removeListener("end",k),t.removeListener("close",k),t.removeListener("finish",U),t.removeListener("end",N),t.removeListener("error",M),t.removeListener("close",$)};if(e.signal&&!P){const i=()=>{const r=n;W(),r.call(t,new o(void 0,{cause:e.signal.reason}))};if(e.signal.aborted)r.nextTick(i);else{const r=n;n=l(((...n)=>{e.signal.removeEventListener("abort",i),r.apply(t,n)})),e.signal.addEventListener("abort",i)}}return W}t.exports=R,t.exports.finished=function(t,e){return new h(((n,r)=>{R(t,e,(t=>{t?r(t):n()}))}))}},913:(t,e,n)=>{const r=n(533),{PromisePrototypeThen:o,SymbolAsyncIterator:i,SymbolIterator:a}=n(191),{Buffer:s}=n(485),{ERR_INVALID_ARG_TYPE:u,ERR_STREAM_NULL_VALUES:l}=n(141).codes;t.exports=function(t,e,n){let c,f;if("string"==typeof e||e instanceof s)return new t({objectMode:!0,...n,read(){this.push(e),this.push(null)}});if(e&&e[i])f=!0,c=e[i]();else{if(!e||!e[a])throw new u("iterable",["Iterable"],e);f=!1,c=e[a]()}const d=new t({objectMode:!0,highWaterMark:1,...n});let h=!1;return d._read=function(){h||(h=!0,async function(){for(;;){try{const{value:t,done:e}=f?await c.next():c.next();if(e)d.push(null);else{const e=t&&"function"==typeof t.then?await t:t;if(null===e)throw h=!1,new l;if(d.push(e))continue;h=!1}}catch(t){d.destroy(t)}break}}())},d._destroy=function(t,e){o(async function(t){const e=null!=t,n="function"==typeof c.throw;if(e&&n){const{value:e,done:n}=await c.throw(t);if(await e,n)return}if("function"==typeof c.return){const{value:t}=await c.return();await t}}(t),(()=>r.nextTick(e,t)),(n=>r.nextTick(e,n||t)))},d}},200:(t,e,n)=>{const{ArrayIsArray:r,ObjectSetPrototypeOf:o}=n(191),{EventEmitter:i}=n(465);function a(t){i.call(this,t)}function s(t,e,n){if("function"==typeof t.prependListener)return t.prependListener(e,n);t._events&&t._events[e]?r(t._events[e])?t._events[e].unshift(n):t._events[e]=[n,t._events[e]]:t.on(e,n)}o(a.prototype,i.prototype),o(a,i),a.prototype.pipe=function(t,e){const n=this;function r(e){t.writable&&!1===t.write(e)&&n.pause&&n.pause()}function o(){n.readable&&n.resume&&n.resume()}n.on("data",r),t.on("drain",o),t._isStdio||e&&!1===e.end||(n.on("end",u),n.on("close",l));let a=!1;function u(){a||(a=!0,t.end())}function l(){a||(a=!0,"function"==typeof t.destroy&&t.destroy())}function c(t){f(),0===i.listenerCount(this,"error")&&this.emit("error",t)}function f(){n.removeListener("data",r),t.removeListener("drain",o),n.removeListener("end",u),n.removeListener("close",l),n.removeListener("error",c),t.removeListener("error",c),n.removeListener("end",f),n.removeListener("close",f),t.removeListener("close",f)}return s(n,"error",c),s(t,"error",c),n.on("end",f),n.on("close",f),t.on("close",f),t.emit("pipe",n),t},t.exports={Stream:a,prependListener:s}},554:(t,e,n)=>{const r=globalThis.AbortController||n(876).AbortController,{codes:{ERR_INVALID_ARG_TYPE:o,ERR_MISSING_ARGS:i,ERR_OUT_OF_RANGE:a},AbortError:s}=n(141),{validateAbortSignal:u,validateInteger:l,validateObject:c}=n(904),f=n(191).Symbol("kWeak"),{finished:d}=n(86),{ArrayPrototypePush:h,MathFloor:p,Number:g,NumberIsNaN:y,Promise:m,PromiseReject:v,PromisePrototypeThen:b,Symbol:w}=n(191),_=w("kEmpty"),E=w("kEof");function A(t,e){if("function"!=typeof t)throw new o("fn",["Function","AsyncFunction"],t);null!=e&&c(e,"options"),null!=(null==e?void 0:e.signal)&&u(e.signal,"options.signal");let n=1;return null!=(null==e?void 0:e.concurrency)&&(n=p(e.concurrency)),l(n,"concurrency",1),async function*(){var o,i;const a=new r,u=this,l=[],c=a.signal,f={signal:c},d=()=>a.abort();let h,p;null!=e&&null!==(o=e.signal)&&void 0!==o&&o.aborted&&d(),null==e||null===(i=e.signal)||void 0===i||i.addEventListener("abort",d);let g=!1;function y(){g=!0}!async function(){try{for await(let e of u){var r;if(g)return;if(c.aborted)throw new s;try{e=t(e,f)}catch(t){e=v(t)}e!==_&&("function"==typeof(null===(r=e)||void 0===r?void 0:r.catch)&&e.catch(y),l.push(e),h&&(h(),h=null),!g&&l.length&&l.length>=n&&await new m((t=>{p=t})))}l.push(E)}catch(t){const e=v(t);b(e,void 0,y),l.push(e)}finally{var o;g=!0,h&&(h(),h=null),null==e||null===(o=e.signal)||void 0===o||o.removeEventListener("abort",d)}}();try{for(;;){for(;l.length>0;){const t=await l[0];if(t===E)return;if(c.aborted)throw new s;t!==_&&(yield t),l.shift(),p&&(p(),p=null)}await new m((t=>{h=t}))}}finally{a.abort(),g=!0,p&&(p(),p=null)}}.call(this)}async function S(t,e){for await(const n of I.call(this,t,e))return!0;return!1}function I(t,e){if("function"!=typeof t)throw new o("fn",["Function","AsyncFunction"],t);return A.call(this,(async function(e,n){return await t(e,n)?e:_}),e)}class T extends i{constructor(){super("reduce"),this.message="Reduce of an empty stream requires an initial value"}}function R(t){if(t=g(t),y(t))return 0;if(t<0)throw new a("number",">= 0",t);return t}t.exports.streamReturningOperators={asIndexedPairs:function(t){return null!=t&&c(t,"options"),null!=(null==t?void 0:t.signal)&&u(t.signal,"options.signal"),async function*(){let e=0;for await(const r of this){var n;if(null!=t&&null!==(n=t.signal)&&void 0!==n&&n.aborted)throw new s({cause:t.signal.reason});yield[e++,r]}}.call(this)},drop:function(t,e){return null!=e&&c(e,"options"),null!=(null==e?void 0:e.signal)&&u(e.signal,"options.signal"),t=R(t),async function*(){var n;if(null!=e&&null!==(n=e.signal)&&void 0!==n&&n.aborted)throw new s;for await(const n of this){var r;if(null!=e&&null!==(r=e.signal)&&void 0!==r&&r.aborted)throw new s;t--<=0&&(yield n)}}.call(this)},filter:I,flatMap:function(t,e){const n=A.call(this,t,e);return async function*(){for await(const t of n)yield*t}.call(this)},map:A,take:function(t,e){return null!=e&&c(e,"options"),null!=(null==e?void 0:e.signal)&&u(e.signal,"options.signal"),t=R(t),async function*(){var n;if(null!=e&&null!==(n=e.signal)&&void 0!==n&&n.aborted)throw new s;for await(const n of this){var r;if(null!=e&&null!==(r=e.signal)&&void 0!==r&&r.aborted)throw new s;if(!(t-- >0))return;yield n}}.call(this)}},t.exports.promiseReturningOperators={every:async function(t,e){if("function"!=typeof t)throw new o("fn",["Function","AsyncFunction"],t);return!await S.call(this,(async(...e)=>!await t(...e)),e)},forEach:async function(t,e){if("function"!=typeof t)throw new o("fn",["Function","AsyncFunction"],t);for await(const n of A.call(this,(async function(e,n){return await t(e,n),_}),e));},reduce:async function(t,e,n){var i;if("function"!=typeof t)throw new o("reducer",["Function","AsyncFunction"],t);null!=n&&c(n,"options"),null!=(null==n?void 0:n.signal)&&u(n.signal,"options.signal");let a=arguments.length>1;if(null!=n&&null!==(i=n.signal)&&void 0!==i&&i.aborted){const t=new s(void 0,{cause:n.signal.reason});throw this.once("error",(()=>{})),await d(this.destroy(t)),t}const l=new r,h=l.signal;if(null!=n&&n.signal){const t={once:!0,[f]:this};n.signal.addEventListener("abort",(()=>l.abort()),t)}let p=!1;try{for await(const r of this){var g;if(p=!0,null!=n&&null!==(g=n.signal)&&void 0!==g&&g.aborted)throw new s;a?e=await t(e,r,{signal:h}):(e=r,a=!0)}if(!p&&!a)throw new T}finally{l.abort()}return e},toArray:async function(t){null!=t&&c(t,"options"),null!=(null==t?void 0:t.signal)&&u(t.signal,"options.signal");const e=[];for await(const r of this){var n;if(null!=t&&null!==(n=t.signal)&&void 0!==n&&n.aborted)throw new s(void 0,{cause:t.signal.reason});h(e,r)}return e},some:S,find:async function(t,e){for await(const n of I.call(this,t,e))return n}}},467:(t,e,n)=>{const{ObjectSetPrototypeOf:r}=n(191);t.exports=i;const o=n(210);function i(t){if(!(this instanceof i))return new i(t);o.call(this,t)}r(i.prototype,o.prototype),r(i,o),i.prototype._transform=function(t,e,n){n(null,t)}},754:(t,e,n)=>{const r=n(533),{ArrayIsArray:o,Promise:i,SymbolAsyncIterator:a}=n(191),s=n(86),{once:u}=n(775),l=n(230),c=n(182),{aggregateTwoErrors:f,codes:{ERR_INVALID_ARG_TYPE:d,ERR_INVALID_RETURN_VALUE:h,ERR_MISSING_ARGS:p,ERR_STREAM_DESTROYED:g,ERR_STREAM_PREMATURE_CLOSE:y},AbortError:m}=n(141),{validateFunction:v,validateAbortSignal:b}=n(904),{isIterable:w,isReadable:_,isReadableNodeStream:E,isNodeStream:A}=n(132),S=globalThis.AbortController||n(876).AbortController;let I,T;function R(t,e,n){let r=!1;t.on("close",(()=>{r=!0}));return{destroy:e=>{r||(r=!0,l.destroyer(t,e||new g("pipe")))},cleanup:s(t,{readable:e,writable:n},(t=>{r=!t}))}}function x(t){if(w(t))return t;if(E(t))return async function*(t){T||(T=n(858));yield*T.prototype[a].call(t)}(t);throw new d("val",["Readable","Iterable","AsyncIterable"],t)}async function C(t,e,n,{end:r}){let o,a=null;const u=t=>{if(t&&(o=t),a){const t=a;a=null,t()}},l=()=>new i(((t,e)=>{o?e(o):a=()=>{o?e(o):t()}}));e.on("drain",u);const c=s(e,{readable:!1},u);try{e.writableNeedDrain&&await l();for await(const n of t)e.write(n)||await l();r&&e.end(),await l(),n()}catch(t){n(o!==t?f(o,t):t)}finally{c(),e.off("drain",u)}}function B(t,e,i){if(1===t.length&&o(t[0])&&(t=t[0]),t.length<2)throw new p("streams");const a=new S,s=a.signal,u=null==i?void 0:i.signal,l=[];function f(){L(new m)}let g,y;b(u,"options.signal"),null==u||u.addEventListener("abort",f);const v=[];let T,B=0;function O(t){L(t,0==--B)}function L(t,n){if(!t||g&&"ERR_STREAM_PREMATURE_CLOSE"!==g.code||(g=t),g||n){for(;v.length;)v.shift()(g);null==u||u.removeEventListener("abort",f),a.abort(),n&&(g||l.forEach((t=>t())),r.nextTick(e,g,y))}}for(let N=0;N<t.length;N++){const M=t[N],P=N<t.length-1,$=N>0,D=P||!1!==(null==i?void 0:i.end),W=N===t.length-1;if(A(M)){if(D){const{destroy:F,cleanup:z}=R(M,P,$);v.push(F),_(M)&&W&&l.push(z)}function U(t){t&&"AbortError"!==t.name&&"ERR_STREAM_PREMATURE_CLOSE"!==t.code&&O(t)}M.on("error",U),_(M)&&W&&l.push((()=>{M.removeListener("error",U)}))}if(0===N)if("function"==typeof M){if(T=M({signal:s}),!w(T))throw new h("Iterable, AsyncIterable or Stream","source",T)}else T=w(M)||E(M)?M:c.from(M);else if("function"==typeof M)if(T=x(T),T=M(T,{signal:s}),P){if(!w(T,!0))throw new h("AsyncIterable",`transform[${N-1}]`,T)}else{var j;I||(I=n(467));const q=new I({objectMode:!0}),H=null===(j=T)||void 0===j?void 0:j.then;if("function"==typeof H)B++,H.call(T,(t=>{y=t,null!=t&&q.write(t),D&&q.end(),r.nextTick(O)}),(t=>{q.destroy(t),r.nextTick(O,t)}));else{if(!w(T,!0))throw new h("AsyncIterable or Promise","destination",T);B++,C(T,q,O,{end:D})}T=q;const{destroy:V,cleanup:G}=R(T,!1,!0);v.push(V),W&&l.push(G)}else if(A(M)){if(E(T)){B+=2;const J=k(T,M,O,{end:D});_(M)&&W&&l.push(J)}else{if(!w(T))throw new d("val",["Readable","Iterable","AsyncIterable"],T);B++,C(T,M,O,{end:D})}T=M}else T=c.from(M)}return(null!=s&&s.aborted||null!=u&&u.aborted)&&r.nextTick(f),T}function k(t,e,n,{end:r}){let o=!1;return e.on("close",(()=>{o||n(new y)})),t.pipe(e,{end:r}),r?t.once("end",(()=>{o=!0,e.end()})):n(),s(t,{readable:!0,writable:!1},(e=>{const r=t._readableState;e&&"ERR_STREAM_PREMATURE_CLOSE"===e.code&&r&&r.ended&&!r.errored&&!r.errorEmitted?t.once("end",n).once("error",n):n(e)})),s(e,{readable:!1,writable:!0},n)}t.exports={pipelineImpl:B,pipeline:function(...t){return B(t,u(function(t){return v(t[t.length-1],"streams[stream.length - 1]"),t.pop()}(t)))}}},858:(t,e,n)=>{const r=n(533),{ArrayPrototypeIndexOf:o,NumberIsInteger:i,NumberIsNaN:a,NumberParseInt:s,ObjectDefineProperties:u,ObjectKeys:l,ObjectSetPrototypeOf:c,Promise:f,SafeSet:d,SymbolAsyncIterator:h,Symbol:p}=n(191);t.exports=$,$.ReadableState=P;const{EventEmitter:g}=n(465),{Stream:y,prependListener:m}=n(200),{Buffer:v}=n(485),{addAbortSignal:b}=n(374),w=n(86);let _=n(775).debuglog("stream",(t=>{_=t}));const E=n(616),A=n(230),{getHighWaterMark:S,getDefaultHighWaterMark:I}=n(498),{aggregateTwoErrors:T,codes:{ERR_INVALID_ARG_TYPE:R,ERR_METHOD_NOT_IMPLEMENTED:x,ERR_OUT_OF_RANGE:C,ERR_STREAM_PUSH_AFTER_EOF:B,ERR_STREAM_UNSHIFT_AFTER_END_EVENT:k}}=n(141),{validateObject:O}=n(904),L=p("kPaused"),{StringDecoder:U}=n(464),j=n(913);c($.prototype,y.prototype),c($,y);const N=()=>{},{errorOrDestroy:M}=A;function P(t,e,r){"boolean"!=typeof r&&(r=e instanceof n(182)),this.objectMode=!(!t||!t.objectMode),r&&(this.objectMode=this.objectMode||!(!t||!t.readableObjectMode)),this.highWaterMark=t?S(this,t,"readableHighWaterMark",r):I(!1),this.buffer=new E,this.length=0,this.pipes=[],this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.constructed=!0,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this[L]=null,this.errorEmitted=!1,this.emitClose=!t||!1!==t.emitClose,this.autoDestroy=!t||!1!==t.autoDestroy,this.destroyed=!1,this.errored=null,this.closed=!1,this.closeEmitted=!1,this.defaultEncoding=t&&t.defaultEncoding||"utf8",this.awaitDrainWriters=null,this.multiAwaitDrain=!1,this.readingMore=!1,this.dataEmitted=!1,this.decoder=null,this.encoding=null,t&&t.encoding&&(this.decoder=new U(t.encoding),this.encoding=t.encoding)}function $(t){if(!(this instanceof $))return new $(t);const e=this instanceof n(182);this._readableState=new P(t,this,e),t&&("function"==typeof t.read&&(this._read=t.read),"function"==typeof t.destroy&&(this._destroy=t.destroy),"function"==typeof t.construct&&(this._construct=t.construct),t.signal&&!e&&b(t.signal,this)),y.call(this,t),A.construct(this,(()=>{this._readableState.needReadable&&H(this,this._readableState)}))}function D(t,e,n,r){_("readableAddChunk",e);const o=t._readableState;let i;if(o.objectMode||("string"==typeof e?(n=n||o.defaultEncoding,o.encoding!==n&&(r&&o.encoding?e=v.from(e,n).toString(o.encoding):(e=v.from(e,n),n=""))):e instanceof v?n="":y._isUint8Array(e)?(e=y._uint8ArrayToBuffer(e),n=""):null!=e&&(i=new R("chunk",["string","Buffer","Uint8Array"],e))),i)M(t,i);else if(null===e)o.reading=!1,function(t,e){if(_("onEofChunk"),e.ended)return;if(e.decoder){const t=e.decoder.end();t&&t.length&&(e.buffer.push(t),e.length+=e.objectMode?1:t.length)}e.ended=!0,e.sync?z(t):(e.needReadable=!1,e.emittedReadable=!0,q(t))}(t,o);else if(o.objectMode||e&&e.length>0)if(r)if(o.endEmitted)M(t,new k);else{if(o.destroyed||o.errored)return!1;W(t,o,e,!0)}else if(o.ended)M(t,new B);else{if(o.destroyed||o.errored)return!1;o.reading=!1,o.decoder&&!n?(e=o.decoder.write(e),o.objectMode||0!==e.length?W(t,o,e,!1):H(t,o)):W(t,o,e,!1)}else r||(o.reading=!1,H(t,o));return!o.ended&&(o.length<o.highWaterMark||0===o.length)}function W(t,e,n,r){e.flowing&&0===e.length&&!e.sync&&t.listenerCount("data")>0?(e.multiAwaitDrain?e.awaitDrainWriters.clear():e.awaitDrainWriters=null,e.dataEmitted=!0,t.emit("data",n)):(e.length+=e.objectMode?1:n.length,r?e.buffer.unshift(n):e.buffer.push(n),e.needReadable&&z(t)),H(t,e)}$.prototype.destroy=A.destroy,$.prototype._undestroy=A.undestroy,$.prototype._destroy=function(t,e){e(t)},$.prototype[g.captureRejectionSymbol]=function(t){this.destroy(t)},$.prototype.push=function(t,e){return D(this,t,e,!1)},$.prototype.unshift=function(t,e){return D(this,t,e,!0)},$.prototype.isPaused=function(){const t=this._readableState;return!0===t[L]||!1===t.flowing},$.prototype.setEncoding=function(t){const e=new U(t);this._readableState.decoder=e,this._readableState.encoding=this._readableState.decoder.encoding;const n=this._readableState.buffer;let r="";for(const t of n)r+=e.write(t);return n.clear(),""!==r&&n.push(r),this._readableState.length=r.length,this};function F(t,e){return t<=0||0===e.length&&e.ended?0:e.objectMode?1:a(t)?e.flowing&&e.length?e.buffer.first().length:e.length:t<=e.length?t:e.ended?e.length:0}function z(t){const e=t._readableState;_("emitReadable",e.needReadable,e.emittedReadable),e.needReadable=!1,e.emittedReadable||(_("emitReadable",e.flowing),e.emittedReadable=!0,r.nextTick(q,t))}function q(t){const e=t._readableState;_("emitReadable_",e.destroyed,e.length,e.ended),e.destroyed||e.errored||!e.length&&!e.ended||(t.emit("readable"),e.emittedReadable=!1),e.needReadable=!e.flowing&&!e.ended&&e.length<=e.highWaterMark,K(t)}function H(t,e){!e.readingMore&&e.constructed&&(e.readingMore=!0,r.nextTick(V,t,e))}function V(t,e){for(;!e.reading&&!e.ended&&(e.length<e.highWaterMark||e.flowing&&0===e.length);){const n=e.length;if(_("maybeReadMore read 0"),t.read(0),n===e.length)break}e.readingMore=!1}function G(t){const e=t._readableState;e.readableListening=t.listenerCount("readable")>0,e.resumeScheduled&&!1===e[L]?e.flowing=!0:t.listenerCount("data")>0?t.resume():e.readableListening||(e.flowing=null)}function J(t){_("readable nexttick read 0"),t.read(0)}function Y(t,e){_("resume",e.reading),e.reading||t.read(0),e.resumeScheduled=!1,t.emit("resume"),K(t),e.flowing&&!e.reading&&t.read(0)}function K(t){const e=t._readableState;for(_("flow",e.flowing);e.flowing&&null!==t.read(););}function X(t,e){"function"!=typeof t.read&&(t=$.wrap(t,{objectMode:!0}));const n=async function*(t,e){let n,r=N;function o(e){this===t?(r(),r=N):r=e}t.on("readable",o);const i=w(t,{writable:!1},(t=>{n=t?T(n,t):null,r(),r=N}));try{for(;;){const e=t.destroyed?null:t.read();if(null!==e)yield e;else{if(n)throw n;if(null===n)return;await new f(o)}}}catch(t){throw n=T(n,t),n}finally{!n&&!1===(null==e?void 0:e.destroyOnReturn)||void 0!==n&&!t._readableState.autoDestroy?(t.off("readable",o),i()):A.destroyer(t,null)}}(t,e);return n.stream=t,n}function Z(t,e){if(0===e.length)return null;let n;return e.objectMode?n=e.buffer.shift():!t||t>=e.length?(n=e.decoder?e.buffer.join(""):1===e.buffer.length?e.buffer.first():e.buffer.concat(e.length),e.buffer.clear()):n=e.buffer.consume(t,e.decoder),n}function Q(t){const e=t._readableState;_("endReadable",e.endEmitted),e.endEmitted||(e.ended=!0,r.nextTick(tt,e,t))}function tt(t,e){if(_("endReadableNT",t.endEmitted,t.length),!t.errored&&!t.closeEmitted&&!t.endEmitted&&0===t.length)if(t.endEmitted=!0,e.emit("end"),e.writable&&!1===e.allowHalfOpen)r.nextTick(et,e);else if(t.autoDestroy){const t=e._writableState;(!t||t.autoDestroy&&(t.finished||!1===t.writable))&&e.destroy()}}function et(t){t.writable&&!t.writableEnded&&!t.destroyed&&t.end()}let nt;function rt(){return void 0===nt&&(nt={}),nt}$.prototype.read=function(t){_("read",t),void 0===t?t=NaN:i(t)||(t=s(t,10));const e=this._readableState,n=t;if(t>e.highWaterMark&&(e.highWaterMark=function(t){if(t>1073741824)throw new C("size","<= 1GiB",t);return t--,t|=t>>>1,t|=t>>>2,t|=t>>>4,t|=t>>>8,t|=t>>>16,++t}(t)),0!==t&&(e.emittedReadable=!1),0===t&&e.needReadable&&((0!==e.highWaterMark?e.length>=e.highWaterMark:e.length>0)||e.ended))return _("read: emitReadable",e.length,e.ended),0===e.length&&e.ended?Q(this):z(this),null;if(0===(t=F(t,e))&&e.ended)return 0===e.length&&Q(this),null;let r,o=e.needReadable;if(_("need readable",o),(0===e.length||e.length-t<e.highWaterMark)&&(o=!0,_("length less than watermark",o)),e.ended||e.reading||e.destroyed||e.errored||!e.constructed)o=!1,_("reading, ended or constructing",o);else if(o){_("do read"),e.reading=!0,e.sync=!0,0===e.length&&(e.needReadable=!0);try{this._read(e.highWaterMark)}catch(t){M(this,t)}e.sync=!1,e.reading||(t=F(n,e))}return r=t>0?Z(t,e):null,null===r?(e.needReadable=e.length<=e.highWaterMark,t=0):(e.length-=t,e.multiAwaitDrain?e.awaitDrainWriters.clear():e.awaitDrainWriters=null),0===e.length&&(e.ended||(e.needReadable=!0),n!==t&&e.ended&&Q(this)),null===r||e.errorEmitted||e.closeEmitted||(e.dataEmitted=!0,this.emit("data",r)),r},$.prototype._read=function(t){throw new x("_read()")},$.prototype.pipe=function(t,e){const n=this,o=this._readableState;1===o.pipes.length&&(o.multiAwaitDrain||(o.multiAwaitDrain=!0,o.awaitDrainWriters=new d(o.awaitDrainWriters?[o.awaitDrainWriters]:[]))),o.pipes.push(t),_("pipe count=%d opts=%j",o.pipes.length,e);const i=(!e||!1!==e.end)&&t!==r.stdout&&t!==r.stderr?s:y;function a(e,r){_("onunpipe"),e===n&&r&&!1===r.hasUnpiped&&(r.hasUnpiped=!0,function(){_("cleanup"),t.removeListener("close",p),t.removeListener("finish",g),u&&t.removeListener("drain",u);t.removeListener("error",h),t.removeListener("unpipe",a),n.removeListener("end",s),n.removeListener("end",y),n.removeListener("data",f),l=!0,u&&o.awaitDrainWriters&&(!t._writableState||t._writableState.needDrain)&&u()}())}function s(){_("onend"),t.end()}let u;o.endEmitted?r.nextTick(i):n.once("end",i),t.on("unpipe",a);let l=!1;function c(){l||(1===o.pipes.length&&o.pipes[0]===t?(_("false write response, pause",0),o.awaitDrainWriters=t,o.multiAwaitDrain=!1):o.pipes.length>1&&o.pipes.includes(t)&&(_("false write response, pause",o.awaitDrainWriters.size),o.awaitDrainWriters.add(t)),n.pause()),u||(u=function(t,e){return function(){const n=t._readableState;n.awaitDrainWriters===e?(_("pipeOnDrain",1),n.awaitDrainWriters=null):n.multiAwaitDrain&&(_("pipeOnDrain",n.awaitDrainWriters.size),n.awaitDrainWriters.delete(e)),n.awaitDrainWriters&&0!==n.awaitDrainWriters.size||!t.listenerCount("data")||t.resume()}}(n,t),t.on("drain",u))}function f(e){_("ondata");const n=t.write(e);_("dest.write",n),!1===n&&c()}function h(e){if(_("onerror",e),y(),t.removeListener("error",h),0===t.listenerCount("error")){const n=t._writableState||t._readableState;n&&!n.errorEmitted?M(t,e):t.emit("error",e)}}function p(){t.removeListener("finish",g),y()}function g(){_("onfinish"),t.removeListener("close",p),y()}function y(){_("unpipe"),n.unpipe(t)}return n.on("data",f),m(t,"error",h),t.once("close",p),t.once("finish",g),t.emit("pipe",n),!0===t.writableNeedDrain?o.flowing&&c():o.flowing||(_("pipe resume"),n.resume()),t},$.prototype.unpipe=function(t){const e=this._readableState;if(0===e.pipes.length)return this;if(!t){const t=e.pipes;e.pipes=[],this.pause();for(let e=0;e<t.length;e++)t[e].emit("unpipe",this,{hasUnpiped:!1});return this}const n=o(e.pipes,t);return-1===n||(e.pipes.splice(n,1),0===e.pipes.length&&this.pause(),t.emit("unpipe",this,{hasUnpiped:!1})),this},$.prototype.on=function(t,e){const n=y.prototype.on.call(this,t,e),o=this._readableState;return"data"===t?(o.readableListening=this.listenerCount("readable")>0,!1!==o.flowing&&this.resume()):"readable"===t&&(o.endEmitted||o.readableListening||(o.readableListening=o.needReadable=!0,o.flowing=!1,o.emittedReadable=!1,_("on readable",o.length,o.reading),o.length?z(this):o.reading||r.nextTick(J,this))),n},$.prototype.addListener=$.prototype.on,$.prototype.removeListener=function(t,e){const n=y.prototype.removeListener.call(this,t,e);return"readable"===t&&r.nextTick(G,this),n},$.prototype.off=$.prototype.removeListener,$.prototype.removeAllListeners=function(t){const e=y.prototype.removeAllListeners.apply(this,arguments);return"readable"!==t&&void 0!==t||r.nextTick(G,this),e},$.prototype.resume=function(){const t=this._readableState;return t.flowing||(_("resume"),t.flowing=!t.readableListening,function(t,e){e.resumeScheduled||(e.resumeScheduled=!0,r.nextTick(Y,t,e))}(this,t)),t[L]=!1,this},$.prototype.pause=function(){return _("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(_("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState[L]=!0,this},$.prototype.wrap=function(t){let e=!1;t.on("data",(n=>{!this.push(n)&&t.pause&&(e=!0,t.pause())})),t.on("end",(()=>{this.push(null)})),t.on("error",(t=>{M(this,t)})),t.on("close",(()=>{this.destroy()})),t.on("destroy",(()=>{this.destroy()})),this._read=()=>{e&&t.resume&&(e=!1,t.resume())};const n=l(t);for(let e=1;e<n.length;e++){const r=n[e];void 0===this[r]&&"function"==typeof t[r]&&(this[r]=t[r].bind(t))}return this},$.prototype[h]=function(){return X(this)},$.prototype.iterator=function(t){return void 0!==t&&O(t,"options"),X(this,t)},u($.prototype,{readable:{__proto__:null,get(){const t=this._readableState;return!(!t||!1===t.readable||t.destroyed||t.errorEmitted||t.endEmitted)},set(t){this._readableState&&(this._readableState.readable=!!t)}},readableDidRead:{__proto__:null,enumerable:!1,get:function(){return this._readableState.dataEmitted}},readableAborted:{__proto__:null,enumerable:!1,get:function(){return!(!1===this._readableState.readable||!this._readableState.destroyed&&!this._readableState.errored||this._readableState.endEmitted)}},readableHighWaterMark:{__proto__:null,enumerable:!1,get:function(){return this._readableState.highWaterMark}},readableBuffer:{__proto__:null,enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}},readableFlowing:{__proto__:null,enumerable:!1,get:function(){return this._readableState.flowing},set:function(t){this._readableState&&(this._readableState.flowing=t)}},readableLength:{__proto__:null,enumerable:!1,get(){return this._readableState.length}},readableObjectMode:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.objectMode}},readableEncoding:{__proto__:null,enumerable:!1,get(){return this._readableState?this._readableState.encoding:null}},errored:{__proto__:null,enumerable:!1,get(){return this._readableState?this._readableState.errored:null}},closed:{__proto__:null,get(){return!!this._readableState&&this._readableState.closed}},destroyed:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.destroyed},set(t){this._readableState&&(this._readableState.destroyed=t)}},readableEnded:{__proto__:null,enumerable:!1,get(){return!!this._readableState&&this._readableState.endEmitted}}}),u(P.prototype,{pipesCount:{__proto__:null,get(){return this.pipes.length}},paused:{__proto__:null,get(){return!1!==this[L]},set(t){this[L]=!!t}}}),$._fromList=Z,$.from=function(t,e){return j($,t,e)},$.fromWeb=function(t,e){return rt().newStreamReadableFromReadableStream(t,e)},$.toWeb=function(t,e){return rt().newReadableStreamFromStreamReadable(t,e)},$.wrap=function(t,e){var n,r;return new $({objectMode:null===(n=null!==(r=t.readableObjectMode)&&void 0!==r?r:t.objectMode)||void 0===n||n,...e,destroy(e,n){A.destroyer(t,e),n(e)}}).wrap(t)}},498:(t,e,n)=>{const{MathFloor:r,NumberIsInteger:o}=n(191),{ERR_INVALID_ARG_VALUE:i}=n(141).codes;function a(t){return t?16:16384}t.exports={getHighWaterMark:function(t,e,n,s){const u=function(t,e,n){return null!=t.highWaterMark?t.highWaterMark:e?t[n]:null}(e,s,n);if(null!=u){if(!o(u)||u<0){throw new i(s?`options.${n}`:"options.highWaterMark",u)}return r(u)}return a(t.objectMode)},getDefaultHighWaterMark:a}},210:(t,e,n)=>{const{ObjectSetPrototypeOf:r,Symbol:o}=n(191);t.exports=l;const{ERR_METHOD_NOT_IMPLEMENTED:i}=n(141).codes,a=n(182),{getHighWaterMark:s}=n(498);r(l.prototype,a.prototype),r(l,a);const u=o("kCallback");function l(t){if(!(this instanceof l))return new l(t);const e=t?s(this,t,"readableHighWaterMark",!0):null;0===e&&(t={...t,highWaterMark:null,readableHighWaterMark:e,writableHighWaterMark:t.writableHighWaterMark||0}),a.call(this,t),this._readableState.sync=!1,this[u]=null,t&&("function"==typeof t.transform&&(this._transform=t.transform),"function"==typeof t.flush&&(this._flush=t.flush)),this.on("prefinish",f)}function c(t){"function"!=typeof this._flush||this.destroyed?(this.push(null),t&&t()):this._flush(((e,n)=>{e?t?t(e):this.destroy(e):(null!=n&&this.push(n),this.push(null),t&&t())}))}function f(){this._final!==c&&c.call(this)}l.prototype._final=c,l.prototype._transform=function(t,e,n){throw new i("_transform()")},l.prototype._write=function(t,e,n){const r=this._readableState,o=this._writableState,i=r.length;this._transform(t,e,((t,e)=>{t?n(t):(null!=e&&this.push(e),o.ended||i===r.length||r.length<r.highWaterMark?n():this[u]=n)}))},l.prototype._read=function(){if(this[u]){const t=this[u];this[u]=null,t()}}},132:(t,e,n)=>{const{Symbol:r,SymbolAsyncIterator:o,SymbolIterator:i}=n(191),a=r("kDestroyed"),s=r("kIsErrored"),u=r("kIsReadable"),l=r("kIsDisturbed");function c(t,e=!1){var n;return!(!t||"function"!=typeof t.pipe||"function"!=typeof t.on||e&&("function"!=typeof t.pause||"function"!=typeof t.resume)||t._writableState&&!1===(null===(n=t._readableState)||void 0===n?void 0:n.readable)||t._writableState&&!t._readableState)}function f(t){var e;return!(!t||"function"!=typeof t.write||"function"!=typeof t.on||t._readableState&&!1===(null===(e=t._writableState)||void 0===e?void 0:e.writable))}function d(t){return t&&(t._readableState||t._writableState||"function"==typeof t.write&&"function"==typeof t.on||"function"==typeof t.pipe&&"function"==typeof t.on)}function h(t){if(!d(t))return null;const e=t._writableState,n=t._readableState,r=e||n;return!!(t.destroyed||t[a]||null!=r&&r.destroyed)}function p(t){if(!f(t))return null;if(!0===t.writableEnded)return!0;const e=t._writableState;return(null==e||!e.errored)&&("boolean"!=typeof(null==e?void 0:e.ended)?null:e.ended)}function g(t,e){if(!c(t))return null;const n=t._readableState;return(null==n||!n.errored)&&("boolean"!=typeof(null==n?void 0:n.endEmitted)?null:!!(n.endEmitted||!1===e&&!0===n.ended&&0===n.length))}function y(t){return t&&null!=t[u]?t[u]:"boolean"!=typeof(null==t?void 0:t.readable)?null:!h(t)&&(c(t)&&t.readable&&!g(t))}function m(t){return"boolean"!=typeof(null==t?void 0:t.writable)?null:!h(t)&&(f(t)&&t.writable&&!p(t))}function v(t){return"boolean"==typeof t._closed&&"boolean"==typeof t._defaultKeepAlive&&"boolean"==typeof t._removedConnection&&"boolean"==typeof t._removedContLen}function b(t){return"boolean"==typeof t._sent100&&v(t)}t.exports={kDestroyed:a,isDisturbed:function(t){var e;return!(!t||!(null!==(e=t[l])&&void 0!==e?e:t.readableDidRead||t.readableAborted))},kIsDisturbed:l,isErrored:function(t){var e,n,r,o,i,a,u,l,c,f;return!(!t||!(null!==(e=null!==(n=null!==(r=null!==(o=null!==(i=null!==(a=t[s])&&void 0!==a?a:t.readableErrored)&&void 0!==i?i:t.writableErrored)&&void 0!==o?o:null===(u=t._readableState)||void 0===u?void 0:u.errorEmitted)&&void 0!==r?r:null===(l=t._writableState)||void 0===l?void 0:l.errorEmitted)&&void 0!==n?n:null===(c=t._readableState)||void 0===c?void 0:c.errored)&&void 0!==e?e:null===(f=t._writableState)||void 0===f?void 0:f.errored))},kIsErrored:s,isReadable:y,kIsReadable:u,isClosed:function(t){if(!d(t))return null;if("boolean"==typeof t.closed)return t.closed;const e=t._writableState,n=t._readableState;return"boolean"==typeof(null==e?void 0:e.closed)||"boolean"==typeof(null==n?void 0:n.closed)?(null==e?void 0:e.closed)||(null==n?void 0:n.closed):"boolean"==typeof t._closed&&v(t)?t._closed:null},isDestroyed:h,isDuplexNodeStream:function(t){return!(!t||"function"!=typeof t.pipe||!t._readableState||"function"!=typeof t.on||"function"!=typeof t.write)},isFinished:function(t,e){return d(t)?!!h(t)||(!1===(null==e?void 0:e.readable)||!y(t))&&(!1===(null==e?void 0:e.writable)||!m(t)):null},isIterable:function(t,e){return null!=t&&(!0===e?"function"==typeof t[o]:!1===e?"function"==typeof t[i]:"function"==typeof t[o]||"function"==typeof t[i])},isReadableNodeStream:c,isReadableEnded:function(t){if(!c(t))return null;if(!0===t.readableEnded)return!0;const e=t._readableState;return!(!e||e.errored)&&("boolean"!=typeof(null==e?void 0:e.ended)?null:e.ended)},isReadableFinished:g,isReadableErrored:function(t){var e,n;return d(t)?t.readableErrored?t.readableErrored:null!==(e=null===(n=t._readableState)||void 0===n?void 0:n.errored)&&void 0!==e?e:null:null},isNodeStream:d,isWritable:m,isWritableNodeStream:f,isWritableEnded:p,isWritableFinished:function(t,e){if(!f(t))return null;if(!0===t.writableFinished)return!0;const n=t._writableState;return(null==n||!n.errored)&&("boolean"!=typeof(null==n?void 0:n.finished)?null:!!(n.finished||!1===e&&!0===n.ended&&0===n.length))},isWritableErrored:function(t){var e,n;return d(t)?t.writableErrored?t.writableErrored:null!==(e=null===(n=t._writableState)||void 0===n?void 0:n.errored)&&void 0!==e?e:null:null},isServerRequest:function(t){var e;return"boolean"==typeof t._consuming&&"boolean"==typeof t._dumped&&void 0===(null===(e=t.req)||void 0===e?void 0:e.upgradeOrConnect)},isServerResponse:b,willEmitClose:function(t){if(!d(t))return null;const e=t._writableState,n=t._readableState,r=e||n;return!r&&b(t)||!!(r&&r.autoDestroy&&r.emitClose&&!1===r.closed)}}},373:(t,e,n)=>{const r=n(533),{ArrayPrototypeSlice:o,Error:i,FunctionPrototypeSymbolHasInstance:a,ObjectDefineProperty:s,ObjectDefineProperties:u,ObjectSetPrototypeOf:l,StringPrototypeToLowerCase:c,Symbol:f,SymbolHasInstance:d}=n(191);t.exports=U,U.WritableState=O;const{EventEmitter:h}=n(465),p=n(200).Stream,{Buffer:g}=n(485),y=n(230),{addAbortSignal:m}=n(374),{getHighWaterMark:v,getDefaultHighWaterMark:b}=n(498),{ERR_INVALID_ARG_TYPE:w,ERR_METHOD_NOT_IMPLEMENTED:_,ERR_MULTIPLE_CALLBACK:E,ERR_STREAM_CANNOT_PIPE:A,ERR_STREAM_DESTROYED:S,ERR_STREAM_ALREADY_FINISHED:I,ERR_STREAM_NULL_VALUES:T,ERR_STREAM_WRITE_AFTER_END:R,ERR_UNKNOWN_ENCODING:x}=n(141).codes,{errorOrDestroy:C}=y;function B(){}l(U.prototype,p.prototype),l(U,p);const k=f("kOnFinished");function O(t,e,r){"boolean"!=typeof r&&(r=e instanceof n(182)),this.objectMode=!(!t||!t.objectMode),r&&(this.objectMode=this.objectMode||!(!t||!t.writableObjectMode)),this.highWaterMark=t?v(this,t,"writableHighWaterMark",r):b(!1),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;const o=!(!t||!1!==t.decodeStrings);this.decodeStrings=!o,this.defaultEncoding=t&&t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=P.bind(void 0,e),this.writecb=null,this.writelen=0,this.afterWriteTickInfo=null,L(this),this.pendingcb=0,this.constructed=!0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!t||!1!==t.emitClose,this.autoDestroy=!t||!1!==t.autoDestroy,this.errored=null,this.closed=!1,this.closeEmitted=!1,this[k]=[]}function L(t){t.buffered=[],t.bufferedIndex=0,t.allBuffers=!0,t.allNoop=!0}function U(t){const e=this instanceof n(182);if(!e&&!a(U,this))return new U(t);this._writableState=new O(t,this,e),t&&("function"==typeof t.write&&(this._write=t.write),"function"==typeof t.writev&&(this._writev=t.writev),"function"==typeof t.destroy&&(this._destroy=t.destroy),"function"==typeof t.final&&(this._final=t.final),"function"==typeof t.construct&&(this._construct=t.construct),t.signal&&m(t.signal,this)),p.call(this,t),y.construct(this,(()=>{const t=this._writableState;t.writing||F(this,t),H(this,t)}))}function j(t,e,n,o){const i=t._writableState;if("function"==typeof n)o=n,n=i.defaultEncoding;else{if(n){if("buffer"!==n&&!g.isEncoding(n))throw new x(n)}else n=i.defaultEncoding;"function"!=typeof o&&(o=B)}if(null===e)throw new T;if(!i.objectMode)if("string"==typeof e)!1!==i.decodeStrings&&(e=g.from(e,n),n="buffer");else if(e instanceof g)n="buffer";else{if(!p._isUint8Array(e))throw new w("chunk",["string","Buffer","Uint8Array"],e);e=p._uint8ArrayToBuffer(e),n="buffer"}let a;return i.ending?a=new R:i.destroyed&&(a=new S("write")),a?(r.nextTick(o,a),C(t,a,!0),a):(i.pendingcb++,function(t,e,n,r,o){const i=e.objectMode?1:n.length;e.length+=i;const a=e.length<e.highWaterMark;a||(e.needDrain=!0);e.writing||e.corked||e.errored||!e.constructed?(e.buffered.push({chunk:n,encoding:r,callback:o}),e.allBuffers&&"buffer"!==r&&(e.allBuffers=!1),e.allNoop&&o!==B&&(e.allNoop=!1)):(e.writelen=i,e.writecb=o,e.writing=!0,e.sync=!0,t._write(n,r,e.onwrite),e.sync=!1);return a&&!e.errored&&!e.destroyed}(t,i,e,n,o))}function N(t,e,n,r,o,i,a){e.writelen=r,e.writecb=a,e.writing=!0,e.sync=!0,e.destroyed?e.onwrite(new S("write")):n?t._writev(o,e.onwrite):t._write(o,i,e.onwrite),e.sync=!1}function M(t,e,n,r){--e.pendingcb,r(n),W(e),C(t,n)}function P(t,e){const n=t._writableState,o=n.sync,i=n.writecb;"function"==typeof i?(n.writing=!1,n.writecb=null,n.length-=n.writelen,n.writelen=0,e?(e.stack,n.errored||(n.errored=e),t._readableState&&!t._readableState.errored&&(t._readableState.errored=e),o?r.nextTick(M,t,n,e,i):M(t,n,e,i)):(n.buffered.length>n.bufferedIndex&&F(t,n),o?null!==n.afterWriteTickInfo&&n.afterWriteTickInfo.cb===i?n.afterWriteTickInfo.count++:(n.afterWriteTickInfo={count:1,cb:i,stream:t,state:n},r.nextTick($,n.afterWriteTickInfo)):D(t,n,1,i))):C(t,new E)}function $({stream:t,state:e,count:n,cb:r}){return e.afterWriteTickInfo=null,D(t,e,n,r)}function D(t,e,n,r){for(!e.ending&&!t.destroyed&&0===e.length&&e.needDrain&&(e.needDrain=!1,t.emit("drain"));n-- >0;)e.pendingcb--,r();e.destroyed&&W(e),H(t,e)}function W(t){if(t.writing)return;for(let n=t.bufferedIndex;n<t.buffered.length;++n){var e;const{chunk:r,callback:o}=t.buffered[n],i=t.objectMode?1:r.length;t.length-=i,o(null!==(e=t.errored)&&void 0!==e?e:new S("write"))}const n=t[k].splice(0);for(let e=0;e<n.length;e++){var r;n[e](null!==(r=t.errored)&&void 0!==r?r:new S("end"))}L(t)}function F(t,e){if(e.corked||e.bufferProcessing||e.destroyed||!e.constructed)return;const{buffered:n,bufferedIndex:r,objectMode:i}=e,a=n.length-r;if(!a)return;let s=r;if(e.bufferProcessing=!0,a>1&&t._writev){e.pendingcb-=a-1;const r=e.allNoop?B:t=>{for(let e=s;e<n.length;++e)n[e].callback(t)},i=e.allNoop&&0===s?n:o(n,s);i.allBuffers=e.allBuffers,N(t,e,!0,e.length,i,"",r),L(e)}else{do{const{chunk:r,encoding:o,callback:a}=n[s];n[s++]=null;N(t,e,!1,i?1:r.length,r,o,a)}while(s<n.length&&!e.writing);s===n.length?L(e):s>256?(n.splice(0,s),e.bufferedIndex=0):e.bufferedIndex=s}e.bufferProcessing=!1}function z(t){return t.ending&&!t.destroyed&&t.constructed&&0===t.length&&!t.errored&&0===t.buffered.length&&!t.finished&&!t.writing&&!t.errorEmitted&&!t.closeEmitted}function q(t,e){e.prefinished||e.finalCalled||("function"!=typeof t._final||e.destroyed?(e.prefinished=!0,t.emit("prefinish")):(e.finalCalled=!0,function(t,e){let n=!1;function o(o){if(n)C(t,null!=o?o:E());else if(n=!0,e.pendingcb--,o){const n=e[k].splice(0);for(let t=0;t<n.length;t++)n[t](o);C(t,o,e.sync)}else z(e)&&(e.prefinished=!0,t.emit("prefinish"),e.pendingcb++,r.nextTick(V,t,e))}e.sync=!0,e.pendingcb++;try{t._final(o)}catch(t){o(t)}e.sync=!1}(t,e)))}function H(t,e,n){z(e)&&(q(t,e),0===e.pendingcb&&(n?(e.pendingcb++,r.nextTick(((t,e)=>{z(e)?V(t,e):e.pendingcb--}),t,e)):z(e)&&(e.pendingcb++,V(t,e))))}function V(t,e){e.pendingcb--,e.finished=!0;const n=e[k].splice(0);for(let t=0;t<n.length;t++)n[t]();if(t.emit("finish"),e.autoDestroy){const e=t._readableState;(!e||e.autoDestroy&&(e.endEmitted||!1===e.readable))&&t.destroy()}}O.prototype.getBuffer=function(){return o(this.buffered,this.bufferedIndex)},s(O.prototype,"bufferedRequestCount",{__proto__:null,get(){return this.buffered.length-this.bufferedIndex}}),s(U,d,{__proto__:null,value:function(t){return!!a(this,t)||this===U&&(t&&t._writableState instanceof O)}}),U.prototype.pipe=function(){C(this,new A)},U.prototype.write=function(t,e,n){return!0===j(this,t,e,n)},U.prototype.cork=function(){this._writableState.corked++},U.prototype.uncork=function(){const t=this._writableState;t.corked&&(t.corked--,t.writing||F(this,t))},U.prototype.setDefaultEncoding=function(t){if("string"==typeof t&&(t=c(t)),!g.isEncoding(t))throw new x(t);return this._writableState.defaultEncoding=t,this},U.prototype._write=function(t,e,n){if(!this._writev)throw new _("_write()");this._writev([{chunk:t,encoding:e}],n)},U.prototype._writev=null,U.prototype.end=function(t,e,n){const o=this._writableState;let a;if("function"==typeof t?(n=t,t=null,e=null):"function"==typeof e&&(n=e,e=null),null!=t){const n=j(this,t,e);n instanceof i&&(a=n)}return o.corked&&(o.corked=1,this.uncork()),a||(o.errored||o.ending?o.finished?a=new I("end"):o.destroyed&&(a=new S("end")):(o.ending=!0,H(this,o,!0),o.ended=!0)),"function"==typeof n&&(a||o.finished?r.nextTick(n,a):o[k].push(n)),this},u(U.prototype,{closed:{__proto__:null,get(){return!!this._writableState&&this._writableState.closed}},destroyed:{__proto__:null,get(){return!!this._writableState&&this._writableState.destroyed},set(t){this._writableState&&(this._writableState.destroyed=t)}},writable:{__proto__:null,get(){const t=this._writableState;return!(!t||!1===t.writable||t.destroyed||t.errored||t.ending||t.ended)},set(t){this._writableState&&(this._writableState.writable=!!t)}},writableFinished:{__proto__:null,get(){return!!this._writableState&&this._writableState.finished}},writableObjectMode:{__proto__:null,get(){return!!this._writableState&&this._writableState.objectMode}},writableBuffer:{__proto__:null,get(){return this._writableState&&this._writableState.getBuffer()}},writableEnded:{__proto__:null,get(){return!!this._writableState&&this._writableState.ending}},writableNeedDrain:{__proto__:null,get(){const t=this._writableState;return!!t&&(!t.destroyed&&!t.ending&&t.needDrain)}},writableHighWaterMark:{__proto__:null,get(){return this._writableState&&this._writableState.highWaterMark}},writableCorked:{__proto__:null,get(){return this._writableState?this._writableState.corked:0}},writableLength:{__proto__:null,get(){return this._writableState&&this._writableState.length}},errored:{__proto__:null,enumerable:!1,get(){return this._writableState?this._writableState.errored:null}},writableAborted:{__proto__:null,enumerable:!1,get:function(){return!(!1===this._writableState.writable||!this._writableState.destroyed&&!this._writableState.errored||this._writableState.finished)}}});const G=y.destroy;let J;function Y(){return void 0===J&&(J={}),J}U.prototype.destroy=function(t,e){const n=this._writableState;return!n.destroyed&&(n.bufferedIndex<n.buffered.length||n[k].length)&&r.nextTick(W,n),G.call(this,t,e),this},U.prototype._undestroy=y.undestroy,U.prototype._destroy=function(t,e){e(t)},U.prototype[h.captureRejectionSymbol]=function(t){this.destroy(t)},U.fromWeb=function(t,e){return Y().newStreamWritableFromWritableStream(t,e)},U.toWeb=function(t){return Y().newWritableStreamFromStreamWritable(t)}},904:(t,e,n)=>{const{ArrayIsArray:r,ArrayPrototypeIncludes:o,ArrayPrototypeJoin:i,ArrayPrototypeMap:a,NumberIsInteger:s,NumberIsNaN:u,NumberMAX_SAFE_INTEGER:l,NumberMIN_SAFE_INTEGER:c,NumberParseInt:f,ObjectPrototypeHasOwnProperty:d,RegExpPrototypeExec:h,String:p,StringPrototypeToUpperCase:g,StringPrototypeTrim:y}=n(191),{hideStackFrames:m,codes:{ERR_SOCKET_BAD_PORT:v,ERR_INVALID_ARG_TYPE:b,ERR_INVALID_ARG_VALUE:w,ERR_OUT_OF_RANGE:_,ERR_UNKNOWN_SIGNAL:E}}=n(141),{normalizeEncoding:A}=n(775),{isAsyncFunction:S,isArrayBufferView:I}=n(775).types,T={};const R=/^[0-7]+$/;const x=m(((t,e,n=c,r=l)=>{if("number"!=typeof t)throw new b(e,"number",t);if(!s(t))throw new _(e,"an integer",t);if(t<n||t>r)throw new _(e,`>= ${n} && <= ${r}`,t)})),C=m(((t,e,n=-2147483648,r=2147483647)=>{if("number"!=typeof t)throw new b(e,"number",t);if(!s(t))throw new _(e,"an integer",t);if(t<n||t>r)throw new _(e,`>= ${n} && <= ${r}`,t)})),B=m(((t,e,n=!1)=>{if("number"!=typeof t)throw new b(e,"number",t);if(!s(t))throw new _(e,"an integer",t);const r=n?1:0,o=4294967295;if(t<r||t>o)throw new _(e,`>= ${r} && <= ${o}`,t)}));function k(t,e){if("string"!=typeof t)throw new b(e,"string",t)}const O=m(((t,e,n)=>{if(!o(n,t)){const r=i(a(n,(t=>"string"==typeof t?`'${t}'`:p(t))),", ");throw new w(e,t,"must be one of: "+r)}}));function L(t,e,n){return null!=t&&d(t,e)?t[e]:n}const U=m(((t,e,n=null)=>{const o=L(n,"allowArray",!1),i=L(n,"allowFunction",!1);if(!L(n,"nullable",!1)&&null===t||!o&&r(t)||"object"!=typeof t&&(!i||"function"!=typeof t))throw new b(e,"Object",t)})),j=m(((t,e,n=0)=>{if(!r(t))throw new b(e,"Array",t);if(t.length<n){throw new w(e,t,`must be longer than ${n}`)}}));const N=m(((t,e="buffer")=>{if(!I(t))throw new b(e,["Buffer","TypedArray","DataView"],t)}));const M=m(((t,e)=>{if(void 0!==t&&(null===t||"object"!=typeof t||!("aborted"in t)))throw new b(e,"AbortSignal",t)})),P=m(((t,e)=>{if("function"!=typeof t)throw new b(e,"Function",t)})),$=m(((t,e)=>{if("function"!=typeof t||S(t))throw new b(e,"Function",t)})),D=m(((t,e)=>{if(void 0!==t)throw new b(e,"undefined",t)}));t.exports={isInt32:function(t){return t===(0|t)},isUint32:function(t){return t===t>>>0},parseFileMode:function(t,e,n){if(void 0===t&&(t=n),"string"==typeof t){if(null===h(R,t))throw new w(e,t,"must be a 32-bit unsigned integer or an octal string");t=f(t,8)}return B(t,e),t},validateArray:j,validateBoolean:function(t,e){if("boolean"!=typeof t)throw new b(e,"boolean",t)},validateBuffer:N,validateEncoding:function(t,e){const n=A(e),r=t.length;if("hex"===n&&r%2!=0)throw new w("encoding",e,`is invalid for data of length ${r}`)},validateFunction:P,validateInt32:C,validateInteger:x,validateNumber:function(t,e,n,r){if("number"!=typeof t)throw new b(e,"number",t);if(null!=n&&t<n||null!=r&&t>r||(null!=n||null!=r)&&u(t))throw new _(e,`${null!=n?`>= ${n}`:""}${null!=n&&null!=r?" && ":""}${null!=r?`<= ${r}`:""}`,t)},validateObject:U,validateOneOf:O,validatePlainFunction:$,validatePort:function(t,e="Port",n=!0){if("number"!=typeof t&&"string"!=typeof t||"string"==typeof t&&0===y(t).length||+t!=+t>>>0||t>65535||0===t&&!n)throw new v(e,t,n);return 0|t},validateSignalName:function(t,e="signal"){if(k(t,e),void 0===T[t]){if(void 0!==T[g(t)])throw new E(t+" (signals must use all capital letters)");throw new E(t)}},validateString:k,validateUint32:B,validateUndefined:D,validateUnion:function(t,e,n){if(!o(n,t))throw new b(e,`('${i(n,"|")}')`,t)},validateAbortSignal:M}},99:(t,e,n)=>{const r=n(292),o=n(760),i=r.Readable.destroy;t.exports=r.Readable,t.exports._uint8ArrayToBuffer=r._uint8ArrayToBuffer,t.exports._isUint8Array=r._isUint8Array,t.exports.isDisturbed=r.isDisturbed,t.exports.isErrored=r.isErrored,t.exports.isReadable=r.isReadable,t.exports.Readable=r.Readable,t.exports.Writable=r.Writable,t.exports.Duplex=r.Duplex,t.exports.Transform=r.Transform,t.exports.PassThrough=r.PassThrough,t.exports.addAbortSignal=r.addAbortSignal,t.exports.finished=r.finished,t.exports.destroy=r.destroy,t.exports.destroy=i,t.exports.pipeline=r.pipeline,t.exports.compose=r.compose,Object.defineProperty(r,"promises",{configurable:!0,enumerable:!0,get:()=>o}),t.exports.Stream=r.Stream,t.exports.default=t.exports},141:(t,e,n)=>{const{format:r,inspect:o,AggregateError:i}=n(775),a=globalThis.AggregateError||i,s=Symbol("kIsNodeError"),u=["string","function","number","object","Function","Object","boolean","bigint","symbol"],l=/^([A-Z][a-z0-9]*)+$/,c={};function f(t,e){if(!t)throw new c.ERR_INTERNAL_ASSERTION(e)}function d(t){let e="",n=t.length;const r="-"===t[0]?1:0;for(;n>=r+4;n-=3)e=`_${t.slice(n-3,n)}${e}`;return`${t.slice(0,n)}${e}`}function h(t,e,n){n||(n=Error);class NodeError extends n{constructor(...n){super(function(t,e,n){if("function"==typeof e)return f(e.length<=n.length,`Code: ${t}; The provided arguments length (${n.length}) does not match the required ones (${e.length}).`),e(...n);const o=(e.match(/%[dfijoOs]/g)||[]).length;return f(o===n.length,`Code: ${t}; The provided arguments length (${n.length}) does not match the required ones (${o}).`),0===n.length?e:r(e,...n)}(t,e,n))}toString(){return`${this.name} [${t}]: ${this.message}`}}Object.defineProperties(NodeError.prototype,{name:{value:n.name,writable:!0,enumerable:!1,configurable:!0},toString:{value(){return`${this.name} [${t}]: ${this.message}`},writable:!0,enumerable:!1,configurable:!0}}),NodeError.prototype.code=t,NodeError.prototype[s]=!0,c[t]=NodeError}function p(t){const e="__node_internal_"+t.name;return Object.defineProperty(t,"name",{value:e}),t}class AbortError extends Error{constructor(t="The operation was aborted",e){if(void 0!==e&&"object"!=typeof e)throw new c.ERR_INVALID_ARG_TYPE("options","Object",e);super(t,e),this.code="ABORT_ERR",this.name="AbortError"}}h("ERR_ASSERTION","%s",Error),h("ERR_INVALID_ARG_TYPE",((t,e,n)=>{f("string"==typeof t,"'name' must be a string"),Array.isArray(e)||(e=[e]);let r="The ";t.endsWith(" argument")?r+=`${t} `:r+=`"${t}" ${t.includes(".")?"property":"argument"} `,r+="must be ";const i=[],a=[],s=[];for(const t of e)f("string"==typeof t,"All expected entries have to be of type string"),u.includes(t)?i.push(t.toLowerCase()):l.test(t)?a.push(t):(f("object"!==t,'The value "object" should be written as "Object"'),s.push(t));if(a.length>0){const t=i.indexOf("object");-1!==t&&(i.splice(i,t,1),a.push("Object"))}if(i.length>0){switch(i.length){case 1:r+=`of type ${i[0]}`;break;case 2:r+=`one of type ${i[0]} or ${i[1]}`;break;default:{const t=i.pop();r+=`one of type ${i.join(", ")}, or ${t}`}}(a.length>0||s.length>0)&&(r+=" or ")}if(a.length>0){switch(a.length){case 1:r+=`an instance of ${a[0]}`;break;case 2:r+=`an instance of ${a[0]} or ${a[1]}`;break;default:{const t=a.pop();r+=`an instance of ${a.join(", ")}, or ${t}`}}s.length>0&&(r+=" or ")}switch(s.length){case 0:break;case 1:s[0].toLowerCase()!==s[0]&&(r+="an "),r+=`${s[0]}`;break;case 2:r+=`one of ${s[0]} or ${s[1]}`;break;default:{const t=s.pop();r+=`one of ${s.join(", ")}, or ${t}`}}if(null==n)r+=`. Received ${n}`;else if("function"==typeof n&&n.name)r+=`. Received function ${n.name}`;else if("object"==typeof n){var c;if(null!==(c=n.constructor)&&void 0!==c&&c.name)r+=`. Received an instance of ${n.constructor.name}`;else{r+=`. Received ${o(n,{depth:-1})}`}}else{let t=o(n,{colors:!1});t.length>25&&(t=`${t.slice(0,25)}...`),r+=`. Received type ${typeof n} (${t})`}return r}),TypeError),h("ERR_INVALID_ARG_VALUE",((t,e,n="is invalid")=>{let r=o(e);r.length>128&&(r=r.slice(0,128)+"...");return`The ${t.includes(".")?"property":"argument"} '${t}' ${n}. Received ${r}`}),TypeError),h("ERR_INVALID_RETURN_VALUE",((t,e,n)=>{var r;return`Expected ${t} to be returned from the "${e}" function but got ${null!=n&&null!==(r=n.constructor)&&void 0!==r&&r.name?`instance of ${n.constructor.name}`:"type "+typeof n}.`}),TypeError),h("ERR_MISSING_ARGS",((...t)=>{let e;f(t.length>0,"At least one arg needs to be specified");const n=t.length;switch(t=(Array.isArray(t)?t:[t]).map((t=>`"${t}"`)).join(" or "),n){case 1:e+=`The ${t[0]} argument`;break;case 2:e+=`The ${t[0]} and ${t[1]} arguments`;break;default:{const n=t.pop();e+=`The ${t.join(", ")}, and ${n} arguments`}}return`${e} must be specified`}),TypeError),h("ERR_OUT_OF_RANGE",((t,e,n)=>{let r;return f(e,'Missing "range" argument'),Number.isInteger(n)&&Math.abs(n)>2**32?r=d(String(n)):"bigint"==typeof n?(r=String(n),(n>2n**32n||n<-(2n**32n))&&(r=d(r)),r+="n"):r=o(n),`The value of "${t}" is out of range. It must be ${e}. Received ${r}`}),RangeError),h("ERR_MULTIPLE_CALLBACK","Callback called multiple times",Error),h("ERR_METHOD_NOT_IMPLEMENTED","The %s method is not implemented",Error),h("ERR_STREAM_ALREADY_FINISHED","Cannot call %s after a stream was finished",Error),h("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable",Error),h("ERR_STREAM_DESTROYED","Cannot call %s after a stream was destroyed",Error),h("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),h("ERR_STREAM_PREMATURE_CLOSE","Premature close",Error),h("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF",Error),h("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event",Error),h("ERR_STREAM_WRITE_AFTER_END","write after end",Error),h("ERR_UNKNOWN_ENCODING","Unknown encoding: %s",TypeError),t.exports={AbortError,aggregateTwoErrors:p((function(t,e){if(t&&e&&t!==e){if(Array.isArray(e.errors))return e.errors.push(t),e;const n=new a([e,t],e.message);return n.code=e.code,n}return t||e})),hideStackFrames:p,codes:c}},191:t=>{t.exports={ArrayIsArray:t=>Array.isArray(t),ArrayPrototypeIncludes:(t,e)=>t.includes(e),ArrayPrototypeIndexOf:(t,e)=>t.indexOf(e),ArrayPrototypeJoin:(t,e)=>t.join(e),ArrayPrototypeMap:(t,e)=>t.map(e),ArrayPrototypePop:(t,e)=>t.pop(e),ArrayPrototypePush:(t,e)=>t.push(e),ArrayPrototypeSlice:(t,e,n)=>t.slice(e,n),Error,FunctionPrototypeCall:(t,e,...n)=>t.call(e,...n),FunctionPrototypeSymbolHasInstance:(t,e)=>Function.prototype[Symbol.hasInstance].call(t,e),MathFloor:Math.floor,Number,NumberIsInteger:Number.isInteger,NumberIsNaN:Number.isNaN,NumberMAX_SAFE_INTEGER:Number.MAX_SAFE_INTEGER,NumberMIN_SAFE_INTEGER:Number.MIN_SAFE_INTEGER,NumberParseInt:Number.parseInt,ObjectDefineProperties:(t,e)=>Object.defineProperties(t,e),ObjectDefineProperty:(t,e,n)=>Object.defineProperty(t,e,n),ObjectGetOwnPropertyDescriptor:(t,e)=>Object.getOwnPropertyDescriptor(t,e),ObjectKeys:t=>Object.keys(t),ObjectSetPrototypeOf:(t,e)=>Object.setPrototypeOf(t,e),Promise,PromisePrototypeCatch:(t,e)=>t.catch(e),PromisePrototypeThen:(t,e,n)=>t.then(e,n),PromiseReject:t=>Promise.reject(t),ReflectApply:Reflect.apply,RegExpPrototypeTest:(t,e)=>t.test(e),SafeSet:Set,String,StringPrototypeSlice:(t,e,n)=>t.slice(e,n),StringPrototypeToLowerCase:t=>t.toLowerCase(),StringPrototypeToUpperCase:t=>t.toUpperCase(),StringPrototypeTrim:t=>t.trim(),Symbol,SymbolAsyncIterator:Symbol.asyncIterator,SymbolHasInstance:Symbol.hasInstance,SymbolIterator:Symbol.iterator,TypedArrayPrototypeSet:(t,e,n)=>t.set(e,n),Uint8Array}},775:(t,e,n)=>{const r=n(485),o=Object.getPrototypeOf((async function(){})).constructor,i=globalThis.Blob||r.Blob,a=void 0!==i?function(t){return t instanceof i}:function(t){return!1};class AggregateError extends Error{constructor(t){if(!Array.isArray(t))throw new TypeError("Expected input to be an Array, got "+typeof t);let e="";for(let n=0;n<t.length;n++)e+=`    ${t[n].stack}\n`;super(e),this.name="AggregateError",this.errors=t}}t.exports={AggregateError,kEmptyObject:Object.freeze({}),once(t){let e=!1;return function(...n){e||(e=!0,t.apply(this,n))}},createDeferredPromise:function(){let t,e;return{promise:new Promise(((n,r)=>{t=n,e=r})),resolve:t,reject:e}},promisify:t=>new Promise(((e,n)=>{t(((t,...r)=>t?n(t):e(...r)))})),debuglog:()=>function(){},format:(t,...e)=>t.replace(/%([sdifj])/g,(function(...[t,n]){const r=e.shift();if("f"===n)return r.toFixed(6);if("j"===n)return JSON.stringify(r);if("s"===n&&"object"==typeof r){return`${r.constructor!==Object?r.constructor.name:""} {}`.trim()}return r.toString()})),inspect(t){switch(typeof t){case"string":if(t.includes("'")){if(!t.includes('"'))return`"${t}"`;if(!t.includes("`")&&!t.includes("${"))return`\`${t}\``}return`'${t}'`;case"number":return isNaN(t)?"NaN":Object.is(t,-0)?String(t):t;case"bigint":return`${String(t)}n`;case"boolean":case"undefined":return String(t);case"object":return"{}"}},types:{isAsyncFunction:t=>t instanceof o,isArrayBufferView:t=>ArrayBuffer.isView(t)},isBlob:a},t.exports.promisify.custom=Symbol.for("nodejs.util.promisify.custom")},292:(t,e,n)=>{const{Buffer:r}=n(485),{ObjectDefineProperty:o,ObjectKeys:i,ReflectApply:a}=n(191),{promisify:{custom:s}}=n(775),{streamReturningOperators:u,promiseReturningOperators:l}=n(554),{codes:{ERR_ILLEGAL_CONSTRUCTOR:c}}=n(141),f=n(818),{pipeline:d}=n(754),{destroyer:h}=n(230),p=n(86),g=n(760),y=n(132),m=t.exports=n(200).Stream;m.isDisturbed=y.isDisturbed,m.isErrored=y.isErrored,m.isReadable=y.isReadable,m.Readable=n(858);for(const w of i(u)){const _=u[w];function v(...t){if(new.target)throw c();return m.Readable.from(a(_,this,t))}o(v,"name",{__proto__:null,value:_.name}),o(v,"length",{__proto__:null,value:_.length}),o(m.Readable.prototype,w,{__proto__:null,value:v,enumerable:!1,configurable:!0,writable:!0})}for(const E of i(l)){const A=l[E];function v(...t){if(new.target)throw c();return a(A,this,t)}o(v,"name",{__proto__:null,value:A.name}),o(v,"length",{__proto__:null,value:A.length}),o(m.Readable.prototype,E,{__proto__:null,value:v,enumerable:!1,configurable:!0,writable:!0})}m.Writable=n(373),m.Duplex=n(182),m.Transform=n(210),m.PassThrough=n(467),m.pipeline=d;const{addAbortSignal:b}=n(374);m.addAbortSignal=b,m.finished=p,m.destroy=h,m.compose=f,o(m,"promises",{__proto__:null,configurable:!0,enumerable:!0,get:()=>g}),o(d,s,{__proto__:null,enumerable:!0,get:()=>g.pipeline}),o(p,s,{__proto__:null,enumerable:!0,get:()=>g.finished}),m.Stream=m,m._isUint8Array=function(t){return t instanceof Uint8Array},m._uint8ArrayToBuffer=function(t){return r.from(t.buffer,t.byteOffset,t.byteLength)}},760:(t,e,n)=>{const{ArrayPrototypePop:r,Promise:o}=n(191),{isIterable:i,isNodeStream:a}=n(132),{pipelineImpl:s}=n(754),{finished:u}=n(86);t.exports={finished:u,pipeline:function(...t){return new o(((e,n)=>{let o,u;const l=t[t.length-1];if(l&&"object"==typeof l&&!a(l)&&!i(l)){const e=r(t);o=e.signal,u=e.end}s(t,((t,r)=>{t?n(t):e(r)}),{signal:o,end:u})}))}}},533:t=>{var e,n,r=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function a(t){if(e===setTimeout)return setTimeout(t,0);if((e===o||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(n){try{return e.call(null,t,0)}catch(n){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:o}catch(t){e=o}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(t){n=i}}();var s,u=[],l=!1,c=-1;function f(){l&&s&&(l=!1,s.length?u=s.concat(u):c=-1,u.length&&d())}function d(){if(!l){var t=a(f);l=!0;for(var e=u.length;e;){for(s=u,u=[];++c<e;)s&&s[c].run();c=-1,e=u.length}s=null,l=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function h(t,e){this.fun=t,this.array=e}function p(){}r.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];u.push(new h(t,e)),1!==u.length||l||a(d)},h.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=p,r.addListener=p,r.once=p,r.off=p,r.removeListener=p,r.removeAllListeners=p,r.emit=p,r.prependListener=p,r.prependOnceListener=p,r.listeners=function(t){return[]},r.binding=function(t){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(t){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},377:(t,e,n)=>{var r=n(485),o=r.Buffer;function i(t,e){for(var n in t)e[n]=t[n]}function a(t,e,n){return o(t,e,n)}o.from&&o.alloc&&o.allocUnsafe&&o.allocUnsafeSlow?t.exports=r:(i(r,e),e.Buffer=a),i(o,a),a.from=function(t,e,n){if("number"==typeof t)throw new TypeError("Argument must not be a number");return o(t,e,n)},a.alloc=function(t,e,n){if("number"!=typeof t)throw new TypeError("Argument must be a number");var r=o(t);return void 0!==e?"string"==typeof n?r.fill(e,n):r.fill(e):r.fill(0),r},a.allocUnsafe=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return o(t)},a.allocUnsafeSlow=function(t){if("number"!=typeof t)throw new TypeError("Argument must be a number");return r.SlowBuffer(t)}},464:(t,e,n)=>{var r=n(377).Buffer,o=r.isEncoding||function(t){switch((t=""+t)&&t.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function i(t){var e;switch(this.encoding=function(t){var e=function(t){if(!t)return"utf8";for(var e;;)switch(t){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return t;default:if(e)return;t=(""+t).toLowerCase(),e=!0}}(t);if("string"!=typeof e&&(r.isEncoding===o||!o(t)))throw new Error("Unknown encoding: "+t);return e||t}(t),this.encoding){case"utf16le":this.text=u,this.end=l,e=4;break;case"utf8":this.fillLast=s,e=4;break;case"base64":this.text=c,this.end=f,e=3;break;default:return this.write=d,void(this.end=h)}this.lastNeed=0,this.lastTotal=0,this.lastChar=r.allocUnsafe(e)}function a(t){return t<=127?0:t>>5==6?2:t>>4==14?3:t>>3==30?4:t>>6==2?-1:-2}function s(t){var e=this.lastTotal-this.lastNeed,n=function(t,e,n){if(128!=(192&e[0]))return t.lastNeed=0,"�";if(t.lastNeed>1&&e.length>1){if(128!=(192&e[1]))return t.lastNeed=1,"�";if(t.lastNeed>2&&e.length>2&&128!=(192&e[2]))return t.lastNeed=2,"�"}}(this,t);return void 0!==n?n:this.lastNeed<=t.length?(t.copy(this.lastChar,e,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(t.copy(this.lastChar,e,0,t.length),void(this.lastNeed-=t.length))}function u(t,e){if((t.length-e)%2==0){var n=t.toString("utf16le",e);if(n){var r=n.charCodeAt(n.length-1);if(r>=55296&&r<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1],n.slice(0,-1)}return n}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=t[t.length-1],t.toString("utf16le",e,t.length-1)}function l(t){var e=t&&t.length?this.write(t):"";if(this.lastNeed){var n=this.lastTotal-this.lastNeed;return e+this.lastChar.toString("utf16le",0,n)}return e}function c(t,e){var n=(t.length-e)%3;return 0===n?t.toString("base64",e):(this.lastNeed=3-n,this.lastTotal=3,1===n?this.lastChar[0]=t[t.length-1]:(this.lastChar[0]=t[t.length-2],this.lastChar[1]=t[t.length-1]),t.toString("base64",e,t.length-n))}function f(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+this.lastChar.toString("base64",0,3-this.lastNeed):e}function d(t){return t.toString(this.encoding)}function h(t){return t&&t.length?this.write(t):""}e.StringDecoder=i,i.prototype.write=function(t){if(0===t.length)return"";var e,n;if(this.lastNeed){if(void 0===(e=this.fillLast(t)))return"";n=this.lastNeed,this.lastNeed=0}else n=0;return n<t.length?e?e+this.text(t,n):this.text(t,n):e||""},i.prototype.end=function(t){var e=t&&t.length?this.write(t):"";return this.lastNeed?e+"�":e},i.prototype.text=function(t,e){var n=function(t,e,n){var r=e.length-1;if(r<n)return 0;var o=a(e[r]);if(o>=0)return o>0&&(t.lastNeed=o-1),o;if(--r<n||-2===o)return 0;if((o=a(e[r]))>=0)return o>0&&(t.lastNeed=o-2),o;if(--r<n||-2===o)return 0;if((o=a(e[r]))>=0)return o>0&&(2===o?o=0:t.lastNeed=o-3),o;return 0}(this,t,e);if(!this.lastNeed)return t.toString("utf8",e);this.lastTotal=n;var r=t.length-(n-this.lastNeed);return t.copy(this.lastChar,0,r),t.toString("utf8",e,r)},i.prototype.fillLast=function(t){if(this.lastNeed<=t.length)return t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);t.copy(this.lastChar,this.lastTotal-this.lastNeed,0,t.length),this.lastNeed-=t.length}},408:(t,e,n)=>{n.d(e,{MS:()=>S,cF:()=>I,AK:()=>T,M_:()=>R,cX:()=>x,BT:()=>InteropError,_W:()=>B,Pg:()=>dt,$j:()=>Y,U$:()=>N,U7:()=>M});var r={d:(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},o={};r.d(o,{MS:()=>ApiError,cF:()=>ApiRequestError,AK:()=>AuthTokenExpiredError,M_:()=>AuthorizationError,cX:()=>InitializationError,Yd:()=>l,nj:()=>NotImplementedError,O4:()=>A,_W:()=>ParameterError,U$:()=>a,U7:()=>s});class ApiError extends Error{constructor(t,e){var n,r;super(t=null!==(n=null!=t?t:null==e?void 0:e.message)&&void 0!==n?n:"An unexpected error has occurred"),this.name=this.constructor.name,this.stack=(t?this.stack:null!==(r=null==e?void 0:e.stack)&&void 0!==r?r:this.stack).replace(/^(\w*Error)/,`${this.constructor.name}`)}}class ApiRequestError extends ApiError{constructor(t,e,n){var r;super(t=null!==(r=null!=t?t:null==n?void 0:n.message)&&void 0!==r?r:"An error occurred when executing the API request",n),this.status=e}}class AuthorizationError extends ApiError{constructor(t,e){var n;super(t=null!==(n=null!=t?t:null==e?void 0:e.message)&&void 0!==n?n:"An authorization error occurred",e)}}class AuthTokenExpiredError extends ApiError{constructor(t,e){var n;super(t=null!==(n=null!=t?t:null==e?void 0:e.message)&&void 0!==n?n:"The API request failed as the authorization tokens have expired",e)}}class InitializationError extends ApiError{constructor(t,e){var n;super(t=null!==(n=null!=t?t:null==e?void 0:e.message)&&void 0!==n?n:"An initialization error occurred",e)}}class NotImplementedError extends ApiError{constructor(t,e){var n;super(t=null!==(n=null!=t?t:null==e?void 0:e.message)&&void 0!==n?n:"The method has not been implemented",e)}}class ParameterError extends ApiError{constructor(t){super(t=null!=t?t:"Invalid parameter detected")}}const i=t=>{let e=fin.Integrations;e||(fin.Integrations={},e=fin.Integrations);let n=e[t];return n||(e[t]={},n=e[t]),n},a=t=>{i(t).loggingEnabled=!1},s=(t,e="0.0.0")=>{i(t).loggingEnabled=!0,console.log(u(t),`v${e}`)},u=t=>`[@openfin/${t.toLowerCase()}]`;class l{constructor(t){this.name=t,this.prefix=u(t),this.isLoggingEnabled=this.isLoggingEnabled.bind(this),this.logError=this.logError.bind(this),this.logInfo=this.logInfo.bind(this),this.logWarning=this.logWarning.bind(this)}isLoggingEnabled(){return i(this.name).loggingEnabled}logError(t){this.isLoggingEnabled()&&(t.innerError?console.error(this.prefix,t,"\n\n(inner)",t.innerError):console.error(this.prefix,t))}logInfo(...t){this.isLoggingEnabled()&&console.log(this.prefix,...t)}logWarning(...t){this.isLoggingEnabled()&&console.warn(this.prefix,...t)}}const c=(t,e,n,r)=>async(o,i,a,s)=>{const{authorization_endpoint:u}=t,l=fin.Application.getCurrentSync(),c=(await l.getChildWindows()).find((t=>"oauth-api-auth-flow"===t.identity.name));c&&await c.close(!0);const h=(new Date).getTime().toString(),p=d(),g=(await f(p)).replace(/=+$/,"");let y="";a&&(y="&",y+=Object.entries(a).map((t=>`${encodeURIComponent(t[0])}=${encodeURIComponent(t[1])}`)).join("&"));const m=`${u}?client_id=${encodeURIComponent(e)}&redirect_uri=${encodeURIComponent(o)}&response_type=code&scope=${i.map(encodeURIComponent).join("+")}&state=${h}&code_challenge=${g}&code_challenge_method=S256${y}`,v=null!=s?s:{},{defaultHeight:b,defaultWidth:w}=v,_=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(t);o<r.length;o++)e.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(t,r[o])&&(n[r[o]]=t[r[o]])}return n}(v,["defaultHeight","defaultWidth"]),E=await fin.Window.create(Object.assign({alwaysOnTop:!0,maximizable:!1,minimizable:!1,autoShow:!1,defaultCentered:!0,defaultHeight:null!=b?b:700,defaultWidth:null!=w?w:600,includeInSnapshots:!1,name:"oauth-api-auth-flow",resizable:!1,saveWindowState:!1,showTaskbarIcon:!1,url:m},_)),A=await new Promise(((t,e)=>{let n;const i=window.setTimeout((()=>{window.clearInterval(n),window.clearTimeout(i),E.removeAllListeners(),E.close(!0),e(new ApiError("Authorization timed out"))}),3e5);E.addListener("closing",(async()=>{r.logInfo("User closed auth window"),window.clearInterval(n),window.clearTimeout(i),E.removeAllListeners(),e(new ApiError("Failed to complete authorization code flow"))})),n=window.setInterval((()=>(async(t,e,n,r,o,i,a,s)=>{let u;try{u=await t.getInfo()}catch(t){return window.clearInterval(e),window.clearTimeout(n),void s(new ApiError("Could not locate auth window"))}const l=new URL(u.url);if(0!==new URL(u.url).href.toLowerCase().indexOf(o.toLowerCase()))await t.isShowing()||(i.logInfo("Showing auth window"),await t.show(!0),await t.focus());else{if(window.clearInterval(e),window.clearTimeout(n),t.removeAllListeners(),t.close(!0),l.searchParams.get("state")!==r){const t=new ApiError("State mismatch");return t.data=l.toString(),void s(t)}const o=l.searchParams.get("code");if(!o){const t=new ApiError("Authorization code missing");return t.data=l.toString(),void s(t)}a(o)}})(E,n,i,h,o,r,t,e)),500)}));r.logInfo("Received authorization code"),await n.exchangeCodeForTokens(A,p,o),r.logInfo("Received tokens")},f=async t=>{const e=(new TextEncoder).encode(t),n=await window.crypto.subtle.digest("SHA-256",e),r=await(t=>new Promise(((e,n)=>{try{const r=new Blob([t]),o=new FileReader;o.onload=t=>{var r,o;const i=null===(r=t.target)||void 0===r?void 0:r.result;if(i){const[,t]=Array.from(null!==(o=i.match(/base64,(.*)$/i))&&void 0!==o?o:[]);e(null!=t?t:"")}n(new Error("Unexpected empty result"))},o.readAsDataURL(r)}catch(t){n(t)}})))(n);return r.replace(/\+/g,"-").replace(/\//g,"_")},d=()=>{const t=new Uint32Array(64);return window.crypto.getRandomValues(t),Array.from(t,(t=>`0${t.toString(16)}`.slice(-2))).join("")},h=()=>{let t,e,n,r;const o=async(e,n=!1)=>{const{command:r,data:a,id:s}=e,u={command:r,id:s};try{if(!t)throw new Error("Access token not found");const{apiRequestUrl:r,data:s,headers:l,httpMethod:c,includeAuthorization:f}=a,d=await(async(e,n,r,o,i)=>{var a,s;const u=Object.assign({Accept:"application/json"},o);"PATCH"!==n&&"POST"!==n&&"PUT"!==n||/content-type/i.test(Object.keys(u).join(","))||(u["Content-Type"]="application/json"),i&&(u.Authorization=`Bearer ${t}`);const l=await fetch(e,{body:"object"==typeof r?JSON.stringify(r):r,headers:u,method:n});if(!l.ok){const t={message:"Failed to execute API request"};return(null===(a=l.headers.get("Content-Type"))||void 0===a?void 0:a.includes("application/json"))&&(t.data=await l.json()),[l.status,void 0,void 0,t]}let c;const f=null!==(s=l.headers.get("Content-Type"))&&void 0!==s?s:"";switch(!0){case!f:break;case/^application\/(\w+\+)?json/i.test(f):c=await l.json();break;case/^multipart\/form-?data|^application\/x-?www-?form-?urlencoded/i.test(f):c=await l.formData();break;case/^application\/(([^/]+)?xml|vnd\.openxmlformats)|^text\/|^image\/svg/i.test(f):c=await l.text();break;default:c=await l.arrayBuffer()}return[l.status,c,f,void 0]})(r,c,s,l,f),[h,p,g,y]=d;if(u.status=h,y){if(!n&&401===h){const[t,n]=await i();return n?(u.status=t,u.error=n,u):await o(e,!0)}u.error=y}else p&&(u.data=p,u.type=g)}catch(t){t instanceof Error?u.error={message:t.message}:u.error={message:"Failed to execute API request"}}return Promise.resolve(u)},i=async()=>{var o;if(!n)throw new Error("Authorization server metadata not set");if(!e)throw new Error("Client ID not set");const i=`grant_type=refresh_token&client_id=${e}&refresh_token=${r}`,a=await fetch(n.token_endpoint,{body:i,headers:{Accept:"application/json","Content-Type":"application/x-www-form-urlencoded"},method:"POST"});if(!a.ok){const t={message:"Failed to refresh access token"};return(null===(o=a.headers.get("Content-Type"))||void 0===o?void 0:o.includes("application/json"))&&(t.data=await a.json()),[a.status,t]}const s=await a.json();return t=s.access_token,[a.status]};self.onmessage=async i=>{const{command:a,id:s}=i.data;let u={command:a,id:s};switch(a){case"API_REQUEST":u=await o(i.data);break;case"CODE_EXCHANGE":u=await(async o=>{var i;const{command:a,data:s,id:u}=o,l={command:a,id:u};try{if(!n)throw new Error("Authorization server metadata not set");if(!e)throw new Error("Client ID not set");const{code:o,codeVerifier:a,redirectUri:u}=s,c=`grant_type=authorization_code&client_id=${e}&code=${o}&code_verifier=${a}&redirect_uri=${u}`,f=await fetch(n.token_endpoint,{body:c,headers:{Accept:"application/json","Content-Type":"application/x-www-form-urlencoded"},method:"POST"});if(f.ok){const e=await f.json();t=e.access_token,r=e.refresh_token}else{const t={message:"Failed to retrieve tokens"};(null===(i=f.headers.get("Content-Type"))||void 0===i?void 0:i.includes("application/json"))&&(t.data=await f.json()),l.error=t}}catch(t){t instanceof Error?l.error={message:t.message}:l.error={message:"Failed to retrieve tokens"}}return Promise.resolve(l)})(i.data);break;case"EXPIRE_TOKENS":u=await(async e=>{var o;const{command:i,expireAccessTokenOnly:a,id:s}=e,u={command:i,id:s};try{if(!a&&!r)throw new Error("Refresh token not found");if(!n)throw new Error("Authorization server metadata not set");if(!n.revocation_endpoint)throw new Error("Revocation endpoint missing in authorization server metadata");const e=a?t:r,i=await fetch(`${n.revocation_endpoint}?token=${e}`,{headers:{Accept:"application/json"}});if(!i.ok){const t={message:"Failed to revoke tokens"};(null===(o=i.headers.get("Content-Type"))||void 0===o?void 0:o.includes("application/json"))&&(t.data=await i.json()),u.error=t}}catch(t){t instanceof Error?u.error={message:t.message}:u.error={message:"Failed to revoke tokens"}}return Promise.resolve(u)})(i.data);break;case"INIT":u=await(async t=>{const{command:r,data:o,id:i}=t,a={command:r,id:i};return e=o.clientId,n=o.metadata,Promise.resolve(a)})(i.data);break;default:u.error=new Error(`Unexpected oauth worker command: ${a}`)}self.postMessage(u)}};var p;!function(t){t.ApiRequest="API_REQUEST",t.CodeExchange="CODE_EXCHANGE",t.ExpireTokens="EXPIRE_TOKENS",t.Init="INIT"}(p||(p={}));const g=[],y=t=>{g.push(t)},m=(t,e)=>(n,r,o)=>new Promise(((i,a)=>{const s={command:p.CodeExchange,data:{code:n,codeVerifier:r,redirectUri:o},id:Date.now().toString()},{command:u,id:l}=s;y({command:u,id:l,reject:a,resolve:i}),t.postMessage(s),e.logInfo("Worker request sent",s)})),v=(t,e,n)=>(r,o,i,a,s)=>new Promise(((u,l)=>{const c={command:p.ApiRequest,data:{apiRequestUrl:r,clientId:t,data:i,headers:a,httpMethod:o,includeAuthorization:s},id:Date.now().toString()},{command:f,id:d}=c;y({command:f,id:d,reject:l,resolve:u}),e.postMessage(c),n.logInfo("Worker request sent",c)})),b=(t,e)=>n=>new Promise(((r,o)=>{const i={command:p.ExpireTokens,expireAccessTokenOnly:n,id:Date.now().toString()},{command:a,id:s}=i;y({command:a,id:s,reject:o,resolve:r}),t.postMessage(i),e.logInfo("Worker request sent",i)})),w=t=>e=>{t.logInfo("Worker response received",e.data);const n=e.data,{command:r,error:o,id:i}=n,a=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(t);o<r.length;o++)e.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(t,r[o])&&(n[r[o]]=t[r[o]])}return n}(n,["command","error","id"]),s=((t,e)=>g.find((n=>n.command===e&&n.id===t)))(i,r);s?(o?("status"in a&&void 0!==a.status&&(o.status=a.status),s.reject(o)):s.resolve(a),_(i,r)):t.logError(new Error("Unable to locate awaited request"))},_=(t,e)=>{const n=g.findIndex((n=>n.command===e&&n.id===t));n>=0&&g.splice(n,1)},E=(t,e)=>async()=>{try{await b(t,e)(!1)}catch(t){e.logWarning(t.message)}t.terminate(),e.logInfo("Worker terminated")};class A{constructor(t,e,n,r,o){if(this.executeApiRequest=async(t,e="GET",n,r,o=!0,i=!1)=>{this._logger.logInfo("ExecuteApiRequest started",t,e,n,r);try{const i=await((t,e)=>async(n,r,o,i,a)=>{try{return await e.executeApiRequest(`${t}${n}`,r,o,i,a)}catch(t){let e;const{data:n,message:r,status:o}=t;throw e=t instanceof Error?new ApiRequestError(r,o):"Failed to refresh access token"===r?new AuthTokenExpiredError(r):new ApiRequestError(r,o),e.data=n,e}})(this._apiOrigin,this._worker)(t,e,n,r,o);return this._logger.logInfo("ExecuteApiRequest completed",i),i}catch(t){if(t instanceof ApiRequestError){const{data:e,message:n,name:r,stack:o}=t,i=this.getErrorMessageFromServerResponse(e);i&&(t.message=i,t.stack=null==o?void 0:o.replace(`${r}: ${n}`,`${r}: ${i}`))}throw i&&this.logger.logError(t),t}},!(t&&e&&n&&r&&o))throw new InitializationError("Provider has not been properly initialized (call init to create new instances)");this._apiOrigin=t,this._clientId=e,this._metadata=n,this._worker=r,this._logger=o,this.authorize=this.authorize.bind(this),this.close=this.close.bind(this),this.executeApiRequest=this.executeApiRequest.bind(this),this.expireTokens=this.expireTokens.bind(this),this.getErrorMessageFromServerResponse=this.getErrorMessageFromServerResponse.bind(this)}get apiOrigin(){return this._apiOrigin}get clientId(){return this._clientId}get logger(){return this._logger}get metadata(){return this._metadata}get worker(){return this._worker}async authorize(t,e,n,r){this._logger.logInfo("Authorize started",t,e,n,r);try{await c(this._metadata,this._clientId,this._worker,this._logger)(t,e,n,r),this._logger.logInfo("Authorize completed")}catch(t){let e;if(t instanceof ApiError){const{data:n}=t,r=this.getErrorMessageFromServerResponse(n);e=new AuthorizationError(r,t),e.data=n}else e=new AuthorizationError(void 0,t);throw this.logger.logError(e),e}}async close(){var t;this._logger.logInfo("Close started");try{await(null===(t=this._worker)||void 0===t?void 0:t.terminate()),this._worker=void 0,this._apiOrigin=void 0,this._clientId=void 0,this._metadata=void 0,this._logger.logInfo("Close completed")}catch(t){const e=new ApiError(void 0,t);throw this._logger.logError(e),e}}async expireTokens(t=!1){var e;this._logger.logInfo("ExpireTokens started");try{await(null===(e=this._worker)||void 0===e?void 0:e.expireTokens(t)),this._logger.logInfo("ExpireTokens completed")}catch(t){const e=new ApiError(void 0,t);throw this._logger.logError(e),e}}getErrorMessageFromServerResponse(t){t&&this._logger.logWarning(t)}static async init(t,e,n,r,...o){const i=new l(r);let a;i.logInfo("Init started",t,e,n);try{a=new URL(e)}catch(t){const e=new ParameterError("Unexpected invalid API origin");throw i.logError(e),e}try{const e=await(async t=>{let e;try{e=new URL(t)}catch(t){throw new ParameterError("Unexpected invalid metadata URL")}const n=await fetch(e,{headers:{Accept:"application/json"}});if(!n.ok)throw new Error("Failed to retrieve authorization server metadata");const r=await n.json();if(!r)throw new Error("Unexpected empty authorization server metadata response");if(!r.response_types_supported.find((t=>"code"===t.toLowerCase())))throw new Error("Authorization server does not support the authorization code response type");return r})(t),r=await(async(t,e,n)=>{const r=new Blob([`(${h})()`],{type:"text/javascript"}),o=URL.createObjectURL(r),i=new Worker(o);return i.onmessage=w(n),await((t,e,n,r)=>new Promise(((o,i)=>{const a={command:p.Init,data:{clientId:e,metadata:t},id:Date.now().toString()},{command:s,id:u}=a;y({command:s,id:u,reject:i,resolve:o}),n.postMessage(a),r.logInfo("Worker request sent",a)})))(t,e,i,n),{exchangeCodeForTokens:m(i,n),executeApiRequest:v(e,i,n),expireTokens:b(i,n),terminate:E(i,n)}})(e,n,i);return i.logInfo("Init completed",e),new A(a.origin,n,e,r,i)}catch(t){let e;throw e=t instanceof ApiError?t:new InitializationError(void 0,t),i.logError(e),e}}}var S=o.MS,I=o.cF,T=o.AK,R=o.M_,x=o.cX,C=o.O4,B=o._W,k=o.U$,O=o.U7,L=n(951);const U="1.0.0",j="Microsoft365",N=()=>{k(j)},M=()=>{O(j,U)};fin||Object.assign(window,{fin:{}}),Object.assign(fin,{Integrations:{Microsoft365:{enableLogging:M,disableLogging:N}}});const P=(t,e=!1)=>async(n,r,o,i,a)=>{var s;return n=(s=n).startsWith("/")?s:`/${s}`,t.executeApiRequest(n,r,o,i,a,e)},$=async(t,e,n=[])=>{const r=["id","userPrincipalName","userType",...n].join(","),o=await(async(t,e=[])=>{if(!(null==e?void 0:e.length))return[];const n=[];for(let r=0;r<e.length;r+=20){const o={requests:e.slice(r,r+20).map((t=>(t.id=crypto.randomUUID(),t)))};n.push(t.executeApiRequest("/v1.0/$batch","POST",o))}const r=(await Promise.all(n)).flatMap((t=>t.data.responses));return e.map((t=>{var e;return null===(e=r.find((e=>e.id===t.id)))||void 0===e?void 0:e.body}))})(t,e.map((t=>({method:"GET",url:`/users?$filter=mail eq '${encodeURIComponent(t)}'&$select=${r}`})))),i=o.map((t=>{var e;return null===(e=t.value)||void 0===e?void 0:e[0]}));return t.logger.logInfo("Resolved users from email addresses",i,e),i};var D=n(300);const W=t=>t.map((t=>t?{id:t.userPrincipalName,emailAddress:t.mail,name:t.displayName}:void 0)),F=async(t,e)=>{try{await fin.System.registerUsage({type:"integration-feature",data:{apiVersion:U,componentName:t}})}catch(n){e.logWarning(`Unable to register usage for feature ${t}: ${null==n?void 0:n.message}`)}},z=t=>{let e=t;return Array.isArray(t)?t.filter(Boolean).map(z):("object"==typeof t&&(e=Object.fromEntries(Object.entries(t).filter((([,t])=>void 0!==(null!=t?t:void 0))).map((([t,e])=>[t,z(e)])))),e)},q=t=>/#EXT#@/.test(t.userPrincipalName);var H;!function(t){t.MS365="MS-365",t.Teams="MS-TEAMS"}(H||(H={}));class V extends C{constructor(t,e,n,r,o,i,a,s){super(t,e,i,a,s),this._permissions=o,this._redirectUri=r,this._tenantId=n,F(H.MS365,s)}get currentUser(){return this._currentUser}get redirectUri(){return this._redirectUri}get permissions(){return this._permissions}get tenantId(){return this._tenantId}async authorize(t,e,n,r){await super.authorize(t,e,n,r);const o=await(async t=>{const{data:e}=await t.executeApiRequest("/v1.0/me");return e})(this);this._currentUser=o}getErrorMessageFromServerResponse(t){var e,n,r;if("string"==typeof t)try{return null===(n=null===(e=new URL(t).searchParams.get("error_description"))||void 0===e?void 0:e.split(/\r\n/))||void 0===n?void 0:n[0]}catch(t){return}return null===(r=null==t?void 0:t.error)||void 0===r?void 0:r.message}static async init(t,e,n,r,o,i,a){const s=await super.init(t,e,n,r);return new V(e,n,o,i,a,s.metadata,s.worker,s.logger)}}const G=["User.ReadBasic.All","Team.ReadBasic.All","Channel.ReadBasic.All","ChannelMessage.Send","Chat.Create","ChatMessage.Send","offline_access"];let J;const Y=async(t,e,n,r=[],o,i)=>{if(!t)throw new B("Invalid client ID");if(!e)throw new B("Invalid tenant ID");if(!n)throw new B("Invalid redirect URI");const a=`https://login.microsoftonline.com/${e}/v2.0/.well-known/openid-configuration`;(!J||J.clientId!==t||J.tenantId!==e||J.redirectUri!==n||(0,L.xor)(J.permissions,r).length>0)&&(J=await V.init(a,"https://graph.microsoft.com",t,j,e,n,r));const s=Object.assign({defaultHeight:600,defaultWidth:550},i);return await J.authorize(n,[...G,...r],o,s),{clientId:t,currentUser:J.currentUser,disconnect:J.close,executeApiRequest:P(J,!0),provider:J,tenantId:e}};class InteropError extends S{constructor(t,e){var n;super(t=null!==(n=null!=t?t:null==e?void 0:e.message)&&void 0!==n?n:"An interop error occurred",e)}}var K,X,Z,Q;!function(t){t.AppNotFound="AppNotFound",t.ErrorOnLaunch="ErrorOnLaunch",t.AppTimeout="AppTimeout",t.ResolverUnavailable="ResolverUnavailable"}(K||(K={})),function(t){t.NoAppsFound="NoAppsFound",t.ResolverUnavailable="ResolverUnavailable",t.UserCancelled="UserCancelledResolution",t.ResolverTimeout="ResolverTimeout",t.TargetAppUnavailable="TargetAppUnavailable",t.TargetInstanceUnavailable="TargetInstanceUnavailable",t.IntentDeliveryFailed="IntentDeliveryFailed"}(X||(X={})),function(t){t.NoResultReturned="NoResultReturned",t.IntentHandlerRejected="IntentHandlerRejected"}(Z||(Z={})),function(t){t.NoChannelFound="NoChannelFound",t.AccessDenied="AccessDenied",t.CreationFailed="CreationFailed"}(Q||(Q={}));var tt,et;!function(t){t.Chart="fdc3.chart",t.ChatInitSettings="fdc3.chat.initSettings",t.Contact="fdc3.contact",t.ContactList="fdc3.contactList",t.Country="fdc3.country",t.Currency="fdc3.currency",t.Email="fdc3.email",t.Instrument="fdc3.instrument",t.InstrumentList="fdc3.instrumentList",t.Organization="fdc3.organization",t.Portfolio="fdc3.portfolio",t.Position="fdc3.position",t.Nothing="fdc3.nothing",t.TimeRange="fdc3.timerange",t.Valuation="fdc3.valuation"}(tt||(tt={})),function(t){t.Bar="bar",t.Candle="candle",t.Custom="custom",t.Heatmap="heatmap",t.Histogram="histogram",t.Line="line",t.Mountain="mountain",t.Pie="pie",t.Scatter="scatter",t.StackedBar="stacked-bar"}(et||(et={}));function nt(t){return{arrayItems:t}}function rt(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return{unionMembers:e}}function ot(t,e){return{props:t,additional:e}}function it(t){return{props:[],additional:t}}function at(t){return{ref:t}}var st;Date,Date,Date,Date;!function(t){t.StartCall="StartCall",t.StartChat="StartChat",t.StartEmail="StartEmail",t.ViewAnalysis="ViewAnalysis",t.ViewChart="ViewChart",t.ViewContact="ViewContact",t.ViewHoldings="ViewHoldings",t.ViewInstrument="ViewInstrument",t.ViewInteractions="ViewInteractions",t.ViewNews="ViewNews",t.ViewOrders="ViewOrders",t.ViewProfile="ViewProfile",t.ViewQuote="ViewQuote",t.ViewResearch="ViewResearch"}(st||(st={}));const ut=async(t,e)=>{var n,r,o,i;const{chartImage:a,context:s}=e,{priceCurrent:u,priceHigh:l,priceLow:c,priceOpen:f}=e,d=(null===(r=null===(n=s.id)||void 0===n?void 0:n.ticker)||void 0===r?void 0:r.trim())||void 0,h=(null===(o=s.name)||void 0===o?void 0:o.trim())||void 0;let p,g,y,m,v,b;if(null!=e.timestamp||!a)try{p=new Date(null!==(i=e.timestamp)&&void 0!==i?i:Date.now()).toISOString().replace(/\.\d+Z$/,"+00:00")}catch(n){t.logger.logWarning("Invalid timestamp",e.timestamp)}if(null!=u&&null!=f&&(g=u-f,y=g/f*100,v=g>0?"▲":g<0?"▼":"●",m=g>0?"Good":g<0?"Attention":"Warning"),a){if(!/^image\/(gif|jp(e|e?g)|png)$/i.test(a.type))throw new B("Chart image MIME type not supported");try{b=await(async t=>new Promise(((e,n)=>{const r=new FileReader;r.onloadend=()=>e(r.result),r.onerror=()=>n(new Error("Failed to convert blob to base64")),r.readAsDataURL(t)})))(a)}catch(t){throw new S("Failed to convert blob to base64",t)}}const w=(await fin.System.getRuntimeInfo()).manifestUrl,_={context:s,intent:a?st.ViewChart:st.ViewInstrument,version:U},E=(A=_,(0,D.compress)(JSON.stringify(A),{outputEncoding:"Base64"}));var A;const I=`${w}?$$ofms365action=${encodeURIComponent(E)}`,T=`https://start.openfin.co/?manifest=${encodeURIComponent(I)}`,R={$schema:"http://adaptivecards.io/schemas/adaptive-card.json",type:"AdaptiveCard",version:"1.4",body:[{type:"ColumnSet",columns:[{type:"Column",width:"stretch",items:[{type:"Container",items:[{type:"TextBlock",text:null!=h?h:d.toUpperCase(),wrap:!0,size:"Large",spacing:"None"},h&&{type:"TextBlock",text:d.toUpperCase(),isSubtle:!0,wrap:!0,spacing:"None"},p&&{type:"TextBlock",text:`{{DATE(${p}, SHORT)}} {{TIME(${p})}}`,wrap:!0,size:"Small"}]}]},null!=u&&!b&&{type:"Column",width:"stretch",items:[{type:"TextBlock",text:u.toFixed(2),size:"ExtraLarge",wrap:!0,horizontalAlignment:"Right"},null!=g&&null!=y&&{type:"TextBlock",text:`${v} ${g.toFixed(2)} (${y.toFixed(2)}%)`,color:m,spacing:"None",wrap:!0,horizontalAlignment:"Right"},(null!=f||null!=l||null!=c)&&{type:"Container",horizontalAlignment:"Right",items:[{type:"ColumnSet",columns:[{type:"Column",width:"stretch",items:[null!=f&&{type:"TextBlock",text:"Open",wrap:!0,horizontalAlignment:"Right",size:"Small",weight:"Bolder",spacing:"None"},null!=l&&{type:"TextBlock",text:"High",wrap:!0,spacing:"None",horizontalAlignment:"Right",size:"Small",weight:"Bolder"},null!=c&&{type:"TextBlock",text:"Low",wrap:!0,spacing:"None",horizontalAlignment:"Right",size:"Small",weight:"Bolder"}]},{type:"Column",width:"auto",items:[null!=f&&{type:"TextBlock",text:f.toFixed(2),wrap:!0,spacing:"None",horizontalAlignment:"Right",size:"Small"},null!=l&&{type:"TextBlock",text:l.toFixed(2),wrap:!0,spacing:"None",horizontalAlignment:"Right",size:"Small"},null!=c&&{type:"TextBlock",text:c.toFixed(2),wrap:!0,spacing:"None",horizontalAlignment:"Right",size:"Small"}]}]}],spacing:"Small"}]}]},b&&{type:"Image",url:"../hostedContents/1/$value",spacing:"Small"},{type:"ActionSet",actions:[{type:"Action.OpenUrl",url:T,title:"Open"}]}]},x={attachments:[{id:"1",contentType:"application/vnd.microsoft.card.adaptive",content:JSON.stringify(z(R))}],body:{contentType:"html",content:'<attachment id="1"></attachment>'},summary:"Test summary"};if(b){const[,t,e]=[...b.match(/^data:([^;]+);base64,(.+)$/i)];x.hostedContents=[{"@microsoft.graph.temporaryId":"1",contentBytes:e,contentType:t}]}return x},lt=t=>t?"msteams:":"https://teams.microsoft.com",ct=async t=>{const e=null==t?void 0:t.ofms365action;if(e)try{const t=(t=>{const e=(0,D.decompress)(t,{inputEncoding:"Base64",outputEncoding:"String"});return JSON.parse(e)})(e),{context:n,intent:r}=t,o={context:n,name:r};return await fin.me.interop.fireIntent(o),o}catch(t){const e=t.message;throw new S("Failed to decompress share payload"+(e?` (${e})`:""),t)}},ft=async(t,e,n)=>{const r=await(async(t,e,n=[])=>{try{const r=["id",...n].join(","),{data:o}=await t.executeApiRequest(`/v1.0/teams/${encodeURIComponent(e)}?$select=${r}`);return o}catch(t){if(404!==t.status)throw t}})(t,e,["displayName"]);if(!r)return;let o;if(t.logger.logInfo("Resolved team",r),n){if(o=await(async(t,e,n,r=[])=>{try{const o=["id",...r].join(","),{data:i}=await t.executeApiRequest(`/v1.0/teams/${encodeURIComponent(n)}/channels/${encodeURIComponent(e)}?$select=${o}`);return i}catch(t){if(404!==t.status)throw t}})(t,n,e,["displayName"]),!o)return void t.logger.logWarning(`Could not resolve channel from id ${n}`)}else{t.logger.logInfo("No channel id supplied, using primary channel");const{data:n}=await t.executeApiRequest(`/v1.0/teams/${encodeURIComponent(e)}/primaryChannel?$select=displayName,id`);o=n}const i={channelId:o.id,channelName:o.displayName,teamId:r.id,teamName:r.displayName};return t.logger.logInfo("Resolved team channel",e,n,i),i};class dt{constructor(t,e=!0){this.logger=t.provider.logger,this.provider=t.provider,this.useMsTeamsProtocol=e,this.registerIntentHandlers=this.registerIntentHandlers.bind(this),this.share=this.share.bind(this),this.startCall=this.startCall.bind(this),this.startChat=this.startChat.bind(this),this.enableSharePayloadHandler(),F(H.Teams,this.logger)}async enableSharePayloadHandler(){const{initialOptions:t}=await fin.Application.getCurrentSync().getInfo(),{userAppConfigArgs:e}=t,n=await ct(e);n&&this.logger.logInfo("Firing intent",n),fin.Application.getCurrentSync().addListener("run-requested",(async t=>{try{const e=await ct(t.userAppConfigArgs);e&&this.logger.logInfo("Firing intent",e)}catch(t){this.logger.logError(t)}}))}async openUrl(t){this.logger.logInfo("openUrl started",t);try{const e=this.useMsTeamsProtocol?t.replace(/^https:\/\/teams.microsoft.com\//i,"msteams:"):t;this.logger.logInfo("Opening url",e),await fin.System.openUrlWithBrowser(e),this.logger.logInfo("openUrl completed")}catch(t){throw this.logger.logError(t),t}}async registerIntentHandlers(){if(this.logger.logInfo("registerIntentHandlers started"),this.unsubscribeIntentHandlers)return{unsubscribe:this.unsubscribeIntentHandlers};try{await fin.me.interop.getContextGroups();const t=await fin.me.interop.registerIntentHandler((async t=>{try{await((t,e)=>async n=>{var r,o,i,a;if(t.logger.logInfo("handleStartCallIntent started",n),(null===(r=n.name)||void 0===r?void 0:r.toLowerCase())!==st.StartCall.toLowerCase())throw new S(`Unexpected intent type: ${n.name}`);const{context:s}=n;if((null===(o=s.type)||void 0===o?void 0:o.toLowerCase())!==tt.Contact.toLowerCase()&&(null===(i=s.type)||void 0===i?void 0:i.toLowerCase())!==tt.ContactList.toLowerCase())throw new S(`Unexpected context type: ${s.type}`);const u=(null===(a=s.type)||void 0===a?void 0:a.toLowerCase())===tt.ContactList.toLowerCase()?s.contacts.map((t=>t.id.email)).filter(Boolean):[s.id.email],l=await e(u);t.logger.logInfo("handleStartCallIntent completed",l)})(this.provider,this.startCall)(t)}catch(t){throw this.logger.logError(t),t}}),"StartCall"),e=await fin.me.interop.registerIntentHandler((async t=>{try{await((t,e)=>async n=>{var r,o,i,a;if(t.logger.logInfo("handleStartChatIntent started",n),(null===(r=n.name)||void 0===r?void 0:r.toLowerCase())!==st.StartChat.toLowerCase())throw new S(`Unexpected intent type: ${n.name}`);const{context:s}=n;if((null===(o=s.type)||void 0===o?void 0:o.toLowerCase())!==tt.Contact.toLowerCase()&&(null===(i=s.type)||void 0===i?void 0:i.toLowerCase())!==tt.ContactList.toLowerCase())throw new S(`Unexpected context type: ${s.type}`);const u=(null===(a=s.type)||void 0===a?void 0:a.toLowerCase())===tt.ContactList.toLowerCase()?s.contacts.map((t=>t.id.email)).filter(Boolean):[s.id.email],l=await e({emailAddresses:u,topicName:s.name});t.logger.logInfo("handleStartChatIntent completed",l)})(this.provider,this.startChat)(t)}catch(t){throw this.logger.logError(t),t}}),"StartChat");return this.unsubscribeIntentHandlers=async()=>{this.logger.logInfo("unsubscribeIntentHandlers started"),await t.unsubscribe(),await e.unsubscribe(),this.unsubscribeIntentHandlers=void 0,this.logger.logInfo("unsubscribeIntentHandlers completed")},this.logger.logInfo("registerIntentHandlers completed"),{unsubscribe:this.unsubscribeIntentHandlers}}catch(t){const e=new InteropError(t.message);throw this.logger.logError(e),e}}async share(t){var e,n,r,o;this.logger.logInfo("share started",t);try{if(!t.target)throw new B("Target not provided");if((null===(e=t.context)||void 0===e?void 0:e.type.toLowerCase())!==tt.Instrument.toLowerCase())throw new B("Unsupported context type");if(!(null===(r=null===(n=t.context)||void 0===n?void 0:n.id)||void 0===r?void 0:r.ticker))throw new B("Ticker not provided");if(!t.chartImage&&null==t.priceCurrent)throw new B("Current price not provided");const i=null===(o=t.showMessage)||void 0===o||o,a=await ut(this.provider,t);let s;if(Array.isArray(t.target)){const{target:e}=t,n=await $(this.provider,e,["displayName","mail"]),r=n.filter(Boolean);if(!r.length)return this.logger.logWarning("Could not resolve any valid users from email addresses",e),e.map((()=>{}));const{id:o,webUrl:u}=await(async(t,e)=>{const n={chatType:e.length>2?"group":"oneOnOne",members:e.map((e=>({"@odata.type":"#microsoft.graph.aadUserConversationMember",roles:q(e)?["guest"]:["owner"],"user@odata.bind":`${t.apiOrigin}/v1.0/users('${e.id}')`})))},{data:r}=await t.executeApiRequest("/v1.0/chats","POST",n);return r})(this.provider,[this.provider.currentUser,...r]),{data:l}=await this.provider.executeApiRequest(`/v1.0/chats/${encodeURIComponent(o)}/messages`,"POST",a);this.logger.logInfo("Sent chat message",l),i&&await this.openUrl(u),s=W(n)}else{const{target:e}=t,n=await ft(this.provider,e.teamId,e.channelId);if(!n)return void this.logger.logWarning("Could not resolve team/channel",e.teamId,e.channelId);const{channelId:r,teamId:o}=n,{data:u}=await this.provider.executeApiRequest(`/v1.0/teams/${encodeURIComponent(o)}/channels/${encodeURIComponent(r)}/messages`,"POST",a);this.logger.logInfo("Sent chat message",u),i&&await this.openUrl(u.webUrl),s=n}return this.logger.logInfo("share completed",s),s}catch(t){throw this.logger.logError(t),t}}async startCall(t=[],e=!1){this.logger.logInfo("startCall started",t);try{let n=`${lt(this.useMsTeamsProtocol)}/l/call/0/0?`;const r=await $(this.provider,t,["displayName","mail"]),o=r.filter(Boolean).map((t=>encodeURIComponent(t.userPrincipalName)));if(!o.length)return this.logger.logWarning("Could not resolve any valid users from supplied emails",t),t.map((()=>{}));n+=`users=${o.join(",")}&withVideo=${e}`,this.logger.logInfo("Opening Teams",n),await fin.System.openUrlWithBrowser(n);const i=W(r);return this.logger.logInfo("startCall completed",i),i}catch(t){throw this.logger.logError(t),t}}async startChat(t){this.logger.logInfo("startChat started",t);try{let e,n;if("teamId"in t){const{teamId:r,channelId:o}=t,i=await ft(this.provider,r,o);if(!i)return void this.logger.logWarning("Could not resolve team/channel",r,o);e=`${lt(this.useMsTeamsProtocol)}/l/channel/${encodeURIComponent(i.channelId)}/${encodeURIComponent(i.channelName)}?groupId=${i.teamId}&tenantId=${this.provider.tenantId}`,n=i}else{const{emailAddresses:r,message:o,topicName:i}=t;e=`${lt(this.useMsTeamsProtocol)}/l/chat/0/0?`;const a=await $(this.provider,r,["displayName","mail"]),s=a.filter(Boolean).map((t=>encodeURIComponent(t.userPrincipalName)));if(!s.length)return this.logger.logWarning("Could not resolve any valid users from email addresses",r),r.map((()=>{}));e+=`users=${s.join(",")}`,i&&(e+=`&topicName=${encodeURIComponent(i)}`),o&&(e+=`&message=${encodeURIComponent(o)}`),n=W(a)}return this.logger.logInfo("Opening Teams",e),await fin.System.openUrlWithBrowser(e),this.logger.logInfo("startChat completed",n),n}catch(t){throw this.logger.logError(t),t}}}}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.c=e,n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nmd=t=>(t.paths=[],t.children||(t.children=[]),t);var r=n(n.s=408),o=r.MS,i=r.cF,a=r.AK,s=r.M_,u=r.cX,l=r.BT,c=r._W,f=r.Pg,d=r.$j,h=r.U$,p=r.U7;

/***/ }),

/***/ "../../node_modules/@openfin/workspace/index.js":
/*!******************************************************!*\
  !*** ../../node_modules/@openfin/workspace/index.js ***!
  \******************************************************/
/***/ ((module) => {

(()=>{"use strict";var e={703:(e,t,n)=>{n.r(t),n.d(t,{CLIAction:()=>l.Pt,CLIFilterOptionType:()=>l.el,CLITemplate:()=>l.yW,deregister:()=>tt,hide:()=>ot,register:()=>et,show:()=>nt});var o={};n.r(o),n.d(o,{subscribe:()=>ce});var r={};n.r(r),n.d(r,{create:()=>Ne});var i=n(678),s=n(532),a=n(436);const c="home";var d;!function(e){e.Commands="home-commands"}(d||(d={}));var u,p=n(806),l=(n(298),n(758));n(114),n(109),n(427);!function(e){e[e.Initial=0]="Initial",e[e.Open=1]="Open",e[e.Close=2]="Close"}(u||(u={}));var f=n(316);const w="all",g="0",h="5",y="6",v=()=>{};function m(e,t){return e?`${e}-${t}`:t}function P(e){return`__search-${e}-topic__`}const S=new Map;function k(e,t){S.has(e)||S.set(e,new Set),S.get(e).add(t)}function C(e,t){const n=S.get(e);n&&n.delete(t)}const W=new Map;function R(e,t){W.has(e)||W.set(e,new Set),W.get(e).add(t)}function I(e,t){const n=W.get(e);n&&n.delete(t)}const T=new Map;async function b(e,t){T.has(e)||T.set(e,new Map),T.get(e).set(t.id,t);const n=S.get(e);if(!n)return;const o=[...n].map((e=>e()));await Promise.all(o)}async function D(e,t){const n=T.get(e);if(!n)return;n.delete(t);const o=W.get(e);if(!o)return;const r=[...o].map((e=>e()));await Promise.all(r)}function B(e){const t=T.get(e);return t?[...t.values()]:[]}function F(e){const t=T.get(e);t&&t.clear()}function A(e,t){const n=T.get(e);return n?n.get(t):null}function L(e,t,n){return{...e,action:n||{...e.actions[0],trigger:f.px.UserAction},dispatcherIdentity:t}}function O(e,t,n="ascending"){const o=e||[];if(!t?.length)return o;const r=[],i=new Map;t.forEach((e=>{if(e.key)return i.set(e.key,e);r.push(e)}));let s=o.map((e=>{const{key:t}=e;if(t&&i.has(t)){const e=i.get(t);return i.delete(t),e}return e}));return s.push(...i.values(),...r),s="ascending"===n?s.sort(((e,t)=>(e?.score??1/0)-(t?.score??1/0))):s.sort(((e,t)=>(t?.score??1/0)-(e?.score??1/0))),s}function x(e){const t={};let n=[];let o=[];let r=u.Initial;t.getStatus=()=>r,t.getResultBuffer=()=>n,t.setResultBuffer=e=>{n=e,n?.length&&t.onChange()},t.getRevokedBuffer=()=>o,t.setRevokedBuffer=e=>{o=e,o?.length&&t.onChange()},t.onChange=v;const i={};return t.res=i,i.close=()=>{r!==u.Close&&(r=u.Close,t.onChange())},i.open=()=>{r!==u.Open&&(r=u.Open,t.onChange())},i.respond=n=>{const o=O(t.getResultBuffer(),n,e);t.setResultBuffer(o)},i.revoke=(...e)=>{const n=new Set(e),o=t.getResultBuffer().filter((({key:e})=>{const t=n.has(e);return t&&n.delete(e),!t}));t.setResultBuffer(o),n.size&&(t.getRevokedBuffer().forEach((e=>n.add(e))),t.setRevokedBuffer([...n]))},t}function V(e,t,n){const o=new Set;let r=!1;return{close:()=>{r=!0;for(const e of o)e()},req:{id:t,topic:e,...n,context:n?.context||{},onClose:e=>{o.add(e),r&&e()},removeListener:e=>{o.delete(e)}}}}function E(){return{name:fin.me.name,uuid:fin.me.uuid}}function M(){let e;try{e=fin.Platform.getCurrentSync().identity.uuid}catch(e){}return e}const _="deregistered or does not exist",$=new Error(`provider ${_}`),q=new Error("provider with name already exists"),G=new Error("bad payload"),H=new Error("subscription rejected"),N=new Error(`channel ${_}`),U=new Map;function j(e){const t=X(e);if(t)return t;throw N}function X(e){const t=U.get(e);if(t)return t}function K(e,t){U.set(e,t)}function J(e){console.error("OpenFin Search API: ",e)}const z=new Map;function Z(e){z.has(e)||z.set(e,new Map);const t=z.get(e);return{getRequestsForIdentity:e=>{const n=function(e){return`${e.uuid}:${e.name}`}(e);return t.has(n)||t.set(n,new Map),t.get(n)}}}async function Y(e,t){return(await j(e)).dispatch(g,t)}function Q({namespacedTopic:e,topic:t}){const n=A.bind(null,e),o=Z(e),r=Y.bind(null,e);return async(e,i)=>{if(!e||!e.id||!e.providerId){const e=G;return J(e),{error:e.message}}const{id:s,providerId:a}=e,c=n(a);if(!c){const e=$;return J(e),{error:e.message}}const d=o.getRequestsForIdentity(i);let u=d.get(e.id);u||(u=V(t,s,e),d.set(e.id,u));const p=x(),l=()=>{const e=p.getResultBuffer();p.setResultBuffer([]);const t=p.getRevokedBuffer();p.setRevokedBuffer([]);const n=p.getStatus();r({id:s,providerId:a,results:e,revoked:t,status:n})};let f=!0,w=!1;p.onChange=()=>{if(f)return f=!1,void l();w||(w=!0,setTimeout((()=>{w=!1,l()}),100))};try{const{results:e,context:t}=await c.onUserInput(u.req,p.res),n=p.getStatus();return{id:s,providerId:a,status:n,results:e,context:t}}catch(e){return J(e),{id:s,providerId:a,error:e?.message}}}}async function ee(e,t,n){const o=n||await j(e),r=E(),i={...t,identity:r,onResultDispatch:void 0},s=await o.dispatch("2",i);return await b(e,{identity:r,...t}),s}async function te(e,t){const n=await j(e);return await n.dispatch("3",t),D(e,t)}async function ne(e,t,n,o){const r=L(n,E(),o),i=A(e,t);if(i){const{onResultDispatch:e}=i;if(!e)return;return e(r)}const s={providerId:t,result:r};return(await j(e)).dispatch(h,s)}async function oe(e,t){const n={...t,context:t?.context||{}},o={},r=async function*(e,t,{setState:n}){const o=await j(e);for(;;){const e=await o.dispatch("1",t),r=e.error;if(r)throw new Error(r);const i=e;if(t.id=i.id,n(i.state),i.done)return i.value;yield i.value}}(e,n,{setState:e=>{o.state=e}});let i=await r.next();return o.id=n.id||"",o.close=()=>{!async function(e,t){(await j(e)).dispatch(y,{id:t})}(e,o.id)},o.next=()=>{if(i){const e=i;return i=void 0,e}return r.next()},o}async function re(e){return(await j(e)).dispatch("4",null)}async function ie(e){const t=await j(e);var n;n=e,U.delete(n),F(e),await t.disconnect()}function se(e){const{namespacedTopic:t}=e,n=Z(t);return async o=>{if(!X(t))return;const r=n.getRequestsForIdentity(o);for(const{req:e,close:t}of r.values())t(),r.delete(e.id);K(t,(async e=>{const{namespacedTopic:t}=e,n=await ae(e);for(const e of B(t))await ee(t,e,n);return n})(e))}}async function ae(e){const{namespacedTopic:t}=e,n=P(t),o=await async function(e){for(let t=0;t<50;t++)try{return await fin.InterApplicationBus.Channel.connect(e,{wait:!1})}catch(e){if(49===t)throw e;await new Promise((e=>setTimeout(e,1e3)))}}(n);return o.register(g,Q(e)),o.register(y,function(e){const t=Z(e);return(e,n)=>{const o=t.getRequestsForIdentity(n),r=o.get(e.id);r&&(r.close(),o.delete(e.id))}}(t)),o.register(h,function(e){return async(t,n)=>{if(!t||!t.providerId||!t.result)return void J(G);const o=A(e,t.providerId);if(!o)return void J($);const{onResultDispatch:r}=o;return r?(t.result.dispatcherIdentity=n,r(t.result)):void 0}}(t)),o.onDisconnection(se(e)),o}async function ce(e){const t="string"==typeof e?e:e.topic,n="string"==typeof e?void 0:e.uuid,o=t||w,r=n||M()||"",i=m(r,o),s={topic:o,namespace:r,namespacedTopic:i};let a=X(i);return a||(a=ae(s),K(i,a),await a),{getAllProviders:re.bind(null,i),register:ee.bind(null,i),search:oe.bind(null,i),deregister:te.bind(null,i),dispatch:ne.bind(null,i),disconnect:ie.bind(null,i)}}const de=new Map;function ue(e){const t=pe(e);if(t)return t;throw N}function pe(e){const t=de.get(e);if(t)return t}const le=new Map;function fe(e,t){le.has(e)||le.set(e,new Set),le.get(e).add(t)}function we(e,t){const n=le.get(e);n&&n.delete(t)}async function ge(e){return[...B(e)].map((e=>({...e,onUserInput:void 0,onResultDispatch:void 0})))}async function he(e,t){if(A(e,t.id))throw new Error("provider with name already exists");const n=E();return await b(e,{identity:n,...t}),{workspaceVersion:i.u0||"",clientAPIVersion:t.clientAPIVersion||""}}async function ye(e,t){await D(e,t)}async function ve(e,t,n,o){const r=A(e,t);if(!r)throw $;const{onResultDispatch:i}=r;if(!i)return;return i(L(n,E(),o))}async function*me(e,t,n){const o=function(e,t){const n=[],o=[],r=[],i=[];for(const s of e){const e=x(s.scoreOrder),a={results:[],provider:{id:s.id,identity:s.identity,title:s.title,scoreOrder:s.scoreOrder,icon:s.icon,dispatchFocusEvents:s.dispatchFocusEvents}};n.push(a),o.push(e);const c=(async()=>{try{const{results:n,context:o}=await s.onUserInput(t,e.res);a.results=O(a.results||[],n),a.context={...a.context,...o}}catch(e){a.error=e}})();c.finally((()=>{c.done=!0})),i.push(c),r.push(r.length)}return{providerResponses:n,listenerResponses:o,openListenerResponses:r,initialResponsePromises:i}}(t.targets?t.targets.map((t=>A(e,t))).filter((e=>!!e)):[...B(e).filter((e=>!e.hidden))],t),{providerResponses:r,listenerResponses:i}=o;let{openListenerResponses:s,initialResponsePromises:a}=o,c=f.De.Fetching;const d=e=>{c=e,n.setState(c)};let p,l=!1;t.onClose((()=>{l=!0,p&&p()}));do{let e=!1;if(a.length){const t=[];for(const n of a)n.done?e=!0:t.push(n);a=t,a.length||(d(f.De.Fetched),e=!0)}let t,n=!1;const o=()=>{n=!0,t&&t()},w=[];for(const t of s){const n=i[t],s=r[t],a=n.getStatus();(a===u.Open||c===f.De.Fetching&&a===u.Initial)&&(w.push(t),n.onChange=o);const d=n.getResultBuffer();d.length&&(n.setResultBuffer([]),s.results=O(s.results||[],d),e=!0);const p=n.getRevokedBuffer();if(p.length){n.setRevokedBuffer([]);const t=new Set(p);s.results=(s.results||[]).filter((({key:e})=>!t.has(e))),e=!0}}if(s=w,e&&(yield r),l)break;n||(s.length||a.length)&&await Promise.race([...a,new Promise((e=>{t=e})),new Promise((e=>{p=e}))])}while(s.length||a.length);return d(f.De.Complete),r}let Pe=0;async function Se({namespacedTopic:e,topic:t},n){Pe+=1;const o=V(t,Pe.toString(),n),r=me(e,o.req,{setState:e=>{r.state=e}});return r.id=Pe.toString(),r.close=o.close,r.state=f.De.Fetching,r}const ke=new Map;function Ce(e,t){return`${e}:${t}`}function We(e){return async t=>{if(!t)return J(G),{error:G.message};let n;if(t.id)n=Ce(e.namespacedTopic,t.id);else{const o=await Se(e,t);n=Ce(e.namespacedTopic,o.id),t.id=o.id,ke.set(n,{generator:o})}const o=ke.get(n);clearTimeout(o.timeout);const r=await o.generator.next();return o.timeout=function(e){return window.setTimeout((()=>{ke.delete(e)}),1e4)}(n),{...r,id:t.id,state:o.generator.state}}}function Re(e,t,n){return ue(e).dispatch(t,y,{id:n})}function Ie(e){return t=>function(e,t){const n=Ce(e,t),o=ke.get(n);o&&o.generator.close()}(e,t.id)}async function Te(e,t,{id:n,query:o,context:r,targets:i=[]}){const s=ue(e),a={id:n,query:o,context:r,targets:i,providerId:t.id},c=await s.dispatch(t.identity,g,a),d=c.error;if(d)throw new Error(d);return c}const be=new Map;function De(e,t,n){return`${e}:${t.name}:${t.uuid}:${n}`}const Be=new Map;function Fe(e,t,n){return`${e}:${t}:${n}`}function Ae(e,t){const n=De.bind(null,e,t.identity),o=Re.bind(null,e,t.identity),r=Te.bind(null,e,t);return async(i,s)=>{const a=n(i.id);if(!be.has(a)){const e=()=>{o(i.id),be.delete(a)};be.set(a,e),i.onClose(e)}const c=Fe(e,t.id,i.id),d=()=>{Be.delete(c),s.close()};i.onClose(d),Be.set(c,(e=>{e.results?.length&&s.respond(e.results),e.revoked?.length&&s.revoke(...e.revoked),e.status===u.Open&&s.open(),e.status===u.Close&&d()}));const p=await r(i);return p.status===u.Open&&s.open(),p.status!==u.Close&&p.status!==u.Initial||d(),p}}function Le(e,t){return async n=>{const o=ue(e),r={providerId:t.id,result:n};return o.dispatch(t.identity,h,r)}}const Oe=new Map;function xe(e,t){return`${e}-${t.name}-${t.uuid}`}function Ve(e){return async(t,n)=>{if(!t||!t.id)return J(new Error(JSON.stringify(t))),void J(G);if(A(e,t.id))throw q;return t.identity=n,await async function(e,t){const n=xe(e,t.identity);Oe.has(n)||Oe.set(n,[]),Oe.get(n).push(t.id),await b(e,{...t,onUserInput:Ae(e,t),onResultDispatch:Le(e,t)})}(e,t),{workspaceVersion:i.u0||"",clientAPIVersion:t.clientAPIVersion||""}}}function Ee(e){return t=>{t?function(e,t){const n=A(e,t);if(!n)return;const o=xe(e,n.identity),r=Oe.get(o);if(r){const n=r.findIndex((e=>e===t));-1!==n&&(r.splice(n,1),D(e,t))}}(e,t):J(G)}}const Me=new Map;function _e(e,t){Me.has(e)||Me.set(e,new Set),Me.get(e).add(t)}function $e(e,t){const n=Me.get(e);n&&n.delete(t)}function qe(e){return async t=>{!function(e,t){const n=xe(e,t),o=Oe.get(n);if(o){for(const t of o)D(e,t);Oe.delete(n)}}(e,t);const n=Me.get(e);n&&n.forEach((e=>e(t)))}}async function Ge(e){const{namespacedTopic:t}=e,n=P(e.namespacedTopic),o=await(r=n,fin.InterApplicationBus.Channel.create(r));var r;return o.onConnection(function({namespacedTopic:e}){return async t=>{const n=le.get(e);if(n)for(const e of n)if(!await e(t))throw H}}(e)),o.onDisconnection(qe(t)),o.register(y,Ie(t)),o.register(g,function(e){return t=>{const n=Fe(e,t.providerId,t.id),o=Be.get(n);o&&o(t)}}(t)),o.register("2",Ve(t)),o.register("3",Ee(t)),o.register("4",function(e){return async()=>ge(e)}(t)),o.register("1",We(e)),o.register(h,function(e){return async(t,n)=>{if(!t||!t.providerId||!t.result)return void J(G);const o=A(e,t.providerId);if(!o)throw $;const{onResultDispatch:r}=o;return r?(t.result.dispatcherIdentity=n,r(t.result)):void 0}}(t)),o}async function He(e){const t=ue(e);var n;n=e,de.delete(n),await t.destroy(),F(e)}async function Ne(e){const t=("string"==typeof e?e:e?.topic||"")||w,n=M()||"",o=m(n,t),r={topic:t,namespace:n,namespacedTopic:o};let i=pe(o);i||(i=await Ge(r),function(e,t){de.set(e,t)}(o,i));const s=we.bind(null,o),a=$e.bind(null,o),c=C.bind(null,o),d=I.bind(null,o);return{getAllProviders:ge.bind(null,o),search:Se.bind(null,r),register:he.bind(null,o),deregister:ye.bind(null,o),onSubscription:fe.bind(null,o),onDisconnect:_e.bind(null,o),onRegister:k.bind(null,o),onDeregister:R.bind(null,o),dispatch:ve.bind(null,o),disconnect:He.bind(null,o),removeListener:e=>{s(e),a(e),c(e),d(e)}}}const{create:Ue}=r,{subscribe:je}=o,Xe={create:Ue,subscribe:je,defaultTopic:"all"},Ke=()=>{window.search=Xe},Je=e=>{const t=()=>{Ke(),window.removeEventListener(e,t)};return t};if("undefined"!=typeof window){Ke();const e="load",t=Je(e);window.addEventListener(e,t);const n="DOMContentLoaded",o=Je(n);window.addEventListener(n,o)}const ze=new Map;async function Ze(){await async function(e){ze.set(e,await je({topic:e,uuid:p.q9.Workspace}))}(c)}let Ye;async function Qe(e){return await async function(){return Ye||(Ye=Ze()),Ye}(),ze.get(e)}const et=async e=>{if(!e.icon)throw new Error(`${e.id} provider needs to have icon property defined.`);await(0,a.aB)();const t=await Qe(c);try{e.clientAPIVersion=i.u0;const n=await t.register(e);return(0,s.ck)({allowed:!0,componentVersion:n?.workspaceVersion}),n?.workspaceVersion,i.u0,n}catch(e){throw(0,s.ck)({allowed:!1,rejectionCode:e.message}),e}},tt=async e=>{await(0,a.aB)();return(await Qe(c)).deregister(e)};async function nt(){return(await(0,a.Xl)()).dispatch(a.WF.ShowHome,void 0)}async function ot(){return(await(0,a.Xl)()).dispatch(a.WF.HideHome,void 0)}},298:(e,t,n)=>{n.d(t,{p:()=>o.px,w:()=>o.wt});var o=n(316)},427:(e,t,n)=>{var o;n.d(t,{v:()=>o}),function(e){e.ActionButton="ActionButton",e.DropdownButton="DropdownButton"}(o||(o={}))},758:(e,t,n)=>{var o,r,i;n.d(t,{Pt:()=>o,el:()=>i,yW:()=>r}),function(e){e.Suggestion="suggestion"}(o||(o={})),function(e){e.Contact="Contact",e.Custom="Custom",e.List="List",e.Plain="Plain",e.SimpleText="SimpleText",e.Loading="Loading",e.Error="Error"}(r||(r={})),function(e){e.MultiSelect="MultiSelect"}(i||(i={}))},114:(e,t,n)=>{var o,r;n.d(t,{L:()=>o,T:()=>r}),function(e){e.Snapshot="snapshot",e.Manifest="manifest",e.View="view",e.External="external"}(o||(o={})),function(e){e.LandingPage="landingPage",e.AppGrid="appGrid"}(r||(r={}))},109:(e,t,n)=>{n.d(t,{Go:()=>r,ZJ:()=>s,bI:()=>i,p6:()=>o});const o={Container:"Container",Button:"Button"},r={Text:"Text",Image:"Image",List:"List"},i={...o,...r};var s;!function(e){e.Primary="primary",e.Secondary="secondary",e.TextOnly="textOnly"}(s||(s={}))},528:(e,t,n)=>{n.r(t),n.d(t,{AppManifestType:()=>s.L,StorefrontTemplate:()=>s.T,deregister:()=>g,hide:()=>h,register:()=>w,show:()=>y});var o=n(532),r=n(436),i=n(82),s=n(114),a=n(678);let c,d=!1;async function u(e,t,n){const o=await(0,r.Dm)();try{return await o.dispatch(e.action,e.payload)}catch(r){if(-1!==r.toString().indexOf(e.action))return d||console.warn("You are using a newer version of the Workspace client library that is not supported by the currently running workspace provider. Please upgrade the Workspace to version 9.0 or later."),d=!0,await o.dispatch(t.action,t.payload),n;throw r}}const p=new Map,l=e=>{if(!p.has(e))throw new Error(`Storefront Provider with id ${e} is not registered`);return p.get(e)},f=async e=>{const t=await(0,r.Xl)();if(p.has(e.id))throw new Error(`Storefront provider with id ${e.id} already registered`);return p.set(e.id,e),(e=>{e.isStorefrontActionsRegistered||(e.isStorefrontActionsRegistered=!0,e.register(r.WF.GetStorefrontProviderApps,(e=>l(e).getApps())),e.register(r.WF.GetStorefrontProviderFooter,(e=>l(e).getFooter())),e.register(r.WF.GetStorefrontProviderLandingPage,(e=>l(e).getLandingPage())),e.register(r.WF.GetStorefrontProviderNavigation,(e=>l(e).getNavigation())),e.register(r.WF.LaunchStorefrontProviderApp,(({id:e,app:t})=>l(e).launchApp(t))))})(t),e.clientAPIVersion=a.u0,u({action:r.WF.RegisterProvider,payload:{providerType:i.lP.Storefront,info:e}},{action:r.WF.RegisterStorefrontProvider,payload:e},{workspaceVersion:"unknown"})},w=e=>(c=new Promise((async(t,n)=>{try{const n=await f(e);(0,o.d9)({allowed:!0,componentVersion:n?.workspaceVersion}),n?.workspaceVersion,a.u0,t({clientAPIVersion:a.u0,workspaceVersion:n?.workspaceVersion??""})}catch(e){(0,o.d9)({allowed:!1,rejectionCode:e.message}),n(e)}})),c),g=async e=>(await c,p.delete(e),await(0,r.aB)(),u({action:r.WF.DeregisterProvider,payload:{providerType:i.lP.Storefront,id:e}},{action:r.WF.DeregisterStorefrontProvider,payload:e})),h=async()=>(await c,await(0,r.aB)(),u({action:r.WF.HideProviderWindow,payload:{providerType:i.lP.Storefront}},{action:r.WF.HideStorefront})),y=async()=>(await c,await(0,r.aB)(),u({action:r.WF.ShowProviderWindow,payload:{providerType:i.lP.Storefront}},{action:r.WF.ShowStorefront}))},436:(e,t,n)=>{n.d(t,{WF:()=>s,Dm:()=>a,Xl:()=>p,aB:()=>u});var o=n(678);const r=o.Ax&&"complete"!==document.readyState&&new Promise((e=>document.addEventListener("readystatechange",(()=>{"complete"===document.readyState&&e()}))));var i=n(121);var s;!function(e){e.RegisterProvider="register-provider",e.DeregisterProvider="deregister-provider",e.CreateProviderWindow="create-provider-window",e.GetProviders="get-providers",e.ShowProviderWindow="show-provider-window",e.HideProviderWindow="hide-provider-window",e.GetStorefrontProviderApps="get-storefront-provider-apps",e.GetStorefrontProviderLandingPage="get-storefront-provider-landing-page",e.GetStorefrontProviderFooter="get-storefront-provider-footer",e.GetStorefrontProviderNavigation="get-storefront-provider-navigation",e.LaunchStorefrontProviderApp="launch-storefront-provider-app",e.ShowHome="show-home",e.HideHome="hide-home",e.AssignHomeSearchContext="assign-home-search-context",e.GetLegacyPages="get-legacy-pages",e.GetLegacyWorkspaces="get-legacy-workspaces",e.GetComputedPlatformTheme="get-computed-platform-theme",e.RegisterStorefrontProvider="register-storefront-provider",e.DeregisterStorefrontProvider="deregister-storefront-provider",e.HideStorefront="hide-storefront",e.ShowStorefront="show-storefront"}(s||(s={}));const a=function(e){let t;return()=>{if(!o.sS)throw new Error("getChannelClient cannot be used outside an OpenFin env. Avoid using this method during pre-rendering.");return t||(t=(async()=>{await r;const n={clientAPIVersion:o.u0},i=await fin.InterApplicationBus.Channel.connect(e,{payload:n});return i.onDisconnection((async()=>{console.warn(`disconnected from channel provider ${e}`),t=void 0})),i})().then((e=>e)).catch((n=>{throw t=void 0,new Error(`failed to connect to channel provider ${e}: ${n}`)}))),t}}("__of_workspace_protocol__"),c="isLaunchedViaLib",d=e=>{const t=new URL(e);return t.searchParams.append(c,"true"),t.toString()},u=async()=>{await(0,i.JV)(i.iW)||((o.ZK||-1===navigator.userAgent.indexOf("Win"))&&await fin.Application.startFromManifest(d(o.aW)),await fin.System.openUrlWithBrowser(d(o.GX)))},p=async()=>(await u(),a())},82:(e,t,n)=>{n.d(t,{R8:()=>s,X_:()=>i,lP:()=>o});var o,r=n(436);!function(e){e.Storefront="storefront",e.Dock="dock"}(o||(o={}));const i=async e=>(await(0,r.Dm)()).dispatch(r.WF.ShowProviderWindow,{providerType:e}),s=async e=>(await(0,r.Dm)()).dispatch(r.WF.HideProviderWindow,{providerType:e})},806:(e,t,n)=>{n.d(t,{q9:()=>o});var o,r,i,s=n(678);!function(e){e.Workspace="openfin-browser"}(o||(o={})),function(e){e.RunRequested="run-requested",e.WindowOptionsChanged="window-options-changed",e.WindowClosed="window-closed",e.WindowCreated="window-created"}(r||(r={})),function(e){e.FinProtocol="fin-protocol"}(i||(i={}));s.AB,o.Workspace},678:(e,t,n)=>{var o;n.d(t,{AB:()=>a,Ax:()=>i,GX:()=>u,ZK:()=>d,aW:()=>p,oC:()=>c,sS:()=>r,u0:()=>f}),function(e){e.Local="local",e.Dev="dev",e.Staging="staging",e.Prod="prod"}(o||(o={}));const r="undefined"!=typeof window&&"undefined"!=typeof fin,i=("undefined"==typeof process||process.env?.JEST_WORKER_ID,"undefined"!=typeof window),s=i?window.origin:o.Local,a=r&&fin.me.uuid,c=r&&fin.me.name,d=(r&&fin.me.entityType,"prod"===o.Local),u=(o.Dev,o.Staging,o.Prod,"fins://system-apps/workspace"),p="https://cdn.openfin.co/workspace/9.2.5/app.json",l=e=>e.startsWith("http://")||e.startsWith("https://")?e:s+e,f=(l("https://cdn.openfin.co/workspace/9.2.5"),l("https://cdn.openfin.co/workspace/9.2.5"),"undefined"!=typeof WORKSPACE_DOCS_PLATFORM_URL&&l(WORKSPACE_DOCS_PLATFORM_URL),"undefined"!=typeof WORKSPACE_DOCS_CLIENT_URL&&l(WORKSPACE_DOCS_CLIENT_URL),"9.2.5")},532:(e,t,n)=>{n.d(t,{Wn:()=>d,ck:()=>a,d9:()=>c});var o,r=n(678),i=n(121);!function(e){e.Browser="Browser",e.Dock="Dock",e.Home="Home",e.Notification="Notification",e.Storefront="Storefront",e.Platform="Platform",e.Theming="Theming"}(o||(o={}));const s=async(e,t)=>{const n={apiVersion:t.apiVersion||r.u0,componentName:e,componentVersion:t.componentVersion||r.u0,allowed:t.allowed,rejectionCode:t.rejectionCode};fin.System.registerUsage({type:"workspace-licensing",data:n})},a=async e=>{i.OI.uuid===i.Gi.uuid&&i.OI.name===i.Gi.name||s(o.Home,e)},c=async e=>{s(o.Storefront,e)},d=async e=>{s(o.Dock,e)}},121:(e,t,n)=>{n.d(t,{Gi:()=>d,JV:()=>l,OI:()=>u,iW:()=>p});var o,r,i,s=n(806),a=n(678);!function(e){e.Home="openfin-home",e.Dock="openfin-dock",e.Storefront="openfin-storefront",e.HomeInternal="openfin-home-internal",e.BrowserMenu="openfin-browser-menu",e.BrowserIndicator="openfin-browser-indicator",e.BrowserWindow="internal-generated-window",e.ClassicWindow="internal-generated-classic-window"}(o||(o={})),function(e){e.Shown="shown",e.BoundsChanged="bounds-changed",e.LayoutReady="layout-ready",e.EndUserBoundsChanging="end-user-bounds-changing",e.Blurred="blurred",e.Closed="closed",e.CloseRequested="close-requested",e.Focused="focused",e.ShowRequested="show-requested",e.ViewCrashed="view-crashed",e.ViewAttached="view-attached",e.ViewDetached="view-detached",e.ViewPageTitleUpdated="view-page-title-updated",e.ViewDestroyed="view-destroyed",e.OptionsChanged="options-changed"}(r||(r={})),function(e){e.BeforeUnload="beforeunload"}(i||(i={}));function c(e){if(!a.sS)throw new Error("getOFWindow can only be used in an OpenFin env. Avoid calling this method during pre-rendering.");return fin.Window.wrapSync(e)}const d={name:a.oC,uuid:a.AB};const u={name:o.Home,uuid:s.q9.Workspace},p=(o.Dock,s.q9.Workspace,o.Storefront,s.q9.Workspace,{name:s.q9.Workspace,uuid:s.q9.Workspace});const l=e=>c(e).getOptions().then((()=>!0)).catch((()=>!1))},316:(e,t,n)=>{var o,r,i;n.d(t,{De:()=>o,px:()=>r,wt:()=>i}),function(e){e.Fetching="fetching",e.Fetched="fetched",e.Complete="complete"}(o||(o={})),function(e){e.UserAction="user-action",e.FocusChange="focus-change",e.Reload="reload"}(r||(r={})),function(e){e.Active="active",e.Default="default"}(i||(i={}))}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};(()=>{n.r(o),n.d(o,{ActionTrigger:()=>S.p,AppManifestType:()=>W.L,ButtonStyle:()=>k.ZJ,CLIAction:()=>C.Pt,CLIFilterOptionType:()=>C.el,CLITemplate:()=>C.yW,ContainerTemplateFragmentNames:()=>k.p6,Dock:()=>e,DockButtonNames:()=>c.v,Home:()=>h,Legacy:()=>t,PresentationTemplateFragmentNames:()=>k.Go,SearchTagBackground:()=>S.w,Storefront:()=>P,StorefrontTemplate:()=>W.T,TemplateFragmentTypes:()=>k.bI});var e={};n.r(e),n.d(e,{DockButtonNames:()=>c.v,deregister:()=>l,minimize:()=>f,register:()=>p,show:()=>w});var t={};n.r(t),n.d(t,{getPages:()=>v,getWorkspaces:()=>m});var r=n(678),i=n(532),s=n(436),a=n(82),c=n(427);let d,u=!1;const p=e=>(d=new Promise((async(t,n)=>{try{const n=await(async e=>{const t=await(0,s.Xl)();if(u)throw new Error("A dock provider for the platform is already registered.");return u=!0,e.clientAPIVersion=r.u0,t.dispatch(s.WF.RegisterProvider,{providerType:a.lP.Dock,info:e})})(e);(0,i.Wn)({allowed:!0,componentVersion:n?.workspaceVersion}),n?.workspaceVersion,r.u0,t({clientAPIVersion:r.u0,workspaceVersion:n?.workspaceVersion??""})}catch(e){(0,i.Wn)({allowed:!1,rejectionCode:e.message}),n(e),d=null}})),d),l=async()=>{await d,u=!1;return(await(0,s.Xl)()).dispatch(s.WF.DeregisterProvider,{providerType:a.lP.Dock})},f=async()=>{await d,await(0,s.aB)(),await(0,a.R8)(a.lP.Dock)},w=async()=>{await d,await(0,s.aB)(),await(0,a.X_)(a.lP.Dock)};var g,h=n(703);n(121);!function(e){e.TabCreated="tab-created",e.ContainerCreated="container-created",e.ContainerResized="container-resized"}(g||(g={}));new Map;var y;!function(e){e.CurrentWorkspaceId="currentWorkspaceId",e.LastFocusedBrowserWindow="lastFocusedBrowserWindow",e.MachineName="machineName",e.NewTabPageLayout="NewTabPageLayout",e.NewTabPageSort="NewTabPageSort",e.DockPosition="DockPosition"}(y||(y={}));const v=()=>async function(){return(await(0,s.Dm)()).dispatch(s.WF.GetLegacyPages,void 0)}(),m=()=>(async()=>(await(0,s.Dm)()).dispatch(s.WF.GetLegacyWorkspaces,void 0))();var P=n(528),S=n(298),k=n(109),C=n(758),W=n(114)})(),module.exports=o})();
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./client/src/integrations/ms365/integration-provider.ts":
/*!***************************************************************!*\
  !*** ./client/src/integrations/ms365/integration-provider.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Microsoft365Provider": () => (/* binding */ Microsoft365Provider)
/* harmony export */ });
/* harmony import */ var _openfin_microsoft365__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openfin/microsoft365 */ "../../node_modules/@openfin/microsoft365/openfin.ms365.js");
/* harmony import */ var _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @openfin/workspace */ "../../node_modules/@openfin/workspace/index.js");
/* harmony import */ var _openfin_workspace__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_openfin_workspace__WEBPACK_IMPORTED_MODULE_1__);


/**
 * Implement the integration provider for microsoft 365 results.
 */
class Microsoft365Provider {
    /**
     * Create a new instance of Microsoft365Provider.
     */
    constructor() {
        this._profileImageCache = {};
        this._teamsAndChannelsCache = [];
        this._cacheCounter = 0;
    }
    /**
     * Initialize the module.
     * @param definition The definition of the module from configuration include custom options.
     * @param loggerCreator For logging entries.
     * @param helpers Helper methods for the module to interact with the application core.
     * @returns Nothing.
     */
    async initialize(definition, loggerCreator, helpers) {
        this._settings = definition.data;
        this._integrationHelpers = helpers;
        this._logger = loggerCreator("Microsoft365Provider");
        await this.connectProvider();
        const theme = await this._integrationHelpers.getCurrentTheme();
        const themedIcons = ["calendar", "call", "channel", "chat", "contact", "email", "share", "team"];
        for (const themedIcon of themedIcons) {
            const response = await fetch(this._settings.images[themedIcon]);
            let svg = await response.text();
            svg = svg.replace(/rgb\(0,0,0\)/g, theme.palette.textDefault);
            this._settings.images[themedIcon] = this.svgToInline(svg);
        }
        this._cacheIntervalId = window.setInterval(async () => this.updateCache(), 30000);
        window.setTimeout(async () => {
            await this.updateCache();
        }, 0);
    }
    /**
     * The module is being deregistered.
     * @returns Nothing.
     */
    async closedown() {
        if (this._ms365Connection) {
            this._logger.info("Disconnecting from MS Graph API");
            await this._ms365Connection.disconnect();
            this._ms365Connection = undefined;
        }
        if (this._cacheIntervalId) {
            window.clearInterval(this._cacheIntervalId);
            this._cacheIntervalId = undefined;
        }
    }
    /**
     * Get a list of the static help entries.
     * @returns The list of help entries.
     */
    async getHelpSearchEntries() {
        const additionalDescription = [];
        const additionalHelp = [];
        if (!this._settings.disableGraphExplorer) {
            additionalDescription.push("You can also specify a query as a graph explorer path and parameters, by using the /ms prefix");
            additionalHelp.push("/ms/me", "/ms/users?$filter=startsWith(displayName,'john')");
        }
        return [
            {
                key: `${Microsoft365Provider._PROVIDER_ID}-help1`,
                title: "Microsoft 365",
                label: "Help",
                icon: this._settings.images.microsoft365,
                actions: [],
                data: {
                    providerId: Microsoft365Provider._PROVIDER_ID
                },
                template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Custom,
                templateContent: await this._integrationHelpers.templateHelpers.createHelp("Microsoft 365", [
                    "The Microsoft 365 integration can be used to search multiple data source in your platform.",
                    "Using a freeform query will search the content of Users, Contacts, E-mail, Events, Chat Messages, Teams and Channels"
                ].concat(additionalDescription), additionalHelp)
            }
        ];
    }
    /**
     * Get a list of search results based on the query and filters.
     * @param query The query to search for.
     * @param filters The filters to apply.
     * @param lastResponse The last search response used for updating existing results.
     * @returns The list of results and new filters.
     */
    async getSearchResults(query, filters, lastResponse) {
        if (!this._ms365Connection) {
            this._connectLastResponse = lastResponse;
            const results = [];
            if (this._connectionError) {
                results.push(await this.createConnectResult());
            }
            return {
                results
            };
        }
        if (this._debounceTimerId) {
            window.clearTimeout(this._debounceTimerId);
            this._debounceTimerId = undefined;
        }
        this._debounceTimerId = window.setTimeout(async () => {
            try {
                // If query starts with ms just do a passthrough to the graph API
                if (!this._settings.disableGraphExplorer && query.startsWith("/ms/")) {
                    const path = query.replace("/ms/", "");
                    if (path.length > 0) {
                        const fullPath = `/v1.0/${path}`;
                        this._logger.info("Graph API Request", fullPath);
                        const response = await this._ms365Connection.executeApiRequest(fullPath);
                        lastResponse.respond([this.createGraphJsonResult(response)]);
                    }
                }
                else if (query.length >= 3) {
                    const ms365Filter = filters?.find((f) => f.id === Microsoft365Provider._MS365_FILTERS);
                    let includeOptions = [
                        "User",
                        "Contact",
                        "Event",
                        "Message",
                        "Channel",
                        "Team",
                        "ChatMessage"
                    ];
                    if (Array.isArray(ms365Filter?.options)) {
                        includeOptions = ms365Filter.options
                            .filter((o) => o.isSelected)
                            .map((o) => o.value);
                    }
                    const batchRequests = [];
                    if (includeOptions.includes("User")) {
                        const userSearchFields = [
                            "displayName",
                            "givenName",
                            "surname",
                            "department",
                            "jobTitle",
                            "mobilePhone"
                        ];
                        const userSearchQuery = userSearchFields.map((s) => `"${s}:${query}"`).join(" OR ");
                        batchRequests.push({
                            id: "User",
                            method: "GET",
                            url: `/users?$search=${encodeURIComponent(userSearchQuery)}&$top=10`,
                            headers: {
                                ConsistencyLevel: "eventual"
                            }
                        });
                    }
                    if (includeOptions.includes("Contact")) {
                        const contactSearchQuery = `"${query}"`;
                        batchRequests.push({
                            id: "Contact",
                            method: "GET",
                            url: `/me/contacts?$search=${encodeURIComponent(contactSearchQuery)}&$top=10`
                        });
                    }
                    if (includeOptions.includes("Message")) {
                        const messageSearchQuery = `"${query}"`;
                        batchRequests.push({
                            id: "Message",
                            method: "GET",
                            url: `/me/messages?$select=sender,subject,bodyPreview,receivedDateTime,webLink&$search=${encodeURIComponent(messageSearchQuery)}&$top=10`
                        });
                    }
                    if (includeOptions.includes("Event")) {
                        batchRequests.push({
                            id: "Event",
                            url: "/search/query",
                            method: "POST",
                            body: {
                                requests: [
                                    {
                                        entityTypes: ["event"],
                                        query: {
                                            queryString: query
                                        },
                                        from: 0,
                                        size: 10
                                    }
                                ]
                            },
                            headers: {
                                "Content-Type": "application/json"
                            }
                        });
                    }
                    if (includeOptions.includes("ChatMessage")) {
                        batchRequests.push({
                            id: "ChatMessage",
                            url: "/search/query",
                            method: "POST",
                            body: {
                                requests: [
                                    {
                                        entityTypes: ["chatMessage"],
                                        query: {
                                            queryString: query
                                        },
                                        from: 0,
                                        size: 10
                                    }
                                ]
                            },
                            headers: {
                                "Content-Type": "application/json"
                            }
                        });
                    }
                    const homeResults = await this.sendBatchQuery(query, includeOptions, batchRequests);
                    if (includeOptions.includes("Team") || includeOptions.includes("Channel")) {
                        const lowerQuery = query.toLowerCase();
                        for (const teamAndChannels of this._teamsAndChannelsCache) {
                            if (includeOptions.includes("Team") &&
                                (teamAndChannels.team.displayName?.toLowerCase().includes(lowerQuery) ||
                                    teamAndChannels.team.description?.toLowerCase().includes(lowerQuery))) {
                                homeResults.push(this.createLoadingResult(teamAndChannels.team, "displayName", "Team"));
                            }
                            if (includeOptions.includes("Channel")) {
                                for (const channel of teamAndChannels.channels) {
                                    if (channel.displayName?.toLowerCase().includes(lowerQuery) ||
                                        channel.description?.toLowerCase().includes(lowerQuery)) {
                                        homeResults.push(this.createLoadingResult({
                                            ...channel,
                                            team: teamAndChannels.team
                                        }, "displayName", "Channel"));
                                    }
                                }
                            }
                        }
                    }
                    lastResponse.respond(homeResults);
                }
            }
            catch (err) {
                const message = err instanceof Error ? err.message : err;
                lastResponse.respond([this.createGraphJsonResult({ status: 400, data: message })]);
            }
            lastResponse.revoke(`${Microsoft365Provider._PROVIDER_ID}-searching`);
        }, 500);
        return {
            results: query.length >= 3 ? [this.createSearchingResult()] : [],
            context: {
                filters: [
                    {
                        id: Microsoft365Provider._MS365_FILTERS,
                        title: "Microsoft 365",
                        options: ["User", "Contact", "Message", "Event", "Team", "Channel", "ChatMessage"].map((o) => ({
                            value: o,
                            isSelected: true
                        }))
                    }
                ]
            }
        };
    }
    /**
     * An entry has been selected.
     * @param result The dispatched result.
     * @param lastResponse The last response.
     * @returns True if the item was handled.
     */
    async itemSelection(result, lastResponse) {
        if (result.action.trigger === "focus-change") {
            if (result.data?.state === "loading" && this._ms365Connection) {
                const actionData = result.data;
                const objType = actionData.objType;
                const resultHandlers = {
                    User: async () => this.createUserResult(actionData.obj),
                    Contact: async () => this.createContactResult(actionData.obj),
                    Message: async () => this.createMessageResult(actionData.obj),
                    Event: async () => this.createEventResult(actionData.obj),
                    ChatMessage: async () => this.createChatMessageResult(actionData.obj),
                    Channel: async () => this.createChannelResult(actionData.obj),
                    Team: async () => this.createTeamResult(actionData.obj)
                };
                if (resultHandlers[objType]) {
                    lastResponse.respond([await resultHandlers[objType]()]);
                }
            }
            return true;
        }
        else if (result.action.trigger === "user-action") {
            return this.handleAction(result.action.name, result.data, lastResponse);
        }
        return false;
    }
    async connectProvider() {
        try {
            this._logger.info("Connecting to MS Graph API", {
                clientId: this._settings.clientId,
                tenantId: this._settings.tenantId,
                redirectUri: this._settings.redirectUri
            });
            if (this._settings.enableLibLogging) {
                (0,_openfin_microsoft365__WEBPACK_IMPORTED_MODULE_0__.enableLogging)();
            }
            this._connectionError = undefined;
            this._ms365Connection = await (0,_openfin_microsoft365__WEBPACK_IMPORTED_MODULE_0__.connect)(this._settings.clientId, this._settings.tenantId, this._settings.redirectUri, this._settings.permissions);
            if (this._connectLastResponse) {
                this._connectLastResponse.revoke(`${Microsoft365Provider._PROVIDER_ID}-connect`);
                this._connectLastResponse = undefined;
            }
        }
        catch (err) {
            this._ms365Connection = undefined;
            this._connectionError = err instanceof Error ? err.message : err;
            this._logger.error("Connecting to MS Graph API failed", err);
            if (this._connectLastResponse) {
                this._connectLastResponse.respond([await this.createConnectResult()]);
            }
        }
    }
    async handleAction(actionName, actionData, lastResponse) {
        switch (actionName) {
            case Microsoft365Provider._ACTION_CONNECT:
                lastResponse.revoke(`${Microsoft365Provider._PROVIDER_ID}-connect`);
                await this.connectProvider();
                return true;
            case Microsoft365Provider._ACTION_TEAMS_CALL:
                return this.handleTeamsCall(actionData);
            case Microsoft365Provider._ACTION_TEAMS_MEETING:
                return this.handleTeamsMeeting(actionData);
            case Microsoft365Provider._ACTION_TEAMS_CHAT:
                return this.handleTeamsChat(actionData);
            case Microsoft365Provider._ACTION_OUTLOOK_EMAIL:
                return this.handleOutlookMail(actionData);
            case Microsoft365Provider._ACTION_OUTLOOK_EVENT:
                return this.handleOutlookEvent(actionData);
            case Microsoft365Provider._ACTION_PHONE_CALL:
                return this.handlePhoneCall(actionData);
            case Microsoft365Provider._ACTION_SHARE_CONTACT:
                return this.handleShareContact(actionData);
            case Microsoft365Provider._ACTION_COPY:
                return this.handleCopy(actionData);
            default:
                if (actionName.startsWith(Microsoft365Provider._ACTION_OPEN)) {
                    return this.handleOpen(actionName, actionData);
                }
                return false;
        }
    }
    async handleTeamsCall(actionData) {
        this._logger.info("Teams Call", actionData.emails);
        const teamsConnection = new _openfin_microsoft365__WEBPACK_IMPORTED_MODULE_0__.TeamsConnection(this._ms365Connection);
        await teamsConnection.startCall(actionData.emails);
        return true;
    }
    async handleTeamsMeeting(actionData) {
        this._logger.info("Teams Meeting", this._ms365Connection.currentUser.mail, actionData.emails);
        await fin.System.openUrlWithBrowser(`${Microsoft365Provider._TEAMS_PROTOCOL}/l/meeting/new?attendees=${this._ms365Connection.currentUser.mail},${actionData.emails.join(",")}`);
        return true;
    }
    async handleTeamsChat(actionData) {
        this._logger.info("Teams Chat", this._ms365Connection.currentUser.mail, actionData.teamId, actionData.channelId, actionData.emails);
        const teamsConnection = new _openfin_microsoft365__WEBPACK_IMPORTED_MODULE_0__.TeamsConnection(this._ms365Connection);
        if (actionData.chatId && actionData.messageId) {
            await fin.System.openUrlWithBrowser(`${Microsoft365Provider._TEAMS_PROTOCOL}/l/message/${actionData.chatId}/${actionData.messageId}`);
        }
        else if (actionData.teamId) {
            await teamsConnection.startChat({ teamId: actionData.teamId, channelId: actionData.channelId });
        }
        else {
            await teamsConnection.startChat({
                emailAddresses: [this._ms365Connection.currentUser.mail, ...actionData.emails]
            });
        }
        return true;
    }
    async handleOutlookMail(actionData) {
        this._logger.info("Open Outlook Mail", actionData.emails);
        const response = await this._ms365Connection.executeApiRequest("/v1.0/me/messages", "POST", {
            toRecipients: actionData.emails.map((e) => ({
                emailAddress: {
                    address: e
                }
            }))
        });
        const uri = new URL(response.data?.webLink);
        if (uri.searchParams.has("ItemID")) {
            const itemId = encodeURIComponent(uri.searchParams.get("ItemID"));
            await this._integrationHelpers.launchView(`${Microsoft365Provider._OFFICE_URL}mail/deeplink/compose/${itemId}?ItemID=${itemId}&exvsurl=1`);
        }
        else {
            await this._integrationHelpers.launchView(response.data.webLink);
        }
        return true;
    }
    async handleOutlookEvent(actionData) {
        this._logger.info("Open Outlook Event", actionData.emails);
        const response = await this._ms365Connection.executeApiRequest("/v1.0/me/events", "POST", {
            attendees: actionData.emails.map((e) => ({
                emailAddress: {
                    address: e
                }
            }))
        });
        const uri = new URL(response.data?.webLink);
        if (uri.searchParams.has("itemid")) {
            const itemId = encodeURIComponent(uri.searchParams.get("itemid"));
            await this._integrationHelpers.launchView(`${Microsoft365Provider._OFFICE_URL}calendar/deeplink/compose/${itemId}?ItemID=${itemId}&exvsurl=1`);
        }
        else {
            await this._integrationHelpers.launchView(response.data.webLink);
        }
        return true;
    }
    async handlePhoneCall(actionData) {
        this._logger.info("Phone Call", actionData.phone);
        await fin.System.openUrlWithBrowser(`tel:${actionData.phone}`);
        return true;
    }
    async handleOpen(actionName, actionData) {
        const linkIndex = actionName.indexOf("_");
        const u = linkIndex < 0 ? actionData.url : actionData.urls[actionName.slice(linkIndex + 1)];
        this._logger.info("Open", u);
        if (u.startsWith(Microsoft365Provider._TEAMS_URL)) {
            await fin.System.openUrlWithBrowser(u.replace(Microsoft365Provider._TEAMS_URL, Microsoft365Provider._TEAMS_PROTOCOL));
        }
        else {
            await this._integrationHelpers.launchView(u);
        }
        return true;
    }
    async handleShareContact(actionData) {
        const fdc3Contact = {
            type: "fdc3.contact",
            name: actionData.name,
            id: {
                email: actionData.emails[0]
            }
        };
        this._logger.info("Share Contact", fdc3Contact);
        await window.fdc3.raiseIntent("ViewContact", fdc3Contact);
        return true;
    }
    async handleCopy(actionData) {
        this._logger.info("Copy JSON", actionData.json);
        await fin.Clipboard.writeText({ data: JSON.stringify(actionData.json, undefined, "\t") });
        return true;
    }
    async sendBatchQuery(query, includeOptions, batchRequests) {
        let homeResults = [];
        this._logger.info("Graph API Batch Request", batchRequests);
        try {
            const batchResponses = await this._ms365Connection.executeApiRequest("/v1.0/$batch", "POST", {
                requests: batchRequests
            });
            if (Array.isArray(batchResponses.data?.responses)) {
                for (const batchResponse of batchResponses.data.responses) {
                    if (batchResponse.status === 200) {
                        this._logger.info(`${batchResponse.id} Response`, batchResponse.body);
                        homeResults = await this.handleBatchQuery(query, includeOptions, batchResponse, homeResults);
                    }
                    else {
                        this._logger.error(`${batchResponse.id} Response Failed`, batchResponse.status, batchResponse.body);
                    }
                }
            }
        }
        catch (err) {
            this._logger.error("Batch Response Failed", err);
        }
        return homeResults;
    }
    async handleBatchQuery(query, includeOptions, batchResponse, homeResults) {
        const type = batchResponse.id.split("-")[0];
        if (includeOptions.includes(type)) {
            if (type === "User") {
                const users = batchResponse.body.value;
                if (users.length > 0) {
                    homeResults = homeResults.concat(users.map((u) => this.createLoadingResult(u, "displayName", "User")));
                }
            }
            else if (type === "Contact") {
                const contacts = batchResponse.body.value;
                if (contacts.length > 0) {
                    homeResults = homeResults.concat(contacts.map((c) => this.createLoadingResult(c, "displayName", "Contact")));
                }
            }
            else if (type === "Message") {
                const messages = batchResponse.body.value;
                if (messages.length > 0) {
                    homeResults = homeResults.concat(messages
                        .filter((m) => m.subject && !m.subject.startsWith("Canceled") && !m.subject.startsWith("Undeliverable"))
                        .map((m) => this.createLoadingResult(m, "subject", "Message")));
                }
            }
            else if (type === "Event") {
                const graphResponse = batchResponse.body;
                const searchResponse = graphResponse?.value?.[0];
                const events = searchResponse?.hitsContainers?.[0]?.hits;
                if (events?.length) {
                    homeResults = homeResults.concat(events
                        .filter((e) => e.resource.subject)
                        .map((e) => this.createLoadingResult({
                        id: this.base64IdToUrl(e.hitId),
                        ...e.resource
                    }, "subject", "Event")));
                }
            }
            else if (type === "ChatMessage") {
                const graphResponse = batchResponse.body;
                const searchResponse = graphResponse?.value?.[0];
                const chatMessages = searchResponse?.hitsContainers?.[0]?.hits;
                if (chatMessages?.length) {
                    homeResults = homeResults.concat(chatMessages.map((e) => this.createLoadingResult({
                        id: this.base64IdToUrl(e.hitId),
                        ...e.resource,
                        summary: e.summary
                    }, "summary", "ChatMessage")));
                }
            }
        }
        return homeResults;
    }
    async createConnectResult() {
        const theme = await this._integrationHelpers.getCurrentTheme();
        const layout = await this._integrationHelpers.templateHelpers.createContainer("column", [
            await this._integrationHelpers.templateHelpers.createContainer("row", [await this._integrationHelpers.templateHelpers.createText("title", 14, { fontWeight: "bold" })], {
                paddingBottom: "10px",
                borderBottom: `1px solid ${theme.palette.background6}`,
                gap: "10px"
            }),
            await this._integrationHelpers.templateHelpers.createText("description", 12),
            await this._integrationHelpers.templateHelpers.createText("error", 12, {
                fontFamily: "monospace",
                flex: 1
            }),
            await this._integrationHelpers.templateHelpers.createButton(_openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.ButtonStyle.Primary, "connect", Microsoft365Provider._ACTION_CONNECT)
        ], {
            padding: "10px",
            gap: "15px",
            flex: "1"
        });
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-connect`,
            title: "Microsoft 365",
            label: "Connect",
            icon: this._settings.images.microsoft365,
            actions: [
                {
                    name: Microsoft365Provider._ACTION_CONNECT,
                    hotkey: "Enter"
                }
            ],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Custom,
            templateContent: {
                layout,
                data: {
                    title: "Microsoft 365 Connection",
                    description: "Microsoft 365 failed to connect due to the following error",
                    error: this._connectionError,
                    connect: "Connect"
                }
            }
        };
    }
    createSearchingResult() {
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-searching`,
            title: "Searching ...",
            icon: this._settings.images.microsoft365,
            actions: [],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Loading,
            templateContent: undefined
        };
    }
    createGraphJsonResult(response) {
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-rest`,
            title: "Graph Result",
            label: response.status === 200 ? "JSON" : "Error",
            icon: this._settings.images.microsoft365,
            actions: [
                {
                    name: Microsoft365Provider._ACTION_COPY,
                    hotkey: "Enter"
                }
            ],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID,
                json: response.data
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Custom,
            templateContent: {
                layout: {
                    type: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.TemplateFragmentTypes.Text,
                    dataKey: "json",
                    style: {
                        fontSize: "12px",
                        fontFamily: "monospace",
                        color: response.status === 200 ? "white" : "red",
                        whiteSpace: "pre",
                        overflow: "auto",
                        flex: 1
                    }
                },
                data: {
                    json: JSON.stringify(response.data, undefined, "  ")
                }
            }
        };
    }
    createLoadingResult(obj, title, objType) {
        const icons = {
            User: this._settings.images.teams,
            Contact: this._settings.images.contact,
            Message: this._settings.images.email,
            Event: this._settings.images.calendar,
            Channel: this._settings.images.channel,
            Team: this._settings.images.team,
            ChatMessage: this._settings.images.chat
        };
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-${obj.id}`,
            score: this.objectTypeToOrder(objType),
            title: obj[title] ?? `Untitled ${objType}`,
            label: objType.split(/(?=[A-Z])/).join(" "),
            icon: icons[objType],
            actions: [],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID,
                objType,
                obj,
                state: "loading"
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Loading,
            templateContent: undefined
        };
    }
    async createUserResult(user) {
        let picData;
        let presence;
        let availableColor = "red";
        let availableIcon = this._settings.images.cross;
        let availability = "Unknown";
        let teams = [];
        const batchRequests = [];
        batchRequests.push(`/users/${user.id}/presence`, `/users/${user.id}/memberOf`);
        if (this._profileImageCache[user.id]) {
            picData = this._profileImageCache[user.id].data;
        }
        else {
            batchRequests.push(`/users/${user.id}/photo/$value`);
        }
        try {
            this._logger.info("Graph API Batch Request", batchRequests);
            const response = await this._ms365Connection.executeApiRequest("/v1.0/$batch", "POST", {
                requests: batchRequests.map((r, idx) => ({
                    id: (idx + 1).toString(),
                    method: "GET",
                    url: r
                }))
            });
            const presenceResponse = response.data?.responses.find((r) => r.id === "1");
            if (presenceResponse?.status === 200) {
                presence = presenceResponse.body;
                // Availability is in Pascal case, so split on capitals and join with space
                availability = presence?.availability.split(/(?=[A-Z])/).join(" ");
                if (presence?.availability === "Available") {
                    availableColor = "green";
                    availableIcon = this._settings.images.check;
                }
                else if (presence?.availability === "Away" || presence?.availability === "BeRightBack") {
                    availableColor = "orange";
                    availableIcon = this._settings.images.clock;
                }
            }
            else {
                this._logger.error("Failed getting user presence", presenceResponse.status, presenceResponse.body);
            }
            const teamsResponse = response.data?.responses.find((r) => r.id === "2");
            if (teamsResponse?.status === 200) {
                const memberOf = teamsResponse.body.value;
                const excludeGroups = ["All Users"];
                const teamsMember = memberOf.filter((m) => m["@odata.type"] === "#microsoft.graph.group" && !excludeGroups.includes(m.displayName));
                teams = teamsMember.map((t) => t.displayName);
            }
            else {
                this._logger.error("Failed getting user teams", teamsResponse.status, teamsResponse.body);
            }
            const profileResponse = response.data?.responses.find((r) => r.id === "3");
            if (profileResponse) {
                if (profileResponse?.status === 200) {
                    picData = `data:image/jpeg;base64,${profileResponse.body}`;
                    this._profileImageCache[user.id] = {
                        data: picData,
                        added: Date.now()
                    };
                }
                else {
                    // If the request failed the JSON error is still base64 encoded
                    this._logger.error("Failed getting user profile pic", profileResponse.status, atob(profileResponse.body));
                }
            }
        }
        catch (err) {
            this._logger.error("Failed performing API batch request", err);
        }
        const theme = await this._integrationHelpers.getCurrentTheme();
        const pairs = [];
        if (user.jobTitle) {
            pairs.push({ label: "Title", value: user.jobTitle });
        }
        if (user.department) {
            pairs.push({ label: "Department", value: user.department });
        }
        if (user.mail) {
            pairs.push({ label: "E-mail", value: user.mail });
        }
        let phone;
        if (user.mobilePhone) {
            pairs.push({ label: "Cell", value: user.mobilePhone });
            phone = user.mobilePhone;
        }
        if (user.businessPhones?.length) {
            pairs.push({ label: "Business", value: user.businessPhones[0] });
            phone = phone ?? user.businessPhones[0];
        }
        if (teams.length > 0) {
            pairs.push({ label: "Teams", value: teams.join(", ") });
        }
        const buttons = [
            {
                title: "callTitle",
                action: Microsoft365Provider._ACTION_TEAMS_CALL,
                image: "callImage",
                imageAltText: "Teams Call"
            },
            {
                title: "emailTitle",
                action: Microsoft365Provider._ACTION_OUTLOOK_EMAIL,
                image: "emailImage",
                imageAltText: "E-mail"
            },
            {
                title: "meetingTitle",
                action: Microsoft365Provider._ACTION_TEAMS_MEETING,
                image: "meetingImage",
                imageAltText: "Meeting"
            },
            {
                title: "chatTitle",
                action: Microsoft365Provider._ACTION_TEAMS_CHAT,
                image: "chatImage",
                imageAltText: "Chat"
            }
        ];
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-${user.id}`,
            score: this.objectTypeToOrder("User"),
            title: user.displayName,
            label: "User",
            icon: this._settings.images.teams,
            actions: [
                {
                    name: Microsoft365Provider._ACTION_TEAMS_CALL,
                    hotkey: "Enter"
                }
            ],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID,
                objType: "User",
                obj: user,
                emails: [user.mail],
                phone,
                name: user.displayName
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Custom,
            templateContent: {
                layout: await this._integrationHelpers.templateHelpers.createContainer("column", [
                    await this._integrationHelpers.templateHelpers.createContainer("row", [
                        await this._integrationHelpers.templateHelpers.createImage("picData", user.displayName, {
                            width: "44px",
                            height: "44px",
                            objectFit: "cover",
                            borderRadius: "50%"
                        }),
                        await this._integrationHelpers.templateHelpers.createImage("status", availability, {
                            width: "16px",
                            height: "16px",
                            backgroundColor: availableColor,
                            borderRadius: "50%",
                            border: "2px solid white",
                            padding: "2px",
                            position: "relative",
                            left: "-12px",
                            top: "32px"
                        }),
                        await this._integrationHelpers.templateHelpers.createContainer("column", [
                            await this._integrationHelpers.templateHelpers.createText("displayName", 14, {
                                fontWeight: "bold"
                            }),
                            await this._integrationHelpers.templateHelpers.createText("availability", 12, {})
                        ])
                    ], {
                        paddingBottom: "10px",
                        borderBottom: `1px solid ${theme.palette.background6}`
                    }),
                    await this.createPairsLayout(theme, pairs),
                    await this.createButtonsLayout(theme, buttons)
                ], {
                    padding: "10px",
                    gap: "15px",
                    flex: "1"
                }),
                data: {
                    picData: picData ?? this._settings.images.contact,
                    status: availableIcon,
                    displayName: user.displayName,
                    availability,
                    ...this.mapPairsToData(pairs),
                    callTitle: "Teams Call",
                    callImage: this._settings.images.teams,
                    emailTitle: "Outlook E-mail",
                    emailImage: this._settings.images.email,
                    meetingTitle: "Teams Meeting",
                    meetingImage: this._settings.images.calendar,
                    chatTitle: "Teams Chat",
                    chatImage: this._settings.images.chat
                }
            }
        };
    }
    async createContactResult(contact) {
        let picData;
        try {
            if (this._profileImageCache[contact.id]) {
                picData = this._profileImageCache[contact.id].data;
            }
            else {
                const batchRequests = [`/me/contacts/${contact.id}/photo/$value`];
                this._logger.info("Graph API Batch Request", {
                    photo: batchRequests[0]
                });
                const response = await this._ms365Connection.executeApiRequest("/v1.0/$batch", "POST", {
                    requests: batchRequests.map((r, idx) => ({
                        id: (idx + 1).toString(),
                        method: "GET",
                        url: r
                    }))
                });
                const profileResponse = response.data?.responses.find((r) => r.id === "1");
                if (profileResponse?.status === 200) {
                    picData = `data:image/jpeg;base64,${profileResponse.body}`;
                    this._profileImageCache[contact.id] = {
                        data: picData,
                        added: Date.now()
                    };
                }
                else {
                    // If the request failed the JSON error is still base64 encoded
                    this._logger.error("Failed getting contact profile pic", profileResponse.status, atob(profileResponse.body));
                }
            }
        }
        catch (err) {
            this._logger.error("Failed performing API batch request", err);
        }
        const theme = await this._integrationHelpers.getCurrentTheme();
        const pairs = [];
        if (contact.companyName) {
            pairs.push({ label: "Company", value: contact.companyName });
        }
        if (contact.jobTitle) {
            pairs.push({ label: "Title", value: contact.jobTitle });
        }
        if (contact.department) {
            pairs.push({ label: "Department", value: contact.department });
        }
        let phone;
        let email;
        if (contact.mobilePhone) {
            pairs.push({ label: "Cell", value: contact.mobilePhone });
            phone = contact.mobilePhone;
        }
        if (contact.businessPhones?.length) {
            pairs.push({ label: "Business", value: contact.businessPhones[0] });
            phone = phone ?? contact.businessPhones[0];
        }
        if (contact.emailAddresses?.length) {
            for (const e of contact.emailAddresses) {
                if (e.address?.length) {
                    pairs.push({ label: "E-mail", value: e.address });
                    email = email ?? e.address;
                    break;
                }
            }
        }
        const buttons = [];
        if (phone) {
            buttons.push({
                title: "callTitle",
                action: Microsoft365Provider._ACTION_PHONE_CALL,
                image: "callImage",
                imageAltText: "Call"
            });
        }
        if (email) {
            buttons.push({
                title: "emailTitle",
                action: Microsoft365Provider._ACTION_OUTLOOK_EMAIL,
                image: "emailImage",
                imageAltText: "E-mail"
            });
            buttons.push({
                title: "calendarTitle",
                action: Microsoft365Provider._ACTION_OUTLOOK_EVENT,
                image: "calendarImage",
                imageAltText: "Calendar"
            });
        }
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-${contact.id}`,
            score: this.objectTypeToOrder("Contact"),
            title: contact.displayName,
            label: "Contact",
            icon: this._settings.images.contact,
            actions: [
                {
                    name: Microsoft365Provider._ACTION_PHONE_CALL,
                    hotkey: "Enter"
                }
            ],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID,
                objType: "Contact",
                obj: contact,
                emails: [email],
                phone,
                name: contact.displayName
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Custom,
            templateContent: {
                layout: await this._integrationHelpers.templateHelpers.createContainer("column", [
                    await this._integrationHelpers.templateHelpers.createContainer("row", [
                        await this._integrationHelpers.templateHelpers.createImage("picData", contact.displayName, {
                            width: "44px",
                            height: "44px",
                            objectFit: "cover",
                            borderRadius: "50%"
                        }),
                        await this._integrationHelpers.templateHelpers.createContainer("column", [
                            await this._integrationHelpers.templateHelpers.createText("displayName", 14, {
                                fontWeight: "bold"
                            }),
                            await this._integrationHelpers.templateHelpers.createText("company", 12, {})
                        ])
                    ], {
                        paddingBottom: "10px",
                        borderBottom: `1px solid ${theme.palette.background6}`,
                        gap: "10px"
                    }),
                    await this.createPairsLayout(theme, pairs),
                    await this.createButtonsLayout(theme, buttons)
                ], {
                    padding: "10px",
                    gap: "15px",
                    flex: "1"
                }),
                data: {
                    picData: picData ?? this._settings.images.contact,
                    displayName: contact.displayName,
                    ...this.mapPairsToData(pairs),
                    callTitle: "Call",
                    callImage: this._settings.images.call,
                    emailTitle: "Outlook E-mail",
                    emailImage: this._settings.images.email,
                    calendarTitle: "Outlook Calendar",
                    calendarImage: this._settings.images.calendar
                }
            }
        };
    }
    async createMessageResult(message) {
        const theme = await this._integrationHelpers.getCurrentTheme();
        const pairs = [];
        if (message.sender) {
            pairs.push({
                label: "From",
                value: message.sender.emailAddress.name ?? message.sender.emailAddress.address
            });
        }
        if (message.receivedDateTime) {
            pairs.push({
                label: "Received",
                value: new Date(message.receivedDateTime).toLocaleString()
            });
        }
        if (message.bodyPreview) {
            pairs.push({
                label: "Preview",
                value: message.bodyPreview,
                wide: true
            });
        }
        const buttons = [
            {
                title: "openTitle",
                action: Microsoft365Provider._ACTION_OPEN,
                image: "openImage",
                imageAltText: "Open"
            }
        ];
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-${message.id}`,
            score: this.objectTypeToOrder("Message"),
            title: message.subject ?? "Untitled Message",
            label: "Message",
            icon: this._settings.images.email,
            actions: [
                {
                    name: Microsoft365Provider._ACTION_OPEN,
                    hotkey: "Enter"
                }
            ],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID,
                objType: "Message",
                obj: message,
                url: message.webLink
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Custom,
            templateContent: {
                layout: await this._integrationHelpers.templateHelpers.createContainer("column", [
                    await this._integrationHelpers.templateHelpers.createContainer("row", [
                        await this._integrationHelpers.templateHelpers.createText("subject", 14, {
                            fontWeight: "bold"
                        })
                    ], {
                        paddingBottom: "10px",
                        borderBottom: `1px solid ${theme.palette.background6}`,
                        gap: "10px"
                    }),
                    await this.createPairsLayout(theme, pairs),
                    await this.createButtonsLayout(theme, buttons)
                ], {
                    padding: "10px",
                    gap: "15px",
                    flex: "1"
                }),
                data: {
                    subject: message.subject,
                    ...this.mapPairsToData(pairs),
                    openTitle: "Open Outlook",
                    openImage: this._settings.images.outlook
                }
            }
        };
    }
    async createEventResult(event) {
        const batchRequests = [`/me/events/${event.id}`];
        try {
            this._logger.info("Graph API Batch Request", {
                photo: batchRequests[0]
            });
            const response = await this._ms365Connection.executeApiRequest("/v1.0/$batch", "POST", {
                requests: batchRequests.map((r, idx) => ({
                    id: (idx + 1).toString(),
                    method: "GET",
                    url: r
                }))
            });
            const eventResponse = response.data?.responses.find((r) => r.id === "1");
            if (eventResponse?.status === 200) {
                event = {
                    ...event,
                    ...eventResponse.body
                };
            }
            else {
                this._logger.error("Failed getting event", eventResponse.status, eventResponse.body);
            }
        }
        catch (err) {
            this._logger.error("Failed performing API batch request", err);
        }
        const theme = await this._integrationHelpers.getCurrentTheme();
        const pairs = [];
        pairs.push({
            label: "Start",
            value: new Date(event.start?.dateTime).toLocaleString()
        });
        pairs.push({
            label: "End",
            value: new Date(event.end?.dateTime).toLocaleString()
        });
        if (event.bodyPreview) {
            pairs.push({
                label: "Preview",
                value: event.bodyPreview,
                wide: true
            });
        }
        const buttons = [
            {
                title: "openTitle",
                action: Microsoft365Provider._ACTION_OPEN,
                image: "openImage",
                imageAltText: "Open"
            }
        ];
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-${event.id}`,
            score: this.objectTypeToOrder("Event"),
            title: event.subject ?? "Untitled Event",
            label: "Event",
            icon: this._settings.images.calendar,
            actions: [
                {
                    name: Microsoft365Provider._ACTION_OPEN,
                    hotkey: "Enter"
                }
            ],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID,
                objType: "Event",
                obj: event,
                url: event.webLink
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Custom,
            templateContent: {
                layout: await this._integrationHelpers.templateHelpers.createContainer("column", [
                    await this._integrationHelpers.templateHelpers.createContainer("row", [
                        await this._integrationHelpers.templateHelpers.createText("subject", 14, {
                            fontWeight: "bold"
                        })
                    ], {
                        paddingBottom: "10px",
                        borderBottom: `1px solid ${theme.palette.background6}`,
                        gap: "10px"
                    }),
                    await this.createPairsLayout(theme, pairs),
                    await this.createButtonsLayout(theme, buttons)
                ], {
                    padding: "10px",
                    gap: "15px",
                    flex: "1"
                }),
                data: {
                    subject: event.subject ?? "Untitled Event",
                    ...this.mapPairsToData(pairs),
                    openTitle: "Open Outlook",
                    openImage: this._settings.images.outlook
                }
            }
        };
    }
    async createChatMessageResult(chatMessage) {
        const batchRequests = [`/chats/${chatMessage.chatId}/messages/${chatMessage.etag}`];
        try {
            this._logger.info("Graph API Batch Request", {
                photo: batchRequests[0]
            });
            const response = await this._ms365Connection.executeApiRequest("/v1.0/$batch", "POST", {
                requests: batchRequests.map((r, idx) => ({
                    id: (idx + 1).toString(),
                    method: "GET",
                    url: r
                }))
            });
            const chatMessageResponse = response.data?.responses.find((r) => r.id === "1");
            if (chatMessageResponse?.status === 200) {
                chatMessage = {
                    ...chatMessage,
                    ...chatMessageResponse.body,
                    summary: chatMessageResponse.body.summary ?? chatMessage.summary
                };
            }
            else {
                this._logger.error("Failed getting event", chatMessageResponse.status, chatMessageResponse.body);
            }
        }
        catch (err) {
            this._logger.error("Failed performing API batch request", err);
        }
        const theme = await this._integrationHelpers.getCurrentTheme();
        const pairs = [];
        pairs.push({
            label: "Date/Time",
            value: new Date(chatMessage.lastModifiedDateTime).toLocaleString()
        });
        if (chatMessage.from?.user?.displayName) {
            pairs.push({
                label: "From",
                value: chatMessage.from.user.displayName
            });
        }
        // Strip any HTML tags
        const body = chatMessage.body?.content?.replace(/<[^>]*>/g, "");
        if (body) {
            pairs.push({
                label: "Preview",
                value: body,
                wide: true
            });
        }
        const buttons = [
            {
                title: "openTitle",
                action: Microsoft365Provider._ACTION_TEAMS_CHAT,
                image: "openImage",
                imageAltText: "Open"
            }
        ];
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-${chatMessage.id}`,
            score: this.objectTypeToOrder("ChatMessage"),
            title: chatMessage.summary ?? "Untitled Chat Message",
            label: "Chat Message",
            icon: this._settings.images.chat,
            actions: [
                {
                    name: Microsoft365Provider._ACTION_TEAMS_CHAT,
                    hotkey: "Enter"
                }
            ],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID,
                objType: "Event",
                obj: chatMessage,
                url: chatMessage.webUrl,
                chatId: chatMessage.chatId,
                messageId: chatMessage.id
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Custom,
            templateContent: {
                layout: await this._integrationHelpers.templateHelpers.createContainer("column", [
                    await this._integrationHelpers.templateHelpers.createContainer("row", [
                        await this._integrationHelpers.templateHelpers.createText("summary", 14, {
                            fontWeight: "bold"
                        })
                    ], {
                        paddingBottom: "10px",
                        borderBottom: `1px solid ${theme.palette.background6}`,
                        gap: "10px"
                    }),
                    await this.createPairsLayout(theme, pairs),
                    await this.createButtonsLayout(theme, buttons)
                ], {
                    padding: "10px",
                    gap: "15px",
                    flex: "1"
                }),
                data: {
                    summary: chatMessage.summary ?? "Untitled Chat Message",
                    ...this.mapPairsToData(pairs),
                    openTitle: "Open Chat Message",
                    openImage: this._settings.images.teams
                }
            }
        };
    }
    async createTeamResult(team) {
        const theme = await this._integrationHelpers.getCurrentTheme();
        const teamMembers = await this.getTeamMembers(team.id);
        const pairs = [];
        const urls = {};
        if (team.channels?.length) {
            pairs.push({
                label: "Channel List",
                links: team.channels.map((c) => c.displayName)
            });
            for (let i = 0; i < team.channels.length; i++) {
                urls[`Channel List_link_${i}`] = team.channels[i].webUrl;
            }
        }
        if (teamMembers.length) {
            const userPhotos = await this.getUserPhotos(teamMembers, 16);
            pairs.push({
                label: "Member List",
                srcs: userPhotos
            });
        }
        if (team.description) {
            pairs.push({
                label: "Description",
                value: team.description,
                wide: true
            });
        }
        const buttons = [
            {
                title: "openTitle",
                action: Microsoft365Provider._ACTION_TEAMS_CALL,
                image: "openImage",
                imageAltText: "Open"
            },
            {
                title: "emailTitle",
                action: Microsoft365Provider._ACTION_OUTLOOK_EMAIL,
                image: "emailImage",
                imageAltText: "Email"
            },
            {
                title: "meetingTitle",
                action: Microsoft365Provider._ACTION_TEAMS_MEETING,
                image: "meetingImage",
                imageAltText: "Meeting"
            },
            {
                title: "chatTitle",
                action: Microsoft365Provider._ACTION_TEAMS_CHAT,
                image: "chatImage",
                imageAltText: "Chat"
            }
        ];
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-${team.id}`,
            score: this.objectTypeToOrder("Team"),
            title: team.displayName ?? "Untitled Team",
            label: "Team",
            icon: this._settings.images.team,
            actions: [
                {
                    name: Microsoft365Provider._ACTION_TEAMS_CALL,
                    hotkey: "Enter"
                }
            ],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID,
                objType: "Team",
                obj: team,
                url: team.webUrl,
                urls,
                emails: teamMembers.filter((t) => t.email).map((t) => t.email),
                teamId: team.id
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Custom,
            templateContent: {
                layout: await this._integrationHelpers.templateHelpers.createContainer("column", [
                    await this._integrationHelpers.templateHelpers.createContainer("row", [
                        await this._integrationHelpers.templateHelpers.createText("displayName", 14, {
                            fontWeight: "bold"
                        })
                    ], {
                        paddingBottom: "10px",
                        borderBottom: `1px solid ${theme.palette.background6}`,
                        gap: "10px"
                    }),
                    await this.createPairsLayout(theme, pairs),
                    await this.createButtonsLayout(theme, buttons)
                ], {
                    padding: "10px",
                    gap: "15px",
                    flex: "1"
                }),
                data: {
                    displayName: team.displayName ?? "Untitled Team",
                    ...this.mapPairsToData(pairs),
                    openTitle: "Open Teams",
                    openImage: this._settings.images.teams,
                    emailTitle: "Outlook E-mail",
                    emailImage: this._settings.images.email,
                    meetingTitle: "Teams Meeting",
                    meetingImage: this._settings.images.calendar,
                    chatTitle: "Teams Chat",
                    chatImage: this._settings.images.chat
                }
            }
        };
    }
    async createChannelResult(channel) {
        const theme = await this._integrationHelpers.getCurrentTheme();
        const channelMembers = await this.getChannelMembers(channel.team.id, channel.id);
        const pairs = [];
        pairs.push({
            label: "Team",
            value: channel.team.displayName
        });
        if (channelMembers.length) {
            const userPhotos = await this.getUserPhotos(channelMembers, 16);
            pairs.push({
                label: "Member List",
                srcs: userPhotos
            });
        }
        if (channel.description) {
            pairs.push({
                label: "Description",
                value: channel.description,
                wide: true
            });
        }
        const buttons = [
            {
                title: "openTitle",
                action: Microsoft365Provider._ACTION_TEAMS_CALL,
                image: "openImage",
                imageAltText: "Open"
            },
            {
                title: "emailTitle",
                action: Microsoft365Provider._ACTION_OUTLOOK_EMAIL,
                image: "emailImage",
                imageAltText: "Email"
            },
            {
                title: "meetingTitle",
                action: Microsoft365Provider._ACTION_TEAMS_MEETING,
                image: "meetingImage",
                imageAltText: "Meeting"
            },
            {
                title: "chatTitle",
                action: Microsoft365Provider._ACTION_TEAMS_CHAT,
                image: "chatImage",
                imageAltText: "Chat"
            }
        ];
        return {
            key: `${Microsoft365Provider._PROVIDER_ID}-${channel.id}`,
            score: this.objectTypeToOrder("Channel"),
            title: channel.displayName ?? "Untitled Channel",
            label: "Channel",
            icon: this._settings.images.channel,
            actions: [
                {
                    name: Microsoft365Provider._ACTION_TEAMS_CALL,
                    hotkey: "Enter"
                }
            ],
            data: {
                providerId: Microsoft365Provider._PROVIDER_ID,
                objType: "Channel",
                obj: channel,
                url: channel.webUrl,
                emails: channelMembers.filter((m) => m.email).map((m) => m.email),
                teamId: channel.team.id,
                channelId: channel.id
            },
            template: _openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.CLITemplate.Custom,
            templateContent: {
                layout: await this._integrationHelpers.templateHelpers.createContainer("column", [
                    await this._integrationHelpers.templateHelpers.createContainer("row", [
                        await this._integrationHelpers.templateHelpers.createText("displayName", 14, {
                            fontWeight: "bold"
                        })
                    ], {
                        paddingBottom: "10px",
                        borderBottom: `1px solid ${theme.palette.background6}`,
                        gap: "10px"
                    }),
                    await this.createPairsLayout(theme, pairs),
                    await this.createButtonsLayout(theme, buttons)
                ], {
                    padding: "10px",
                    gap: "15px",
                    flex: "1"
                }),
                data: {
                    displayName: channel.displayName ?? "Untitled Channel",
                    ...this.mapPairsToData(pairs),
                    openTitle: "Open Teams",
                    openImage: this._settings.images.teams,
                    emailTitle: "Outlook E-mail",
                    emailImage: this._settings.images.email,
                    meetingTitle: "Teams Meeting",
                    meetingImage: this._settings.images.calendar,
                    chatTitle: "Teams Chat",
                    chatImage: this._settings.images.chat
                }
            }
        };
    }
    async getTeamMembers(teamId) {
        try {
            this._logger.info("Get Team Members Request");
            const response = await this._ms365Connection.executeApiRequest(`/v1.0/teams/${teamId}/members`, "GET");
            this._logger.info("Get Team Members Response", response.data);
            return response.data.value;
        }
        catch (err) {
            this._logger.error("Failed getting team members", err);
        }
        return [];
    }
    async getChannelMembers(teamId, channelId) {
        try {
            this._logger.info("Get Channel Members Request");
            const response = await this._ms365Connection.executeApiRequest(`/v1.0/teams/${teamId}/channels/${channelId}/members`, "GET");
            this._logger.info("Get Channel Members Response", response.data);
            return response.data.value;
        }
        catch (err) {
            this._logger.error("Failed getting channel members", err);
        }
        return [];
    }
    async getUserPhotos(users, size) {
        try {
            const lookupUsers = users.filter((u) => !this._profileImageCache[u.id]);
            if (lookupUsers.length > 0) {
                const chunkCount = Math.ceil(lookupUsers.length / 20);
                for (let i = 0; i < chunkCount; i++) {
                    const response = await this._ms365Connection.executeApiRequest("/v1.0/$batch", "POST", {
                        requests: lookupUsers.slice(i * 20, (i + 1) * 20).map((u, idx) => ({
                            id: `photos${idx + 1}`,
                            method: "GET",
                            url: `/users/${u.userId}/photo/$value`
                        }))
                    });
                    for (const r of response.data.responses) {
                        const lookupIdx = Number.parseInt(r.id.replace("photos", ""), 10);
                        const user = lookupUsers[lookupIdx - 1];
                        let picData;
                        if (r.status === 200) {
                            picData = `data:image/jpeg;base64,${r.body}`;
                        }
                        else {
                            picData = this.svgToInline(this.imageProfileNone(size, user.displayName));
                        }
                        this._profileImageCache[user.id] = {
                            data: picData,
                            added: Date.now()
                        };
                    }
                }
            }
            return users.map((u) => this._profileImageCache[u.id].data);
        }
        catch (err) {
            this._logger.error("Failed getting user photos", err);
        }
        return [];
    }
    mapPairsToData(pairs) {
        const pairData = {};
        for (const pair of pairs) {
            pairData[`${pair.label}Title`] = pair.label;
            if (pair.value) {
                pairData[pair.label] = pair.value;
            }
            if (pair.links) {
                for (let i = 0; i < pair.links.length; i++) {
                    pairData[`${pair.label}_link_${i}`] = pair.links[i];
                }
            }
            if (pair.srcs) {
                for (let i = 0; i < pair.srcs.length; i++) {
                    pairData[`${pair.label}_src_${i}`] = pair.srcs[i];
                }
            }
        }
        return pairData;
    }
    async createPairsLayout(theme, pairs) {
        return this._integrationHelpers.templateHelpers.createContainer("column", await Promise.all(pairs.map(async (p) => this.createPairLayout(theme, p))), { gap: "5px", flex: "1" });
    }
    async createPairLayout(theme, pair) {
        const elements = [
            await this._integrationHelpers.templateHelpers.createText(`${pair.label}Title`, 10, {
                color: theme.palette.inputPlaceholder,
                flex: 1
            })
        ];
        if (pair.value) {
            elements.push(await this._integrationHelpers.templateHelpers.createText(`${pair.label}`, 10, {
                flex: pair.wide ? 1 : 3,
                display: "flex",
                flexWrap: "wrap",
                justifyContent: pair.wide ? "flex-start" : "flex-end",
                wordBreak: "break-all"
            }));
        }
        if (pair.links?.length) {
            elements.push(await this._integrationHelpers.templateHelpers.createContainer("row", await Promise.all(pair.links.map(async (l, idx) => this._integrationHelpers.templateHelpers.createLink(`${pair.label}_link_${idx}`, `${Microsoft365Provider._ACTION_OPEN}_${pair.label}_link_${idx}`, 10))), { gap: "5px", flex: 3, justifyContent: "flex-end", flexWrap: "wrap" }));
        }
        if (pair.srcs?.length) {
            elements.push(await this._integrationHelpers.templateHelpers.createContainer("row", await Promise.all(pair.srcs.map(async (s, idx) => this._integrationHelpers.templateHelpers.createImage(`${pair.label}_src_${idx}`, "Member", {
                width: "16px",
                height: "16px",
                objectFit: "cover",
                borderRadius: "50%"
            }))), { gap: "5px", flex: 3, justifyContent: "flex-end", flexWrap: "wrap" }));
        }
        return this._integrationHelpers.templateHelpers.createContainer(pair.wide ? "column" : "row", elements, {
            justifyContent: "space-between",
            gap: pair.wide ? "5px" : "10px"
        });
    }
    async createButtonsLayout(theme, buttons) {
        return this._integrationHelpers.templateHelpers.createContainer("row", await Promise.all(buttons.map(async (b) => this._integrationHelpers.templateHelpers.createButton(_openfin_workspace__WEBPACK_IMPORTED_MODULE_1__.ButtonStyle.Secondary, b.title, b.action, {
            border: "none",
            borderRadius: "50%",
            width: "40px",
            height: "40px",
            padding: "0px",
            justifyContent: "center",
            backgroundColor: theme.palette.background6
        }, [
            await this._integrationHelpers.templateHelpers.createImage(b.image, b.imageAltText, {
                width: "16px",
                height: "16px"
            })
        ]))), {
            justifyContent: "space-around",
            gap: "20px"
        });
    }
    imageProfileNone(size, name) {
        return `<svg fill="#DDDDDD" viewBox="0 0 512 512" height="${size}px" width="${size}px" xmlns="http://www.w3.org/2000/svg">
		<style>text{font: bold 350px sans-serif;fill: black;}</style>
		<rect width="512" height="512" />
		<text x="50%" y="50%" dominant-baseline="middle" text-anchor="middle">${name[0]}</text>
		</svg>`;
    }
    svgToInline(svg) {
        return `data:image/svg+xml;utf8,${svg.replace(/#/g, "%23")}`;
    }
    base64IdToUrl(b64Id) {
        return b64Id.replace(/\+/g, "_").replace(/\//g, "-");
    }
    objectTypeToOrder(objType) {
        const objTypeOrder = {
            User: 1,
            Contact: 2,
            Message: 3,
            ChatMessage: 4,
            Event: 5,
            Team: 6,
            Channel: 7
        };
        return objTypeOrder[objType] * 1000;
    }
    async updateCache() {
        // Cleanup any old cached profile images
        const keys = Object.keys(this._profileImageCache);
        const now = Date.now();
        const ttl = keys.length > 50 ? 30000 : 300000;
        for (const id of keys) {
            if (now - this._profileImageCache[id].added > ttl) {
                delete this._profileImageCache[id];
            }
        }
        // Update the teams and channels
        if (this._cacheCounter % 6 === 0) {
            // Update every 3 minutes
            try {
                const response = await this._ms365Connection.executeApiRequest("/v1.0/me/joinedTeams");
                const joinedTeams = response.data?.value ?? [];
                const channelsForTeam = {};
                if (joinedTeams.length) {
                    const batchChannels = joinedTeams.map((t) => `/teams/${t.id}/channels`);
                    const batchResponses = await this._ms365Connection.executeApiRequest("/v1.0/$batch", "POST", {
                        requests: batchChannels.map((url, idx) => ({
                            id: `TeamChannels-${(idx + 1).toString()}`,
                            method: "GET",
                            url
                        }))
                    });
                    if (Array.isArray(batchResponses.data?.responses)) {
                        for (const batchResponse of batchResponses.data.responses) {
                            if (batchResponse.status === 200) {
                                this._logger.info(`${batchResponse.id} Response`, batchResponse.body);
                                const channels = batchResponse.body;
                                for (const channel of channels.value) {
                                    // The webUrl for the teams management page needs constructing from the first channel in each team
                                    // we also connect the team to the channels and vice versa
                                    const webUrl = new URL(channel.webUrl);
                                    if (webUrl.searchParams.has("groupId")) {
                                        const groupId = webUrl.searchParams.get("groupId");
                                        const team = joinedTeams.find((t) => t.id === groupId);
                                        if (team) {
                                            team.webUrl = channel.webUrl;
                                            channelsForTeam[team.id] = channelsForTeam[team.id] ?? [];
                                            channelsForTeam[team.id].push(channel);
                                        }
                                    }
                                }
                            }
                            else {
                                this._logger.error(`${batchResponse.id} Response Failed`, batchResponse.status, batchResponse.body);
                            }
                        }
                    }
                }
                this._teamsAndChannelsCache = joinedTeams.map((t) => ({
                    team: t,
                    channels: channelsForTeam[t.id] ?? []
                }));
            }
            catch (err) {
                this._logger.error("Error retrieving joined teams", err);
            }
        }
        this._cacheCounter++;
    }
}
/**
 * Provider id.
 * @internal
 */
Microsoft365Provider._PROVIDER_ID = "ms365";
/**
 * The key to use for a call key action.
 * @internal
 */
Microsoft365Provider._ACTION_TEAMS_CALL = "Teams Call";
/**
 * The key to use for a outlook email key action.
 * @internal
 */
Microsoft365Provider._ACTION_OUTLOOK_EMAIL = "Outlook Email";
/**
 * The key to use for a teams meeting key action.
 * @internal
 */
Microsoft365Provider._ACTION_TEAMS_MEETING = "Teams Meeting";
/**
 * The key to use for a outlook event key action.
 * @internal
 */
Microsoft365Provider._ACTION_OUTLOOK_EVENT = "Outlook Event";
/**
 * The key to use for a chat key action.
 * @internal
 */
Microsoft365Provider._ACTION_TEAMS_CHAT = "Teams Chat";
/**
 * The key to use for a call key action.
 * @internal
 */
Microsoft365Provider._ACTION_PHONE_CALL = "Call";
/**
 * The key to use for an open key action.
 * @internal
 */
Microsoft365Provider._ACTION_OPEN = "Open";
/**
 * The key to use for an share contact.
 * @internal
 */
Microsoft365Provider._ACTION_SHARE_CONTACT = "Share Contact";
/**
 * The key to use for a copy key action.
 * @internal
 */
Microsoft365Provider._ACTION_COPY = "Copy JSON to Clipboard";
/**
 * The key to use for a connect key action.
 * @internal
 */
Microsoft365Provider._ACTION_CONNECT = "Connect";
/**
 * The key for the ms 365 filters.
 * @internal
 */
Microsoft365Provider._MS365_FILTERS = "MS365";
/**
 * The url for teams.
 * @internal
 */
Microsoft365Provider._TEAMS_URL = "https://teams.microsoft.com/";
/**
 * The protocol for teams.
 * @internal
 */
Microsoft365Provider._TEAMS_PROTOCOL = "msteams:";
/**
 * The url for office.
 * @internal
 */
Microsoft365Provider._OFFICE_URL = "https://outlook.office365.com/";


/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/compat get default export */
/******/ (() => {
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = (module) => {
/******/ 		var getter = module && module.__esModule ?
/******/ 			() => (module['default']) :
/******/ 			() => (module);
/******/ 		__webpack_require__.d(getter, { a: getter });
/******/ 		return getter;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!************************************************!*\
  !*** ./client/src/integrations/ms365/index.ts ***!
  \************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "entryPoints": () => (/* binding */ entryPoints)
/* harmony export */ });
/* harmony import */ var _integration_provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./integration-provider */ "./client/src/integrations/ms365/integration-provider.ts");

const entryPoints = {
    integrations: new _integration_provider__WEBPACK_IMPORTED_MODULE_0__.Microsoft365Provider()
};

})();

var __webpack_exports__entryPoints = __webpack_exports__.entryPoints;
export { __webpack_exports__entryPoints as entryPoints };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,