var e={};function t(e){return null==e}e.d=(t,s)=>{for(var o in s)e.o(s,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:s[o]})},e.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);const s={endpoint:new class{constructor(){this._favoritesKey=`${fin.me.identity.uuid}-favorites`}async initialize(e,t,s){this._logger=t("FavoriteLocalStorageProvider"),this._logger.info("Initializing")}async closedown(){this._logger?.info("Closedown")}async action(e,s){if("module"===e.type&&!t(s))return"payload"in s?this.requestResponseSetFavorite(s):this.requestResponseRemoveFavorite(s);throw new Error(`This endpoint module only supports the type 'module' and being passed a request. The following endpoint type was specified: ${e.type} and request passed: ${!t(s)}`)}async requestResponse(e,s){if("module"===e.type&&!t(s))return"id"in s?this.requestResponseGetFavorite(s):this.requestResponseFavorites(s);throw new Error(`This endpoint module only supports the type 'module' and being passed a request. The following endpoint type was specified: ${e.type} and request passed: ${!t(s)}`)}async requestResponseFavorites(e){const s=this.getFavorites();return t(e.favoriteType)?{entries:s.filter(t=>t.payload.type===e.favoriteType)}:{entries:s}}async requestResponseGetFavorite(e){const s=this.getFavorites();if(!t(e.id))return s.find(t=>t.payload.id===e.id)}async requestResponseSetFavorite(e){const s=this.getFavorites();if(!t(e.id)){const t=s.findIndex(t=>t.payload.id===e.id),o={metaData:e.metaData,payload:e.payload};return-1===t?s.push(o):s[t]=o,this.saveFavorites(s),!0}return!1}async requestResponseRemoveFavorite(e){const s=this.getFavorites();if(!t(e.id)){const t=s.findIndex(t=>t.payload.id===e.id);return-1!==t&&(s.splice(t,1),this.saveFavorites(s),!0)}return!1}getFavorites(){const e=localStorage.getItem(this._favoritesKey);return t(e)?[]:JSON.parse(e)}saveFavorites(e){localStorage.setItem(this._favoritesKey,JSON.stringify(e))}}};export{s as entryPoints};
//# sourceMappingURL=favorite-local-storage.bundle.js.map