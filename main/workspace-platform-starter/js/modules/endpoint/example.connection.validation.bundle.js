var e={};e.d=(t,i)=>{for(var o in i)e.o(i,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:i[o]})},e.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);const t={endpoint:new class{async initialize(e,t,i){this._logger=t("ConnectionValidationEndpoint"),this._logger.info("Was passed the following options",e.data)}async requestResponse(e,t){const i={isValid:!1};return"module"!==e.type?(this._logger?.warn(`We only expect endpoints of type module. Unable to action request/response for: ${e.id}`),i):(null==this._logger||(this._logger.info("This payload verification module is an example that always returns true. Please replace with one that validates the connection either locally or by using a rest service."),this._logger.info(`Supplied identity: ${JSON.stringify(t?.identity)}`),this._logger.info(`Supplied options: ${JSON.stringify(t?.options)}`)),i.isValid=!0,this._logger?.info("Setting isValid to true"),i)}}};export{t as entryPoints};
//# sourceMappingURL=example.connection.validation.bundle.js.map