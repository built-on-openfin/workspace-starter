{"version":3,"file":"pages.bundle.js","mappings":"AACA,ICwCYA,EDxCRC,EAAsB,CEA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,KCK3E,SAASI,EAAQC,GAEvB,OAAOA,OACR,C,iBHiCA,SAAYhB,GACX,8BACA,wCACA,0CACA,wCACA,0CACA,0CACA,gDACA,WACA,CATD,CAAYA,IAAAA,EAAsB,KIpC3B,MAAMiB,EAAgE,CAC5EC,QAAS,ICYH,MAkBC,gBAAMC,CACZhB,EACAiB,EACAC,GAEAC,KAAKC,QAAUH,EAAc,eAC7BE,KAAKE,SAAWH,CACjB,CAOO,SAAMZ,CAAIgB,GAChB,MAAMC,EAA8B,CAAC,EAkCrC,OAhCAA,EAAU,aAAeC,MAAOC,IAC/B,GAAIA,EAAQC,aAAe7B,EAAuB8B,IAAK,CACtD,MAAMC,EAAiBH,GAASI,YAAYD,OACtCE,EAAyCL,GAASI,YAAYE,eAC/DnB,EAAQgB,KACRT,KAAKE,UAAUW,iBACZb,KAAKE,SAASW,WACnBJ,EACA,CACCE,wBAEDX,KAAKC,SAGND,KAAKC,SAASa,MACb,8FAIJ,GAGDV,EAAU,eAAiBC,MAAOC,IACjC,GAAIA,EAAQC,aAAe7B,EAAuB8B,IAAK,CACtD,MAAMC,EAAiBH,GAASI,YAAYD,OACvChB,EAAQgB,KACZT,KAAKC,SAASc,KAAK,0BAA0BN,WACvCN,EAASa,QAAQC,WAAWR,GAEpC,GAGML,CACR,GD/EAc,MAAO,IESD,MAkBC,gBAAMrB,CACZhB,EACAiB,EACAC,GAEAC,KAAKC,QAAUH,EAAc,aAC7BE,KAAKmB,UAAYtC,EAAWuC,IAC7B,CASO,SAAMjC,CACZkC,EACAlB,EACAmB,GAEA,GAAiB,WAAbD,IAA0B5B,EAAQ6B,GAAeV,gBAAiB,CAErE,MAAMW,QAAsBpB,EAASa,QAAQQ,WAC7CD,EAAME,MAAK,CAACC,EAAGC,IAAMD,EAAEE,MAAMC,cAAcF,EAAEC,SAC7C,MAAME,EAAoB9B,KAAKmB,WAAWF,YAAYc,UAAW,EAC3DC,EAAkBhC,KAAKmB,WAAWc,UAAUF,UAAW,EACvDG,EAA4C,GAC5CC,EAA+B,CACpCC,MAAOpC,KAAKmB,WAAWc,UAAUI,WAAa,YAC9CC,KAAMtC,KAAKmB,WAAWc,UAAUM,SAChCC,QAASjB,EAAMkB,OAAS,EACxBC,QAAS,GACTC,SAAU,CACTC,KAAM,aACNC,UAAW,QACXC,SAAU,cACP9C,KAAKmB,WAAWc,UAAUc,eAGzBC,EAAiC,CACtCZ,MAAOpC,KAAKmB,WAAWF,YAAYoB,WAAa,cAChDC,KAAMtC,KAAKmB,WAAWF,YAAYsB,SAClCC,QAASjB,EAAMkB,OAAS,EACxBC,QAAS,GACTC,SAAU,CACTC,KAAM,aACNC,UAAW,QACXC,SAAU,gBACP9C,KAAKmB,WAAWF,YAAY8B,eAI3BE,EAA8C,GAEpD,IAAIC,EAAsD5B,GAAeV,eAEzE,GAAIsC,EAAuB,CAC1B,MAAMC,EAAgBhD,EAASiD,QAAQC,SAASH,IAKF,WAHxBC,EAAcG,cAAcC,cACiBC,kBAE9CC,uBACpBP,OAAwBQ,EAE1B,CAEA,MAAMC,QAAqBxD,EAASiD,QAAQQ,sBAE5C,GAAIrC,EAAMkB,OAAS,EAAG,CACrB,IAAK,MAAMoB,KAAQtC,EAAO,CACzB,MAAMuC,EAAWH,EAAaI,MAAMC,GAAaH,EAAKpD,SAAWuD,EAASvD,SACpEwD,GACJxE,EAAQqE,GAAUI,iBACnBJ,GAAUI,eAAeC,OAASjB,GAAuBiB,MACzDL,GAAUM,SACXlC,EAAcmC,KAAK,CAClBjC,MAAOyB,EAAKjC,MACZgB,KAAM,SACNJ,SAAUyB,EACV7C,KAAM,CACLwB,KAAM,SACN0B,OAAQ,CACPC,GAAI,YACJ7D,WAAY,CACXD,OAAQoD,EAAKpD,OACbG,eAAgBsC,OAKpBD,EAAgBoB,KAAK,CACpBjC,MAAOyB,EAAKjC,MACZgB,KAAM,SACNJ,QAAS/C,EAAQqE,GACjB1C,KAAM,CACLwB,KAAM,SACN0B,OAAQ,CACPC,GAAI,cACJ7D,WAAY,CACXD,OAAQoD,EAAKpD,WAKlB,CACI0B,EAAkBO,SACrBP,EAAkBO,QAAQ2B,QAAQnC,GAE/Bc,EAAoBN,SACvBM,EAAoBN,QAAQ2B,QAAQpB,EAEtC,CAEA,MAAMuB,EAAiC,GAUvC,OARI1C,GACH0C,EAAkBH,KAAKrB,GAGpBhB,GACHwC,EAAkBH,KAAKlC,GAGjBqC,CACR,CACD,GFzJAC,YAAa,IGIP,MAcC,gBAAM5E,CACZhB,EACAiB,EACAC,GAEAC,KAAKC,QAAUH,EAAc,8BAC7BE,KAAKE,SAAWH,EAChBC,KAAK0E,YAAc7F,EACnBmB,KAAKC,QAAQc,KAAK,8BACnB,CAQO,YAAMuD,CACZK,EACArE,EACAsE,GAEA,GAAInF,EAAQa,GACXN,KAAKC,SAAS4E,KACb,kFAAkFF,gCAIpF,IACC,GAAwB,cAApBA,EAAiC,CACpC,MAAMlE,EAASH,GAASG,OAGxB,GAFAT,KAAKC,SAASc,KAAK,0DAA0DN,OJhC1E,SAAkBf,GAExB,OAAOA,SAA0D,iBAAVA,CACxD,CAQQoF,CADsBpF,EIwBPe,IJvBIf,EAAMqF,OAAOtC,OAAS,GI2B5C,YAHAzC,KAAKC,SAASa,MACb,oFAKF,GAAIrB,EAAQO,KAAKE,UAAUW,YAI1B,YAHAb,KAAKC,SAAS4E,KACb,oCAAoCpE,oFAMlChB,QAD0BO,KAAKE,UAAUW,WAAWJ,MAEvDT,KAAKC,SAASa,MAAM,6DAA6DL,IAEnF,CACD,CAAE,MAAOK,GACRd,KAAKC,SAASa,MAAM,kCAAkC6D,KAAoB7D,EAC3E,CJ7CK,IAAuBpB,CI8C7B,I","sources":["webpack://openfin-workspace--workspace-platform-starter/webpack/bootstrap","webpack://openfin-workspace--workspace-platform-starter/./client/src/framework/shapes/actions-shapes.ts","webpack://openfin-workspace--workspace-platform-starter/webpack/runtime/define property getters","webpack://openfin-workspace--workspace-platform-starter/webpack/runtime/hasOwnProperty shorthand","webpack://openfin-workspace--workspace-platform-starter/./client/src/framework/utils.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/composite/pages/index.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/composite/pages/actions.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/composite/pages/menus.ts","webpack://openfin-workspace--workspace-platform-starter/./client/src/modules/composite/pages/init-options.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","import type { CustomActionsMap, ToolbarButton, WorkspacePlatformModule } from \"@openfin/workspace-platform\";\nimport type { ModuleHelpers, ModuleImplementation, ModuleList } from \"./module-shapes\";\n\n/**\n * Definition for an action.\n */\nexport interface Actions<O = unknown> extends ModuleImplementation<O, ActionHelpers> {\n\t/**\n\t * Get the actions from the module.\n\t * @param platform The platform module.\n\t * @returns The map of custom actions.\n\t */\n\tget(platform: WorkspacePlatformModule): Promise<CustomActionsMap>;\n}\n\n/**\n * A list of modules that provide actions that can be used by the platform.\n */\nexport type ActionsProviderOptions = ModuleList;\n\n/**\n * Extended helpers used by action modules.\n */\nexport interface ActionHelpers extends ModuleHelpers {\n\t/**\n\t * Update toolbar buttons.\n\t * @param buttons The list of all buttons.\n\t * @param buttonId The button to update.\n\t * @param replacementButtonId The replacement for the button.\n\t * @returns The updated buttons.\n\t */\n\tupdateToolbarButtons: (\n\t\tbuttons: ToolbarButton[],\n\t\tbuttonId: string,\n\t\treplacementButtonId: string\n\t) => Promise<ToolbarButton[]>;\n}\n\n/**\n * Use this in preference to CustomActionCallerType from workspace-platform to avoid the import of the whole of workspace package in modules.\n */\nexport enum CustomActionCallerType {\n\tCustomButton = \"CustomButton\",\n\tStoreCustomButton = \"StoreCustomButton\",\n\tCustomDropdownItem = \"CustomDropdownItem\",\n\tGlobalContextMenu = \"GlobalContextMenu\",\n\tViewTabContextMenu = \"ViewTabContextMenu\",\n\tPageTabContextMenu = \"PageTabContextMenu\",\n\tSaveButtonContextMenu = \"SaveButtonContextMenu\",\n\tAPI = \"API\"\n}\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Test if a value is a undefined or null.\n * @param value The value to test.\n * @returns True if the value is null or undefined.\n */\nexport function isEmpty(value: unknown): value is null | undefined {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value === undefined || value === null;\n}\n\n/**\n * Test if a value is an object.\n * @param value The value to test.\n * @returns True if the value is an object.\n */\nexport function isObject(value: unknown): value is object {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n/**\n * Test if a value is a string.\n * @param value The value to test.\n * @returns True if the value is a string.\n */\nexport function isString(value: unknown): value is string {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"string\";\n}\n\n/**\n * Test if a value is a string that is not empty.\n * @param value The value to test.\n * @returns True if the value is a string that is not empty.\n */\nexport function isStringValue(value: unknown): value is string {\n\treturn isString(value) && value.trim().length > 0;\n}\n\n/**\n * Test if a value is a number.\n * @param value The value to test.\n * @returns True if the value is a number.\n */\nexport function isNumber(value: unknown): value is number {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"number\";\n}\n\n/**\n * Test if a value is a number with a real value i.e. not NaN or Infinite.\n * @param value The value to test.\n * @returns True if the value is a number.\n */\nexport function isNumberValue(value: unknown): value is number {\n\treturn isNumber(value) && !Number.isNaN(value) && Number.isFinite(value);\n}\n\n/**\n * Test if a value is a boolean.\n * @param value The value to test.\n * @returns True if the value is a boolean.\n */\nexport function isBoolean(value: unknown): value is boolean {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn value !== undefined && value !== null && typeof value === \"boolean\";\n}\n\n/**\n * Test if a value is an integer.\n * @param value The value to test.\n * @returns True if the value is an integer.\n */\nexport function isInteger(value: unknown): value is number {\n\treturn isNumber(value) && Number.isInteger(value);\n}\n\n/**\n * Deep clone an object.\n * @param obj The object to clone.\n * @returns The clone of the object.\n */\nexport function objectClone<T>(obj: T): T {\n\t// eslint-disable-next-line no-restricted-syntax\n\treturn obj === undefined ? (undefined as T) : JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Do a deep comparison of the objects.\n * @param obj1 The first object to compare.\n * @param obj2 The second object to compare.\n * @param matchPropertyOrder If true the properties must be in the same order.\n * @returns True if the objects are the same.\n */\nexport function deepEqual(obj1: unknown, obj2: unknown, matchPropertyOrder: boolean = true): boolean {\n\tif (isObject(obj1) && isObject(obj2)) {\n\t\tconst objKeys1 = Object.keys(obj1);\n\t\tconst objKeys2 = Object.keys(obj2);\n\n\t\tif (objKeys1.length !== objKeys2.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (matchPropertyOrder && JSON.stringify(objKeys1) !== JSON.stringify(objKeys2)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (const key of objKeys1) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst value1 = (obj1 as any)[key];\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tconst value2 = (obj2 as any)[key];\n\n\t\t\tif (!deepEqual(value1, value2, matchPropertyOrder)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else if (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\tif (obj1.length !== obj2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < obj1.length; i++) {\n\t\t\tif (!deepEqual(obj1[i], obj2[i], matchPropertyOrder)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn JSON.stringify(obj1) === JSON.stringify(obj2);\n}\n\n/**\n * Deep merge two objects.\n * @param target The object to be merged into.\n * @param sources The objects to merge into the target.\n * @returns The merged object.\n */\nexport function deepMerge<T = unknown>(target: T, ...sources: T[]): T {\n\tif (!Array.isArray(sources) || sources.length === 0) {\n\t\treturn target;\n\t}\n\n\tconst targetAsMap = target as { [id: string]: unknown };\n\tconst source = sources.shift();\n\n\tlet keys;\n\tif (isObject(targetAsMap) && isObject(source)) {\n\t\tkeys = Object.keys(source);\n\t} else if (Array.isArray(source)) {\n\t\tif (!Array.isArray(target)) {\n\t\t\treturn source;\n\t\t}\n\t\tkeys = Object.keys(source).map((k) => Number.parseInt(k, 10));\n\t}\n\n\tif (keys) {\n\t\tconst sourceAsMap = source as { [id: string]: unknown };\n\t\tfor (const key of keys) {\n\t\t\tconst value = sourceAsMap[key];\n\t\t\tif (isObject(value)) {\n\t\t\t\tif (isEmpty(targetAsMap[key])) {\n\t\t\t\t\ttargetAsMap[key] = {};\n\t\t\t\t}\n\t\t\t\tdeepMerge(targetAsMap[key], value);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tif (isEmpty(targetAsMap[key])) {\n\t\t\t\t\ttargetAsMap[key] = [];\n\t\t\t\t}\n\t\t\t\tdeepMerge(targetAsMap[key], value);\n\t\t\t} else {\n\t\t\t\ttargetAsMap[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn deepMerge(target, ...sources);\n}\n\n/**\n * Polyfills randomUUID if running in a non-secure context.\n * @returns The random UUID.\n */\nexport function randomUUID(): string {\n\tif (\"randomUUID\" in globalThis.crypto) {\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\treturn globalThis.crypto.randomUUID();\n\t}\n\t// Polyfill the window.crypto.randomUUID if we are running in a non secure context that doesn't have it\n\t// we are still using window.crypto.getRandomValues which is always available\n\t// https://stackoverflow.com/a/2117523/2800218\n\t/**\n\t * Get random hex value.\n\t * @param c The number to base the random value on.\n\t * @returns The random value.\n\t */\n\tfunction getRandomHex(c: string): string {\n\t\t// eslint-disable-next-line no-bitwise\n\t\tconst rnd = globalThis.crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (Number(c) / 4));\n\t\treturn (\n\t\t\t// eslint-disable-next-line no-bitwise\n\t\t\t(Number(c) ^ rnd).toString(16)\n\t\t);\n\t}\n\treturn \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, getRandomHex);\n}\n\n/**\n * Format an error to a readable string.\n * @param err The error to format.\n * @returns The formatted error.\n */\nexport function formatError(err: unknown): string {\n\tif (isEmpty(err)) {\n\t\treturn \"\";\n\t} else if (err instanceof Error) {\n\t\treturn err.message;\n\t} else if (isStringValue(err)) {\n\t\treturn err;\n\t} else if (isObject(err) && \"message\" in err && isString(err.message)) {\n\t\treturn err.message;\n\t}\n\treturn JSON.stringify(err);\n}\n\n/**\n * A basic string sanitize function that removes angle brackets <> from a string.\n * @param content the content to sanitize\n * @returns a string without angle brackets <>\n */\nexport function sanitizeString(content: unknown): string {\n\tif (isStringValue(content)) {\n\t\treturn content\n\t\t\t.replace(/<[^>]*>?/gm, \"\")\n\t\t\t.replace(/&gt;/g, \">\")\n\t\t\t.replace(/&lt;/g, \"<\")\n\t\t\t.replace(/&amp;/g, \"&\")\n\t\t\t.replace(/&nbsp;/g, \" \")\n\t\t\t.replace(/\\n\\s*\\n/g, \"\\n\");\n\t}\n\treturn \"\";\n}\n\n/**\n * Get the command line arguments from a command line string.\n * Examples of command line strings: arg1 key1=value1 key2=\"value with spaces\" key3='value3' key4='value with more spaces'`.\n * @param commandLine The command line string.\n * @returns The command line arguments or an empty array if none\n */\nexport function getCommandLineArgs(commandLine: string): string[] {\n\tif (!isStringValue(commandLine)) {\n\t\treturn [];\n\t}\n\tconst matches = commandLine.match(/(\\w+=)?(\"[^\"]*\"|'[^']*'|[^ ]+)/g);\n\tif (isEmpty(matches)) {\n\t\treturn [];\n\t}\n\treturn matches;\n}\n","import type { ModuleImplementation, ModuleTypes } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { PageActions } from \"./actions\";\nimport { InitOptionsShowPageHandler } from \"./init-options\";\nimport { PageMenus } from \"./menus\";\n\nexport const entryPoints: { [type in ModuleTypes]?: ModuleImplementation } = {\n\tactions: new PageActions(),\n\tmenus: new PageMenus(),\n\tinitOptions: new InitOptionsShowPageHandler()\n};\n","import type OpenFin from \"@openfin/core\";\nimport type {\n\tCustomActionPayload,\n\tCustomActionsMap,\n\tWorkspacePlatformModule\n} from \"@openfin/workspace-platform\";\nimport {\n\tCustomActionCallerType,\n\ttype ActionHelpers,\n\ttype Actions\n} from \"workspace-platform-starter/shapes/actions-shapes\";\nimport type { Logger, LoggerCreator } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type { ModuleDefinition } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { isEmpty } from \"workspace-platform-starter/utils\";\n\n/**\n * Implement the actions.\n */\nexport class PageActions implements Actions {\n\t/**\n\t * The helper methods to use.\n\t */\n\tprivate _helpers?: ActionHelpers;\n\n\t/**\n\t * The helper methods to use.\n\t */\n\tprivate _logger?: Logger;\n\n\t/**\n\t * Initialize the module.\n\t * @param definition The definition of the module from configuration include custom options.\n\t * @param loggerCreator For logging entries.\n\t * @param helpers Helper methods for the module to interact with the application core.\n\t * @returns Nothing.\n\t */\n\tpublic async initialize(\n\t\tdefinition: ModuleDefinition,\n\t\tloggerCreator: LoggerCreator,\n\t\thelpers: ActionHelpers\n\t): Promise<void> {\n\t\tthis._logger = loggerCreator(\"PageActions\");\n\t\tthis._helpers = helpers;\n\t}\n\n\t/**\n\t * Get the actions from the module.\n\t * @param platform The platform module.\n\t * @returns The map of custom actions.\n\t */\n\tpublic async get(platform: WorkspacePlatformModule): Promise<CustomActionsMap> {\n\t\tconst actionMap: CustomActionsMap = {};\n\n\t\tactionMap[\"page-open\"] = async (payload: CustomActionPayload): Promise<void> => {\n\t\t\tif (payload.callerType !== CustomActionCallerType.API) {\n\t\t\t\tconst pageId: string = payload?.customData?.pageId;\n\t\t\t\tconst targetWindowIdentity: OpenFin.Identity = payload?.customData?.windowIdentity;\n\t\t\t\tif (!isEmpty(pageId)) {\n\t\t\t\t\tif (this._helpers?.launchPage) {\n\t\t\t\t\t\tawait this._helpers.launchPage(\n\t\t\t\t\t\t\tpageId,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttargetWindowIdentity\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthis._logger\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._logger?.error(\n\t\t\t\t\t\t\t\"We are unable to launch a page as this module has not been passed the launchPage function.\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tactionMap[\"page-delete\"] = async (payload: CustomActionPayload): Promise<void> => {\n\t\t\tif (payload.callerType !== CustomActionCallerType.API) {\n\t\t\t\tconst pageId: string = payload?.customData?.pageId;\n\t\t\t\tif (!isEmpty(pageId)) {\n\t\t\t\t\tthis._logger?.info(`Deleting page with id: ${pageId}`);\n\t\t\t\t\tawait platform.Storage.deletePage(pageId);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn actionMap;\n\t}\n}\n","import type OpenFin from \"@openfin/core\";\nimport type { GlobalContextMenuOptionType, Page, WorkspacePlatformModule } from \"@openfin/workspace-platform\";\nimport type { Logger, LoggerCreator } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type {\n\tMenuEntry,\n\tMenuType,\n\tMenus,\n\tRelatedMenuId\n} from \"workspace-platform-starter/shapes/menu-shapes\";\nimport type { ModuleDefinition, ModuleHelpers } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { isEmpty } from \"workspace-platform-starter/utils\";\nimport type { PageMenuSettings } from \"./shapes\";\n\n/**\n * Implement the menus.\n */\nexport class PageMenus implements Menus<PageMenuSettings> {\n\t/**\n\t * The helper methods to use.\n\t */\n\tprivate _logger?: Logger;\n\n\t/**\n\t * The helper methods to use.\n\t */\n\tprivate _settings?: PageMenuSettings;\n\n\t/**\n\t * Initialize the module.\n\t * @param definition The definition of the module from configuration include custom options.\n\t * @param loggerCreator For logging entries.\n\t * @param helpers Helper methods for the module to interact with the application core.\n\t * @returns Nothing.\n\t */\n\tpublic async initialize(\n\t\tdefinition: ModuleDefinition<PageMenuSettings>,\n\t\tloggerCreator: LoggerCreator,\n\t\thelpers: ModuleHelpers\n\t): Promise<void> {\n\t\tthis._logger = loggerCreator(\"PageMenus\");\n\t\tthis._settings = definition.data;\n\t}\n\n\t/**\n\t * Get the menus from the module.\n\t * @param menuType The type of menu to get the entries for.\n\t * @param platform The current platform.\n\t * @param relatedMenuId The related menu information (viewId/viewIds, pageId and window Id based on the type of menu).\n\t * @returns The menu entries.\n\t */\n\tpublic async get(\n\t\tmenuType: MenuType,\n\t\tplatform: WorkspacePlatformModule,\n\t\trelatedMenuId?: RelatedMenuId\n\t): Promise<MenuEntry[] | undefined> {\n\t\tif (menuType === \"global\" && !isEmpty(relatedMenuId?.windowIdentity)) {\n\t\t\t// you can customize the browser main menu here\n\t\t\tconst pages: Page[] = await platform.Storage.getPages();\n\t\t\tpages.sort((a, b) => a.title.localeCompare(b.title));\n\t\t\tconst includeDeletePage = this._settings?.deletePage?.include ?? true;\n\t\t\tconst includeShowPage = this._settings?.showPage?.include ?? true;\n\t\t\tconst showPagesMenu: OpenFin.MenuItemTemplate[] = [];\n\t\t\tconst showPageMenuEntry: MenuEntry = {\n\t\t\t\tlabel: this._settings?.showPage?.menuLabel ?? \"Show Page\",\n\t\t\t\ticon: this._settings?.showPage?.menuIcon,\n\t\t\t\tenabled: pages.length > 0,\n\t\t\t\tsubmenu: [],\n\t\t\t\tposition: {\n\t\t\t\t\ttype: \"SavePageAs\",\n\t\t\t\t\toperation: \"after\",\n\t\t\t\t\tcustomId: \"ShowPage\",\n\t\t\t\t\t...this._settings?.showPage?.menuPosition\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst deletePageMenuEntry: MenuEntry = {\n\t\t\t\tlabel: this._settings?.deletePage?.menuLabel ?? \"Delete Page\",\n\t\t\t\ticon: this._settings?.deletePage?.menuIcon,\n\t\t\t\tenabled: pages.length > 0,\n\t\t\t\tsubmenu: [],\n\t\t\t\tposition: {\n\t\t\t\t\ttype: \"SavePageAs\",\n\t\t\t\t\toperation: \"after\",\n\t\t\t\t\tcustomId: \"ShowDelete\",\n\t\t\t\t\t...this._settings?.deletePage?.menuPosition\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst deletePagesMenu: OpenFin.MenuItemTemplate[] = [];\n\n\t\t\tlet browserWindowIdentity: OpenFin.Identity | undefined = relatedMenuId?.windowIdentity;\n\n\t\t\tif (browserWindowIdentity) {\n\t\t\t\tconst browserWindow = platform.Browser.wrapSync(browserWindowIdentity);\n\n\t\t\t\tconst options = await browserWindow.openfinWindow.getOptions();\n\t\t\t\tconst workspaceOptions: OpenFin.WorkspacePlatformOptions = options.workspacePlatform;\n\n\t\t\t\tif (workspaceOptions.disableMultiplePages === true) {\n\t\t\t\t\tbrowserWindowIdentity = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst allOpenPages = await platform.Browser.getAllAttachedPages();\n\n\t\t\tif (pages.length > 0) {\n\t\t\t\tfor (const page of pages) {\n\t\t\t\t\tconst existing = allOpenPages.find((openPage) => page.pageId === openPage.pageId);\n\t\t\t\t\tconst isActiveExistingPageOnCurrentWindow =\n\t\t\t\t\t\t!isEmpty(existing?.parentIdentity) &&\n\t\t\t\t\t\texisting?.parentIdentity.name === browserWindowIdentity?.name &&\n\t\t\t\t\t\texisting?.isActive;\n\t\t\t\t\tshowPagesMenu.push({\n\t\t\t\t\t\tlabel: page.title,\n\t\t\t\t\t\ttype: \"normal\",\n\t\t\t\t\t\tenabled: !isActiveExistingPageOnCurrentWindow,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\ttype: \"Custom\" as GlobalContextMenuOptionType.Custom,\n\t\t\t\t\t\t\taction: {\n\t\t\t\t\t\t\t\tid: \"page-open\",\n\t\t\t\t\t\t\t\tcustomData: {\n\t\t\t\t\t\t\t\t\tpageId: page.pageId,\n\t\t\t\t\t\t\t\t\twindowIdentity: browserWindowIdentity\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tdeletePagesMenu.push({\n\t\t\t\t\t\tlabel: page.title,\n\t\t\t\t\t\ttype: \"normal\",\n\t\t\t\t\t\tenabled: isEmpty(existing),\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\ttype: \"Custom\" as GlobalContextMenuOptionType.Custom,\n\t\t\t\t\t\t\taction: {\n\t\t\t\t\t\t\t\tid: \"page-delete\",\n\t\t\t\t\t\t\t\tcustomData: {\n\t\t\t\t\t\t\t\t\tpageId: page.pageId\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (showPageMenuEntry.submenu) {\n\t\t\t\t\tshowPageMenuEntry.submenu.push(...showPagesMenu);\n\t\t\t\t}\n\t\t\t\tif (deletePageMenuEntry.submenu) {\n\t\t\t\t\tdeletePageMenuEntry.submenu.push(...deletePagesMenu);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst menuItemsToReturn: MenuEntry[] = [];\n\n\t\t\tif (includeDeletePage) {\n\t\t\t\tmenuItemsToReturn.push(deletePageMenuEntry);\n\t\t\t}\n\n\t\t\tif (includeShowPage) {\n\t\t\t\tmenuItemsToReturn.push(showPageMenuEntry);\n\t\t\t}\n\n\t\t\treturn menuItemsToReturn;\n\t\t}\n\t}\n}\n","import type {\n\tActionHandlerContext,\n\tInitOptionsHandler\n} from \"workspace-platform-starter/shapes/init-options-shapes\";\nimport type { Logger, LoggerCreator } from \"workspace-platform-starter/shapes/logger-shapes\";\nimport type { ModuleDefinition, ModuleHelpers } from \"workspace-platform-starter/shapes/module-shapes\";\nimport { isEmpty, isStringValue } from \"workspace-platform-starter/utils\";\nimport type { ShowPageOptions, ShowPagePayload } from \"./shapes\";\n\n/**\n * Init options show page handler.\n */\nexport class InitOptionsShowPageHandler implements InitOptionsHandler<ShowPageOptions, ShowPagePayload> {\n\tprivate _logger?: Logger;\n\n\tprivate _helpers?: ModuleHelpers;\n\n\tprivate _definition?: ModuleDefinition<ShowPageOptions>;\n\n\t/**\n\t * Initialize the module.\n\t * @param definition The definition of the module from configuration include custom options.\n\t * @param loggerCreator For logging entries.\n\t * @param helpers Helper methods for the module to interact with the application core.\n\t * @returns Nothing.\n\t */\n\tpublic async initialize(\n\t\tdefinition: ModuleDefinition<ShowPageOptions>,\n\t\tloggerCreator: LoggerCreator,\n\t\thelpers: ModuleHelpers\n\t): Promise<void> {\n\t\tthis._logger = loggerCreator(\"InitOptionsShowPageHandler\");\n\t\tthis._helpers = helpers;\n\t\tthis._definition = definition;\n\t\tthis._logger.info(\"The handler has been loaded\");\n\t}\n\n\t/**\n\t * Handle the init options action.\n\t * @param requestedAction The requested action.\n\t * @param payload The payload for the action.\n\t * @param context The context calling the action.\n\t */\n\tpublic async action(\n\t\trequestedAction: string,\n\t\tpayload: ShowPagePayload | undefined,\n\t\tcontext: ActionHandlerContext\n\t): Promise<void> {\n\t\tif (isEmpty(payload)) {\n\t\t\tthis._logger?.warn(\n\t\t\t\t`Actions passed to the module require a payload to be passed. Requested action: ${requestedAction} can not be fulfilled.`\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tif (requestedAction === \"show-page\") {\n\t\t\t\tconst pageId = payload?.pageId;\n\t\t\t\tthis._logger?.info(`The following pageId was passed and requested to show: ${pageId}`);\n\n\t\t\t\tif (!isStringValue(pageId)) {\n\t\t\t\t\tthis._logger?.error(\n\t\t\t\t\t\t\"The init handler received an pageId in the wrong format and is unable to show it\"\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isEmpty(this._helpers?.launchPage)) {\n\t\t\t\t\tthis._logger?.warn(\n\t\t\t\t\t\t`Unable to show page with pageId: ${pageId} as a launchPage function was not passed to this module via the module helpers.`\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst resultingWindow = await this._helpers?.launchPage(pageId);\n\t\t\t\tif (isEmpty(resultingWindow)) {\n\t\t\t\t\tthis._logger?.error(`We have been unable to find and show the provided pageId: ${pageId}`);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis._logger?.error(`Error trying to perform action ${requestedAction}.`, error);\n\t\t}\n\t}\n}\n"],"names":["CustomActionCallerType","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","isEmpty","value","entryPoints","actions","initialize","loggerCreator","helpers","this","_logger","_helpers","platform","actionMap","async","payload","callerType","API","pageId","customData","targetWindowIdentity","windowIdentity","launchPage","error","info","Storage","deletePage","menus","_settings","data","menuType","relatedMenuId","pages","getPages","sort","a","b","title","localeCompare","includeDeletePage","include","includeShowPage","showPage","showPagesMenu","showPageMenuEntry","label","menuLabel","icon","menuIcon","enabled","length","submenu","position","type","operation","customId","menuPosition","deletePageMenuEntry","deletePagesMenu","browserWindowIdentity","browserWindow","Browser","wrapSync","openfinWindow","getOptions","workspacePlatform","disableMultiplePages","undefined","allOpenPages","getAllAttachedPages","page","existing","find","openPage","isActiveExistingPageOnCurrentWindow","parentIdentity","name","isActive","push","action","id","menuItemsToReturn","initOptions","_definition","requestedAction","context","warn","isString","trim"],"sourceRoot":""}